var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __require = /* @__PURE__ */ ((x6) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x6, {
  get: (a11, b4) => (typeof require !== "undefined" ? require : a11)[b4]
}) : x6)(function(x6) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x6 + '" is not supported');
});
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to2, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to2, key) && key !== except)
        __defProp(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// node_modules/@heroicons/react/20/solid/AcademicCapIcon.js
var require_AcademicCapIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/AcademicCapIcon.js"(exports, module) {
    var React58 = __require("react");
    function AcademicCapIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.664 1.319a.75.75 0 01.672 0 41.059 41.059 0 018.198 5.424.75.75 0 01-.254 1.285 31.372 31.372 0 00-7.86 3.83.75.75 0 01-.84 0 31.508 31.508 0 00-2.08-1.287V9.394c0-.244.116-.463.302-.592a35.504 35.504 0 013.305-2.033.75.75 0 00-.714-1.319 37 37 0 00-3.446 2.12A2.216 2.216 0 006 9.393v.38a31.293 31.293 0 00-4.28-1.746.75.75 0 01-.254-1.285 41.059 41.059 0 018.198-5.424zM6 11.459a29.848 29.848 0 00-2.455-1.158 41.029 41.029 0 00-.39 3.114.75.75 0 00.419.74c.528.256 1.046.53 1.554.82-.21.324-.455.63-.739.914a.75.75 0 101.06 1.06c.37-.369.69-.77.96-1.193a26.61 26.61 0 013.095 2.348.75.75 0 00.992 0 26.547 26.547 0 015.93-3.95.75.75 0 00.42-.739 41.053 41.053 0 00-.39-3.114 29.925 29.925 0 00-5.199 2.801 2.25 2.25 0 01-2.514 0c-.41-.275-.826-.541-1.25-.797a6.985 6.985 0 01-1.084 3.45 26.503 26.503 0 00-1.281-.78A5.487 5.487 0 006 12v-.54z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(AcademicCapIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/AdjustmentsHorizontalIcon.js
var require_AdjustmentsHorizontalIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/AdjustmentsHorizontalIcon.js"(exports, module) {
    var React58 = __require("react");
    function AdjustmentsHorizontalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 3.75a2 2 0 10-4 0 2 2 0 004 0zM17.25 4.5a.75.75 0 000-1.5h-5.5a.75.75 0 000 1.5h5.5zM5 3.75a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5a.75.75 0 01.75.75zM4.25 17a.75.75 0 000-1.5h-1.5a.75.75 0 000 1.5h1.5zM17.25 17a.75.75 0 000-1.5h-5.5a.75.75 0 000 1.5h5.5zM9 10a.75.75 0 01-.75.75h-5.5a.75.75 0 010-1.5h5.5A.75.75 0 019 10zM17.25 10.75a.75.75 0 000-1.5h-1.5a.75.75 0 000 1.5h1.5zM14 10a2 2 0 10-4 0 2 2 0 004 0zM10 16.25a2 2 0 10-4 0 2 2 0 004 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(AdjustmentsHorizontalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/AdjustmentsVerticalIcon.js
var require_AdjustmentsVerticalIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/AdjustmentsVerticalIcon.js"(exports, module) {
    var React58 = __require("react");
    function AdjustmentsVerticalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M17 2.75a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zM17 15.75a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5zM3.75 15a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 01.75-.75zM4.5 2.75a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zM10 11a.75.75 0 01.75.75v5.5a.75.75 0 01-1.5 0v-5.5A.75.75 0 0110 11zM10.75 2.75a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5zM10 6a2 2 0 100 4 2 2 0 000-4zM3.75 10a2 2 0 100 4 2 2 0 000-4zM16.25 10a2 2 0 100 4 2 2 0 000-4z"
      }));
    }
    var ForwardRef = React58.forwardRef(AdjustmentsVerticalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArchiveBoxArrowDownIcon.js
var require_ArchiveBoxArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArchiveBoxArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArchiveBoxArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3a1 1 0 00-1 1v1a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1H2zm0 4.5h16l-.811 7.71a2 2 0 01-1.99 1.79H4.802a2 2 0 01-1.99-1.79L2 7.5zM10 9a.75.75 0 01.75.75v2.546l.943-1.048a.75.75 0 111.114 1.004l-2.25 2.5a.75.75 0 01-1.114 0l-2.25-2.5a.75.75 0 111.114-1.004l.943 1.048V9.75A.75.75 0 0110 9z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArchiveBoxArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArchiveBoxXMarkIcon.js
var require_ArchiveBoxXMarkIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArchiveBoxXMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArchiveBoxXMarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2 3a1 1 0 00-1 1v1a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1H2z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 7.5h16l-.811 7.71a2 2 0 01-1.99 1.79H4.802a2 2 0 01-1.99-1.79L2 7.5zm5.22 1.72a.75.75 0 011.06 0L10 10.94l1.72-1.72a.75.75 0 111.06 1.06L11.06 12l1.72 1.72a.75.75 0 11-1.06 1.06L10 13.06l-1.72 1.72a.75.75 0 01-1.06-1.06L8.94 12l-1.72-1.72a.75.75 0 010-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArchiveBoxXMarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArchiveBoxIcon.js
var require_ArchiveBoxIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArchiveBoxIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArchiveBoxIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2 3a1 1 0 00-1 1v1a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1H2z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 7.5h16l-.811 7.71a2 2 0 01-1.99 1.79H4.802a2 2 0 01-1.99-1.79L2 7.5zM7 11a1 1 0 011-1h4a1 1 0 110 2H8a1 1 0 01-1-1z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArchiveBoxIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownCircleIcon.js
var require_ArrowDownCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.75-11.25a.75.75 0 00-1.5 0v4.59L7.3 9.24a.75.75 0 00-1.1 1.02l3.25 3.5a.75.75 0 001.1 0l3.25-3.5a.75.75 0 10-1.1-1.02l-1.95 2.1V6.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownLeftIcon.js
var require_ArrowDownLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.78 5.22a.75.75 0 00-1.06 0L6.5 12.44V6.75a.75.75 0 00-1.5 0v7.5c0 .414.336.75.75.75h7.5a.75.75 0 000-1.5H7.56l7.22-7.22a.75.75 0 000-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownOnSquareStackIcon.js
var require_ArrowDownOnSquareStackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownOnSquareStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownOnSquareStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8 1a.75.75 0 01.75.75V6h-1.5V1.75A.75.75 0 018 1zm-.75 5v3.296l-.943-1.048a.75.75 0 10-1.114 1.004l2.25 2.5a.75.75 0 001.114 0l2.25-2.5a.75.75 0 00-1.114-1.004L8.75 9.296V6h2A2.25 2.25 0 0113 8.25v4.5A2.25 2.25 0 0110.75 15h-5.5A2.25 2.25 0 013 12.75v-4.5A2.25 2.25 0 015.25 6h2zM7 16.75v-.25h3.75a3.75 3.75 0 003.75-3.75V10h.25A2.25 2.25 0 0117 12.25v4.5A2.25 2.25 0 0114.75 19h-5.5A2.25 2.25 0 017 16.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownOnSquareStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownOnSquareIcon.js
var require_ArrowDownOnSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownOnSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownOnSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M13.75 7h-3v5.296l1.943-2.048a.75.75 0 011.114 1.004l-3.25 3.5a.75.75 0 01-1.114 0l-3.25-3.5a.75.75 0 111.114-1.004l1.943 2.048V7h1.5V1.75a.75.75 0 00-1.5 0V7h-3A2.25 2.25 0 004 9.25v7.5A2.25 2.25 0 006.25 19h7.5A2.25 2.25 0 0016 16.75v-7.5A2.25 2.25 0 0013.75 7z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownOnSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownRightIcon.js
var require_ArrowDownRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.28 5.22a.75.75 0 00-1.06 1.06l7.22 7.22H6.75a.75.75 0 000 1.5h7.5a.747.747 0 00.75-.75v-7.5a.75.75 0 00-1.5 0v5.69L6.28 5.22z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownTrayIcon.js
var require_ArrowDownTrayIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownTrayIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownTrayIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10.75 2.75a.75.75 0 00-1.5 0v8.614L6.295 8.235a.75.75 0 10-1.09 1.03l4.25 4.5a.75.75 0 001.09 0l4.25-4.5a.75.75 0 00-1.09-1.03l-2.955 3.129V2.75z"
      }), React58.createElement("path", {
        d: "M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownTrayIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowDownIcon.js
var require_ArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3a.75.75 0 01.75.75v10.638l3.96-4.158a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.158V3.75A.75.75 0 0110 3z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLeftCircleIcon.js
var require_ArrowLeftCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLeftCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLeftCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("g", {
        clipPath: "url(#clip0_9_2121)"
      }, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.25-7.25a.75.75 0 000-1.5H8.66l2.1-1.95a.75.75 0 10-1.02-1.1l-3.5 3.25a.75.75 0 000 1.1l3.5 3.25a.75.75 0 001.02-1.1l-2.1-1.95h4.59z",
        clipRule: "evenodd"
      })), React58.createElement("defs", null, React58.createElement("clipPath", {
        id: "clip0_9_2121"
      }, React58.createElement("path", {
        d: "M0 0h20v20H0z"
      }))));
    }
    var ForwardRef = React58.forwardRef(ArrowLeftCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLeftOnRectangleIcon.js
var require_ArrowLeftOnRectangleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLeftOnRectangleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLeftOnRectangleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M19 10a.75.75 0 00-.75-.75H8.704l1.048-.943a.75.75 0 10-1.004-1.114l-2.5 2.25a.75.75 0 000 1.114l2.5 2.25a.75.75 0 101.004-1.114l-1.048-.943h9.546A.75.75 0 0019 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLeftOnRectangleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLeftIcon.js
var require_ArrowLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M17 10a.75.75 0 01-.75.75H5.612l4.158 3.96a.75.75 0 11-1.04 1.08l-5.5-5.25a.75.75 0 010-1.08l5.5-5.25a.75.75 0 111.04 1.08L5.612 9.25H16.25A.75.75 0 0117 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLongDownIcon.js
var require_ArrowLongDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLongDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a.75.75 0 01.75.75v12.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 111.1-1.02l1.95 2.1V2.75A.75.75 0 0110 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLongLeftIcon.js
var require_ArrowLongLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLongLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongLeftIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongLeftIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLongRightIcon.js
var require_ArrowLongRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLongRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongRightIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongRightIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowLongUpIcon.js
var require_ArrowLongUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowLongUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a.75.75 0 01-.75-.75V4.66L7.3 6.76a.75.75 0 11-1.1-1.02l3.25-3.5a.75.75 0 011.1 0l3.25 3.5a.75.75 0 01-1.1 1.02l-1.95-2.1v12.59A.75.75 0 0110 18z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowPathRoundedSquareIcon.js
var require_ArrowPathRoundedSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowPathRoundedSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowPathRoundedSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 4.5c1.215 0 2.417.055 3.604.162a.68.68 0 01.615.597c.124 1.038.208 2.088.25 3.15l-1.689-1.69a.75.75 0 00-1.06 1.061l2.999 3a.75.75 0 001.06 0l3.001-3a.75.75 0 10-1.06-1.06l-1.748 1.747a41.31 41.31 0 00-.264-3.386 2.18 2.18 0 00-1.97-1.913 41.512 41.512 0 00-7.477 0 2.18 2.18 0 00-1.969 1.913 41.16 41.16 0 00-.16 1.61.75.75 0 101.495.12c.041-.52.093-1.038.154-1.552a.68.68 0 01.615-.597A40.012 40.012 0 0110 4.5zM5.281 9.22a.75.75 0 00-1.06 0l-3.001 3a.75.75 0 101.06 1.06l1.748-1.747c.042 1.141.13 2.27.264 3.386a2.18 2.18 0 001.97 1.913 41.533 41.533 0 007.477 0 2.18 2.18 0 001.969-1.913c.064-.534.117-1.071.16-1.61a.75.75 0 10-1.495-.12c-.041.52-.093 1.037-.154 1.552a.68.68 0 01-.615.597 40.013 40.013 0 01-7.208 0 .68.68 0 01-.615-.597 39.785 39.785 0 01-.25-3.15l1.689 1.69a.75.75 0 001.06-1.061l-2.999-3z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowPathRoundedSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowPathIcon.js
var require_ArrowPathIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowPathIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowPathIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15.312 11.424a5.5 5.5 0 01-9.201 2.466l-.312-.311h2.433a.75.75 0 000-1.5H3.989a.75.75 0 00-.75.75v4.242a.75.75 0 001.5 0v-2.43l.31.31a7 7 0 0011.712-3.138.75.75 0 00-1.449-.39zm1.23-3.723a.75.75 0 00.219-.53V2.929a.75.75 0 00-1.5 0V5.36l-.31-.31A7 7 0 003.239 8.188a.75.75 0 101.448.389A5.5 5.5 0 0113.89 6.11l.311.31h-2.432a.75.75 0 000 1.5h4.243a.75.75 0 00.53-.219z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowPathIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowRightCircleIcon.js
var require_ArrowRightCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowRightCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowRightCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM6.75 9.25a.75.75 0 000 1.5h4.59l-2.1 1.95a.75.75 0 001.02 1.1l3.5-3.25a.75.75 0 000-1.1l-3.5-3.25a.75.75 0 10-1.02 1.1l2.1 1.95H6.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowRightCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowRightOnRectangleIcon.js
var require_ArrowRightOnRectangleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowRightOnRectangleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowRightOnRectangleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6 10a.75.75 0 01.75-.75h9.546l-1.048-.943a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 11-1.004-1.114l1.048-.943H6.75A.75.75 0 016 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowRightOnRectangleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowRightIcon.js
var require_ArrowRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowSmallDownIcon.js
var require_ArrowSmallDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowSmallDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 5a.75.75 0 01.75.75v6.638l1.96-2.158a.75.75 0 111.08 1.04l-3.25 3.5a.75.75 0 01-1.08 0l-3.25-3.5a.75.75 0 111.08-1.04l1.96 2.158V5.75A.75.75 0 0110 5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowSmallLeftIcon.js
var require_ArrowSmallLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowSmallLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15 10a.75.75 0 01-.75.75H7.612l2.158 1.96a.75.75 0 11-1.04 1.08l-3.5-3.25a.75.75 0 010-1.08l3.5-3.25a.75.75 0 111.04 1.08L7.612 9.25h6.638A.75.75 0 0115 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowSmallRightIcon.js
var require_ArrowSmallRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowSmallRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowSmallUpIcon.js
var require_ArrowSmallUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowSmallUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 15a.75.75 0 01-.75-.75V7.612L7.29 9.77a.75.75 0 01-1.08-1.04l3.25-3.5a.75.75 0 011.08 0l3.25 3.5a.75.75 0 11-1.08 1.04l-1.96-2.158v6.638A.75.75 0 0110 15z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowTopRightOnSquareIcon.js
var require_ArrowTopRightOnSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowTopRightOnSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowTopRightOnSquareIcon3({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.25 5.5a.75.75 0 00-.75.75v8.5c0 .414.336.75.75.75h8.5a.75.75 0 00.75-.75v-4a.75.75 0 011.5 0v4A2.25 2.25 0 0112.75 17h-8.5A2.25 2.25 0 012 14.75v-8.5A2.25 2.25 0 014.25 4h5a.75.75 0 010 1.5h-5z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6.194 12.753a.75.75 0 001.06.053L16.5 4.44v2.81a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.553l-9.056 8.194a.75.75 0 00-.053 1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowTopRightOnSquareIcon3);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowTrendingDownIcon.js
var require_ArrowTrendingDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowTrendingDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowTrendingDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1.22 5.222a.75.75 0 011.06 0L7 9.942l3.768-3.769a.75.75 0 011.113.058 20.908 20.908 0 013.813 7.254l1.574-2.727a.75.75 0 011.3.75l-2.475 4.286a.75.75 0 01-1.025.275l-4.287-2.475a.75.75 0 01.75-1.3l2.71 1.565a19.422 19.422 0 00-3.013-6.024L7.53 11.533a.75.75 0 01-1.06 0l-5.25-5.25a.75.75 0 010-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowTrendingDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowTrendingUpIcon.js
var require_ArrowTrendingUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowTrendingUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowTrendingUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M12.577 4.878a.75.75 0 01.919-.53l4.78 1.281a.75.75 0 01.531.919l-1.281 4.78a.75.75 0 01-1.449-.387l.81-3.022a19.407 19.407 0 00-5.594 5.203.75.75 0 01-1.139.093L7 10.06l-4.72 4.72a.75.75 0 01-1.06-1.061l5.25-5.25a.75.75 0 011.06 0l3.074 3.073a20.923 20.923 0 015.545-4.931l-3.042-.815a.75.75 0 01-.53-.919z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowTrendingUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpCircleIcon.js
var require_ArrowUpCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm-.75-4.75a.75.75 0 001.5 0V8.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0L6.2 9.74a.75.75 0 101.1 1.02l1.95-2.1v4.59z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpLeftIcon.js
var require_ArrowUpLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.78 14.78a.75.75 0 01-1.06 0L6.5 7.56v5.69a.75.75 0 01-1.5 0v-7.5A.75.75 0 015.75 5h7.5a.75.75 0 010 1.5H7.56l7.22 7.22a.75.75 0 010 1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpOnSquareStackIcon.js
var require_ArrowUpOnSquareStackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpOnSquareStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpOnSquareStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10.75 6h-2v4.25a.75.75 0 01-1.5 0V6h1.5V3.704l.943 1.048a.75.75 0 001.114-1.004l-2.25-2.5a.75.75 0 00-1.114 0l-2.25 2.5a.75.75 0 001.114 1.004l.943-1.048V6h-2A2.25 2.25 0 003 8.25v4.5A2.25 2.25 0 005.25 15h5.5A2.25 2.25 0 0013 12.75v-4.5A2.25 2.25 0 0010.75 6zM7 16.75v-.25h3.75a3.75 3.75 0 003.75-3.75V10h.25A2.25 2.25 0 0117 12.25v4.5A2.25 2.25 0 0114.75 19h-5.5A2.25 2.25 0 017 16.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpOnSquareStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpOnSquareIcon.js
var require_ArrowUpOnSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpOnSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpOnSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M13.75 7h-3V3.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0L6.2 4.74a.75.75 0 001.1 1.02l1.95-2.1V7h-3A2.25 2.25 0 004 9.25v7.5A2.25 2.25 0 006.25 19h7.5A2.25 2.25 0 0016 16.75v-7.5A2.25 2.25 0 0013.75 7zm-3 0h-1.5v5.25a.75.75 0 001.5 0V7z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpOnSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpRightIcon.js
var require_ArrowUpRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpTrayIcon.js
var require_ArrowUpTrayIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpTrayIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpTrayIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M9.25 13.25a.75.75 0 001.5 0V4.636l2.955 3.129a.75.75 0 001.09-1.03l-4.25-4.5a.75.75 0 00-1.09 0l-4.25 4.5a.75.75 0 101.09 1.03L9.25 4.636v8.614z"
      }), React58.createElement("path", {
        d: "M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpTrayIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUpIcon.js
var require_ArrowUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.77a.75.75 0 01-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.158V16.25A.75.75 0 0110 17z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUturnDownIcon.js
var require_ArrowUturnDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUturnDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.232 12.207a.75.75 0 011.06.025l3.958 4.146V6.375a5.375 5.375 0 0110.75 0V9.25a.75.75 0 01-1.5 0V6.375a3.875 3.875 0 00-7.75 0v10.003l3.957-4.146a.75.75 0 011.085 1.036l-5.25 5.5a.75.75 0 01-1.085 0l-5.25-5.5a.75.75 0 01.025-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUturnLeftIcon.js
var require_ArrowUturnLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUturnLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M7.793 2.232a.75.75 0 01-.025 1.06L3.622 7.25h10.003a5.375 5.375 0 010 10.75H10.75a.75.75 0 010-1.5h2.875a3.875 3.875 0 000-7.75H3.622l4.146 3.957a.75.75 0 01-1.036 1.085l-5.5-5.25a.75.75 0 010-1.085l5.5-5.25a.75.75 0 011.06.025z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUturnRightIcon.js
var require_ArrowUturnRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUturnRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M12.207 2.232a.75.75 0 00.025 1.06l4.146 3.958H6.375a5.375 5.375 0 000 10.75H9.25a.75.75 0 000-1.5H6.375a3.875 3.875 0 010-7.75h10.003l-4.146 3.957a.75.75 0 001.036 1.085l5.5-5.25a.75.75 0 000-1.085l-5.5-5.25a.75.75 0 00-1.06.025z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowUturnUpIcon.js
var require_ArrowUturnUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowUturnUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M17.768 7.793a.75.75 0 01-1.06-.025L12.75 3.622v10.003a5.375 5.375 0 01-10.75 0V10.75a.75.75 0 011.5 0v2.875a3.875 3.875 0 007.75 0V3.622L7.293 7.768a.75.75 0 01-1.086-1.036l5.25-5.5a.75.75 0 011.085 0l5.25 5.5a.75.75 0 01-.024 1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowsPointingInIcon.js
var require_ArrowsPointingInIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowsPointingInIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsPointingInIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.28 2.22a.75.75 0 00-1.06 1.06L5.44 6.5H2.75a.75.75 0 000 1.5h4.5A.75.75 0 008 7.25v-4.5a.75.75 0 00-1.5 0v2.69L3.28 2.22zM13.5 2.75a.75.75 0 00-1.5 0v4.5c0 .414.336.75.75.75h4.5a.75.75 0 000-1.5h-2.69l3.22-3.22a.75.75 0 00-1.06-1.06L13.5 5.44V2.75zM3.28 17.78l3.22-3.22v2.69a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.69l-3.22 3.22a.75.75 0 101.06 1.06zM13.5 14.56l3.22 3.22a.75.75 0 101.06-1.06l-3.22-3.22h2.69a.75.75 0 000-1.5h-4.5a.75.75 0 00-.75.75v4.5a.75.75 0 001.5 0v-2.69z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsPointingInIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowsPointingOutIcon.js
var require_ArrowsPointingOutIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowsPointingOutIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsPointingOutIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M13.28 7.78l3.22-3.22v2.69a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.69l-3.22 3.22a.75.75 0 001.06 1.06zM2 17.25v-4.5a.75.75 0 011.5 0v2.69l3.22-3.22a.75.75 0 011.06 1.06L4.56 16.5h2.69a.75.75 0 010 1.5h-4.5a.747.747 0 01-.75-.75zM12.22 13.28l3.22 3.22h-2.69a.75.75 0 000 1.5h4.5a.747.747 0 00.75-.75v-4.5a.75.75 0 00-1.5 0v2.69l-3.22-3.22a.75.75 0 10-1.06 1.06zM3.5 4.56l3.22 3.22a.75.75 0 001.06-1.06L4.56 3.5h2.69a.75.75 0 000-1.5h-4.5a.75.75 0 00-.75.75v4.5a.75.75 0 001.5 0V4.56z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsPointingOutIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowsRightLeftIcon.js
var require_ArrowsRightLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowsRightLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsRightLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M13.2 2.24a.75.75 0 00.04 1.06l2.1 1.95H6.75a.75.75 0 000 1.5h8.59l-2.1 1.95a.75.75 0 101.02 1.1l3.5-3.25a.75.75 0 000-1.1l-3.5-3.25a.75.75 0 00-1.06.04zm-6.4 8a.75.75 0 00-1.06-.04l-3.5 3.25a.75.75 0 000 1.1l3.5 3.25a.75.75 0 101.02-1.1l-2.1-1.95h8.59a.75.75 0 000-1.5H4.66l2.1-1.95a.75.75 0 00.04-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsRightLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ArrowsUpDownIcon.js
var require_ArrowsUpDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ArrowsUpDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsUpDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.24 6.8a.75.75 0 001.06-.04l1.95-2.1v8.59a.75.75 0 001.5 0V4.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0L2.2 5.74a.75.75 0 00.04 1.06zm8 6.4a.75.75 0 00-.04 1.06l3.25 3.5a.75.75 0 001.1 0l3.25-3.5a.75.75 0 10-1.1-1.02l-1.95 2.1V6.75a.75.75 0 00-1.5 0v8.59l-1.95-2.1a.75.75 0 00-1.06-.04z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsUpDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/AtSymbolIcon.js
var require_AtSymbolIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/AtSymbolIcon.js"(exports, module) {
    var React58 = __require("react");
    function AtSymbolIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.404 14.596A6.5 6.5 0 1116.5 10a1.25 1.25 0 01-2.5 0 4 4 0 10-.571 2.06A2.75 2.75 0 0018 10a8 8 0 10-2.343 5.657.75.75 0 00-1.06-1.06 6.5 6.5 0 01-9.193 0zM10 7.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(AtSymbolIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BackspaceIcon.js
var require_BackspaceIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BackspaceIcon.js"(exports, module) {
    var React58 = __require("react");
    function BackspaceIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M7.22 3.22A.75.75 0 017.75 3h9A2.25 2.25 0 0119 5.25v9.5A2.25 2.25 0 0116.75 17h-9a.75.75 0 01-.53-.22L.97 10.53a.75.75 0 010-1.06l6.25-6.25zm3.06 4a.75.75 0 10-1.06 1.06L10.94 10l-1.72 1.72a.75.75 0 101.06 1.06L12 11.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L12 8.94l-1.72-1.72z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BackspaceIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BackwardIcon.js
var require_BackwardIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BackwardIcon.js"(exports, module) {
    var React58 = __require("react");
    function BackwardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M7.712 4.819A1.5 1.5 0 0110 6.095v2.973c.104-.131.234-.248.389-.344l6.323-3.905A1.5 1.5 0 0119 6.095v7.81a1.5 1.5 0 01-2.288 1.277l-6.323-3.905a1.505 1.505 0 01-.389-.344v2.973a1.5 1.5 0 01-2.288 1.276l-6.323-3.905a1.5 1.5 0 010-2.553L7.712 4.82z"
      }));
    }
    var ForwardRef = React58.forwardRef(BackwardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BanknotesIcon.js
var require_BanknotesIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BanknotesIcon.js"(exports, module) {
    var React58 = __require("react");
    function BanknotesIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 4a1 1 0 011-1h16a1 1 0 011 1v8a1 1 0 01-1 1H2a1 1 0 01-1-1V4zm12 4a3 3 0 11-6 0 3 3 0 016 0zM4 9a1 1 0 100-2 1 1 0 000 2zm13-1a1 1 0 11-2 0 1 1 0 012 0zM1.75 14.5a.75.75 0 000 1.5c4.417 0 8.693.603 12.749 1.73 1.111.309 2.251-.512 2.251-1.696v-.784a.75.75 0 00-1.5 0v.784a.272.272 0 01-.35.25A49.043 49.043 0 001.75 14.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BanknotesIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Bars2Icon.js
var require_Bars2Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Bars2Icon.js"(exports, module) {
    var React58 = __require("react");
    function Bars2Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 6.75A.75.75 0 012.75 6h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 6.75zm0 6.5a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars2Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Bars3BottomLeftIcon.js
var require_Bars3BottomLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Bars3BottomLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3BottomLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3BottomLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Bars3BottomRightIcon.js
var require_Bars3BottomRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Bars3BottomRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3BottomRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm7 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3BottomRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Bars3CenterLeftIcon.js
var require_Bars3CenterLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Bars3CenterLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3CenterLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 012 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3CenterLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Bars3Icon.js
var require_Bars3Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Bars3Icon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10zm0 5.25a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Bars4Icon.js
var require_Bars4Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Bars4Icon.js"(exports, module) {
    var React58 = __require("react");
    function Bars4Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.75A.75.75 0 012.75 3h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zm0 4.167a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zm0 4.166a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zm0 4.167a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars4Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BarsArrowDownIcon.js
var require_BarsArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BarsArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function BarsArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.75A.75.75 0 012.75 3h11.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zM2 7.5a.75.75 0 01.75-.75h7.508a.75.75 0 010 1.5H2.75A.75.75 0 012 7.5zM14 7a.75.75 0 01.75.75v6.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 111.1-1.02l1.95 2.1V7.75A.75.75 0 0114 7zM2 11.25a.75.75 0 01.75-.75h4.562a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BarsArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BarsArrowUpIcon.js
var require_BarsArrowUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BarsArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function BarsArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.75A.75.75 0 012.75 3h11.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zM2 7.5a.75.75 0 01.75-.75h6.365a.75.75 0 010 1.5H2.75A.75.75 0 012 7.5zM14 7a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02l-1.95-2.1v6.59a.75.75 0 01-1.5 0V9.66l-1.95 2.1a.75.75 0 11-1.1-1.02l3.25-3.5A.75.75 0 0114 7zM2 11.25a.75.75 0 01.75-.75H7A.75.75 0 017 12H2.75a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BarsArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Battery0Icon.js
var require_Battery0Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Battery0Icon.js"(exports, module) {
    var React58 = __require("react");
    function Battery0Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 7.25A2.25 2.25 0 013.25 5h12.5A2.25 2.25 0 0118 7.25v1.085a1.5 1.5 0 011 1.415v.5a1.5 1.5 0 01-1 1.415v1.085A2.25 2.25 0 0115.75 15H3.25A2.25 2.25 0 011 12.75v-5.5zm2.25-.75a.75.75 0 00-.75.75v5.5c0 .414.336.75.75.75h12.5a.75.75 0 00.75-.75v-5.5a.75.75 0 00-.75-.75H3.25z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Battery0Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Battery100Icon.js
var require_Battery100Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Battery100Icon.js"(exports, module) {
    var React58 = __require("react");
    function Battery100Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.75 8a.75.75 0 00-.75.75v2.5c0 .414.336.75.75.75h9.5a.75.75 0 00.75-.75v-2.5a.75.75 0 00-.75-.75h-9.5z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 7.25A2.25 2.25 0 013.25 5h12.5A2.25 2.25 0 0118 7.25v1.085a1.5 1.5 0 011 1.415v.5a1.5 1.5 0 01-1 1.415v1.085A2.25 2.25 0 0115.75 15H3.25A2.25 2.25 0 011 12.75v-5.5zm2.25-.75a.75.75 0 00-.75.75v5.5c0 .414.336.75.75.75h12.5a.75.75 0 00.75-.75v-5.5a.75.75 0 00-.75-.75H3.25z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Battery100Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Battery50Icon.js
var require_Battery50Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Battery50Icon.js"(exports, module) {
    var React58 = __require("react");
    function Battery50Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.75 8a.75.75 0 00-.75.75v2.5c0 .414.336.75.75.75H9.5a.75.75 0 00.75-.75v-2.5A.75.75 0 009.5 8H4.75z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.25 5A2.25 2.25 0 001 7.25v5.5A2.25 2.25 0 003.25 15h12.5A2.25 2.25 0 0018 12.75v-1.085a1.5 1.5 0 001-1.415v-.5a1.5 1.5 0 00-1-1.415V7.25A2.25 2.25 0 0015.75 5H3.25zM2.5 7.25a.75.75 0 01.75-.75h12.5a.75.75 0 01.75.75v5.5a.75.75 0 01-.75.75H3.25a.75.75 0 01-.75-.75v-5.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Battery50Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BeakerIcon.js
var require_BeakerIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BeakerIcon.js"(exports, module) {
    var React58 = __require("react");
    function BeakerIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8.5 3.528v4.644c0 .729-.29 1.428-.805 1.944l-1.217 1.216a8.75 8.75 0 013.55.621l.502.201a7.25 7.25 0 004.178.365l-2.403-2.403a2.75 2.75 0 01-.805-1.944V3.528a40.205 40.205 0 00-3 0zm4.5.084l.19.015a.75.75 0 10.12-1.495 41.364 41.364 0 00-6.62 0 .75.75 0 00.12 1.495L7 3.612v4.56c0 .331-.132.649-.366.883L2.6 13.09c-1.496 1.496-.817 4.15 1.403 4.475C5.961 17.852 7.963 18 10 18s4.039-.148 5.997-.436c2.22-.325 2.9-2.979 1.403-4.475l-4.034-4.034A1.25 1.25 0 0113 8.172v-4.56z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BeakerIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BellAlertIcon.js
var require_BellAlertIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BellAlertIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellAlertIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.214 3.227a.75.75 0 00-1.156-.956 8.97 8.97 0 00-1.856 3.826.75.75 0 001.466.316 7.47 7.47 0 011.546-3.186zM16.942 2.271a.75.75 0 00-1.157.956 7.47 7.47 0 011.547 3.186.75.75 0 001.466-.316 8.971 8.971 0 00-1.856-3.826z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a6 6 0 00-6 6c0 1.887-.454 3.665-1.257 5.234a.75.75 0 00.515 1.076 32.94 32.94 0 003.256.508 3.5 3.5 0 006.972 0 32.933 32.933 0 003.256-.508.75.75 0 00.515-1.076A11.448 11.448 0 0116 8a6 6 0 00-6-6zm0 14.5a2 2 0 01-1.95-1.557 33.54 33.54 0 003.9 0A2 2 0 0110 16.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BellAlertIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BellSlashIcon.js
var require_BellSlashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BellSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4 8c0-.26.017-.517.049-.77l7.722 7.723a33.56 33.56 0 01-3.722-.01 2 2 0 003.862.15l1.134 1.134a3.5 3.5 0 01-6.53-1.409 32.91 32.91 0 01-3.257-.508.75.75 0 01-.515-1.076A11.448 11.448 0 004 8zM17.266 13.9a.756.756 0 01-.068.116L6.389 3.207A6 6 0 0116 8c.001 1.887.455 3.665 1.258 5.234a.75.75 0 01.01.666zM3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06L3.28 2.22z"
      }));
    }
    var ForwardRef = React58.forwardRef(BellSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BellSnoozeIcon.js
var require_BellSnoozeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BellSnoozeIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellSnoozeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4 8a6 6 0 1112 0c0 1.887.454 3.665 1.257 5.234a.75.75 0 01-.515 1.076 32.903 32.903 0 01-3.256.508 3.5 3.5 0 01-6.972 0 32.91 32.91 0 01-3.256-.508.75.75 0 01-.515-1.076A11.448 11.448 0 004 8zm6 7c-.655 0-1.305-.02-1.95-.057a2 2 0 003.9 0c-.645.038-1.295.057-1.95.057zM8.75 6a.75.75 0 000 1.5h1.043L8.14 9.814A.75.75 0 008.75 11h2.5a.75.75 0 000-1.5h-1.043l1.653-2.314A.75.75 0 0011.25 6h-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BellSnoozeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BellIcon.js
var require_BellIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BellIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a6 6 0 00-6 6c0 1.887-.454 3.665-1.257 5.234a.75.75 0 00.515 1.076 32.91 32.91 0 003.256.508 3.5 3.5 0 006.972 0 32.903 32.903 0 003.256-.508.75.75 0 00.515-1.076A11.448 11.448 0 0116 8a6 6 0 00-6-6zM8.05 14.943a33.54 33.54 0 003.9 0 2 2 0 01-3.9 0z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BellIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BoltSlashIcon.js
var require_BoltSlashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BoltSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function BoltSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.22 2.22a.75.75 0 011.06 0l14.5 14.5a.75.75 0 11-1.06 1.06L2.22 3.28a.75.75 0 010-1.06z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M4.73 7.912L2.191 10.75A.75.75 0 002.75 12h6.068L4.73 7.912zM9.233 12.415l-1.216 5.678a.75.75 0 001.292.657l2.956-3.303-3.032-3.032zM15.27 12.088l2.539-2.838A.75.75 0 0017.25 8h-6.068l4.088 4.088zM10.767 7.585l1.216-5.678a.75.75 0 00-1.292-.657L7.735 4.553l3.032 3.032z"
      }));
    }
    var ForwardRef = React58.forwardRef(BoltSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BoltIcon.js
var require_BoltIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BoltIcon.js"(exports, module) {
    var React58 = __require("react");
    function BoltIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M11.983 1.907a.75.75 0 00-1.292-.657l-8.5 9.5A.75.75 0 002.75 12h6.572l-1.305 6.093a.75.75 0 001.292.657l8.5-9.5A.75.75 0 0017.25 8h-6.572l1.305-6.093z"
      }));
    }
    var ForwardRef = React58.forwardRef(BoltIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BookOpenIcon.js
var require_BookOpenIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BookOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10.75 16.82A7.462 7.462 0 0115 15.5c.71 0 1.396.098 2.046.282A.75.75 0 0018 15.06v-11a.75.75 0 00-.546-.721A9.006 9.006 0 0015 3a8.963 8.963 0 00-4.25 1.065V16.82zM9.25 4.065A8.963 8.963 0 005 3c-.85 0-1.673.118-2.454.339A.75.75 0 002 4.06v11a.75.75 0 00.954.721A7.506 7.506 0 015 15.5c1.579 0 3.042.487 4.25 1.32V4.065z"
      }));
    }
    var ForwardRef = React58.forwardRef(BookOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BookmarkSlashIcon.js
var require_BookmarkSlashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BookmarkSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookmarkSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M17 4.517v9.301L5.433 2.252a41.44 41.44 0 019.637.058C16.194 2.45 17 3.414 17 4.517zM3 17.25V6.182l10.654 10.654L10 15.082l-5.925 2.844A.75.75 0 013 17.25zM3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06L3.28 2.22z"
      }));
    }
    var ForwardRef = React58.forwardRef(BookmarkSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BookmarkSquareIcon.js
var require_BookmarkSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BookmarkSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookmarkSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.25 2A2.25 2.25 0 002 4.25v11.5A2.25 2.25 0 004.25 18h11.5A2.25 2.25 0 0018 15.75V4.25A2.25 2.25 0 0015.75 2H4.25zM6 13.25V3.5h8v9.75a.75.75 0 01-1.064.681L10 12.576l-2.936 1.355A.75.75 0 016 13.25z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BookmarkSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BookmarkIcon.js
var require_BookmarkIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BookmarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookmarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2c-1.716 0-3.408.106-5.07.31C3.806 2.45 3 3.414 3 4.517V17.25a.75.75 0 001.075.676L10 15.082l5.925 2.844A.75.75 0 0017 17.25V4.517c0-1.103-.806-2.068-1.93-2.207A41.403 41.403 0 0010 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BookmarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BriefcaseIcon.js
var require_BriefcaseIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BriefcaseIcon.js"(exports, module) {
    var React58 = __require("react");
    function BriefcaseIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6 3.75A2.75 2.75 0 018.75 1h2.5A2.75 2.75 0 0114 3.75v.443c.572.055 1.14.122 1.706.2C17.053 4.582 18 5.75 18 7.07v3.469c0 1.126-.694 2.191-1.83 2.54-1.952.599-4.024.921-6.17.921s-4.219-.322-6.17-.921C2.694 12.73 2 11.665 2 10.539V7.07c0-1.321.947-2.489 2.294-2.676A41.047 41.047 0 016 4.193V3.75zm6.5 0v.325a41.622 41.622 0 00-5 0V3.75c0-.69.56-1.25 1.25-1.25h2.5c.69 0 1.25.56 1.25 1.25zM10 10a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V11a1 1 0 00-1-1H10z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M3 15.055v-.684c.126.053.255.1.39.142 2.092.642 4.313.987 6.61.987 2.297 0 4.518-.345 6.61-.987.135-.041.264-.089.39-.142v.684c0 1.347-.985 2.53-2.363 2.686a41.454 41.454 0 01-9.274 0C3.985 17.585 3 16.402 3 15.055z"
      }));
    }
    var ForwardRef = React58.forwardRef(BriefcaseIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BugAntIcon.js
var require_BugAntIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BugAntIcon.js"(exports, module) {
    var React58 = __require("react");
    function BugAntIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6.56 1.14a.75.75 0 01.177 1.045 3.989 3.989 0 00-.464.86c.185.17.382.329.59.473A3.993 3.993 0 0110 2c1.272 0 2.405.594 3.137 1.518.208-.144.405-.302.59-.473a3.989 3.989 0 00-.464-.86.75.75 0 011.222-.869c.369.519.65 1.105.822 1.736a.75.75 0 01-.174.707 7.03 7.03 0 01-1.299 1.098A4 4 0 0114 6c0 .52-.301.963-.723 1.187a6.961 6.961 0 01-1.158.486c.13.208.231.436.296.679 1.413-.174 2.779-.5 4.081-.96a19.655 19.655 0 00-.09-2.319.75.75 0 111.493-.146 21.239 21.239 0 01.08 3.028.75.75 0 01-.482.667 20.874 20.874 0 01-5.153 1.249 2.51 2.51 0 01-.107.247 20.86 20.86 0 015.253 1.257.75.75 0 01.48.74 20.946 20.946 0 01-.907 5.107.75.75 0 01-1.433-.444c.415-1.34.69-2.743.806-4.19-.495-.174-1-.328-1.512-.461.05.284.076.575.076.873 0 1.814-.517 3.312-1.426 4.37A4.639 4.639 0 0110 19a4.64 4.64 0 01-3.574-1.63C5.516 16.311 5 14.813 5 13c0-.298.026-.59.076-.873-.513.133-1.017.287-1.512.46.116 1.448.39 2.85.806 4.191a.75.75 0 01-1.433.444 20.94 20.94 0 01-.908-5.107.75.75 0 01.482-.74 20.857 20.857 0 015.252-1.257 2.481 2.481 0 01-.107-.247 20.874 20.874 0 01-5.153-1.249.75.75 0 01-.482-.667 21.342 21.342 0 01.08-3.028.75.75 0 111.493.146 19.745 19.745 0 00-.09 2.32c1.302.459 2.668.785 4.08.959.066-.243.166-.471.297-.679a6.962 6.962 0 01-1.158-.486A1.348 1.348 0 016 6a4 4 0 01.166-1.143 7.032 7.032 0 01-1.3-1.098.75.75 0 01-.173-.707 5.48 5.48 0 01.822-1.736.75.75 0 011.046-.176z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BugAntIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BuildingLibraryIcon.js
var require_BuildingLibraryIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BuildingLibraryIcon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingLibraryIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.674 2.075a.75.75 0 01.652 0l7.25 3.5A.75.75 0 0117 6.957V16.5h.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H3V6.957a.75.75 0 01-.576-1.382l7.25-3.5zM11 6a1 1 0 11-2 0 1 1 0 012 0zM7.5 9.75a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zm3.25 0a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zm3.25 0a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingLibraryIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BuildingOffice2Icon.js
var require_BuildingOffice2Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BuildingOffice2Icon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingOffice2Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2.75A.75.75 0 011.75 2h10.5a.75.75 0 010 1.5H12v13.75a.75.75 0 01-.75.75h-1.5a.75.75 0 01-.75-.75v-2.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v2.5a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5H2v-13h-.25A.75.75 0 011 2.75zM4 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM4.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM8 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM8.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM14.25 6a.75.75 0 00-.75.75V17a1 1 0 001 1h3.75a.75.75 0 000-1.5H18v-9h.25a.75.75 0 000-1.5h-4zm.5 3.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zm.5 3.5a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingOffice2Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BuildingOfficeIcon.js
var require_BuildingOfficeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BuildingOfficeIcon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingOfficeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4 16.5v-13h-.25a.75.75 0 010-1.5h12.5a.75.75 0 010 1.5H16v13h.25a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75v-2.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v2.5a.75.75 0 01-.75.75h-3.5a.75.75 0 010-1.5H4zm3-11a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM7.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM11 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zm.5 3.5a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingOfficeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/BuildingStorefrontIcon.js
var require_BuildingStorefrontIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/BuildingStorefrontIcon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingStorefrontIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2.879 7.121A3 3 0 007.5 6.66a2.997 2.997 0 002.5 1.34 2.997 2.997 0 002.5-1.34 3 3 0 104.622-3.78l-.293-.293A2 2 0 0015.415 2H4.585a2 2 0 00-1.414.586l-.292.292a3 3 0 000 4.243zM3 9.032a4.507 4.507 0 004.5-.29A4.48 4.48 0 0010 9.5a4.48 4.48 0 002.5-.758 4.507 4.507 0 004.5.29V16.5h.25a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75v-3.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v3.5a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5H3V9.032z"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingStorefrontIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CakeIcon.js
var require_CakeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CakeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CakeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.75.98l-.884.883a1.25 1.25 0 101.768 0L6.75.98zM13.25.98l-.884.883a1.25 1.25 0 101.768 0L13.25.98zM10 .98l.884.883a1.25 1.25 0 11-1.768 0L10 .98zM7.5 5.75a.75.75 0 00-1.5 0v.464c-1.179.305-2 1.39-2 2.622v.094c.1-.02.202-.038.306-.051A42.869 42.869 0 0110 8.5c1.93 0 3.83.129 5.694.379.104.013.206.03.306.051v-.094c0-1.232-.821-2.317-2-2.622V5.75a.75.75 0 00-1.5 0v.318a45.645 45.645 0 00-1.75-.062V5.75a.75.75 0 00-1.5 0v.256c-.586.01-1.17.03-1.75.062V5.75zM4.505 10.365A41.377 41.377 0 0110 10c1.863 0 3.697.124 5.495.365C16.967 10.562 18 11.838 18 13.28v.693a3.72 3.72 0 01-1.665-.393 5.222 5.222 0 00-4.67 0 3.722 3.722 0 01-3.33 0 5.222 5.222 0 00-4.67 0A3.72 3.72 0 012 13.972v-.693c0-1.441 1.033-2.716 2.505-2.914zM15.665 14.921a5.22 5.22 0 002.335.551V16.5a1.5 1.5 0 01-1.5 1.5h-13A1.5 1.5 0 012 16.5v-1.028c.8 0 1.6-.183 2.335-.551a3.722 3.722 0 013.33 0c1.47.735 3.2.735 4.67 0a3.722 3.722 0 013.33 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CakeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CalculatorIcon.js
var require_CalculatorIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CalculatorIcon.js"(exports, module) {
    var React58 = __require("react");
    function CalculatorIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 1c-1.716 0-3.408.106-5.07.31C3.806 1.45 3 2.414 3 3.517V16.75A2.25 2.25 0 005.25 19h9.5A2.25 2.25 0 0017 16.75V3.517c0-1.103-.806-2.068-1.93-2.207A41.403 41.403 0 0010 1zM5.99 8.75A.75.75 0 016.74 8h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm-.75 2.916a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm1.417-5.75a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm-.75 2.916a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm1.42-5.75a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm-.75 2.916a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zM12.5 8.75a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm0 2.166a.75.75 0 01.75.75v2.167a.75.75 0 11-1.5 0v-2.167a.75.75 0 01.75-.75zM6.75 4a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75h6.5a.75.75 0 00.75-.75v-.5a.75.75 0 00-.75-.75h-6.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CalculatorIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CalendarDaysIcon.js
var require_CalendarDaysIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CalendarDaysIcon.js"(exports, module) {
    var React58 = __require("react");
    function CalendarDaysIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M5.25 12a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H6a.75.75 0 01-.75-.75V12zM6 13.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V14a.75.75 0 00-.75-.75H6zM7.25 12a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H8a.75.75 0 01-.75-.75V12zM8 13.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V14a.75.75 0 00-.75-.75H8zM9.25 10a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H10a.75.75 0 01-.75-.75V10zM10 11.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V12a.75.75 0 00-.75-.75H10zM9.25 14a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H10a.75.75 0 01-.75-.75V14zM12 9.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V10a.75.75 0 00-.75-.75H12zM11.25 12a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H12a.75.75 0 01-.75-.75V12zM12 13.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V14a.75.75 0 00-.75-.75H12zM13.25 10a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H14a.75.75 0 01-.75-.75V10zM14 11.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V12a.75.75 0 00-.75-.75H14z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CalendarDaysIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CalendarIcon.js
var require_CalendarIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CalendarIcon.js"(exports, module) {
    var React58 = __require("react");
    function CalendarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CalendarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CameraIcon.js
var require_CameraIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CameraIcon.js"(exports, module) {
    var React58 = __require("react");
    function CameraIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 8a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 018.07 3h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0016.07 6H17a2 2 0 012 2v7a2 2 0 01-2 2H3a2 2 0 01-2-2V8zm13.5 3a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM10 14a3 3 0 100-6 3 3 0 000 6z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CameraIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChartBarSquareIcon.js
var require_ChartBarSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChartBarSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChartBarSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.25 2A2.25 2.25 0 002 4.25v11.5A2.25 2.25 0 004.25 18h11.5A2.25 2.25 0 0018 15.75V4.25A2.25 2.25 0 0015.75 2H4.25zM15 5.75a.75.75 0 00-1.5 0v8.5a.75.75 0 001.5 0v-8.5zm-8.5 6a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5zM8.584 9a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5a.75.75 0 01.75-.75zm3.58-1.25a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChartBarSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChartBarIcon.js
var require_ChartBarIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChartBarIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChartBarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M15.5 2A1.5 1.5 0 0014 3.5v13a1.5 1.5 0 001.5 1.5h1a1.5 1.5 0 001.5-1.5v-13A1.5 1.5 0 0016.5 2h-1zM9.5 6A1.5 1.5 0 008 7.5v9A1.5 1.5 0 009.5 18h1a1.5 1.5 0 001.5-1.5v-9A1.5 1.5 0 0010.5 6h-1zM3.5 10A1.5 1.5 0 002 11.5v5A1.5 1.5 0 003.5 18h1A1.5 1.5 0 006 16.5v-5A1.5 1.5 0 004.5 10h-1z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChartBarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChartPieIcon.js
var require_ChartPieIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChartPieIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChartPieIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M12 9a1 1 0 01-1-1V3c0-.553.45-1.008.997-.93a7.004 7.004 0 015.933 5.933c.078.547-.378.997-.93.997h-5z"
      }), React58.createElement("path", {
        d: "M8.003 4.07C8.55 3.992 9 4.447 9 5v5a1 1 0 001 1h5c.552 0 1.008.45.93.997A7.001 7.001 0 012 11a7.002 7.002 0 016.003-6.93z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChartPieIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterTextIcon.js
var require_ChatBubbleBottomCenterTextIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterTextIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleBottomCenterTextIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902 1.168.188 2.352.327 3.55.414.28.02.521.18.642.413l1.713 3.293a.75.75 0 001.33 0l1.713-3.293a.783.783 0 01.642-.413 41.102 41.102 0 003.55-.414c1.437-.231 2.43-1.49 2.43-2.902V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0010 2zM6.75 6a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 2.5a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleBottomCenterTextIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterIcon.js
var require_ChatBubbleBottomCenterIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleBottomCenterIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.43 2.524A41.29 41.29 0 0110 2c2.236 0 4.43.18 6.57.524 1.437.231 2.43 1.49 2.43 2.902v5.148c0 1.413-.993 2.67-2.43 2.902a41.102 41.102 0 01-3.55.414c-.28.02-.521.18-.643.413l-1.712 3.293a.75.75 0 01-1.33 0l-1.713-3.293a.783.783 0 00-.642-.413 41.108 41.108 0 01-3.55-.414C1.993 13.245 1 11.986 1 10.574V5.426c0-1.413.993-2.67 2.43-2.902z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleBottomCenterIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleLeftEllipsisIcon.js
var require_ChatBubbleLeftEllipsisIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleLeftEllipsisIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleLeftEllipsisIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902.848.137 1.705.248 2.57.331v3.443a.75.75 0 001.28.53l3.58-3.579a.78.78 0 01.527-.224 41.202 41.202 0 005.183-.5c1.437-.232 2.43-1.49 2.43-2.903V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0010 2zm0 7a1 1 0 100-2 1 1 0 000 2zM8 8a1 1 0 11-2 0 1 1 0 012 0zm5 1a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleLeftEllipsisIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleLeftRightIcon.js
var require_ChatBubbleLeftRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleLeftRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleLeftRightIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.505 2.365A41.369 41.369 0 019 2c1.863 0 3.697.124 5.495.365 1.247.167 2.18 1.108 2.435 2.268a4.45 4.45 0 00-.577-.069 43.141 43.141 0 00-4.706 0C9.229 4.696 7.5 6.727 7.5 8.998v2.24c0 1.413.67 2.735 1.76 3.562l-2.98 2.98A.75.75 0 015 17.25v-3.443c-.501-.048-1-.106-1.495-.172C2.033 13.438 1 12.162 1 10.72V5.28c0-1.441 1.033-2.717 2.505-2.914z"
      }), React58.createElement("path", {
        d: "M14 6c-.762 0-1.52.02-2.271.062C10.157 6.148 9 7.472 9 8.998v2.24c0 1.519 1.147 2.839 2.71 2.935.214.013.428.024.642.034.2.009.385.09.518.224l2.35 2.35a.75.75 0 001.28-.531v-2.07c1.453-.195 2.5-1.463 2.5-2.915V8.998c0-1.526-1.157-2.85-2.729-2.936A41.645 41.645 0 0014 6z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleLeftRightIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleLeftIcon.js
var require_ChatBubbleLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.43 2.524A41.29 41.29 0 0110 2c2.236 0 4.43.18 6.57.524 1.437.231 2.43 1.49 2.43 2.902v5.148c0 1.413-.993 2.67-2.43 2.902a41.202 41.202 0 01-5.183.501.78.78 0 00-.528.224l-3.579 3.58A.75.75 0 016 17.25v-3.443a41.033 41.033 0 01-2.57-.33C1.993 13.244 1 11.986 1 10.573V5.426c0-1.413.993-2.67 2.43-2.902z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftEllipsisIcon.js
var require_ChatBubbleOvalLeftEllipsisIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftEllipsisIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleOvalLeftEllipsisIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3c-4.31 0-8 3.033-8 7 0 2.024.978 3.825 2.499 5.085a3.478 3.478 0 01-.522 1.756.75.75 0 00.584 1.143 5.976 5.976 0 003.936-1.108c.487.082.99.124 1.503.124 4.31 0 8-3.033 8-7s-3.69-7-8-7zm0 8a1 1 0 100-2 1 1 0 000 2zm-2-1a1 1 0 11-2 0 1 1 0 012 0zm5 1a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleOvalLeftEllipsisIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftIcon.js
var require_ChatBubbleOvalLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleOvalLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10c0-3.967 3.69-7 8-7 4.31 0 8 3.033 8 7s-3.69 7-8 7a9.165 9.165 0 01-1.504-.123 5.976 5.976 0 01-3.935 1.107.75.75 0 01-.584-1.143 3.478 3.478 0 00.522-1.756C2.979 13.825 2 12.025 2 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleOvalLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CheckBadgeIcon.js
var require_CheckBadgeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CheckBadgeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CheckBadgeIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M16.403 12.652a3 3 0 000-5.304 3 3 0 00-3.75-3.751 3 3 0 00-5.305 0 3 3 0 00-3.751 3.75 3 3 0 000 5.305 3 3 0 003.75 3.751 3 3 0 005.305 0 3 3 0 003.751-3.75zm-2.546-4.46a.75.75 0 00-1.214-.883l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CheckBadgeIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CheckCircleIcon.js
var require_CheckCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CheckCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function CheckCircleIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CheckCircleIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CheckIcon.js
var require_CheckIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function CheckIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CheckIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronDoubleDownIcon.js
var require_ChevronDoubleDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronDoubleDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.77 4.21a.75.75 0 01.02 1.06l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 011.08-1.04L10 8.168l3.71-3.938a.75.75 0 011.06-.02zm0 6a.75.75 0 01.02 1.06l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 111.08-1.04L10 14.168l3.71-3.938a.75.75 0 011.06-.02z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronDoubleLeftIcon.js
var require_ChevronDoubleLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronDoubleLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15.79 14.77a.75.75 0 01-1.06.02l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 111.04 1.08L11.832 10l3.938 3.71a.75.75 0 01.02 1.06zm-6 0a.75.75 0 01-1.06.02l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 111.04 1.08L5.832 10l3.938 3.71a.75.75 0 01.02 1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronDoubleRightIcon.js
var require_ChevronDoubleRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronDoubleRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10.21 14.77a.75.75 0 01.02-1.06L14.168 10 10.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.21 14.77a.75.75 0 01.02-1.06L8.168 10 4.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronDoubleUpIcon.js
var require_ChevronDoubleUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronDoubleUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.23 15.79a.75.75 0 01-.02-1.06l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 11-1.08 1.04L10 11.832 6.29 15.77a.75.75 0 01-1.06.02zm0-6a.75.75 0 01-.02-1.06l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 11-1.08 1.04L10 5.832 6.29 9.77a.75.75 0 01-1.06.02z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronDownIcon.js
var require_ChevronDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronLeftIcon.js
var require_ChevronLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronRightIcon.js
var require_ChevronRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronUpDownIcon.js
var require_ChevronUpDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronUpDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronUpDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronUpDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ChevronUpIcon.js
var require_ChevronUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ChevronUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronUpIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.77 12.79a.75.75 0 01-1.06-.02L10 8.832 6.29 12.77a.75.75 0 11-1.08-1.04l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 01-.02 1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronUpIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CircleStackIcon.js
var require_CircleStackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CircleStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function CircleStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 1c3.866 0 7 1.79 7 4s-3.134 4-7 4-7-1.79-7-4 3.134-4 7-4zm5.694 8.13c.464-.264.91-.583 1.306-.952V10c0 2.21-3.134 4-7 4s-7-1.79-7-4V8.178c.396.37.842.688 1.306.953C5.838 10.006 7.854 10.5 10 10.5s4.162-.494 5.694-1.37zM3 13.179V15c0 2.21 3.134 4 7 4s7-1.79 7-4v-1.822c-.396.37-.842.688-1.306.953-1.532.875-3.548 1.369-5.694 1.369s-4.162-.494-5.694-1.37A7.009 7.009 0 013 13.179z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CircleStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ClipboardDocumentCheckIcon.js
var require_ClipboardDocumentCheckIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ClipboardDocumentCheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardDocumentCheckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 5.25a2.25 2.25 0 00-2.012-2.238A2.25 2.25 0 0013.75 1h-1.5a2.25 2.25 0 00-2.238 2.012c-.875.092-1.6.686-1.884 1.488H11A2.5 2.5 0 0113.5 7v7h2.25A2.25 2.25 0 0018 11.75v-6.5zM12.25 2.5a.75.75 0 00-.75.75v.25h3v-.25a.75.75 0 00-.75-.75h-1.5z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3 6a1 1 0 00-1 1v10a1 1 0 001 1h8a1 1 0 001-1V7a1 1 0 00-1-1H3zm6.874 4.166a.75.75 0 10-1.248-.832l-2.493 3.739-.853-.853a.75.75 0 00-1.06 1.06l1.5 1.5a.75.75 0 001.154-.114l3-4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardDocumentCheckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ClipboardDocumentListIcon.js
var require_ClipboardDocumentListIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ClipboardDocumentListIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardDocumentListIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5V7A2.5 2.5 0 0011 4.5H8.128a2.252 2.252 0 011.884-1.488A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 7a1 1 0 011-1h8a1 1 0 011 1v10a1 1 0 01-1 1H3a1 1 0 01-1-1V7zm2 3.25a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm0 3.5a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardDocumentListIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ClipboardDocumentIcon.js
var require_ClipboardDocumentIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ClipboardDocumentIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardDocumentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5v-3.379a3 3 0 00-.879-2.121l-3.12-3.121a3 3 0 00-1.402-.791 2.252 2.252 0 011.913-1.576A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M3.5 6A1.5 1.5 0 002 7.5v9A1.5 1.5 0 003.5 18h7a1.5 1.5 0 001.5-1.5v-5.879a1.5 1.5 0 00-.44-1.06L8.44 6.439A1.5 1.5 0 007.378 6H3.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardDocumentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ClipboardIcon.js
var require_ClipboardIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ClipboardIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M13.887 3.182c.396.037.79.08 1.183.128C16.194 3.45 17 4.414 17 5.517V16.75A2.25 2.25 0 0114.75 19h-9.5A2.25 2.25 0 013 16.75V5.517c0-1.103.806-2.068 1.93-2.207.393-.048.787-.09 1.183-.128A3.001 3.001 0 019 1h2c1.373 0 2.531.923 2.887 2.182zM7.5 4A1.5 1.5 0 019 2.5h2A1.5 1.5 0 0112.5 4v.5h-5V4z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ClockIcon.js
var require_ClockIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ClockIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClockIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.75-13a.75.75 0 00-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 000-1.5h-3.25V5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ClockIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CloudArrowDownIcon.js
var require_CloudArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CloudArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function CloudArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 17a4.5 4.5 0 01-1.44-8.765 4.5 4.5 0 018.302-3.046 3.5 3.5 0 014.504 4.272A4 4 0 0115 17H5.5zm5.25-9.25a.75.75 0 00-1.5 0v4.59l-1.95-2.1a.75.75 0 10-1.1 1.02l3.25 3.5a.75.75 0 001.1 0l3.25-3.5a.75.75 0 10-1.1-1.02l-1.95 2.1V7.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CloudArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CloudArrowUpIcon.js
var require_CloudArrowUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CloudArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function CloudArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 17a4.5 4.5 0 01-1.44-8.765 4.5 4.5 0 018.302-3.046 3.5 3.5 0 014.504 4.272A4 4 0 0115 17H5.5zm3.75-2.75a.75.75 0 001.5 0V9.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0l-3.25 3.5a.75.75 0 101.1 1.02l1.95-2.1v4.59z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CloudArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CloudIcon.js
var require_CloudIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CloudIcon.js"(exports, module) {
    var React58 = __require("react");
    function CloudIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M1 12.5A4.5 4.5 0 005.5 17H15a4 4 0 001.866-7.539 3.504 3.504 0 00-4.504-4.272A4.5 4.5 0 004.06 8.235 4.502 4.502 0 001 12.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(CloudIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CodeBracketSquareIcon.js
var require_CodeBracketSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CodeBracketSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function CodeBracketSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.25 2A2.25 2.25 0 002 4.25v11.5A2.25 2.25 0 004.25 18h11.5A2.25 2.25 0 0018 15.75V4.25A2.25 2.25 0 0015.75 2H4.25zm4.03 6.28a.75.75 0 00-1.06-1.06L4.97 9.47a.75.75 0 000 1.06l2.25 2.25a.75.75 0 001.06-1.06L6.56 10l1.72-1.72zm4.5-1.06a.75.75 0 10-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 101.06 1.06l2.25-2.25a.75.75 0 000-1.06l-2.25-2.25z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CodeBracketSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CodeBracketIcon.js
var require_CodeBracketIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CodeBracketIcon.js"(exports, module) {
    var React58 = __require("react");
    function CodeBracketIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6.28 5.22a.75.75 0 010 1.06L2.56 10l3.72 3.72a.75.75 0 01-1.06 1.06L.97 10.53a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 0zm7.44 0a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L17.44 10l-3.72-3.72a.75.75 0 010-1.06zM11.377 2.011a.75.75 0 01.612.867l-2.5 14.5a.75.75 0 01-1.478-.255l2.5-14.5a.75.75 0 01.866-.612z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CodeBracketIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Cog6ToothIcon.js
var require_Cog6ToothIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Cog6ToothIcon.js"(exports, module) {
    var React58 = __require("react");
    function Cog6ToothIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M7.84 1.804A1 1 0 018.82 1h2.36a1 1 0 01.98.804l.331 1.652a6.993 6.993 0 011.929 1.115l1.598-.54a1 1 0 011.186.447l1.18 2.044a1 1 0 01-.205 1.251l-1.267 1.113a7.047 7.047 0 010 2.228l1.267 1.113a1 1 0 01.206 1.25l-1.18 2.045a1 1 0 01-1.187.447l-1.598-.54a6.993 6.993 0 01-1.929 1.115l-.33 1.652a1 1 0 01-.98.804H8.82a1 1 0 01-.98-.804l-.331-1.652a6.993 6.993 0 01-1.929-1.115l-1.598.54a1 1 0 01-1.186-.447l-1.18-2.044a1 1 0 01.205-1.251l1.267-1.114a7.05 7.05 0 010-2.227L1.821 7.773a1 1 0 01-.206-1.25l1.18-2.045a1 1 0 011.187-.447l1.598.54A6.993 6.993 0 017.51 3.456l.33-1.652zM10 13a3 3 0 100-6 3 3 0 000 6z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Cog6ToothIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Cog8ToothIcon.js
var require_Cog8ToothIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Cog8ToothIcon.js"(exports, module) {
    var React58 = __require("react");
    function Cog8ToothIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8.34 1.804A1 1 0 019.32 1h1.36a1 1 0 01.98.804l.295 1.473c.497.144.971.342 1.416.587l1.25-.834a1 1 0 011.262.125l.962.962a1 1 0 01.125 1.262l-.834 1.25c.245.445.443.919.587 1.416l1.473.294a1 1 0 01.804.98v1.361a1 1 0 01-.804.98l-1.473.295a6.95 6.95 0 01-.587 1.416l.834 1.25a1 1 0 01-.125 1.262l-.962.962a1 1 0 01-1.262.125l-1.25-.834a6.953 6.953 0 01-1.416.587l-.294 1.473a1 1 0 01-.98.804H9.32a1 1 0 01-.98-.804l-.295-1.473a6.957 6.957 0 01-1.416-.587l-1.25.834a1 1 0 01-1.262-.125l-.962-.962a1 1 0 01-.125-1.262l.834-1.25a6.957 6.957 0 01-.587-1.416l-1.473-.294A1 1 0 011 10.68V9.32a1 1 0 01.804-.98l1.473-.295c.144-.497.342-.971.587-1.416l-.834-1.25a1 1 0 01.125-1.262l.962-.962A1 1 0 015.38 3.03l1.25.834a6.957 6.957 0 011.416-.587l.294-1.473zM13 10a3 3 0 11-6 0 3 3 0 016 0z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Cog8ToothIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CogIcon.js
var require_CogIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CogIcon.js"(exports, module) {
    var React58 = __require("react");
    function CogIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M13.024 9.25c.47 0 .827-.433.637-.863a4 4 0 00-4.094-2.364c-.468.05-.665.576-.43.984l1.08 1.868a.75.75 0 00.649.375h2.158zM7.84 7.758c-.236-.408-.79-.5-1.068-.12A3.982 3.982 0 006 10c0 .884.287 1.7.772 2.363.278.38.832.287 1.068-.12l1.078-1.868a.75.75 0 000-.75L7.839 7.758zM9.138 12.993c-.235.408-.039.934.43.984a4 4 0 004.094-2.364c.19-.43-.168-.863-.638-.863h-2.158a.75.75 0 00-.65.375l-1.078 1.868z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.13 4.347l.644-1.117a.75.75 0 00-1.299-.75l-.644 1.116a6.954 6.954 0 00-2.081-.556V1.75a.75.75 0 00-1.5 0v1.29a6.954 6.954 0 00-2.081.556L6.525 2.48a.75.75 0 10-1.3.75l.645 1.117A7.04 7.04 0 004.347 5.87L3.23 5.225a.75.75 0 10-.75 1.3l1.116.644A6.954 6.954 0 003.04 9.25H1.75a.75.75 0 000 1.5h1.29c.078.733.27 1.433.556 2.081l-1.116.645a.75.75 0 10.75 1.298l1.117-.644a7.04 7.04 0 001.523 1.523l-.645 1.117a.75.75 0 101.3.75l.644-1.116a6.954 6.954 0 002.081.556v1.29a.75.75 0 001.5 0v-1.29a6.954 6.954 0 002.081-.556l.645 1.116a.75.75 0 001.299-.75l-.645-1.117a7.042 7.042 0 001.523-1.523l1.117.644a.75.75 0 00.75-1.298l-1.116-.645a6.954 6.954 0 00.556-2.081h1.29a.75.75 0 000-1.5h-1.29a6.954 6.954 0 00-.556-2.081l1.116-.644a.75.75 0 00-.75-1.3l-1.117.645a7.04 7.04 0 00-1.524-1.523zM10 4.5a5.475 5.475 0 00-2.781.754A5.527 5.527 0 005.22 7.277 5.475 5.475 0 004.5 10a5.475 5.475 0 00.752 2.777 5.527 5.527 0 002.028 2.004c.802.458 1.73.719 2.72.719a5.474 5.474 0 002.78-.753 5.527 5.527 0 002.001-2.027c.458-.802.719-1.73.719-2.72a5.475 5.475 0 00-.753-2.78 5.528 5.528 0 00-2.028-2.002A5.475 5.475 0 0010 4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CogIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CommandLineIcon.js
var require_CommandLineIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CommandLineIcon.js"(exports, module) {
    var React58 = __require("react");
    function CommandLineIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.25 3A2.25 2.25 0 001 5.25v9.5A2.25 2.25 0 003.25 17h13.5A2.25 2.25 0 0019 14.75v-9.5A2.25 2.25 0 0016.75 3H3.25zm.943 8.752a.75.75 0 01.055-1.06L6.128 9l-1.88-1.693a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 01-1.06-.055zM9.75 10.25a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CommandLineIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ComputerDesktopIcon.js
var require_ComputerDesktopIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ComputerDesktopIcon.js"(exports, module) {
    var React58 = __require("react");
    function ComputerDesktopIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.25A2.25 2.25 0 014.25 2h11.5A2.25 2.25 0 0118 4.25v8.5A2.25 2.25 0 0115.75 15h-3.105a3.501 3.501 0 001.1 1.677A.75.75 0 0113.26 18H6.74a.75.75 0 01-.484-1.323A3.501 3.501 0 007.355 15H4.25A2.25 2.25 0 012 12.75v-8.5zm1.5 0a.75.75 0 01.75-.75h11.5a.75.75 0 01.75.75v7.5a.75.75 0 01-.75.75H4.25a.75.75 0 01-.75-.75v-7.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ComputerDesktopIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CpuChipIcon.js
var require_CpuChipIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CpuChipIcon.js"(exports, module) {
    var React58 = __require("react");
    function CpuChipIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M14 6H6v8h8V6z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.25 3V1.75a.75.75 0 011.5 0V3h1.5V1.75a.75.75 0 011.5 0V3h.5A2.75 2.75 0 0117 5.75v.5h1.25a.75.75 0 010 1.5H17v1.5h1.25a.75.75 0 010 1.5H17v1.5h1.25a.75.75 0 010 1.5H17v.5A2.75 2.75 0 0114.25 17h-.5v1.25a.75.75 0 01-1.5 0V17h-1.5v1.25a.75.75 0 01-1.5 0V17h-1.5v1.25a.75.75 0 01-1.5 0V17h-.5A2.75 2.75 0 013 14.25v-.5H1.75a.75.75 0 010-1.5H3v-1.5H1.75a.75.75 0 010-1.5H3v-1.5H1.75a.75.75 0 010-1.5H3v-.5A2.75 2.75 0 015.75 3h.5V1.75a.75.75 0 011.5 0V3h1.5zM4.5 5.75c0-.69.56-1.25 1.25-1.25h8.5c.69 0 1.25.56 1.25 1.25v8.5c0 .69-.56 1.25-1.25 1.25h-8.5c-.69 0-1.25-.56-1.25-1.25v-8.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CpuChipIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CreditCardIcon.js
var require_CreditCardIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CreditCardIcon.js"(exports, module) {
    var React58 = __require("react");
    function CreditCardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.5 4A1.5 1.5 0 001 5.5V6h18v-.5A1.5 1.5 0 0017.5 4h-15zM19 8.5H1v6A1.5 1.5 0 002.5 16h15a1.5 1.5 0 001.5-1.5v-6zM3 13.25a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75zm4.75-.75a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CreditCardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CubeTransparentIcon.js
var require_CubeTransparentIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CubeTransparentIcon.js"(exports, module) {
    var React58 = __require("react");
    function CubeTransparentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.638 1.093a.75.75 0 01.724 0l2 1.104a.75.75 0 11-.724 1.313L10 2.607l-1.638.903a.75.75 0 11-.724-1.313l2-1.104zM5.403 4.287a.75.75 0 01-.295 1.019l-.805.444.805.444a.75.75 0 01-.724 1.314L3.5 7.02v.73a.75.75 0 01-1.5 0v-2a.75.75 0 01.388-.657l1.996-1.1a.75.75 0 011.019.294zm9.194 0a.75.75 0 011.02-.295l1.995 1.101A.75.75 0 0118 5.75v2a.75.75 0 01-1.5 0v-.73l-.884.488a.75.75 0 11-.724-1.314l.806-.444-.806-.444a.75.75 0 01-.295-1.02zM7.343 8.284a.75.75 0 011.02-.294L10 8.893l1.638-.903a.75.75 0 11.724 1.313l-1.612.89v1.557a.75.75 0 01-1.5 0v-1.557l-1.612-.89a.75.75 0 01-.295-1.019zM2.75 11.5a.75.75 0 01.75.75v1.557l1.608.887a.75.75 0 01-.724 1.314l-1.996-1.101A.75.75 0 012 14.25v-2a.75.75 0 01.75-.75zm14.5 0a.75.75 0 01.75.75v2a.75.75 0 01-.388.657l-1.996 1.1a.75.75 0 11-.724-1.313l1.608-.887V12.25a.75.75 0 01.75-.75zm-7.25 4a.75.75 0 01.75.75v.73l.888-.49a.75.75 0 01.724 1.313l-2 1.104a.75.75 0 01-.724 0l-2-1.104a.75.75 0 11.724-1.313l.888.49v-.73a.75.75 0 01.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CubeTransparentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CubeIcon.js
var require_CubeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CubeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CubeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10.362 1.093a.75.75 0 00-.724 0L2.523 5.018 10 9.143l7.477-4.125-7.115-3.925zM18 6.443l-7.25 4v8.25l6.862-3.786A.75.75 0 0018 14.25V6.443zm-8.75 12.25v-8.25l-7.25-4v7.807a.75.75 0 00.388.657l6.862 3.786z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CubeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CurrencyBangladeshiIcon.js
var require_CurrencyBangladeshiIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CurrencyBangladeshiIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyBangladeshiIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a8 8 0 100 16 8 8 0 000-16zM5.94 5.5c.944-.945 2.56-.276 2.56 1.06V8h5.75a.75.75 0 010 1.5H8.5v4.275c0 .296.144.455.26.499a3.5 3.5 0 004.402-1.77h-.412a.75.75 0 010-1.5h.537c.462 0 .887.21 1.156.556.278.355.383.852.184 1.337a5.001 5.001 0 01-6.4 2.78C7.376 15.353 7 14.512 7 13.774V9.5H5.75a.75.75 0 010-1.5H7V6.56l-.22.22a.75.75 0 11-1.06-1.06l.22-.22z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyBangladeshiIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CurrencyDollarIcon.js
var require_CurrencyDollarIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CurrencyDollarIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyDollarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10.75 10.818v2.614A3.13 3.13 0 0011.888 13c.482-.315.612-.648.612-.875 0-.227-.13-.56-.612-.875a3.13 3.13 0 00-1.138-.432zM8.33 8.62c.053.055.115.11.184.164.208.16.46.284.736.363V6.603a2.45 2.45 0 00-.35.13c-.14.065-.27.143-.386.233-.377.292-.514.627-.514.909 0 .184.058.39.202.592.037.051.08.102.128.152z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-6a.75.75 0 01.75.75v.316a3.78 3.78 0 011.653.713c.426.33.744.74.925 1.2a.75.75 0 01-1.395.55 1.35 1.35 0 00-.447-.563 2.187 2.187 0 00-.736-.363V9.3c.698.093 1.383.32 1.959.696.787.514 1.29 1.27 1.29 2.13 0 .86-.504 1.616-1.29 2.13-.576.377-1.261.603-1.96.696v.299a.75.75 0 11-1.5 0v-.3c-.697-.092-1.382-.318-1.958-.695-.482-.315-.857-.717-1.078-1.188a.75.75 0 111.359-.636c.08.173.245.376.54.569.313.205.706.353 1.138.432v-2.748a3.782 3.782 0 01-1.653-.713C6.9 9.433 6.5 8.681 6.5 7.875c0-.805.4-1.558 1.097-2.096a3.78 3.78 0 011.653-.713V4.75A.75.75 0 0110 4z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyDollarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CurrencyEuroIcon.js
var require_CurrencyEuroIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CurrencyEuroIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyEuroIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.798 7.45c.512-.67 1.135-.95 1.702-.95s1.19.28 1.702.95a.75.75 0 001.192-.91C12.637 5.55 11.596 5 10.5 5s-2.137.55-2.894 1.54A5.205 5.205 0 006.83 8H5.75a.75.75 0 000 1.5h.77a6.333 6.333 0 000 1h-.77a.75.75 0 000 1.5h1.08c.183.528.442 1.023.776 1.46.757.99 1.798 1.54 2.894 1.54s2.137-.55 2.894-1.54a.75.75 0 00-1.192-.91c-.512.67-1.135.95-1.702.95s-1.19-.28-1.702-.95a3.505 3.505 0 01-.343-.55h1.795a.75.75 0 000-1.5H8.026a4.835 4.835 0 010-1h2.224a.75.75 0 000-1.5H8.455c.098-.195.212-.38.343-.55z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyEuroIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CurrencyPoundIcon.js
var require_CurrencyPoundIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CurrencyPoundIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyPoundIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.732 6.232a2.5 2.5 0 013.536 0 .75.75 0 101.06-1.06A4 4 0 006.5 8v.165c0 .364.034.728.1 1.085h-.35a.75.75 0 000 1.5h.737a5.25 5.25 0 01-.367 3.072l-.055.123a.75.75 0 00.848 1.037l1.272-.283a3.493 3.493 0 011.604.021 4.992 4.992 0 002.422 0l.97-.242a.75.75 0 00-.363-1.456l-.971.243a3.491 3.491 0 01-1.694 0 4.992 4.992 0 00-2.258-.038c.19-.811.227-1.651.111-2.477H9.75a.75.75 0 000-1.5H8.136A4.397 4.397 0 018 8.165V8c0-.641.244-1.28.732-1.768z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyPoundIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CurrencyRupeeIcon.js
var require_CurrencyRupeeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CurrencyRupeeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyRupeeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM6 5.75A.75.75 0 016.75 5h6.5a.75.75 0 010 1.5h-2.127c.4.5.683 1.096.807 1.75h1.32a.75.75 0 010 1.5h-1.32a4.003 4.003 0 01-3.404 3.216l1.754 1.754a.75.75 0 01-1.06 1.06l-3-3a.75.75 0 01.53-1.28H8c1.12 0 2.067-.736 2.386-1.75H6.75a.75.75 0 010-1.5h3.636A2.501 2.501 0 008 6.5H6.75A.75.75 0 016 5.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyRupeeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CurrencyYenIcon.js
var require_CurrencyYenIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CurrencyYenIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyYenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7.346 5.294a.75.75 0 00-1.192.912L9.056 10H6.75a.75.75 0 000 1.5h2.5v1h-2.5a.75.75 0 000 1.5h2.5v1.25a.75.75 0 001.5 0V14h2.5a.75.75 0 100-1.5h-2.5v-1h2.5a.75.75 0 100-1.5h-2.306l2.902-3.794a.75.75 0 10-1.192-.912L10 8.765l-2.654-3.47z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyYenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CursorArrowRaysIcon.js
var require_CursorArrowRaysIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CursorArrowRaysIcon.js"(exports, module) {
    var React58 = __require("react");
    function CursorArrowRaysIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 1a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 1zM5.05 3.05a.75.75 0 011.06 0l1.062 1.06A.75.75 0 116.11 5.173L5.05 4.11a.75.75 0 010-1.06zm9.9 0a.75.75 0 010 1.06l-1.06 1.062a.75.75 0 01-1.062-1.061l1.061-1.06a.75.75 0 011.06 0zM3 8a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5A.75.75 0 013 8zm11 0a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5A.75.75 0 0114 8zm-6.828 2.828a.75.75 0 010 1.061L6.11 12.95a.75.75 0 01-1.06-1.06l1.06-1.06a.75.75 0 011.06 0zm3.594-3.317a.75.75 0 00-1.37.364l-.492 6.861a.75.75 0 001.204.65l1.043-.799.985 3.678a.75.75 0 001.45-.388l-.978-3.646 1.292.204a.75.75 0 00.74-1.16l-3.874-5.764z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CursorArrowRaysIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/CursorArrowRippleIcon.js
var require_CursorArrowRippleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/CursorArrowRippleIcon.js"(exports, module) {
    var React58 = __require("react");
    function CursorArrowRippleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6.111 11.89A5.5 5.5 0 1115.501 8 .75.75 0 1017 8a7 7 0 10-11.95 4.95.75.75 0 001.06-1.06zm2.121-5.658a2.5 2.5 0 000 3.536.75.75 0 11-1.06 1.06A4 4 0 1114 8a.75.75 0 01-1.5 0 2.5 2.5 0 00-4.268-1.768zm2.534 1.279a.75.75 0 00-1.37.364l-.492 6.861a.75.75 0 001.204.65l1.043-.799.985 3.678a.75.75 0 001.45-.388l-.978-3.646 1.292.204a.75.75 0 00.74-1.16l-3.874-5.764z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(CursorArrowRippleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DevicePhoneMobileIcon.js
var require_DevicePhoneMobileIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DevicePhoneMobileIcon.js"(exports, module) {
    var React58 = __require("react");
    function DevicePhoneMobileIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M8 16.25a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4 4a3 3 0 013-3h6a3 3 0 013 3v12a3 3 0 01-3 3H7a3 3 0 01-3-3V4zm4-1.5v.75c0 .414.336.75.75.75h2.5a.75.75 0 00.75-.75V2.5h1A1.5 1.5 0 0114.5 4v12a1.5 1.5 0 01-1.5 1.5H7A1.5 1.5 0 015.5 16V4A1.5 1.5 0 017 2.5h1z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DevicePhoneMobileIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DeviceTabletIcon.js
var require_DeviceTabletIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DeviceTabletIcon.js"(exports, module) {
    var React58 = __require("react");
    function DeviceTabletIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5 1a3 3 0 00-3 3v12a3 3 0 003 3h10a3 3 0 003-3V4a3 3 0 00-3-3H5zM3.5 4A1.5 1.5 0 015 2.5h10A1.5 1.5 0 0116.5 4v12a1.5 1.5 0 01-1.5 1.5H5A1.5 1.5 0 013.5 16V4zm5.25 11.5a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DeviceTabletIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentArrowDownIcon.js
var require_DocumentArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm4.75 6.75a.75.75 0 011.5 0v2.546l.943-1.048a.75.75 0 011.114 1.004l-2.25 2.5a.75.75 0 01-1.114 0l-2.25-2.5a.75.75 0 111.114-1.004l.943 1.048V8.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentArrowUpIcon.js
var require_DocumentArrowUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm4.75 11.25a.75.75 0 001.5 0v-2.546l.943 1.048a.75.75 0 101.114-1.004l-2.25-2.5a.75.75 0 00-1.114 0l-2.25 2.5a.75.75 0 101.114 1.004l.943-1.048v2.546z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentChartBarIcon.js
var require_DocumentChartBarIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentChartBarIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentChartBarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13zM13.25 9a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5a.75.75 0 01.75-.75zm-6.5 4a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5a.75.75 0 01.75-.75zm4-1.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentChartBarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentCheckIcon.js
var require_DocumentCheckIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentCheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentCheckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13zm10.857 5.691a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 00-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentCheckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentDuplicateIcon.js
var require_DocumentDuplicateIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentDuplicateIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentDuplicateIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M7 3.5A1.5 1.5 0 018.5 2h3.879a1.5 1.5 0 011.06.44l3.122 3.12A1.5 1.5 0 0117 6.622V12.5a1.5 1.5 0 01-1.5 1.5h-1v-3.379a3 3 0 00-.879-2.121L10.5 5.379A3 3 0 008.379 4.5H7v-1z"
      }), React58.createElement("path", {
        d: "M4.5 6A1.5 1.5 0 003 7.5v9A1.5 1.5 0 004.5 18h7a1.5 1.5 0 001.5-1.5v-5.879a1.5 1.5 0 00-.44-1.06L9.44 6.439A1.5 1.5 0 008.378 6H4.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentDuplicateIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentMagnifyingGlassIcon.js
var require_DocumentMagnifyingGlassIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentMagnifyingGlassIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentMagnifyingGlassIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M8 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm5 5a3 3 0 101.524 5.585l1.196 1.195a.75.75 0 101.06-1.06l-1.195-1.196A3 3 0 009.5 7z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentMagnifyingGlassIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentMinusIcon.js
var require_DocumentMinusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm7.75 9.75a.75.75 0 000-1.5h-4.5a.75.75 0 000 1.5h4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentPlusIcon.js
var require_DocumentPlusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zM10 8a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5A.75.75 0 0110 8z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentTextIcon.js
var require_DocumentTextIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentTextIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentTextIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm2.25 8.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 3a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentTextIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/DocumentIcon.js
var require_DocumentIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/DocumentIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EllipsisHorizontalCircleIcon.js
var require_EllipsisHorizontalCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EllipsisHorizontalCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function EllipsisHorizontalCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm8 1a1 1 0 100-2 1 1 0 000 2zm-3-1a1 1 0 11-2 0 1 1 0 012 0zm7 1a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(EllipsisHorizontalCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EllipsisHorizontalIcon.js
var require_EllipsisHorizontalIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EllipsisHorizontalIcon.js"(exports, module) {
    var React58 = __require("react");
    function EllipsisHorizontalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM8.5 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM15.5 8.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"
      }));
    }
    var ForwardRef = React58.forwardRef(EllipsisHorizontalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EllipsisVerticalIcon.js
var require_EllipsisVerticalIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EllipsisVerticalIcon.js"(exports, module) {
    var React58 = __require("react");
    function EllipsisVerticalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 3a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM10 8.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM11.5 15.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(EllipsisVerticalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EnvelopeOpenIcon.js
var require_EnvelopeOpenIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EnvelopeOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function EnvelopeOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.106 6.447A2 2 0 001 8.237V16a2 2 0 002 2h14a2 2 0 002-2V8.236a2 2 0 00-1.106-1.789l-7-3.5a2 2 0 00-1.788 0l-7 3.5zm1.48 4.007a.75.75 0 00-.671 1.342l5.855 2.928a2.75 2.75 0 002.46 0l5.852-2.926a.75.75 0 10-.67-1.342l-5.853 2.926a1.25 1.25 0 01-1.118 0l-5.856-2.928z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(EnvelopeOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EnvelopeIcon.js
var require_EnvelopeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EnvelopeIcon.js"(exports, module) {
    var React58 = __require("react");
    function EnvelopeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3 4a2 2 0 00-2 2v1.161l8.441 4.221a1.25 1.25 0 001.118 0L19 7.162V6a2 2 0 00-2-2H3z"
      }), React58.createElement("path", {
        d: "M19 8.839l-7.77 3.885a2.75 2.75 0 01-2.46 0L1 8.839V14a2 2 0 002 2h14a2 2 0 002-2V8.839z"
      }));
    }
    var ForwardRef = React58.forwardRef(EnvelopeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ExclamationCircleIcon.js
var require_ExclamationCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ExclamationCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ExclamationCircleIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ExclamationCircleIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ExclamationTriangleIcon.js
var require_ExclamationTriangleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ExclamationTriangleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ExclamationTriangleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ExclamationTriangleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EyeDropperIcon.js
var require_EyeDropperIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EyeDropperIcon.js"(exports, module) {
    var React58 = __require("react");
    function EyeDropperIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M12.1 3.667a3.502 3.502 0 116.782 1.738 3.487 3.487 0 01-.907 1.57 3.495 3.495 0 01-1.617.919L16 7.99V10a.75.75 0 01-.22.53l-.25.25a.75.75 0 01-1.06 0l-.845-.844L7.22 16.34A2.25 2.25 0 015.629 17H5.12a.75.75 0 00-.53.22l-1.56 1.56a.75.75 0 01-1.061 0l-.75-.75a.75.75 0 010-1.06l1.56-1.561a.75.75 0 00.22-.53v-.508c0-.596.237-1.169.659-1.59l6.405-6.406-.844-.845a.75.75 0 010-1.06l.25-.25A.75.75 0 0110 4h2.01l.09-.333zM4.72 13.84l6.405-6.405 1.44 1.439-6.406 6.405a.75.75 0 01-.53.22H5.12c-.258 0-.511.044-.75.129a2.25 2.25 0 00.129-.75v-.508a.75.75 0 01.22-.53z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(EyeDropperIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EyeSlashIcon.js
var require_EyeSlashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EyeSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function EyeSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.258 0-7.894-2.66-9.337-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z"
      }));
    }
    var ForwardRef = React58.forwardRef(EyeSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/EyeIcon.js
var require_EyeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/EyeIcon.js"(exports, module) {
    var React58 = __require("react");
    function EyeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41zM14 10a4 4 0 11-8 0 4 4 0 018 0z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(EyeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FaceFrownIcon.js
var require_FaceFrownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FaceFrownIcon.js"(exports, module) {
    var React58 = __require("react");
    function FaceFrownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm-3.536-3.475a.75.75 0 001.061 0 3.5 3.5 0 014.95 0 .75.75 0 101.06-1.06 5 5 0 00-7.07 0 .75.75 0 000 1.06zM9 8.5c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S7.448 7 8 7s1 .672 1 1.5zm3 1.5c.552 0 1-.672 1-1.5S12.552 7 12 7s-1 .672-1 1.5.448 1.5 1 1.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FaceFrownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FaceSmileIcon.js
var require_FaceSmileIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FaceSmileIcon.js"(exports, module) {
    var React58 = __require("react");
    function FaceSmileIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.536-4.464a.75.75 0 10-1.061-1.061 3.5 3.5 0 01-4.95 0 .75.75 0 00-1.06 1.06 5 5 0 007.07 0zM9 8.5c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S7.448 7 8 7s1 .672 1 1.5zm3 1.5c.552 0 1-.672 1-1.5S12.552 7 12 7s-1 .672-1 1.5.448 1.5 1 1.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FaceSmileIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FilmIcon.js
var require_FilmIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FilmIcon.js"(exports, module) {
    var React58 = __require("react");
    function FilmIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 4.75C1 3.784 1.784 3 2.75 3h14.5c.966 0 1.75.784 1.75 1.75v10.515a1.75 1.75 0 01-1.75 1.75h-1.5c-.078 0-.155-.005-.23-.015H4.48c-.075.01-.152.015-.23.015h-1.5A1.75 1.75 0 011 15.265V4.75zm16.5 7.385V11.01a.25.25 0 00-.25-.25h-1.5a.25.25 0 00-.25.25v1.125c0 .138.112.25.25.25h1.5a.25.25 0 00.25-.25zm0 2.005a.25.25 0 00-.25-.25h-1.5a.25.25 0 00-.25.25v1.125c0 .108.069.2.165.235h1.585a.25.25 0 00.25-.25v-1.11zm-15 1.11v-1.11a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25v1.125a.25.25 0 01-.164.235H2.75a.25.25 0 01-.25-.25zm2-4.24v1.125a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25V11.01a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25zm13-2.005V7.88a.25.25 0 00-.25-.25h-1.5a.25.25 0 00-.25.25v1.125c0 .138.112.25.25.25h1.5a.25.25 0 00.25-.25zM4.25 7.63a.25.25 0 01.25.25v1.125a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25V7.88a.25.25 0 01.25-.25h1.5zm0-3.13a.25.25 0 01.25.25v1.125a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25V4.75a.25.25 0 01.25-.25h1.5zm11.5 1.625a.25.25 0 01-.25-.25V4.75a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25v1.125a.25.25 0 01-.25.25h-1.5zm-9 3.125a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FilmIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FingerPrintIcon.js
var require_FingerPrintIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FingerPrintIcon.js"(exports, module) {
    var React58 = __require("react");
    function FingerPrintIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2.5c-1.31 0-2.526.386-3.546 1.051a.75.75 0 01-.82-1.256A8 8 0 0118 9a22.47 22.47 0 01-1.228 7.351.75.75 0 11-1.417-.49A20.97 20.97 0 0016.5 9 6.5 6.5 0 0010 2.5zM4.333 4.416a.75.75 0 01.218 1.038A6.466 6.466 0 003.5 9a7.966 7.966 0 01-1.293 4.362.75.75 0 01-1.257-.819A6.466 6.466 0 002 9c0-1.61.476-3.11 1.295-4.365a.75.75 0 011.038-.219zM10 6.12a3 3 0 00-3.001 3.041 11.455 11.455 0 01-2.697 7.24.75.75 0 01-1.148-.965A9.957 9.957 0 005.5 9c0-.028.002-.055.004-.082a4.5 4.5 0 018.996.084V9.15l-.005.297a.75.75 0 11-1.5-.034c.003-.11.004-.219.005-.328a3 3 0 00-3-2.965zm0 2.13a.75.75 0 01.75.75c0 3.51-1.187 6.745-3.181 9.323a.75.75 0 11-1.186-.918A13.687 13.687 0 009.25 9a.75.75 0 01.75-.75zm3.529 3.698a.75.75 0 01.584.885 18.883 18.883 0 01-2.257 5.84.75.75 0 11-1.29-.764 17.386 17.386 0 002.078-5.377.75.75 0 01.885-.584z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FingerPrintIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FireIcon.js
var require_FireIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FireIcon.js"(exports, module) {
    var React58 = __require("react");
    function FireIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M13.5 4.938a7 7 0 11-9.006 1.737c.202-.257.59-.218.793.039.278.352.594.672.943.954.332.269.786-.049.773-.476a5.977 5.977 0 01.572-2.759 6.026 6.026 0 012.486-2.665c.247-.14.55-.016.677.238A6.967 6.967 0 0013.5 4.938zM14 12a4 4 0 01-4 4c-1.913 0-3.52-1.398-3.91-3.182-.093-.429.44-.643.814-.413a4.043 4.043 0 001.601.564c.303.038.531-.24.51-.544a5.975 5.975 0 011.315-4.192.447.447 0 01.431-.16A4.001 4.001 0 0114 12z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FireIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FlagIcon.js
var require_FlagIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FlagIcon.js"(exports, module) {
    var React58 = __require("react");
    function FlagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.5 2.75a.75.75 0 00-1.5 0v14.5a.75.75 0 001.5 0v-4.392l1.657-.348a6.449 6.449 0 014.271.572 7.948 7.948 0 005.965.524l2.078-.64A.75.75 0 0018 12.25v-8.5a.75.75 0 00-.904-.734l-2.38.501a7.25 7.25 0 01-4.186-.363l-.502-.2a8.75 8.75 0 00-5.053-.439l-1.475.31V2.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(FlagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FolderArrowDownIcon.js
var require_FolderArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FolderArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.75C2 3.784 2.784 3 3.75 3h4.836c.464 0 .909.184 1.237.513l1.414 1.414a.25.25 0 00.177.073h4.836c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0116.25 17H3.75A1.75 1.75 0 012 15.25V4.75zm8.75 4a.75.75 0 00-1.5 0v2.546l-.943-1.048a.75.75 0 10-1.114 1.004l2.25 2.5a.75.75 0 001.114 0l2.25-2.5a.75.75 0 10-1.114-1.004l-.943 1.048V8.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FolderMinusIcon.js
var require_FolderMinusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FolderMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 4.75C2 3.784 2.784 3 3.75 3h4.836c.464 0 .909.184 1.237.513l1.414 1.414a.25.25 0 00.177.073h4.836c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0116.25 17H3.75A1.75 1.75 0 012 15.25V4.75zm10.25 7a.75.75 0 000-1.5h-4.5a.75.75 0 000 1.5h4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FolderOpenIcon.js
var require_FolderOpenIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FolderOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.75 3A1.75 1.75 0 003 4.75v2.752l.104-.002h13.792c.035 0 .07 0 .104.002V6.75A1.75 1.75 0 0015.25 5h-3.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H4.75zM3.104 9a1.75 1.75 0 00-1.673 2.265l1.385 4.5A1.75 1.75 0 004.488 17h11.023a1.75 1.75 0 001.673-1.235l1.384-4.5A1.75 1.75 0 0016.896 9H3.104z"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FolderPlusIcon.js
var require_FolderPlusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FolderPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.75 3A1.75 1.75 0 002 4.75v10.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0018 15.25v-8.5A1.75 1.75 0 0016.25 5h-4.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H3.75zM10 8a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5A.75.75 0 0110 8z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FolderIcon.js
var require_FolderIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FolderIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.75 3A1.75 1.75 0 002 4.75v3.26a3.235 3.235 0 011.75-.51h12.5c.644 0 1.245.188 1.75.51V6.75A1.75 1.75 0 0016.25 5h-4.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H3.75zM3.75 9A1.75 1.75 0 002 10.75v4.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0018 15.25v-4.5A1.75 1.75 0 0016.25 9H3.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ForwardIcon.js
var require_ForwardIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ForwardIcon.js"(exports, module) {
    var React58 = __require("react");
    function ForwardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z"
      }));
    }
    var ForwardRef = React58.forwardRef(ForwardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/FunnelIcon.js
var require_FunnelIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/FunnelIcon.js"(exports, module) {
    var React58 = __require("react");
    function FunnelIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.628 1.601C5.028 1.206 7.49 1 10 1s4.973.206 7.372.601a.75.75 0 01.628.74v2.288a2.25 2.25 0 01-.659 1.59l-4.682 4.683a2.25 2.25 0 00-.659 1.59v3.037c0 .684-.31 1.33-.844 1.757l-1.937 1.55A.75.75 0 018 18.25v-5.757a2.25 2.25 0 00-.659-1.591L2.659 6.22A2.25 2.25 0 012 4.629V2.34a.75.75 0 01.628-.74z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(FunnelIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GifIcon.js
var require_GifIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GifIcon.js"(exports, module) {
    var React58 = __require("react");
    function GifIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 5.25A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25v9.5A2.25 2.25 0 0116.75 17H3.25A2.25 2.25 0 011 14.75v-9.5zm4.026 2.879C5.356 7.65 5.72 7.5 6 7.5s.643.15.974.629a.75.75 0 001.234-.854C7.66 6.484 6.873 6 6 6c-.873 0-1.66.484-2.208 1.275C3.25 8.059 3 9.048 3 10c0 .952.25 1.941.792 2.725C4.34 13.516 5.127 14 6 14c.873 0 1.66-.484 2.208-1.275a.75.75 0 00.133-.427V10a.75.75 0 00-.75-.75H6.25a.75.75 0 000 1.5h.591v1.295c-.293.342-.6.455-.841.455-.279 0-.643-.15-.974-.629C4.69 11.386 4.5 10.711 4.5 10c0-.711.19-1.386.526-1.871zM10.75 6a.75.75 0 01.75.75v6.5a.75.75 0 01-1.5 0v-6.5a.75.75 0 01.75-.75zm3 0h2.5a.75.75 0 010 1.5H14.5v1.75h.75a.75.75 0 010 1.5h-.75v2.5a.75.75 0 01-1.5 0v-6.5a.75.75 0 01.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(GifIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GiftTopIcon.js
var require_GiftTopIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GiftTopIcon.js"(exports, module) {
    var React58 = __require("react");
    function GiftTopIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.25 3H3.5A1.5 1.5 0 002 4.5v4.75h3.365A2.75 2.75 0 019.25 5.362V3zM2 10.75v4.75A1.5 1.5 0 003.5 17h5.75v-4.876A4.75 4.75 0 015 14.75a.75.75 0 010-1.5 3.251 3.251 0 003.163-2.5H2zM10.75 17h5.75a1.5 1.5 0 001.5-1.5v-4.75h-6.163A3.251 3.251 0 0015 13.25a.75.75 0 010 1.5 4.75 4.75 0 01-4.25-2.626V17zM18 9.25V4.5A1.5 1.5 0 0016.5 3h-5.75v2.362a2.75 2.75 0 013.885 3.888H18zm-4.496-2.755a1.25 1.25 0 00-1.768 0c-.36.359-.526.999-.559 1.697-.01.228-.006.443.004.626.183.01.398.014.626.003.698-.033 1.338-.2 1.697-.559a1.25 1.25 0 000-1.767zm-5.24 0a1.25 1.25 0 00-1.768 1.767c.36.36 1 .526 1.697.56.228.01.443.006.626-.004.01-.183.015-.398.004-.626-.033-.698-.2-1.338-.56-1.697z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(GiftTopIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GiftIcon.js
var require_GiftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GiftIcon.js"(exports, module) {
    var React58 = __require("react");
    function GiftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14 6a2.5 2.5 0 00-4-3 2.5 2.5 0 00-4 3H3.25C2.56 6 2 6.56 2 7.25v.5C2 8.44 2.56 9 3.25 9h6V6h1.5v3h6C17.44 9 18 8.44 18 7.75v-.5C18 6.56 17.44 6 16.75 6H14zm-1-1.5a1 1 0 01-1 1h-1v-1a1 1 0 112 0zm-6 0a1 1 0 001 1h1v-1a1 1 0 00-2 0z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M9.25 10.5H3v4.75A2.75 2.75 0 005.75 18h3.5v-7.5zM10.75 18v-7.5H17v4.75A2.75 2.75 0 0114.25 18h-3.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(GiftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GlobeAltIcon.js
var require_GlobeAltIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GlobeAltIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeAltIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M16.555 5.412a8.028 8.028 0 00-3.503-2.81 14.899 14.899 0 011.663 4.472 8.547 8.547 0 001.84-1.662zM13.326 7.825a13.43 13.43 0 00-2.413-5.773 8.087 8.087 0 00-1.826 0 13.43 13.43 0 00-2.413 5.773A8.473 8.473 0 0010 8.5c1.18 0 2.304-.24 3.326-.675zM6.514 9.376A9.98 9.98 0 0010 10c1.226 0 2.4-.22 3.486-.624a13.54 13.54 0 01-.351 3.759A13.54 13.54 0 0110 13.5c-1.079 0-2.128-.127-3.134-.366a13.538 13.538 0 01-.352-3.758zM5.285 7.074a14.9 14.9 0 011.663-4.471 8.028 8.028 0 00-3.503 2.81c.529.638 1.149 1.199 1.84 1.66zM17.334 6.798a7.973 7.973 0 01.614 4.115 13.47 13.47 0 01-3.178 1.72 15.093 15.093 0 00.174-3.939 10.043 10.043 0 002.39-1.896zM2.666 6.798a10.042 10.042 0 002.39 1.896 15.196 15.196 0 00.174 3.94 13.472 13.472 0 01-3.178-1.72 7.973 7.973 0 01.615-4.115zM10 15c.898 0 1.778-.079 2.633-.23a13.473 13.473 0 01-1.72 3.178 8.099 8.099 0 01-1.826 0 13.47 13.47 0 01-1.72-3.178c.855.151 1.735.23 2.633.23zM14.357 14.357a14.912 14.912 0 01-1.305 3.04 8.027 8.027 0 004.345-4.345c-.953.542-1.971.981-3.04 1.305zM6.948 17.397a8.027 8.027 0 01-4.345-4.345c.953.542 1.971.981 3.04 1.305a14.912 14.912 0 001.305 3.04z"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeAltIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GlobeAmericasIcon.js
var require_GlobeAmericasIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GlobeAmericasIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeAmericasIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-1.5 0a6.5 6.5 0 11-11-4.69v.447a3.5 3.5 0 001.025 2.475L8.293 10 8 10.293a1 1 0 000 1.414l1.06 1.06a1.5 1.5 0 01.44 1.061v.363a1 1 0 00.553.894l.276.139a1 1 0 001.342-.448l1.454-2.908a1.5 1.5 0 00-.281-1.731l-.772-.772a1 1 0 00-1.023-.242l-.384.128a.5.5 0 01-.606-.25l-.296-.592a.481.481 0 01.646-.646l.262.131a1 1 0 00.447.106h.188a1 1 0 00.949-1.316l-.068-.204a.5.5 0 01.149-.538l1.44-1.234A6.492 6.492 0 0116.5 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeAmericasIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GlobeAsiaAustraliaIcon.js
var require_GlobeAsiaAustraliaIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GlobeAsiaAustraliaIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeAsiaAustraliaIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6.5 6.326a6.52 6.52 0 01-1.5.174 6.487 6.487 0 01-5.011-2.36l.49-.98a.423.423 0 01.614-.164l.294.196a.992.992 0 001.491-1.139l-.197-.593a.252.252 0 01.126-.304l1.973-.987a.938.938 0 00.361-1.359.375.375 0 01.239-.576l.125-.025A2.421 2.421 0 0012.327 6.6l.05-.149a1 1 0 00-.242-1.023l-1.489-1.489a.5.5 0 01-.146-.353v-.067a6.5 6.5 0 015.392 9.23 1.398 1.398 0 00-.68-.244l-.566-.566a1.5 1.5 0 00-1.06-.439h-.172a1.5 1.5 0 00-1.06.44l-.593.592a.501.501 0 01-.13.093l-1.578.79a1 1 0 00-.553.894v.191a1 1 0 001 1h.5a.5.5 0 01.5.5v.326z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeAsiaAustraliaIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/GlobeEuropeAfricaIcon.js
var require_GlobeEuropeAfricaIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/GlobeEuropeAfricaIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeEuropeAfricaIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-1.503.204A6.5 6.5 0 117.95 3.83L6.927 5.62a1.453 1.453 0 001.91 2.02l.175-.087a.5.5 0 01.224-.053h.146a.5.5 0 01.447.724l-.028.055a.4.4 0 01-.357.221h-.502a2.26 2.26 0 00-1.88 1.006l-.044.066a2.099 2.099 0 001.085 3.156.58.58 0 01.397.547v1.05a1.175 1.175 0 002.093.734l1.611-2.014c.192-.24.296-.536.296-.842 0-.316.128-.624.353-.85a1.363 1.363 0 00.173-1.716l-.464-.696a.369.369 0 01.527-.499l.343.257c.316.237.738.275 1.091.098a.586.586 0 01.677.11l1.297 1.297z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeEuropeAfricaIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HandRaisedIcon.js
var require_HandRaisedIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HandRaisedIcon.js"(exports, module) {
    var React58 = __require("react");
    function HandRaisedIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M11 2a1 1 0 10-2 0v6.5a.5.5 0 01-1 0V3a1 1 0 10-2 0v5.5a.5.5 0 01-1 0V5a1 1 0 10-2 0v7a7 7 0 1014 0V8a1 1 0 10-2 0v3.5a.5.5 0 01-1 0V3a1 1 0 10-2 0v5.5a.5.5 0 01-1 0V2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(HandRaisedIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HandThumbDownIcon.js
var require_HandThumbDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HandThumbDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function HandThumbDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M18.905 12.75a1.25 1.25 0 01-2.5 0v-7.5a1.25 1.25 0 112.5 0v7.5zM8.905 17v1.3c0 .268-.14.526-.395.607A2 2 0 015.905 17c0-.995.182-1.948.514-2.826.204-.54-.166-1.174-.744-1.174h-2.52c-1.242 0-2.26-1.01-2.146-2.247.193-2.08.652-4.082 1.341-5.974C2.752 3.678 3.833 3 5.005 3h3.192a3 3 0 011.342.317l2.733 1.366A3 3 0 0013.613 5h1.292v7h-.963c-.684 0-1.258.482-1.612 1.068a4.012 4.012 0 01-2.165 1.73c-.433.143-.854.386-1.012.814-.16.432-.248.9-.248 1.388z"
      }));
    }
    var ForwardRef = React58.forwardRef(HandThumbDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HandThumbUpIcon.js
var require_HandThumbUpIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HandThumbUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function HandThumbUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M1 8.25a1.25 1.25 0 112.5 0v7.5a1.25 1.25 0 11-2.5 0v-7.5zM11 3V1.7c0-.268.14-.526.395-.607A2 2 0 0114 3c0 .995-.182 1.948-.514 2.826-.204.54.166 1.174.744 1.174h2.52c1.243 0 2.261 1.01 2.146 2.247a23.864 23.864 0 01-1.341 5.974C17.153 16.323 16.072 17 14.9 17h-3.192a3 3 0 01-1.341-.317l-2.734-1.366A3 3 0 006.292 15H5V8h.963c.685 0 1.258-.483 1.612-1.068a4.011 4.011 0 012.166-1.73c.432-.143.853-.386 1.011-.814.16-.432.248-.9.248-1.388z"
      }));
    }
    var ForwardRef = React58.forwardRef(HandThumbUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HashtagIcon.js
var require_HashtagIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HashtagIcon.js"(exports, module) {
    var React58 = __require("react");
    function HashtagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.493 2.853a.75.75 0 00-1.486-.205L7.545 6H4.198a.75.75 0 000 1.5h3.14l-.69 5H3.302a.75.75 0 000 1.5h3.14l-.435 3.148a.75.75 0 001.486.205L7.955 14h2.986l-.434 3.148a.75.75 0 001.486.205L12.456 14h3.346a.75.75 0 000-1.5h-3.14l.69-5h3.346a.75.75 0 000-1.5h-3.14l.435-3.147a.75.75 0 00-1.486-.205L12.045 6H9.059l.434-3.147zM8.852 7.5l-.69 5h2.986l.69-5H8.852z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(HashtagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HeartIcon.js
var require_HeartIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HeartIcon.js"(exports, module) {
    var React58 = __require("react");
    function HeartIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M9.653 16.915l-.005-.003-.019-.01a20.759 20.759 0 01-1.162-.682 22.045 22.045 0 01-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 018-2.828A4.5 4.5 0 0118 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 01-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 01-.69.001l-.002-.001z"
      }));
    }
    var ForwardRef = React58.forwardRef(HeartIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HomeModernIcon.js
var require_HomeModernIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HomeModernIcon.js"(exports, module) {
    var React58 = __require("react");
    function HomeModernIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M14.916 2.404a.75.75 0 01-.32 1.012l-.596.31V17a1 1 0 01-1 1h-2.26a.75.75 0 01-.75-.75v-3.5a.75.75 0 00-.75-.75H6.75a.75.75 0 00-.75.75v3.5a.75.75 0 01-.75.75h-3.5a.75.75 0 010-1.5H2V9.957a.75.75 0 01-.596-1.372L2 8.275V5.75a.75.75 0 011.5 0v1.745l10.404-5.41a.75.75 0 011.012.32zM15.861 8.57a.75.75 0 01.736-.025l1.999 1.04A.75.75 0 0118 10.957V16.5h.25a.75.75 0 110 1.5h-2a.75.75 0 01-.75-.75V9.21a.75.75 0 01.361-.64z"
      }));
    }
    var ForwardRef = React58.forwardRef(HomeModernIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/HomeIcon.js
var require_HomeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/HomeIcon.js"(exports, module) {
    var React58 = __require("react");
    function HomeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(HomeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/IdentificationIcon.js
var require_IdentificationIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/IdentificationIcon.js"(exports, module) {
    var React58 = __require("react");
    function IdentificationIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 6a3 3 0 013-3h12a3 3 0 013 3v8a3 3 0 01-3 3H4a3 3 0 01-3-3V6zm4 1.5a2 2 0 114 0 2 2 0 01-4 0zm2 3a4 4 0 00-3.665 2.395.75.75 0 00.416 1A8.98 8.98 0 007 14.5a8.98 8.98 0 003.249-.604.75.75 0 00.416-1.001A4.001 4.001 0 007 10.5zm5-3.75a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm0 6.5a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm.75-4a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(IdentificationIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/InboxArrowDownIcon.js
var require_InboxArrowDownIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/InboxArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function InboxArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 2a.75.75 0 01.75.75v5.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0L6.2 7.26a.75.75 0 111.1-1.02l1.95 2.1V2.75A.75.75 0 0110 2z"
      }), React58.createElement("path", {
        d: "M5.273 4.5a1.25 1.25 0 00-1.205.918l-1.523 5.52c-.006.02-.01.041-.015.062H6a1 1 0 01.894.553l.448.894a1 1 0 00.894.553h3.438a1 1 0 00.86-.49l.606-1.02A1 1 0 0114 11h3.47a1.318 1.318 0 00-.015-.062l-1.523-5.52a1.25 1.25 0 00-1.205-.918h-.977a.75.75 0 010-1.5h.977a2.75 2.75 0 012.651 2.019l1.523 5.52c.066.239.099.485.099.732V15a2 2 0 01-2 2H3a2 2 0 01-2-2v-3.73c0-.246.033-.492.099-.73l1.523-5.521A2.75 2.75 0 015.273 3h.977a.75.75 0 010 1.5h-.977z"
      }));
    }
    var ForwardRef = React58.forwardRef(InboxArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/InboxStackIcon.js
var require_InboxStackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/InboxStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function InboxStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1.045 6.954a2.75 2.75 0 01.217-.678L2.53 3.58A2.75 2.75 0 015.019 2h9.962a2.75 2.75 0 012.488 1.58l1.27 2.696c.101.216.174.444.216.678A1 1 0 0119 7.25v1.5a2.75 2.75 0 01-2.75 2.75H3.75A2.75 2.75 0 011 8.75v-1.5a1 1 0 01.045-.296zm2.843-2.736A1.25 1.25 0 015.02 3.5h9.962c.484 0 .925.28 1.13.718l.957 2.032H14a1 1 0 00-.86.49l-.606 1.02a1 1 0 01-.86.49H8.236a1 1 0 01-.894-.553l-.448-.894A1 1 0 006 6.25H2.932l.956-2.032z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M1 14a1 1 0 011-1h4a1 1 0 01.894.553l.448.894a1 1 0 00.894.553h3.438a1 1 0 00.86-.49l.606-1.02A1 1 0 0114 13h4a1 1 0 011 1v2a2 2 0 01-2 2H3a2 2 0 01-2-2v-2z"
      }));
    }
    var ForwardRef = React58.forwardRef(InboxStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/InboxIcon.js
var require_InboxIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/InboxIcon.js"(exports, module) {
    var React58 = __require("react");
    function InboxIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 11.27c0-.246.033-.492.099-.73l1.523-5.521A2.75 2.75 0 015.273 3h9.454a2.75 2.75 0 012.651 2.019l1.523 5.52c.066.239.099.485.099.732V15a2 2 0 01-2 2H3a2 2 0 01-2-2v-3.73zm3.068-5.852A1.25 1.25 0 015.273 4.5h9.454a1.25 1.25 0 011.205.918l1.523 5.52c.006.02.01.041.015.062H14a1 1 0 00-.86.49l-.606 1.02a1 1 0 01-.86.49H8.236a1 1 0 01-.894-.553l-.448-.894A1 1 0 006 11H2.53l.015-.062 1.523-5.52z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(InboxIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/InformationCircleIcon.js
var require_InformationCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/InformationCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function InformationCircleIcon3({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(InformationCircleIcon3);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/KeyIcon.js
var require_KeyIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/KeyIcon.js"(exports, module) {
    var React58 = __require("react");
    function KeyIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8 7a5 5 0 113.61 4.804l-1.903 1.903A1 1 0 019 14H8v1a1 1 0 01-1 1H6v1a1 1 0 01-1 1H3a1 1 0 01-1-1v-2a1 1 0 01.293-.707L8.196 8.39A5.002 5.002 0 018 7zm5-3a.75.75 0 000 1.5A1.5 1.5 0 0114.5 7 .75.75 0 0016 7a3 3 0 00-3-3z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(KeyIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/LanguageIcon.js
var require_LanguageIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/LanguageIcon.js"(exports, module) {
    var React58 = __require("react");
    function LanguageIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M7.75 2.75a.75.75 0 00-1.5 0v1.258a32.987 32.987 0 00-3.599.278.75.75 0 10.198 1.487A31.545 31.545 0 018.7 5.545 19.381 19.381 0 017 9.56a19.418 19.418 0 01-1.002-2.05.75.75 0 00-1.384.577 20.935 20.935 0 001.492 2.91 19.613 19.613 0 01-3.828 4.154.75.75 0 10.945 1.164A21.116 21.116 0 007 12.331c.095.132.192.262.29.391a.75.75 0 001.194-.91c-.204-.266-.4-.538-.59-.815a20.888 20.888 0 002.333-5.332c.31.031.618.068.924.108a.75.75 0 00.198-1.487 32.832 32.832 0 00-3.599-.278V2.75z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M13 8a.75.75 0 01.671.415l4.25 8.5a.75.75 0 11-1.342.67L15.787 16h-5.573l-.793 1.585a.75.75 0 11-1.342-.67l4.25-8.5A.75.75 0 0113 8zm2.037 6.5L13 10.427 10.964 14.5h4.073z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(LanguageIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/LifebuoyIcon.js
var require_LifebuoyIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/LifebuoyIcon.js"(exports, module) {
    var React58 = __require("react");
    function LifebuoyIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M7.171 4.146l1.947 2.466a3.514 3.514 0 011.764 0l1.947-2.466a6.52 6.52 0 00-5.658 0zm8.683 3.025l-2.466 1.947c.15.578.15 1.186 0 1.764l2.466 1.947a6.52 6.52 0 000-5.658zm-3.025 8.683l-1.947-2.466c-.578.15-1.186.15-1.764 0l-1.947 2.466a6.52 6.52 0 005.658 0zM4.146 12.83l2.466-1.947a3.514 3.514 0 010-1.764L4.146 7.171a6.52 6.52 0 000 5.658zM5.63 3.297a8.01 8.01 0 018.738 0 8.031 8.031 0 012.334 2.334 8.01 8.01 0 010 8.738 8.033 8.033 0 01-2.334 2.334 8.01 8.01 0 01-8.738 0 8.032 8.032 0 01-2.334-2.334 8.01 8.01 0 010-8.738A8.03 8.03 0 015.63 3.297zm5.198 4.882a2.008 2.008 0 00-2.243.407 1.994 1.994 0 00-.407 2.243 1.993 1.993 0 00.992.992 2.008 2.008 0 002.243-.407c.176-.175.31-.374.407-.585a2.008 2.008 0 00-.407-2.243 1.993 1.993 0 00-.585-.407z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(LifebuoyIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/LightBulbIcon.js
var require_LightBulbIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/LightBulbIcon.js"(exports, module) {
    var React58 = __require("react");
    function LightBulbIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 1a6 6 0 00-3.815 10.631C7.237 12.5 8 13.443 8 14.456v.644a.75.75 0 00.572.729 6.016 6.016 0 002.856 0A.75.75 0 0012 15.1v-.644c0-1.013.762-1.957 1.815-2.825A6 6 0 0010 1zM8.863 17.414a.75.75 0 00-.226 1.483 9.066 9.066 0 002.726 0 .75.75 0 00-.226-1.483 7.553 7.553 0 01-2.274 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(LightBulbIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/LinkIcon.js
var require_LinkIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/LinkIcon.js"(exports, module) {
    var React58 = __require("react");
    function LinkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M12.232 4.232a2.5 2.5 0 013.536 3.536l-1.225 1.224a.75.75 0 001.061 1.06l1.224-1.224a4 4 0 00-5.656-5.656l-3 3a4 4 0 00.225 5.865.75.75 0 00.977-1.138 2.5 2.5 0 01-.142-3.667l3-3z"
      }), React58.createElement("path", {
        d: "M11.603 7.963a.75.75 0 00-.977 1.138 2.5 2.5 0 01.142 3.667l-3 3a2.5 2.5 0 01-3.536-3.536l1.225-1.224a.75.75 0 00-1.061-1.06l-1.224 1.224a4 4 0 105.656 5.656l3-3a4 4 0 00-.225-5.865z"
      }));
    }
    var ForwardRef = React58.forwardRef(LinkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ListBulletIcon.js
var require_ListBulletIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ListBulletIcon.js"(exports, module) {
    var React58 = __require("react");
    function ListBulletIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6 4.75A.75.75 0 016.75 4h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 4.75zM6 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 10zm0 5.25a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75a.75.75 0 01-.75-.75zM1.99 4.75a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 15.25a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 10a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ListBulletIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/LockClosedIcon.js
var require_LockClosedIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/LockClosedIcon.js"(exports, module) {
    var React58 = __require("react");
    function LockClosedIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(LockClosedIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/LockOpenIcon.js
var require_LockOpenIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/LockOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function LockOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.5 1A4.5 4.5 0 0010 5.5V9H3a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-1.5V5.5a3 3 0 116 0v2.75a.75.75 0 001.5 0V5.5A4.5 4.5 0 0014.5 1z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(LockOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MagnifyingGlassCircleIcon.js
var require_MagnifyingGlassCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MagnifyingGlassCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.5 9a2.5 2.5 0 115 0 2.5 2.5 0 01-5 0z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM9 5a4 4 0 102.248 7.309l1.472 1.471a.75.75 0 101.06-1.06l-1.471-1.472A4 4 0 009 5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MagnifyingGlassMinusIcon.js
var require_MagnifyingGlassMinusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MagnifyingGlassMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.75 8.25a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9 2a7 7 0 104.391 12.452l3.329 3.328a.75.75 0 101.06-1.06l-3.328-3.329A7 7 0 009 2zM3.5 9a5.5 5.5 0 1111 0 5.5 5.5 0 01-11 0z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MagnifyingGlassPlusIcon.js
var require_MagnifyingGlassPlusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MagnifyingGlassPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M9 6a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5A.75.75 0 019 6z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9zm7-5.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MagnifyingGlassIcon.js
var require_MagnifyingGlassIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MagnifyingGlassIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MapPinIcon.js
var require_MapPinIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MapPinIcon.js"(exports, module) {
    var React58 = __require("react");
    function MapPinIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.69 18.933l.003.001C9.89 19.02 10 19 10 19s.11.02.308-.066l.002-.001.006-.003.018-.008a5.741 5.741 0 00.281-.14c.186-.096.446-.24.757-.433.62-.384 1.445-.966 2.274-1.765C15.302 14.988 17 12.493 17 9A7 7 0 103 9c0 3.492 1.698 5.988 3.355 7.584a13.731 13.731 0 002.273 1.765 11.842 11.842 0 00.976.544l.062.029.018.008.006.003zM10 11.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MapPinIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MapIcon.js
var require_MapIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MapIcon.js"(exports, module) {
    var React58 = __require("react");
    function MapIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8.157 2.175a1.5 1.5 0 00-1.147 0l-4.084 1.69A1.5 1.5 0 002 5.251v10.877a1.5 1.5 0 002.074 1.386l3.51-1.453 4.26 1.763a1.5 1.5 0 001.146 0l4.083-1.69A1.5 1.5 0 0018 14.748V3.873a1.5 1.5 0 00-2.073-1.386l-3.51 1.452-4.26-1.763zM7.58 5a.75.75 0 01.75.75v6.5a.75.75 0 01-1.5 0v-6.5A.75.75 0 017.58 5zm5.59 2.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MapIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MegaphoneIcon.js
var require_MegaphoneIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MegaphoneIcon.js"(exports, module) {
    var React58 = __require("react");
    function MegaphoneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M13.92 3.845a19.361 19.361 0 01-6.3 1.98C6.765 5.942 5.89 6 5 6a4 4 0 00-.504 7.969 15.974 15.974 0 001.271 3.341c.397.77 1.342 1 2.05.59l.867-.5c.726-.42.94-1.321.588-2.021-.166-.33-.315-.666-.448-1.004 1.8.358 3.511.964 5.096 1.78A17.964 17.964 0 0015 10c0-2.161-.381-4.234-1.08-6.155zM15.243 3.097A19.456 19.456 0 0116.5 10c0 2.431-.445 4.758-1.257 6.904l-.03.077a.75.75 0 001.401.537 20.902 20.902 0 001.312-5.745 1.999 1.999 0 000-3.545 20.902 20.902 0 00-1.312-5.745.75.75 0 00-1.4.537l.029.077z"
      }));
    }
    var ForwardRef = React58.forwardRef(MegaphoneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MicrophoneIcon.js
var require_MicrophoneIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MicrophoneIcon.js"(exports, module) {
    var React58 = __require("react");
    function MicrophoneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M7 4a3 3 0 016 0v6a3 3 0 11-6 0V4z"
      }), React58.createElement("path", {
        d: "M5.5 9.643a.75.75 0 00-1.5 0V10c0 3.06 2.29 5.585 5.25 5.954V17.5h-1.5a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-1.5v-1.546A6.001 6.001 0 0016 10v-.357a.75.75 0 00-1.5 0V10a4.5 4.5 0 01-9 0v-.357z"
      }));
    }
    var ForwardRef = React58.forwardRef(MicrophoneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MinusCircleIcon.js
var require_MinusCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MinusCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function MinusCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM6.75 9.25a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MinusCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MinusSmallIcon.js
var require_MinusSmallIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MinusSmallIcon.js"(exports, module) {
    var React58 = __require("react");
    function MinusSmallIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.75 9.25a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(MinusSmallIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MinusIcon.js
var require_MinusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function MinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MoonIcon.js
var require_MoonIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MoonIcon.js"(exports, module) {
    var React58 = __require("react");
    function MoonIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M7.455 2.004a.75.75 0 01.26.77 7 7 0 009.958 7.967.75.75 0 011.067.853A8.5 8.5 0 116.647 1.921a.75.75 0 01.808.083z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MoonIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/MusicalNoteIcon.js
var require_MusicalNoteIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/MusicalNoteIcon.js"(exports, module) {
    var React58 = __require("react");
    function MusicalNoteIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M17.721 1.599a.75.75 0 01.279.584v11.29a2.25 2.25 0 01-1.774 2.198l-2.041.442a2.216 2.216 0 01-.938-4.333l2.662-.576a.75.75 0 00.591-.734V6.112l-8 1.73v7.684a2.25 2.25 0 01-1.774 2.2l-2.042.44a2.216 2.216 0 11-.935-4.33l2.659-.574A.75.75 0 007 12.53V4.237a.75.75 0 01.591-.733l9.5-2.054a.75.75 0 01.63.149z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(MusicalNoteIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/NewspaperIcon.js
var require_NewspaperIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/NewspaperIcon.js"(exports, module) {
    var React58 = __require("react");
    function NewspaperIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.5A1.5 1.5 0 013.5 2h9A1.5 1.5 0 0114 3.5v11.75A2.75 2.75 0 0016.75 18h-12A2.75 2.75 0 012 15.25V3.5zm3.75 7a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zm0 3a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM5 5.75A.75.75 0 015.75 5h4.5a.75.75 0 01.75.75v2.5a.75.75 0 01-.75.75h-4.5A.75.75 0 015 8.25v-2.5z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M16.5 6.5h-1v8.75a1.25 1.25 0 102.5 0V8a1.5 1.5 0 00-1.5-1.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(NewspaperIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/NoSymbolIcon.js
var require_NoSymbolIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/NoSymbolIcon.js"(exports, module) {
    var React58 = __require("react");
    function NoSymbolIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.965 4.904l9.131 9.131a6.5 6.5 0 00-9.131-9.131zm8.07 10.192L4.904 5.965a6.5 6.5 0 009.131 9.131zM4.343 4.343a8 8 0 1111.314 11.314A8 8 0 014.343 4.343z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(NoSymbolIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PaintBrushIcon.js
var require_PaintBrushIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PaintBrushIcon.js"(exports, module) {
    var React58 = __require("react");
    function PaintBrushIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M15.993 1.385a1.87 1.87 0 012.623 2.622l-4.03 5.27a12.749 12.749 0 01-4.237 3.562 4.508 4.508 0 00-3.188-3.188 12.75 12.75 0 013.562-4.236l5.27-4.03zM6 11a3 3 0 00-3 3 .5.5 0 01-.72.45.75.75 0 00-1.035.931A4.001 4.001 0 009 14.004V14a3.01 3.01 0 00-1.66-2.685A2.99 2.99 0 006 11z"
      }));
    }
    var ForwardRef = React58.forwardRef(PaintBrushIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PaperAirplaneIcon.js
var require_PaperAirplaneIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PaperAirplaneIcon.js"(exports, module) {
    var React58 = __require("react");
    function PaperAirplaneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.105 2.289a.75.75 0 00-.826.95l1.414 4.925A1.5 1.5 0 005.135 9.25h6.115a.75.75 0 010 1.5H5.135a1.5 1.5 0 00-1.442 1.086l-1.414 4.926a.75.75 0 00.826.95 28.896 28.896 0 0015.293-7.154.75.75 0 000-1.115A28.897 28.897 0 003.105 2.289z"
      }));
    }
    var ForwardRef = React58.forwardRef(PaperAirplaneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PaperClipIcon.js
var require_PaperClipIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PaperClipIcon.js"(exports, module) {
    var React58 = __require("react");
    function PaperClipIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15.621 4.379a3 3 0 00-4.242 0l-7 7a3 3 0 004.241 4.243h.001l.497-.5a.75.75 0 011.064 1.057l-.498.501-.002.002a4.5 4.5 0 01-6.364-6.364l7-7a4.5 4.5 0 016.368 6.36l-3.455 3.553A2.625 2.625 0 119.52 9.52l3.45-3.451a.75.75 0 111.061 1.06l-3.45 3.451a1.125 1.125 0 001.587 1.595l3.454-3.553a3 3 0 000-4.242z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PaperClipIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PauseCircleIcon.js
var require_PauseCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PauseCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function PauseCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm5-2.25A.75.75 0 017.75 7h.5a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75v-4.5zm4 0a.75.75 0 01.75-.75h.5a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75v-4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PauseCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PauseIcon.js
var require_PauseIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PauseIcon.js"(exports, module) {
    var React58 = __require("react");
    function PauseIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M5.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75A.75.75 0 007.25 3h-1.5zM12.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75a.75.75 0 00-.75-.75h-1.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(PauseIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PencilSquareIcon.js
var require_PencilSquareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PencilSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function PencilSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M5.433 13.917l1.262-3.155A4 4 0 017.58 9.42l6.92-6.918a2.121 2.121 0 013 3l-6.92 6.918c-.383.383-.84.685-1.343.886l-3.154 1.262a.5.5 0 01-.65-.65z"
      }), React58.createElement("path", {
        d: "M3.5 5.75c0-.69.56-1.25 1.25-1.25H10A.75.75 0 0010 3H4.75A2.75 2.75 0 002 5.75v9.5A2.75 2.75 0 004.75 18h9.5A2.75 2.75 0 0017 15.25V10a.75.75 0 00-1.5 0v5.25c0 .69-.56 1.25-1.25 1.25h-9.5c-.69 0-1.25-.56-1.25-1.25v-9.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(PencilSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PencilIcon.js
var require_PencilIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PencilIcon.js"(exports, module) {
    var React58 = __require("react");
    function PencilIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2.695 14.763l-1.262 3.154a.5.5 0 00.65.65l3.155-1.262a4 4 0 001.343-.885L17.5 5.5a2.121 2.121 0 00-3-3L3.58 13.42a4 4 0 00-.885 1.343z"
      }));
    }
    var ForwardRef = React58.forwardRef(PencilIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PhoneArrowDownLeftIcon.js
var require_PhoneArrowDownLeftIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PhoneArrowDownLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneArrowDownLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.5 2A1.5 1.5 0 002 3.5V5c0 1.149.15 2.263.43 3.326a13.022 13.022 0 009.244 9.244c1.063.28 2.177.43 3.326.43h1.5a1.5 1.5 0 001.5-1.5v-1.148a1.5 1.5 0 00-1.175-1.465l-3.223-.716a1.5 1.5 0 00-1.767 1.052l-.267.933c-.117.41-.555.643-.95.48a11.542 11.542 0 01-6.254-6.254c-.163-.395.07-.833.48-.95l.933-.267a1.5 1.5 0 001.052-1.767l-.716-3.223A1.5 1.5 0 004.648 2H3.5zM16.72 2.22a.75.75 0 111.06 1.06L14.56 6.5h2.69a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75v-4.5a.75.75 0 011.5 0v2.69l3.22-3.22z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneArrowDownLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PhoneArrowUpRightIcon.js
var require_PhoneArrowUpRightIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PhoneArrowUpRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneArrowUpRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.5 2A1.5 1.5 0 002 3.5V5c0 1.149.15 2.263.43 3.326a13.022 13.022 0 009.244 9.244c1.063.28 2.177.43 3.326.43h1.5a1.5 1.5 0 001.5-1.5v-1.148a1.5 1.5 0 00-1.175-1.465l-3.223-.716a1.5 1.5 0 00-1.767 1.052l-.267.933c-.117.41-.555.643-.95.48a11.542 11.542 0 01-6.254-6.254c-.163-.395.07-.833.48-.95l.933-.267a1.5 1.5 0 001.052-1.767l-.716-3.223A1.5 1.5 0 004.648 2H3.5zM16.5 4.56l-3.22 3.22a.75.75 0 11-1.06-1.06l3.22-3.22h-2.69a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V4.56z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneArrowUpRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PhoneXMarkIcon.js
var require_PhoneXMarkIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PhoneXMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneXMarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 2A1.5 1.5 0 002 3.5V5c0 1.149.15 2.263.43 3.326a13.022 13.022 0 009.244 9.244c1.063.28 2.177.43 3.326.43h1.5a1.5 1.5 0 001.5-1.5v-1.148a1.5 1.5 0 00-1.175-1.465l-3.223-.716a1.5 1.5 0 00-1.767 1.052l-.267.933c-.117.41-.555.643-.95.48a11.542 11.542 0 01-6.254-6.254c-.163-.395.07-.833.48-.95l.933-.267a1.5 1.5 0 001.052-1.767l-.716-3.223A1.5 1.5 0 004.648 2H3.5zm9.78.22a.75.75 0 10-1.06 1.06L13.94 5l-1.72 1.72a.75.75 0 001.06 1.06L15 6.06l1.72 1.72a.75.75 0 101.06-1.06L16.06 5l1.72-1.72a.75.75 0 00-1.06-1.06L15 3.94l-1.72-1.72z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneXMarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PhoneIcon.js
var require_PhoneIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PhoneIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 3.5A1.5 1.5 0 013.5 2h1.148a1.5 1.5 0 011.465 1.175l.716 3.223a1.5 1.5 0 01-1.052 1.767l-.933.267c-.41.117-.643.555-.48.95a11.542 11.542 0 006.254 6.254c.395.163.833-.07.95-.48l.267-.933a1.5 1.5 0 011.767-1.052l3.223.716A1.5 1.5 0 0118 15.352V16.5a1.5 1.5 0 01-1.5 1.5H15c-1.149 0-2.263-.15-3.326-.43A13.022 13.022 0 012.43 8.326 13.019 13.019 0 012 5V3.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PhotoIcon.js
var require_PhotoIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PhotoIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhotoIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 5.25A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25v9.5A2.25 2.25 0 0116.75 17H3.25A2.25 2.25 0 011 14.75v-9.5zm1.5 5.81v3.69c0 .414.336.75.75.75h13.5a.75.75 0 00.75-.75v-2.69l-2.22-2.219a.75.75 0 00-1.06 0l-1.91 1.909.47.47a.75.75 0 11-1.06 1.06L6.53 8.091a.75.75 0 00-1.06 0l-2.97 2.97zM12 7a1 1 0 11-2 0 1 1 0 012 0z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PhotoIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PlayCircleIcon.js
var require_PlayCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PlayCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlayCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.39-2.908a.75.75 0 01.766.027l3.5 2.25a.75.75 0 010 1.262l-3.5 2.25A.75.75 0 018 12.25v-4.5a.75.75 0 01.39-.658z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PlayCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PlayPauseIcon.js
var require_PlayPauseIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PlayPauseIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlayPauseIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M12.75 4a.75.75 0 00-.75.75v10.5c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V4.75a.75.75 0 00-.75-.75h-.5zM17.75 4a.75.75 0 00-.75.75v10.5c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V4.75a.75.75 0 00-.75-.75h-.5zM3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.906a1.5 1.5 0 000-2.552L3.288 4.819z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlayPauseIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PlayIcon.js
var require_PlayIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PlayIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlayIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlayIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PlusCircleIcon.js
var require_PlusCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PlusCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlusCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.75-11.25a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PlusCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PlusSmallIcon.js
var require_PlusSmallIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PlusSmallIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlusSmallIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10.75 6.75a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlusSmallIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PlusIcon.js
var require_PlusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlusIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlusIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PowerIcon.js
var require_PowerIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PowerIcon.js"(exports, module) {
    var React58 = __require("react");
    function PowerIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a.75.75 0 01.75.75v7.5a.75.75 0 01-1.5 0v-7.5A.75.75 0 0110 2zM5.404 4.343a.75.75 0 010 1.06 6.5 6.5 0 109.192 0 .75.75 0 111.06-1.06 8 8 0 11-11.313 0 .75.75 0 011.06 0z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PowerIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PresentationChartBarIcon.js
var require_PresentationChartBarIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PresentationChartBarIcon.js"(exports, module) {
    var React58 = __require("react");
    function PresentationChartBarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2.75A.75.75 0 011.75 2h16.5a.75.75 0 010 1.5H18v8.75A2.75 2.75 0 0115.25 15h-1.072l.798 3.06a.75.75 0 01-1.452.38L13.41 18H6.59l-.114.44a.75.75 0 01-1.452-.38L5.823 15H4.75A2.75 2.75 0 012 12.25V3.5h-.25A.75.75 0 011 2.75zM7.373 15l-.391 1.5h6.037l-.392-1.5H7.373zM13.25 5a.75.75 0 01.75.75v5.5a.75.75 0 01-1.5 0v-5.5a.75.75 0 01.75-.75zm-6.5 4a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 016.75 9zm4-1.25a.75.75 0 00-1.5 0v3.5a.75.75 0 001.5 0v-3.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PresentationChartBarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PresentationChartLineIcon.js
var require_PresentationChartLineIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PresentationChartLineIcon.js"(exports, module) {
    var React58 = __require("react");
    function PresentationChartLineIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 2.75A.75.75 0 011.75 2h16.5a.75.75 0 010 1.5H18v8.75A2.75 2.75 0 0115.25 15h-1.072l.798 3.06a.75.75 0 01-1.452.38L13.41 18H6.59l-.114.44a.75.75 0 01-1.452-.38L5.823 15H4.75A2.75 2.75 0 012 12.25V3.5h-.25A.75.75 0 011 2.75zM7.373 15l-.391 1.5h6.037l-.392-1.5H7.373zm7.49-8.931a.75.75 0 01-.175 1.046 19.326 19.326 0 00-3.398 3.098.75.75 0 01-1.097.04L8.5 8.561l-2.22 2.22A.75.75 0 115.22 9.72l2.75-2.75a.75.75 0 011.06 0l1.664 1.663a20.786 20.786 0 013.122-2.74.75.75 0 011.046.176z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PresentationChartLineIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PrinterIcon.js
var require_PrinterIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PrinterIcon.js"(exports, module) {
    var React58 = __require("react");
    function PrinterIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5 2.75C5 1.784 5.784 1 6.75 1h6.5c.966 0 1.75.784 1.75 1.75v3.552c.377.046.752.097 1.126.153A2.212 2.212 0 0118 8.653v4.097A2.25 2.25 0 0115.75 15h-.241l.305 1.984A1.75 1.75 0 0114.084 19H5.915a1.75 1.75 0 01-1.73-2.016L4.492 15H4.25A2.25 2.25 0 012 12.75V8.653c0-1.082.775-2.034 1.874-2.198.374-.056.75-.107 1.127-.153L5 6.25v-3.5zm8.5 3.397a41.533 41.533 0 00-7 0V2.75a.25.25 0 01.25-.25h6.5a.25.25 0 01.25.25v3.397zM6.608 12.5a.25.25 0 00-.247.212l-.693 4.5a.25.25 0 00.247.288h8.17a.25.25 0 00.246-.288l-.692-4.5a.25.25 0 00-.247-.212H6.608z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(PrinterIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/PuzzlePieceIcon.js
var require_PuzzlePieceIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/PuzzlePieceIcon.js"(exports, module) {
    var React58 = __require("react");
    function PuzzlePieceIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M12 4.467c0-.405.262-.75.559-1.027.276-.257.441-.584.441-.94 0-.828-.895-1.5-2-1.5s-2 .672-2 1.5c0 .362.171.694.456.953.29.265.544.6.544.994a.968.968 0 01-1.024.974 39.655 39.655 0 01-3.014-.306.75.75 0 00-.847.847c.14.993.242 1.999.306 3.014A.968.968 0 014.447 10c-.393 0-.729-.253-.994-.544C3.194 9.17 2.862 9 2.5 9 1.672 9 1 9.895 1 11s.672 2 1.5 2c.356 0 .683-.165.94-.441.276-.297.622-.559 1.027-.559a.997.997 0 011.004 1.03 39.747 39.747 0 01-.319 3.734.75.75 0 00.64.842c1.05.146 2.111.252 3.184.318A.97.97 0 0010 16.948c0-.394-.254-.73-.545-.995C9.171 15.693 9 15.362 9 15c0-.828.895-1.5 2-1.5s2 .672 2 1.5c0 .356-.165.683-.441.94-.297.276-.559.622-.559 1.027a.998.998 0 001.03 1.005c1.337-.05 2.659-.162 3.961-.337a.75.75 0 00.644-.644c.175-1.302.288-2.624.337-3.961A.998.998 0 0016.967 12c-.405 0-.75.262-1.027.559-.257.276-.584.441-.94.441-.828 0-1.5-.895-1.5-2s.672-2 1.5-2c.362 0 .694.17.953.455.265.291.601.545.995.545a.97.97 0 00.976-1.024 41.159 41.159 0 00-.318-3.184.75.75 0 00-.842-.64c-1.228.164-2.473.271-3.734.319A.997.997 0 0112 4.467z"
      }));
    }
    var ForwardRef = React58.forwardRef(PuzzlePieceIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/QrCodeIcon.js
var require_QrCodeIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/QrCodeIcon.js"(exports, module) {
    var React58 = __require("react");
    function QrCodeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.75 2A1.75 1.75 0 002 3.75v3.5C2 8.216 2.784 9 3.75 9h3.5A1.75 1.75 0 009 7.25v-3.5A1.75 1.75 0 007.25 2h-3.5zM3.5 3.75a.25.25 0 01.25-.25h3.5a.25.25 0 01.25.25v3.5a.25.25 0 01-.25.25h-3.5a.25.25 0 01-.25-.25v-3.5zM3.75 11A1.75 1.75 0 002 12.75v3.5c0 .966.784 1.75 1.75 1.75h3.5A1.75 1.75 0 009 16.25v-3.5A1.75 1.75 0 007.25 11h-3.5zm-.25 1.75a.25.25 0 01.25-.25h3.5a.25.25 0 01.25.25v3.5a.25.25 0 01-.25.25h-3.5a.25.25 0 01-.25-.25v-3.5zm7.5-9c0-.966.784-1.75 1.75-1.75h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0116.25 9h-3.5A1.75 1.75 0 0111 7.25v-3.5zm1.75-.25a.25.25 0 00-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 00.25-.25v-3.5a.25.25 0 00-.25-.25h-3.5zm-7.26 1a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V5.5a1 1 0 00-1-1h-.01zm9 0a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V5.5a1 1 0 00-1-1h-.01zm-9 9a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1v-.01a1 1 0 00-1-1h-.01zm9 0a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1v-.01a1 1 0 00-1-1h-.01zm-3.5-1.5a1 1 0 011-1H12a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V12zm6-1a1 1 0 00-1 1v.01a1 1 0 001 1H17a1 1 0 001-1V12a1 1 0 00-1-1h-.01zm-1 6a1 1 0 011-1H17a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V17zm-4-1a1 1 0 00-1 1v.01a1 1 0 001 1H12a1 1 0 001-1V17a1 1 0 00-1-1h-.01z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(QrCodeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/QuestionMarkCircleIcon.js
var require_QuestionMarkCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/QuestionMarkCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function QuestionMarkCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zM8.94 6.94a.75.75 0 11-1.061-1.061 3 3 0 112.871 5.026v.345a.75.75 0 01-1.5 0v-.5c0-.72.57-1.172 1.081-1.287A1.5 1.5 0 108.94 6.94zM10 15a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(QuestionMarkCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/QueueListIcon.js
var require_QueueListIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/QueueListIcon.js"(exports, module) {
    var React58 = __require("react");
    function QueueListIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2 4.5A2.5 2.5 0 014.5 2h11a2.5 2.5 0 010 5h-11A2.5 2.5 0 012 4.5zM2.75 9.083a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2.75 12.663a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2.75 16.25a.75.75 0 000 1.5h14.5a.75.75 0 100-1.5H2.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(QueueListIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/RadioIcon.js
var require_RadioIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/RadioIcon.js"(exports, module) {
    var React58 = __require("react");
    function RadioIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M17.45 3.473a.75.75 0 10-.4-1.446L5.313 5.265c-.84.096-1.671.217-2.495.362A2.212 2.212 0 001 7.817v7.933A2.25 2.25 0 003.25 18h13.5A2.25 2.25 0 0019 15.75V7.816c0-1.06-.745-2-1.817-2.189a41.124 41.124 0 00-5.406-.589l5.673-1.565zM16 9.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM14.5 16a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-9.26-5a.75.75 0 01.75-.75H6a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V11zm2.75-.75a.75.75 0 00-.75.75v.01c0 .415.336.75.75.75H8a.75.75 0 00.75-.75V11a.75.75 0 00-.75-.75h-.01zm-1.75-1.5A.75.75 0 016.99 8H7a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm3.583.42a.75.75 0 00-1.06 0l-.007.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.06 0l.007-.007a.75.75 0 000-1.061l-.007-.007zm.427 2.08A.75.75 0 0111 12v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V12a.75.75 0 01.75-.75h.01zm-.42 3.584a.75.75 0 000-1.061l-.007-.007a.75.75 0 00-1.06 0l-.007.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.06 0l.008-.007zm-3.59.416a.75.75 0 01.75-.75H7a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm-1.013-1.484a.75.75 0 00-1.06 0l-.008.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.061 0l.007-.007a.75.75 0 000-1.061l-.007-.007zM3.75 11.25a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V12a.75.75 0 01.75-.75h.01zm1.484-1.012a.75.75 0 000-1.061l-.007-.007a.75.75 0 00-1.06 0l-.007.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.06 0l.007-.007zM7.24 13a.75.75 0 01.75-.75H8a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V13zm-1.25-.75a.75.75 0 00-.75.75v.01c0 .415.336.75.75.75H6a.75.75 0 00.75-.75V13a.75.75 0 00-.75-.75h-.01z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(RadioIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ReceiptPercentIcon.js
var require_ReceiptPercentIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ReceiptPercentIcon.js"(exports, module) {
    var React58 = __require("react");
    function ReceiptPercentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.93 1.31a41.401 41.401 0 0110.14 0C16.194 1.45 17 2.414 17 3.517V18.25a.75.75 0 01-1.075.676l-2.8-1.344-2.8 1.344a.75.75 0 01-.65 0l-2.8-1.344-2.8 1.344A.75.75 0 013 18.25V3.517c0-1.103.806-2.068 1.93-2.207zm8.85 5.97a.75.75 0 00-1.06-1.06l-6.5 6.5a.75.75 0 101.06 1.06l6.5-6.5zM9 8a1 1 0 11-2 0 1 1 0 012 0zm3 5a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ReceiptPercentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ReceiptRefundIcon.js
var require_ReceiptRefundIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ReceiptRefundIcon.js"(exports, module) {
    var React58 = __require("react");
    function ReceiptRefundIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.93 1.31a41.401 41.401 0 0110.14 0C16.194 1.45 17 2.414 17 3.517V18.25a.75.75 0 01-1.075.676l-2.8-1.344-2.8 1.344a.75.75 0 01-.65 0l-2.8-1.344-2.8 1.344A.75.75 0 013 18.25V3.517c0-1.103.806-2.068 1.93-2.207zm4.822 4.997a.75.75 0 10-1.004-1.114l-2.5 2.25a.75.75 0 000 1.114l2.5 2.25a.75.75 0 001.004-1.114L8.704 8.75h1.921a1.875 1.875 0 010 3.75.75.75 0 000 1.5 3.375 3.375 0 100-6.75h-1.92l1.047-.943z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ReceiptRefundIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/RectangleGroupIcon.js
var require_RectangleGroupIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/RectangleGroupIcon.js"(exports, module) {
    var React58 = __require("react");
    function RectangleGroupIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2.5 3A1.5 1.5 0 001 4.5v4A1.5 1.5 0 002.5 10h6A1.5 1.5 0 0010 8.5v-4A1.5 1.5 0 008.5 3h-6zm11 2A1.5 1.5 0 0012 6.5v7a1.5 1.5 0 001.5 1.5h4a1.5 1.5 0 001.5-1.5v-7A1.5 1.5 0 0017.5 5h-4zm-10 7A1.5 1.5 0 002 13.5v2A1.5 1.5 0 003.5 17h6a1.5 1.5 0 001.5-1.5v-2A1.5 1.5 0 009.5 12h-6z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(RectangleGroupIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/RectangleStackIcon.js
var require_RectangleStackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/RectangleStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function RectangleStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M5.127 3.502L5.25 3.5h9.5c.041 0 .082 0 .123.002A2.251 2.251 0 0012.75 2h-5.5a2.25 2.25 0 00-2.123 1.502zM1 10.25A2.25 2.25 0 013.25 8h13.5A2.25 2.25 0 0119 10.25v5.5A2.25 2.25 0 0116.75 18H3.25A2.25 2.25 0 011 15.75v-5.5zM3.25 6.5c-.04 0-.082 0-.123.002A2.25 2.25 0 015.25 5h9.5c.98 0 1.814.627 2.123 1.502a3.819 3.819 0 00-.123-.002H3.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(RectangleStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/RocketLaunchIcon.js
var require_RocketLaunchIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/RocketLaunchIcon.js"(exports, module) {
    var React58 = __require("react");
    function RocketLaunchIcon3({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.606 12.97a.75.75 0 01-.134 1.051 2.494 2.494 0 00-.93 2.437 2.494 2.494 0 002.437-.93.75.75 0 111.186.918 3.995 3.995 0 01-4.482 1.332.75.75 0 01-.461-.461 3.994 3.994 0 011.332-4.482.75.75 0 011.052.134z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.752 12A13.07 13.07 0 008 14.248v4.002c0 .414.336.75.75.75a5 5 0 004.797-6.414 12.984 12.984 0 005.45-10.848.75.75 0 00-.735-.735 12.984 12.984 0 00-10.849 5.45A5 5 0 001 11.25c.001.414.337.75.751.75h4.002zM13 9a2 2 0 100-4 2 2 0 000 4z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(RocketLaunchIcon3);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/RssIcon.js
var require_RssIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/RssIcon.js"(exports, module) {
    var React58 = __require("react");
    function RssIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"
      }), React58.createElement("path", {
        d: "M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(RssIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ScaleIcon.js
var require_ScaleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ScaleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ScaleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 2a.75.75 0 01.75.75v.258a33.186 33.186 0 016.668.83.75.75 0 01-.336 1.461 31.28 31.28 0 00-1.103-.232l1.702 7.545a.75.75 0 01-.387.832A4.981 4.981 0 0115 14c-.825 0-1.606-.2-2.294-.556a.75.75 0 01-.387-.832l1.77-7.849a31.743 31.743 0 00-3.339-.254v11.505a20.01 20.01 0 013.78.501.75.75 0 11-.339 1.462A18.558 18.558 0 0010 17.5c-1.442 0-2.845.165-4.191.477a.75.75 0 01-.338-1.462 20.01 20.01 0 013.779-.501V4.509c-1.129.026-2.243.112-3.34.254l1.771 7.85a.75.75 0 01-.387.83A4.98 4.98 0 015 14a4.98 4.98 0 01-2.294-.556.75.75 0 01-.387-.832L4.02 5.067c-.37.07-.738.148-1.103.232a.75.75 0 01-.336-1.462 32.845 32.845 0 016.668-.829V2.75A.75.75 0 0110 2zM5 7.543L3.92 12.33a3.499 3.499 0 002.16 0L5 7.543zm10 0l-1.08 4.787a3.498 3.498 0 002.16 0L15 7.543z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ScaleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ScissorsIcon.js
var require_ScissorsIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ScissorsIcon.js"(exports, module) {
    var React58 = __require("react");
    function ScissorsIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1.469 3.75a3.5 3.5 0 005.617 4.11l.883.51c.025.092.147.116.21.043a3.75 3.75 0 01.5-.484c.286-.23.3-.709-.018-.892l-.825-.477A3.501 3.501 0 001.47 3.75zm2.03 3.482a2 2 0 112-3.464 2 2 0 01-2 3.464zM9.956 8.322a2.75 2.75 0 00-1.588 1.822L7.97 11.63l-.884.51a3.501 3.501 0 10.75 1.3l10.68-6.166a.75.75 0 00-.182-1.374l-.703-.189a2.75 2.75 0 00-1.78.123L9.955 8.322zM2.768 15.5a2 2 0 113.464-2 2 2 0 01-3.464 2z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M12.52 11.89a.5.5 0 00.056.894l3.274 1.381a2.75 2.75 0 001.78.123l.704-.188a.75.75 0 00.18-1.374l-3.47-2.004a.5.5 0 00-.5 0L12.52 11.89z"
      }));
    }
    var ForwardRef = React58.forwardRef(ScissorsIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ServerStackIcon.js
var require_ServerStackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ServerStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function ServerStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.464 3.162A2 2 0 016.28 2h7.44a2 2 0 011.816 1.162l1.154 2.5c.067.145.115.291.145.438A3.508 3.508 0 0016 6H4c-.288 0-.568.035-.835.1.03-.147.078-.293.145-.438l1.154-2.5z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 9.5a2 2 0 012-2h12a2 2 0 110 4H4a2 2 0 01-2-2zm13.24 0a.75.75 0 01.75-.75H16a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V9.5zm-2.25-.75a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 00.75-.75V9.5a.75.75 0 00-.75-.75h-.01zM2 15a2 2 0 012-2h12a2 2 0 110 4H4a2 2 0 01-2-2zm13.24 0a.75.75 0 01.75-.75H16a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V15zm-2.25-.75a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 00.75-.75V15a.75.75 0 00-.75-.75h-.01z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ServerStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ServerIcon.js
var require_ServerIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ServerIcon.js"(exports, module) {
    var React58 = __require("react");
    function ServerIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.632 3.533A2 2 0 016.577 2h6.846a2 2 0 011.945 1.533l1.976 8.234A3.489 3.489 0 0016 11.5H4c-.476 0-.93.095-1.344.267l1.976-8.234z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4 13a2 2 0 100 4h12a2 2 0 100-4H4zm11.24 2a.75.75 0 01.75-.75H16a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V15zm-2.25-.75a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 00.75-.75V15a.75.75 0 00-.75-.75h-.01z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ServerIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ShareIcon.js
var require_ShareIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ShareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M13 4.5a2.5 2.5 0 11.702 1.737L6.97 9.604a2.518 2.518 0 010 .792l6.733 3.367a2.5 2.5 0 11-.671 1.341l-6.733-3.367a2.5 2.5 0 110-3.475l6.733-3.366A2.52 2.52 0 0113 4.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ShieldCheckIcon.js
var require_ShieldCheckIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ShieldCheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShieldCheckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M9.661 2.237a.531.531 0 01.678 0 11.947 11.947 0 007.078 2.749.5.5 0 01.479.425c.069.52.104 1.05.104 1.59 0 5.162-3.26 9.563-7.834 11.256a.48.48 0 01-.332 0C5.26 16.564 2 12.163 2 7c0-.538.035-1.069.104-1.589a.5.5 0 01.48-.425 11.947 11.947 0 007.077-2.75zm4.196 5.954a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ShieldCheckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ShieldExclamationIcon.js
var require_ShieldExclamationIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ShieldExclamationIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShieldExclamationIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10.339 2.237a.532.532 0 00-.678 0 11.947 11.947 0 01-7.078 2.75.5.5 0 00-.479.425A12.11 12.11 0 002 7c0 5.163 3.26 9.564 7.834 11.257a.48.48 0 00.332 0C14.74 16.564 18 12.163 18 7.001c0-.54-.035-1.07-.104-1.59a.5.5 0 00-.48-.425 11.947 11.947 0 01-7.077-2.75zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ShieldExclamationIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ShoppingBagIcon.js
var require_ShoppingBagIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ShoppingBagIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShoppingBagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M6 5v1H4.667a1.75 1.75 0 00-1.743 1.598l-.826 9.5A1.75 1.75 0 003.84 19H16.16a1.75 1.75 0 001.743-1.902l-.826-9.5A1.75 1.75 0 0015.333 6H14V5a4 4 0 00-8 0zm4-2.5A2.5 2.5 0 007.5 5v1h5V5A2.5 2.5 0 0010 2.5zM7.5 10a2.5 2.5 0 005 0V8.75a.75.75 0 011.5 0V10a4 4 0 01-8 0V8.75a.75.75 0 011.5 0V10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(ShoppingBagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ShoppingCartIcon.js
var require_ShoppingCartIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ShoppingCartIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShoppingCartIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M1 1.75A.75.75 0 011.75 1h1.628a1.75 1.75 0 011.734 1.51L5.18 3a65.25 65.25 0 0113.36 1.412.75.75 0 01.58.875 48.645 48.645 0 01-1.618 6.2.75.75 0 01-.712.513H6a2.503 2.503 0 00-2.292 1.5H17.25a.75.75 0 010 1.5H2.76a.75.75 0 01-.748-.807 4.002 4.002 0 012.716-3.486L3.626 2.716a.25.25 0 00-.248-.216H1.75A.75.75 0 011 1.75zM6 17.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15.5 19a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShoppingCartIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SignalSlashIcon.js
var require_SignalSlashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SignalSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function SignalSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2.22 2.22a.75.75 0 011.06 0l6.783 6.782a1 1 0 01.935.935l6.782 6.783a.75.75 0 11-1.06 1.06l-6.783-6.782a1 1 0 01-.935-.935L2.22 3.28a.75.75 0 010-1.06zM3.636 16.364a9.004 9.004 0 01-1.39-10.936L3.349 6.53a7.503 7.503 0 001.348 8.773.75.75 0 01-1.061 1.061zM6.464 13.536a5 5 0 01-1.213-5.103l1.262 1.262a3.493 3.493 0 001.012 2.78.75.75 0 01-1.06 1.06zM16.364 3.636a9.004 9.004 0 011.39 10.937l-1.103-1.104a7.503 7.503 0 00-1.348-8.772.75.75 0 111.061-1.061zM13.536 6.464a5 5 0 011.213 5.103l-1.262-1.262a3.493 3.493 0 00-1.012-2.78.75.75 0 011.06-1.06z"
      }));
    }
    var ForwardRef = React58.forwardRef(SignalSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SignalIcon.js
var require_SignalIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SignalIcon.js"(exports, module) {
    var React58 = __require("react");
    function SignalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M16.364 3.636a.75.75 0 00-1.06 1.06 7.5 7.5 0 010 10.607.75.75 0 001.06 1.061 9 9 0 000-12.728zM4.697 4.697a.75.75 0 00-1.061-1.06 9 9 0 000 12.727.75.75 0 101.06-1.06 7.5 7.5 0 010-10.607z"
      }), React58.createElement("path", {
        d: "M12.475 6.465a.75.75 0 011.06 0 5 5 0 010 7.07.75.75 0 11-1.06-1.06 3.5 3.5 0 000-4.95.75.75 0 010-1.06zM7.525 6.465a.75.75 0 010 1.06 3.5 3.5 0 000 4.95.75.75 0 01-1.06 1.06 5 5 0 010-7.07.75.75 0 011.06 0zM11 10a1 1 0 11-2 0 1 1 0 012 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(SignalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SparklesIcon.js
var require_SparklesIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SparklesIcon.js"(exports, module) {
    var React58 = __require("react");
    function SparklesIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M15.98 1.804a1 1 0 00-1.96 0l-.24 1.192a1 1 0 01-.784.785l-1.192.238a1 1 0 000 1.962l1.192.238a1 1 0 01.785.785l.238 1.192a1 1 0 001.962 0l.238-1.192a1 1 0 01.785-.785l1.192-.238a1 1 0 000-1.962l-1.192-.238a1 1 0 01-.785-.785l-.238-1.192zM6.949 5.684a1 1 0 00-1.898 0l-.683 2.051a1 1 0 01-.633.633l-2.051.683a1 1 0 000 1.898l2.051.684a1 1 0 01.633.632l.683 2.051a1 1 0 001.898 0l.683-2.051a1 1 0 01.633-.633l2.051-.683a1 1 0 000-1.898l-2.051-.683a1 1 0 01-.633-.633L6.95 5.684zM13.949 13.684a1 1 0 00-1.898 0l-.184.551a1 1 0 01-.632.633l-.551.183a1 1 0 000 1.898l.551.183a1 1 0 01.633.633l.183.551a1 1 0 001.898 0l.184-.551a1 1 0 01.632-.633l.551-.183a1 1 0 000-1.898l-.551-.184a1 1 0 01-.633-.632l-.183-.551z"
      }));
    }
    var ForwardRef = React58.forwardRef(SparklesIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SpeakerWaveIcon.js
var require_SpeakerWaveIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SpeakerWaveIcon.js"(exports, module) {
    var React58 = __require("react");
    function SpeakerWaveIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 3.75a.75.75 0 00-1.264-.546L4.703 7H3.167a.75.75 0 00-.7.48A6.985 6.985 0 002 10c0 .887.165 1.737.468 2.52.111.29.39.48.7.48h1.535l4.033 3.796A.75.75 0 0010 16.25V3.75zM15.95 5.05a.75.75 0 00-1.06 1.061 5.5 5.5 0 010 7.778.75.75 0 001.06 1.06 7 7 0 000-9.899z"
      }), React58.createElement("path", {
        d: "M13.829 7.172a.75.75 0 00-1.061 1.06 2.5 2.5 0 010 3.536.75.75 0 001.06 1.06 4 4 0 000-5.656z"
      }));
    }
    var ForwardRef = React58.forwardRef(SpeakerWaveIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SpeakerXMarkIcon.js
var require_SpeakerXMarkIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SpeakerXMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function SpeakerXMarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M9.547 3.062A.75.75 0 0110 3.75v12.5a.75.75 0 01-1.264.546L4.703 13H3.167a.75.75 0 01-.7-.48A6.985 6.985 0 012 10c0-.887.165-1.737.468-2.52a.75.75 0 01.7-.48h1.535l4.033-3.796a.75.75 0 01.811-.142zM13.28 7.22a.75.75 0 10-1.06 1.06L13.94 10l-1.72 1.72a.75.75 0 001.06 1.06L15 11.06l1.72 1.72a.75.75 0 101.06-1.06L16.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L15 8.94l-1.72-1.72z"
      }));
    }
    var ForwardRef = React58.forwardRef(SpeakerXMarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Square2StackIcon.js
var require_Square2StackIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Square2StackIcon.js"(exports, module) {
    var React58 = __require("react");
    function Square2StackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2 4.25A2.25 2.25 0 014.25 2h6.5A2.25 2.25 0 0113 4.25V5.5H9.25A3.75 3.75 0 005.5 9.25V13H4.25A2.25 2.25 0 012 10.75v-6.5z"
      }), React58.createElement("path", {
        d: "M9.25 7A2.25 2.25 0 007 9.25v6.5A2.25 2.25 0 009.25 18h6.5A2.25 2.25 0 0018 15.75v-6.5A2.25 2.25 0 0015.75 7h-6.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(Square2StackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Square3Stack3DIcon.js
var require_Square3Stack3DIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Square3Stack3DIcon.js"(exports, module) {
    var React58 = __require("react");
    function Square3Stack3DIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.196 12.87l-.825.483a.75.75 0 000 1.294l7.25 4.25a.75.75 0 00.758 0l7.25-4.25a.75.75 0 000-1.294l-.825-.484-5.666 3.322a2.25 2.25 0 01-2.276 0L3.196 12.87z"
      }), React58.createElement("path", {
        d: "M3.196 8.87l-.825.483a.75.75 0 000 1.294l7.25 4.25a.75.75 0 00.758 0l7.25-4.25a.75.75 0 000-1.294l-.825-.484-5.666 3.322a2.25 2.25 0 01-2.276 0L3.196 8.87z"
      }), React58.createElement("path", {
        d: "M10.38 1.103a.75.75 0 00-.76 0l-7.25 4.25a.75.75 0 000 1.294l7.25 4.25a.75.75 0 00.76 0l7.25-4.25a.75.75 0 000-1.294l-7.25-4.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(Square3Stack3DIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/Squares2X2Icon.js
var require_Squares2X2Icon = __commonJS({
  "node_modules/@heroicons/react/20/solid/Squares2X2Icon.js"(exports, module) {
    var React58 = __require("react");
    function Squares2X2Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M4.25 2A2.25 2.25 0 002 4.25v2.5A2.25 2.25 0 004.25 9h2.5A2.25 2.25 0 009 6.75v-2.5A2.25 2.25 0 006.75 2h-2.5zm0 9A2.25 2.25 0 002 13.25v2.5A2.25 2.25 0 004.25 18h2.5A2.25 2.25 0 009 15.75v-2.5A2.25 2.25 0 006.75 11h-2.5zm9-9A2.25 2.25 0 0011 4.25v2.5A2.25 2.25 0 0013.25 9h2.5A2.25 2.25 0 0018 6.75v-2.5A2.25 2.25 0 0015.75 2h-2.5zm0 9A2.25 2.25 0 0011 13.25v2.5A2.25 2.25 0 0013.25 18h2.5A2.25 2.25 0 0018 15.75v-2.5A2.25 2.25 0 0015.75 11h-2.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(Squares2X2Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SquaresPlusIcon.js
var require_SquaresPlusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SquaresPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function SquaresPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M2 4.25A2.25 2.25 0 014.25 2h2.5A2.25 2.25 0 019 4.25v2.5A2.25 2.25 0 016.75 9h-2.5A2.25 2.25 0 012 6.75v-2.5zM2 13.25A2.25 2.25 0 014.25 11h2.5A2.25 2.25 0 019 13.25v2.5A2.25 2.25 0 016.75 18h-2.5A2.25 2.25 0 012 15.75v-2.5zM11 4.25A2.25 2.25 0 0113.25 2h2.5A2.25 2.25 0 0118 4.25v2.5A2.25 2.25 0 0115.75 9h-2.5A2.25 2.25 0 0111 6.75v-2.5zM15.25 11.75a.75.75 0 00-1.5 0v2h-2a.75.75 0 000 1.5h2v2a.75.75 0 001.5 0v-2h2a.75.75 0 000-1.5h-2v-2z"
      }));
    }
    var ForwardRef = React58.forwardRef(SquaresPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/StarIcon.js
var require_StarIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/StarIcon.js"(exports, module) {
    var React58 = __require("react");
    function StarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(StarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/StopCircleIcon.js
var require_StopCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/StopCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function StopCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm5-2.25A.75.75 0 017.75 7h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-4.5a.75.75 0 01-.75-.75v-4.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(StopCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/StopIcon.js
var require_StopIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/StopIcon.js"(exports, module) {
    var React58 = __require("react");
    function StopIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M5.25 3A2.25 2.25 0 003 5.25v9.5A2.25 2.25 0 005.25 17h9.5A2.25 2.25 0 0017 14.75v-9.5A2.25 2.25 0 0014.75 3h-9.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(StopIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SunIcon.js
var require_SunIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SunIcon.js"(exports, module) {
    var React58 = __require("react");
    function SunIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 2a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 2zM10 15a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 15zM10 7a3 3 0 100 6 3 3 0 000-6zM15.657 5.404a.75.75 0 10-1.06-1.06l-1.061 1.06a.75.75 0 001.06 1.06l1.06-1.06zM6.464 14.596a.75.75 0 10-1.06-1.06l-1.06 1.06a.75.75 0 001.06 1.06l1.06-1.06zM18 10a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 0118 10zM5 10a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 015 10zM14.596 15.657a.75.75 0 001.06-1.06l-1.06-1.061a.75.75 0 10-1.06 1.06l1.06 1.06zM5.404 6.464a.75.75 0 001.06-1.06l-1.06-1.06a.75.75 0 10-1.061 1.06l1.06 1.06z"
      }));
    }
    var ForwardRef = React58.forwardRef(SunIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/SwatchIcon.js
var require_SwatchIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/SwatchIcon.js"(exports, module) {
    var React58 = __require("react");
    function SwatchIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 2A1.5 1.5 0 002 3.5V15a3 3 0 106 0V3.5A1.5 1.5 0 006.5 2h-3zm11.753 6.99L9.5 14.743V6.257l1.51-1.51a1.5 1.5 0 012.122 0l2.121 2.121a1.5 1.5 0 010 2.122zM8.364 18H16.5a1.5 1.5 0 001.5-1.5v-3a1.5 1.5 0 00-1.5-1.5h-2.136l-6 6zM5 16a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(SwatchIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TableCellsIcon.js
var require_TableCellsIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TableCellsIcon.js"(exports, module) {
    var React58 = __require("react");
    function TableCellsIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M.99 5.24A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25l.01 9.5A2.25 2.25 0 0116.76 17H3.26A2.267 2.267 0 011 14.74l-.01-9.5zm8.26 9.52v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75v.615c0 .414.336.75.75.75h5.373a.75.75 0 00.627-.74zm1.5 0a.75.75 0 00.627.74h5.373a.75.75 0 00.75-.75v-.615a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75v.625zm6.75-3.63v-.625a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75v.625c0 .414.336.75.75.75h5.25a.75.75 0 00.75-.75zm-8.25 0v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75v.625c0 .414.336.75.75.75H8.5a.75.75 0 00.75-.75zM17.5 7.5v-.625a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75V7.5c0 .414.336.75.75.75h5.25a.75.75 0 00.75-.75zm-8.25 0v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75V7.5c0 .414.336.75.75.75H8.5a.75.75 0 00.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(TableCellsIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TagIcon.js
var require_TagIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TagIcon.js"(exports, module) {
    var React58 = __require("react");
    function TagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M5.5 3A2.5 2.5 0 003 5.5v2.879a2.5 2.5 0 00.732 1.767l6.5 6.5a2.5 2.5 0 003.536 0l2.878-2.878a2.5 2.5 0 000-3.536l-6.5-6.5A2.5 2.5 0 008.38 3H5.5zM6 7a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(TagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TicketIcon.js
var require_TicketIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TicketIcon.js"(exports, module) {
    var React58 = __require("react");
    function TicketIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M13 3v1.27a.75.75 0 001.5 0V3h2.25A2.25 2.25 0 0119 5.25v2.628a.75.75 0 01-.5.707 1.5 1.5 0 000 2.83c.3.106.5.39.5.707v2.628A2.25 2.25 0 0116.75 17H14.5v-1.27a.75.75 0 00-1.5 0V17H3.25A2.25 2.25 0 011 14.75v-2.628c0-.318.2-.601.5-.707a1.5 1.5 0 000-2.83.75.75 0 01-.5-.707V5.25A2.25 2.25 0 013.25 3H13zm1.5 4.396a.75.75 0 00-1.5 0v1.042a.75.75 0 001.5 0V7.396zm0 4.167a.75.75 0 00-1.5 0v1.041a.75.75 0 001.5 0v-1.041zM6 10.75a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zm0 2.5a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(TicketIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TrashIcon.js
var require_TrashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TrashIcon.js"(exports, module) {
    var React58 = __require("react");
    function TrashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(TrashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TrophyIcon.js
var require_TrophyIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TrophyIcon.js"(exports, module) {
    var React58 = __require("react");
    function TrophyIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 1c-1.828 0-3.623.149-5.371.435a.75.75 0 00-.629.74v.387c-.827.157-1.642.345-2.445.564a.75.75 0 00-.552.698 5 5 0 004.503 5.152 6 6 0 002.946 1.822A6.451 6.451 0 017.768 13H7.5A1.5 1.5 0 006 14.5V17h-.75C4.56 17 4 17.56 4 18.25c0 .414.336.75.75.75h10.5a.75.75 0 00.75-.75c0-.69-.56-1.25-1.25-1.25H14v-2.5a1.5 1.5 0 00-1.5-1.5h-.268a6.453 6.453 0 01-.684-2.202 6 6 0 002.946-1.822 5 5 0 004.503-5.152.75.75 0 00-.552-.698A31.804 31.804 0 0016 2.562v-.387a.75.75 0 00-.629-.74A33.227 33.227 0 0010 1zM2.525 4.422C3.012 4.3 3.504 4.19 4 4.09V5c0 .74.134 1.448.38 2.103a3.503 3.503 0 01-1.855-2.68zm14.95 0a3.503 3.503 0 01-1.854 2.68C15.866 6.449 16 5.74 16 5v-.91c.496.099.988.21 1.475.332z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(TrophyIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TruckIcon.js
var require_TruckIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TruckIcon.js"(exports, module) {
    var React58 = __require("react");
    function TruckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.5 3c-1.051 0-2.093.04-3.125.117A1.49 1.49 0 002 4.607V10.5h9V4.606c0-.771-.59-1.43-1.375-1.489A41.568 41.568 0 006.5 3zM2 12v2.5A1.5 1.5 0 003.5 16h.041a3 3 0 015.918 0h.791a.75.75 0 00.75-.75V12H2z"
      }), React58.createElement("path", {
        d: "M6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM13.25 5a.75.75 0 00-.75.75v8.514a3.001 3.001 0 014.893 1.44c.37-.275.61-.719.595-1.227a24.905 24.905 0 00-1.784-8.549A1.486 1.486 0 0014.823 5H13.25zM14.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
      }));
    }
    var ForwardRef = React58.forwardRef(TruckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/TvIcon.js
var require_TvIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/TvIcon.js"(exports, module) {
    var React58 = __require("react");
    function TvIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4 5h12v7H4V5z"
      }), React58.createElement("path", {
        fillRule: "evenodd",
        d: "M1 3.5A1.5 1.5 0 012.5 2h15A1.5 1.5 0 0119 3.5v10a1.5 1.5 0 01-1.5 1.5H12v1.5h3.25a.75.75 0 010 1.5H4.75a.75.75 0 010-1.5H8V15H2.5A1.5 1.5 0 011 13.5v-10zm16.5 0h-15v10h15v-10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(TvIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/UserCircleIcon.js
var require_UserCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/UserCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-5.5-2.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10 12a5.99 5.99 0 00-4.793 2.39A6.483 6.483 0 0010 16.5a6.483 6.483 0 004.793-2.11A5.99 5.99 0 0010 12z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(UserCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/UserGroupIcon.js
var require_UserGroupIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/UserGroupIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserGroupIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 9a3 3 0 100-6 3 3 0 000 6zM6 8a2 2 0 11-4 0 2 2 0 014 0zM1.49 15.326a.78.78 0 01-.358-.442 3 3 0 014.308-3.516 6.484 6.484 0 00-1.905 3.959c-.023.222-.014.442.025.654a4.97 4.97 0 01-2.07-.655zM16.44 15.98a4.97 4.97 0 002.07-.654.78.78 0 00.357-.442 3 3 0 00-4.308-3.517 6.484 6.484 0 011.907 3.96 2.32 2.32 0 01-.026.654zM18 8a2 2 0 11-4 0 2 2 0 014 0zM5.304 16.19a.844.844 0 01-.277-.71 5 5 0 019.947 0 .843.843 0 01-.277.71A6.975 6.975 0 0110 18a6.974 6.974 0 01-4.696-1.81z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserGroupIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/UserMinusIcon.js
var require_UserMinusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/UserMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M11 5a3 3 0 11-6 0 3 3 0 016 0zM2.046 15.253c-.058.468.172.92.57 1.175A9.953 9.953 0 008 18c1.982 0 3.83-.578 5.384-1.573.398-.254.628-.707.57-1.175a6.001 6.001 0 00-11.908 0zM12.75 7.75a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/UserPlusIcon.js
var require_UserPlusIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/UserPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M11 5a3 3 0 11-6 0 3 3 0 016 0zM2.615 16.428a1.224 1.224 0 01-.569-1.175 6.002 6.002 0 0111.908 0c.058.467-.172.92-.57 1.174A9.953 9.953 0 018 18a9.953 9.953 0 01-5.385-1.572zM16.25 5.75a.75.75 0 00-1.5 0v2h-2a.75.75 0 000 1.5h2v2a.75.75 0 001.5 0v-2h2a.75.75 0 000-1.5h-2v-2z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/UserIcon.js
var require_UserIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/UserIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/UsersIcon.js
var require_UsersIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/UsersIcon.js"(exports, module) {
    var React58 = __require("react");
    function UsersIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M7 8a3 3 0 100-6 3 3 0 000 6zM14.5 9a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM1.615 16.428a1.224 1.224 0 01-.569-1.175 6.002 6.002 0 0111.908 0c.058.467-.172.92-.57 1.174A9.953 9.953 0 017 18a9.953 9.953 0 01-5.385-1.572zM14.5 16h-.106c.07-.297.088-.611.048-.933a7.47 7.47 0 00-1.588-3.755 4.502 4.502 0 015.874 2.636.818.818 0 01-.36.98A7.465 7.465 0 0114.5 16z"
      }));
    }
    var ForwardRef = React58.forwardRef(UsersIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/VariableIcon.js
var require_VariableIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/VariableIcon.js"(exports, module) {
    var React58 = __require("react");
    function VariableIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M15.212 2.079a.75.75 0 011.006.336A16.932 16.932 0 0118 10c0 2.724-.641 5.3-1.782 7.585a.75.75 0 11-1.342-.67A15.432 15.432 0 0016.5 10c0-2.486-.585-4.834-1.624-6.915a.75.75 0 01.336-1.006zm-10.424 0a.75.75 0 01.336 1.006A15.433 15.433 0 003.5 10c0 2.486.585 4.834 1.624 6.915a.75.75 0 11-1.342.67A16.933 16.933 0 012 10c0-2.724.641-5.3 1.782-7.585a.75.75 0 011.006-.336zm2.285 3.554a1.5 1.5 0 012.219.677l.856 2.08 1.146-1.77a2.25 2.25 0 013.137-.65l.235.156a.75.75 0 11-.832 1.248l-.235-.156a.75.75 0 00-1.045.216l-1.71 2.644 1.251 3.04.739-.492a.75.75 0 11.832 1.248l-.739.493a1.5 1.5 0 01-2.219-.677l-.856-2.08-1.146 1.77a2.25 2.25 0 01-3.137.65l-.235-.156a.75.75 0 01.832-1.248l.235.157a.75.75 0 001.045-.217l1.71-2.644-1.251-3.04-.739.492a.75.75 0 01-.832-1.248l.739-.493z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(VariableIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/VideoCameraSlashIcon.js
var require_VideoCameraSlashIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/VideoCameraSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function VideoCameraSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M1 13.75V7.182L9.818 16H3.25A2.25 2.25 0 011 13.75zM13 6.25v6.568L4.182 4h6.568A2.25 2.25 0 0113 6.25zM19 4.75a.75.75 0 00-1.28-.53l-3 3a.75.75 0 00-.22.53v4.5c0 .199.079.39.22.53l3 3a.75.75 0 001.28-.53V4.75zM2.28 4.22a.75.75 0 00-1.06 1.06l10.5 10.5a.75.75 0 101.06-1.06L2.28 4.22z"
      }));
    }
    var ForwardRef = React58.forwardRef(VideoCameraSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/VideoCameraIcon.js
var require_VideoCameraIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/VideoCameraIcon.js"(exports, module) {
    var React58 = __require("react");
    function VideoCameraIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M3.25 4A2.25 2.25 0 001 6.25v7.5A2.25 2.25 0 003.25 16h7.5A2.25 2.25 0 0013 13.75v-7.5A2.25 2.25 0 0010.75 4h-7.5zM19 4.75a.75.75 0 00-1.28-.53l-3 3a.75.75 0 00-.22.53v4.5c0 .199.079.39.22.53l3 3a.75.75 0 001.28-.53V4.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(VideoCameraIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ViewColumnsIcon.js
var require_ViewColumnsIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ViewColumnsIcon.js"(exports, module) {
    var React58 = __require("react");
    function ViewColumnsIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M14 17h2.75A2.25 2.25 0 0019 14.75v-9.5A2.25 2.25 0 0016.75 3H14v14zM12.5 3h-5v14h5V3zM3.25 3H6v14H3.25A2.25 2.25 0 011 14.75v-9.5A2.25 2.25 0 013.25 3z"
      }));
    }
    var ForwardRef = React58.forwardRef(ViewColumnsIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/ViewfinderCircleIcon.js
var require_ViewfinderCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/ViewfinderCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ViewfinderCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M4.25 2A2.25 2.25 0 002 4.25v2a.75.75 0 001.5 0v-2a.75.75 0 01.75-.75h2a.75.75 0 000-1.5h-2zM13.75 2a.75.75 0 000 1.5h2a.75.75 0 01.75.75v2a.75.75 0 001.5 0v-2A2.25 2.25 0 0015.75 2h-2zM3.5 13.75a.75.75 0 00-1.5 0v2A2.25 2.25 0 004.25 18h2a.75.75 0 000-1.5h-2a.75.75 0 01-.75-.75v-2zM18 13.75a.75.75 0 00-1.5 0v2a.75.75 0 01-.75.75h-2a.75.75 0 000 1.5h2A2.25 2.25 0 0018 15.75v-2zM7 10a3 3 0 116 0 3 3 0 01-6 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ViewfinderCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/WalletIcon.js
var require_WalletIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/WalletIcon.js"(exports, module) {
    var React58 = __require("react");
    function WalletIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M1 4.25a3.733 3.733 0 012.25-.75h13.5c.844 0 1.623.279 2.25.75A2.25 2.25 0 0016.75 2H3.25A2.25 2.25 0 001 4.25zM1 7.25a3.733 3.733 0 012.25-.75h13.5c.844 0 1.623.279 2.25.75A2.25 2.25 0 0016.75 5H3.25A2.25 2.25 0 001 7.25zM7 8a1 1 0 011 1 2 2 0 104 0 1 1 0 011-1h3.75A2.25 2.25 0 0119 10.25v5.5A2.25 2.25 0 0116.75 18H3.25A2.25 2.25 0 011 15.75v-5.5A2.25 2.25 0 013.25 8H7z"
      }));
    }
    var ForwardRef = React58.forwardRef(WalletIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/WifiIcon.js
var require_WifiIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/WifiIcon.js"(exports, module) {
    var React58 = __require("react");
    function WifiIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M.676 6.941A12.964 12.964 0 0110 3c3.657 0 6.963 1.511 9.324 3.941a.75.75 0 01-.008 1.053l-.353.354a.75.75 0 01-1.069-.008C15.894 6.28 13.097 5 10 5 6.903 5 4.106 6.28 2.106 8.34a.75.75 0 01-1.069.008l-.353-.354a.75.75 0 01-.008-1.053zm2.825 2.833A8.976 8.976 0 0110 7a8.976 8.976 0 016.499 2.774.75.75 0 01-.011 1.049l-.354.354a.75.75 0 01-1.072-.012A6.978 6.978 0 0010 9c-1.99 0-3.786.83-5.061 2.165a.75.75 0 01-1.073.012l-.354-.354a.75.75 0 01-.01-1.05zm2.82 2.84A4.989 4.989 0 0110 11c1.456 0 2.767.623 3.68 1.614a.75.75 0 01-.022 1.039l-.354.354a.75.75 0 01-1.085-.026A2.99 2.99 0 0010 13c-.88 0-1.67.377-2.22.981a.75.75 0 01-1.084.026l-.354-.354a.75.75 0 01-.021-1.039zm2.795 2.752a1.248 1.248 0 011.768 0 .75.75 0 010 1.06l-.354.354a.75.75 0 01-1.06 0l-.354-.353a.75.75 0 010-1.06z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(WifiIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/WindowIcon.js
var require_WindowIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/WindowIcon.js"(exports, module) {
    var React58 = __require("react");
    function WindowIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M3.25 3A2.25 2.25 0 001 5.25v9.5A2.25 2.25 0 003.25 17h13.5A2.25 2.25 0 0019 14.75v-9.5A2.25 2.25 0 0016.75 3H3.25zM2.5 9v5.75c0 .414.336.75.75.75h13.5a.75.75 0 00.75-.75V9h-15zM4 5.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V6a.75.75 0 00-.75-.75H4zM6.25 6A.75.75 0 017 5.25h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H7a.75.75 0 01-.75-.75V6zM10 5.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V6a.75.75 0 00-.75-.75H10z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(WindowIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/WrenchScrewdriverIcon.js
var require_WrenchScrewdriverIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/WrenchScrewdriverIcon.js"(exports, module) {
    var React58 = __require("react");
    function WrenchScrewdriverIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M14.5 10a4.5 4.5 0 004.284-5.882c-.105-.324-.51-.391-.752-.15L15.34 6.66a.454.454 0 01-.493.11 3.01 3.01 0 01-1.618-1.616.455.455 0 01.11-.494l2.694-2.692c.24-.241.174-.647-.15-.752a4.5 4.5 0 00-5.873 4.575c.055.873-.128 1.808-.8 2.368l-7.23 6.024a2.724 2.724 0 103.837 3.837l6.024-7.23c.56-.672 1.495-.855 2.368-.8.096.007.193.01.291.01zM5 16a1 1 0 11-2 0 1 1 0 012 0z",
        clipRule: "evenodd"
      }), React58.createElement("path", {
        d: "M14.5 11.5c.173 0 .345-.007.514-.022l3.754 3.754a2.5 2.5 0 01-3.536 3.536l-4.41-4.41 2.172-2.607c.052-.063.147-.138.342-.196.202-.06.469-.087.777-.067.128.008.257.012.387.012zM6 4.586l2.33 2.33a.452.452 0 01-.08.09L6.8 8.214 4.586 6H3.309a.5.5 0 01-.447-.276l-1.7-3.402a.5.5 0 01.093-.577l.49-.49a.5.5 0 01.577-.094l3.402 1.7A.5.5 0 016 3.31v1.277z"
      }));
    }
    var ForwardRef = React58.forwardRef(WrenchScrewdriverIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/WrenchIcon.js
var require_WrenchIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/WrenchIcon.js"(exports, module) {
    var React58 = __require("react");
    function WrenchIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M19 5.5a4.5 4.5 0 01-4.791 4.49c-.873-.055-1.808.128-2.368.8l-6.024 7.23a2.724 2.724 0 11-3.837-3.837L9.21 8.16c.672-.56.855-1.495.8-2.368a4.5 4.5 0 015.873-4.575c.324.105.39.51.15.752L13.34 4.66a.455.455 0 00-.11.494 3.01 3.01 0 001.617 1.617c.17.07.363.02.493-.111l2.692-2.692c.241-.241.647-.174.752.15.14.435.216.9.216 1.382zM4 17a1 1 0 100-2 1 1 0 000 2z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(WrenchIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/XCircleIcon.js
var require_XCircleIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/XCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function XCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        fillRule: "evenodd",
        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z",
        clipRule: "evenodd"
      }));
    }
    var ForwardRef = React58.forwardRef(XCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/XMarkIcon.js
var require_XMarkIcon = __commonJS({
  "node_modules/@heroicons/react/20/solid/XMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function XMarkIcon5({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 20 20",
        fill: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        d: "M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"
      }));
    }
    var ForwardRef = React58.forwardRef(XMarkIcon5);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/20/solid/index.js
var require_solid = __commonJS({
  "node_modules/@heroicons/react/20/solid/index.js"(exports, module) {
    module.exports.AcademicCapIcon = require_AcademicCapIcon();
    module.exports.AdjustmentsHorizontalIcon = require_AdjustmentsHorizontalIcon();
    module.exports.AdjustmentsVerticalIcon = require_AdjustmentsVerticalIcon();
    module.exports.ArchiveBoxArrowDownIcon = require_ArchiveBoxArrowDownIcon();
    module.exports.ArchiveBoxXMarkIcon = require_ArchiveBoxXMarkIcon();
    module.exports.ArchiveBoxIcon = require_ArchiveBoxIcon();
    module.exports.ArrowDownCircleIcon = require_ArrowDownCircleIcon();
    module.exports.ArrowDownLeftIcon = require_ArrowDownLeftIcon();
    module.exports.ArrowDownOnSquareStackIcon = require_ArrowDownOnSquareStackIcon();
    module.exports.ArrowDownOnSquareIcon = require_ArrowDownOnSquareIcon();
    module.exports.ArrowDownRightIcon = require_ArrowDownRightIcon();
    module.exports.ArrowDownTrayIcon = require_ArrowDownTrayIcon();
    module.exports.ArrowDownIcon = require_ArrowDownIcon();
    module.exports.ArrowLeftCircleIcon = require_ArrowLeftCircleIcon();
    module.exports.ArrowLeftOnRectangleIcon = require_ArrowLeftOnRectangleIcon();
    module.exports.ArrowLeftIcon = require_ArrowLeftIcon();
    module.exports.ArrowLongDownIcon = require_ArrowLongDownIcon();
    module.exports.ArrowLongLeftIcon = require_ArrowLongLeftIcon();
    module.exports.ArrowLongRightIcon = require_ArrowLongRightIcon();
    module.exports.ArrowLongUpIcon = require_ArrowLongUpIcon();
    module.exports.ArrowPathRoundedSquareIcon = require_ArrowPathRoundedSquareIcon();
    module.exports.ArrowPathIcon = require_ArrowPathIcon();
    module.exports.ArrowRightCircleIcon = require_ArrowRightCircleIcon();
    module.exports.ArrowRightOnRectangleIcon = require_ArrowRightOnRectangleIcon();
    module.exports.ArrowRightIcon = require_ArrowRightIcon();
    module.exports.ArrowSmallDownIcon = require_ArrowSmallDownIcon();
    module.exports.ArrowSmallLeftIcon = require_ArrowSmallLeftIcon();
    module.exports.ArrowSmallRightIcon = require_ArrowSmallRightIcon();
    module.exports.ArrowSmallUpIcon = require_ArrowSmallUpIcon();
    module.exports.ArrowTopRightOnSquareIcon = require_ArrowTopRightOnSquareIcon();
    module.exports.ArrowTrendingDownIcon = require_ArrowTrendingDownIcon();
    module.exports.ArrowTrendingUpIcon = require_ArrowTrendingUpIcon();
    module.exports.ArrowUpCircleIcon = require_ArrowUpCircleIcon();
    module.exports.ArrowUpLeftIcon = require_ArrowUpLeftIcon();
    module.exports.ArrowUpOnSquareStackIcon = require_ArrowUpOnSquareStackIcon();
    module.exports.ArrowUpOnSquareIcon = require_ArrowUpOnSquareIcon();
    module.exports.ArrowUpRightIcon = require_ArrowUpRightIcon();
    module.exports.ArrowUpTrayIcon = require_ArrowUpTrayIcon();
    module.exports.ArrowUpIcon = require_ArrowUpIcon();
    module.exports.ArrowUturnDownIcon = require_ArrowUturnDownIcon();
    module.exports.ArrowUturnLeftIcon = require_ArrowUturnLeftIcon();
    module.exports.ArrowUturnRightIcon = require_ArrowUturnRightIcon();
    module.exports.ArrowUturnUpIcon = require_ArrowUturnUpIcon();
    module.exports.ArrowsPointingInIcon = require_ArrowsPointingInIcon();
    module.exports.ArrowsPointingOutIcon = require_ArrowsPointingOutIcon();
    module.exports.ArrowsRightLeftIcon = require_ArrowsRightLeftIcon();
    module.exports.ArrowsUpDownIcon = require_ArrowsUpDownIcon();
    module.exports.AtSymbolIcon = require_AtSymbolIcon();
    module.exports.BackspaceIcon = require_BackspaceIcon();
    module.exports.BackwardIcon = require_BackwardIcon();
    module.exports.BanknotesIcon = require_BanknotesIcon();
    module.exports.Bars2Icon = require_Bars2Icon();
    module.exports.Bars3BottomLeftIcon = require_Bars3BottomLeftIcon();
    module.exports.Bars3BottomRightIcon = require_Bars3BottomRightIcon();
    module.exports.Bars3CenterLeftIcon = require_Bars3CenterLeftIcon();
    module.exports.Bars3Icon = require_Bars3Icon();
    module.exports.Bars4Icon = require_Bars4Icon();
    module.exports.BarsArrowDownIcon = require_BarsArrowDownIcon();
    module.exports.BarsArrowUpIcon = require_BarsArrowUpIcon();
    module.exports.Battery0Icon = require_Battery0Icon();
    module.exports.Battery100Icon = require_Battery100Icon();
    module.exports.Battery50Icon = require_Battery50Icon();
    module.exports.BeakerIcon = require_BeakerIcon();
    module.exports.BellAlertIcon = require_BellAlertIcon();
    module.exports.BellSlashIcon = require_BellSlashIcon();
    module.exports.BellSnoozeIcon = require_BellSnoozeIcon();
    module.exports.BellIcon = require_BellIcon();
    module.exports.BoltSlashIcon = require_BoltSlashIcon();
    module.exports.BoltIcon = require_BoltIcon();
    module.exports.BookOpenIcon = require_BookOpenIcon();
    module.exports.BookmarkSlashIcon = require_BookmarkSlashIcon();
    module.exports.BookmarkSquareIcon = require_BookmarkSquareIcon();
    module.exports.BookmarkIcon = require_BookmarkIcon();
    module.exports.BriefcaseIcon = require_BriefcaseIcon();
    module.exports.BugAntIcon = require_BugAntIcon();
    module.exports.BuildingLibraryIcon = require_BuildingLibraryIcon();
    module.exports.BuildingOffice2Icon = require_BuildingOffice2Icon();
    module.exports.BuildingOfficeIcon = require_BuildingOfficeIcon();
    module.exports.BuildingStorefrontIcon = require_BuildingStorefrontIcon();
    module.exports.CakeIcon = require_CakeIcon();
    module.exports.CalculatorIcon = require_CalculatorIcon();
    module.exports.CalendarDaysIcon = require_CalendarDaysIcon();
    module.exports.CalendarIcon = require_CalendarIcon();
    module.exports.CameraIcon = require_CameraIcon();
    module.exports.ChartBarSquareIcon = require_ChartBarSquareIcon();
    module.exports.ChartBarIcon = require_ChartBarIcon();
    module.exports.ChartPieIcon = require_ChartPieIcon();
    module.exports.ChatBubbleBottomCenterTextIcon = require_ChatBubbleBottomCenterTextIcon();
    module.exports.ChatBubbleBottomCenterIcon = require_ChatBubbleBottomCenterIcon();
    module.exports.ChatBubbleLeftEllipsisIcon = require_ChatBubbleLeftEllipsisIcon();
    module.exports.ChatBubbleLeftRightIcon = require_ChatBubbleLeftRightIcon();
    module.exports.ChatBubbleLeftIcon = require_ChatBubbleLeftIcon();
    module.exports.ChatBubbleOvalLeftEllipsisIcon = require_ChatBubbleOvalLeftEllipsisIcon();
    module.exports.ChatBubbleOvalLeftIcon = require_ChatBubbleOvalLeftIcon();
    module.exports.CheckBadgeIcon = require_CheckBadgeIcon();
    module.exports.CheckCircleIcon = require_CheckCircleIcon();
    module.exports.CheckIcon = require_CheckIcon();
    module.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon();
    module.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon();
    module.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon();
    module.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon();
    module.exports.ChevronDownIcon = require_ChevronDownIcon();
    module.exports.ChevronLeftIcon = require_ChevronLeftIcon();
    module.exports.ChevronRightIcon = require_ChevronRightIcon();
    module.exports.ChevronUpDownIcon = require_ChevronUpDownIcon();
    module.exports.ChevronUpIcon = require_ChevronUpIcon();
    module.exports.CircleStackIcon = require_CircleStackIcon();
    module.exports.ClipboardDocumentCheckIcon = require_ClipboardDocumentCheckIcon();
    module.exports.ClipboardDocumentListIcon = require_ClipboardDocumentListIcon();
    module.exports.ClipboardDocumentIcon = require_ClipboardDocumentIcon();
    module.exports.ClipboardIcon = require_ClipboardIcon();
    module.exports.ClockIcon = require_ClockIcon();
    module.exports.CloudArrowDownIcon = require_CloudArrowDownIcon();
    module.exports.CloudArrowUpIcon = require_CloudArrowUpIcon();
    module.exports.CloudIcon = require_CloudIcon();
    module.exports.CodeBracketSquareIcon = require_CodeBracketSquareIcon();
    module.exports.CodeBracketIcon = require_CodeBracketIcon();
    module.exports.Cog6ToothIcon = require_Cog6ToothIcon();
    module.exports.Cog8ToothIcon = require_Cog8ToothIcon();
    module.exports.CogIcon = require_CogIcon();
    module.exports.CommandLineIcon = require_CommandLineIcon();
    module.exports.ComputerDesktopIcon = require_ComputerDesktopIcon();
    module.exports.CpuChipIcon = require_CpuChipIcon();
    module.exports.CreditCardIcon = require_CreditCardIcon();
    module.exports.CubeTransparentIcon = require_CubeTransparentIcon();
    module.exports.CubeIcon = require_CubeIcon();
    module.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon();
    module.exports.CurrencyDollarIcon = require_CurrencyDollarIcon();
    module.exports.CurrencyEuroIcon = require_CurrencyEuroIcon();
    module.exports.CurrencyPoundIcon = require_CurrencyPoundIcon();
    module.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon();
    module.exports.CurrencyYenIcon = require_CurrencyYenIcon();
    module.exports.CursorArrowRaysIcon = require_CursorArrowRaysIcon();
    module.exports.CursorArrowRippleIcon = require_CursorArrowRippleIcon();
    module.exports.DevicePhoneMobileIcon = require_DevicePhoneMobileIcon();
    module.exports.DeviceTabletIcon = require_DeviceTabletIcon();
    module.exports.DocumentArrowDownIcon = require_DocumentArrowDownIcon();
    module.exports.DocumentArrowUpIcon = require_DocumentArrowUpIcon();
    module.exports.DocumentChartBarIcon = require_DocumentChartBarIcon();
    module.exports.DocumentCheckIcon = require_DocumentCheckIcon();
    module.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon();
    module.exports.DocumentMagnifyingGlassIcon = require_DocumentMagnifyingGlassIcon();
    module.exports.DocumentMinusIcon = require_DocumentMinusIcon();
    module.exports.DocumentPlusIcon = require_DocumentPlusIcon();
    module.exports.DocumentTextIcon = require_DocumentTextIcon();
    module.exports.DocumentIcon = require_DocumentIcon();
    module.exports.EllipsisHorizontalCircleIcon = require_EllipsisHorizontalCircleIcon();
    module.exports.EllipsisHorizontalIcon = require_EllipsisHorizontalIcon();
    module.exports.EllipsisVerticalIcon = require_EllipsisVerticalIcon();
    module.exports.EnvelopeOpenIcon = require_EnvelopeOpenIcon();
    module.exports.EnvelopeIcon = require_EnvelopeIcon();
    module.exports.ExclamationCircleIcon = require_ExclamationCircleIcon();
    module.exports.ExclamationTriangleIcon = require_ExclamationTriangleIcon();
    module.exports.EyeDropperIcon = require_EyeDropperIcon();
    module.exports.EyeSlashIcon = require_EyeSlashIcon();
    module.exports.EyeIcon = require_EyeIcon();
    module.exports.FaceFrownIcon = require_FaceFrownIcon();
    module.exports.FaceSmileIcon = require_FaceSmileIcon();
    module.exports.FilmIcon = require_FilmIcon();
    module.exports.FingerPrintIcon = require_FingerPrintIcon();
    module.exports.FireIcon = require_FireIcon();
    module.exports.FlagIcon = require_FlagIcon();
    module.exports.FolderArrowDownIcon = require_FolderArrowDownIcon();
    module.exports.FolderMinusIcon = require_FolderMinusIcon();
    module.exports.FolderOpenIcon = require_FolderOpenIcon();
    module.exports.FolderPlusIcon = require_FolderPlusIcon();
    module.exports.FolderIcon = require_FolderIcon();
    module.exports.ForwardIcon = require_ForwardIcon();
    module.exports.FunnelIcon = require_FunnelIcon();
    module.exports.GifIcon = require_GifIcon();
    module.exports.GiftTopIcon = require_GiftTopIcon();
    module.exports.GiftIcon = require_GiftIcon();
    module.exports.GlobeAltIcon = require_GlobeAltIcon();
    module.exports.GlobeAmericasIcon = require_GlobeAmericasIcon();
    module.exports.GlobeAsiaAustraliaIcon = require_GlobeAsiaAustraliaIcon();
    module.exports.GlobeEuropeAfricaIcon = require_GlobeEuropeAfricaIcon();
    module.exports.HandRaisedIcon = require_HandRaisedIcon();
    module.exports.HandThumbDownIcon = require_HandThumbDownIcon();
    module.exports.HandThumbUpIcon = require_HandThumbUpIcon();
    module.exports.HashtagIcon = require_HashtagIcon();
    module.exports.HeartIcon = require_HeartIcon();
    module.exports.HomeModernIcon = require_HomeModernIcon();
    module.exports.HomeIcon = require_HomeIcon();
    module.exports.IdentificationIcon = require_IdentificationIcon();
    module.exports.InboxArrowDownIcon = require_InboxArrowDownIcon();
    module.exports.InboxStackIcon = require_InboxStackIcon();
    module.exports.InboxIcon = require_InboxIcon();
    module.exports.InformationCircleIcon = require_InformationCircleIcon();
    module.exports.KeyIcon = require_KeyIcon();
    module.exports.LanguageIcon = require_LanguageIcon();
    module.exports.LifebuoyIcon = require_LifebuoyIcon();
    module.exports.LightBulbIcon = require_LightBulbIcon();
    module.exports.LinkIcon = require_LinkIcon();
    module.exports.ListBulletIcon = require_ListBulletIcon();
    module.exports.LockClosedIcon = require_LockClosedIcon();
    module.exports.LockOpenIcon = require_LockOpenIcon();
    module.exports.MagnifyingGlassCircleIcon = require_MagnifyingGlassCircleIcon();
    module.exports.MagnifyingGlassMinusIcon = require_MagnifyingGlassMinusIcon();
    module.exports.MagnifyingGlassPlusIcon = require_MagnifyingGlassPlusIcon();
    module.exports.MagnifyingGlassIcon = require_MagnifyingGlassIcon();
    module.exports.MapPinIcon = require_MapPinIcon();
    module.exports.MapIcon = require_MapIcon();
    module.exports.MegaphoneIcon = require_MegaphoneIcon();
    module.exports.MicrophoneIcon = require_MicrophoneIcon();
    module.exports.MinusCircleIcon = require_MinusCircleIcon();
    module.exports.MinusSmallIcon = require_MinusSmallIcon();
    module.exports.MinusIcon = require_MinusIcon();
    module.exports.MoonIcon = require_MoonIcon();
    module.exports.MusicalNoteIcon = require_MusicalNoteIcon();
    module.exports.NewspaperIcon = require_NewspaperIcon();
    module.exports.NoSymbolIcon = require_NoSymbolIcon();
    module.exports.PaintBrushIcon = require_PaintBrushIcon();
    module.exports.PaperAirplaneIcon = require_PaperAirplaneIcon();
    module.exports.PaperClipIcon = require_PaperClipIcon();
    module.exports.PauseCircleIcon = require_PauseCircleIcon();
    module.exports.PauseIcon = require_PauseIcon();
    module.exports.PencilSquareIcon = require_PencilSquareIcon();
    module.exports.PencilIcon = require_PencilIcon();
    module.exports.PhoneArrowDownLeftIcon = require_PhoneArrowDownLeftIcon();
    module.exports.PhoneArrowUpRightIcon = require_PhoneArrowUpRightIcon();
    module.exports.PhoneXMarkIcon = require_PhoneXMarkIcon();
    module.exports.PhoneIcon = require_PhoneIcon();
    module.exports.PhotoIcon = require_PhotoIcon();
    module.exports.PlayCircleIcon = require_PlayCircleIcon();
    module.exports.PlayPauseIcon = require_PlayPauseIcon();
    module.exports.PlayIcon = require_PlayIcon();
    module.exports.PlusCircleIcon = require_PlusCircleIcon();
    module.exports.PlusSmallIcon = require_PlusSmallIcon();
    module.exports.PlusIcon = require_PlusIcon();
    module.exports.PowerIcon = require_PowerIcon();
    module.exports.PresentationChartBarIcon = require_PresentationChartBarIcon();
    module.exports.PresentationChartLineIcon = require_PresentationChartLineIcon();
    module.exports.PrinterIcon = require_PrinterIcon();
    module.exports.PuzzlePieceIcon = require_PuzzlePieceIcon();
    module.exports.QrCodeIcon = require_QrCodeIcon();
    module.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon();
    module.exports.QueueListIcon = require_QueueListIcon();
    module.exports.RadioIcon = require_RadioIcon();
    module.exports.ReceiptPercentIcon = require_ReceiptPercentIcon();
    module.exports.ReceiptRefundIcon = require_ReceiptRefundIcon();
    module.exports.RectangleGroupIcon = require_RectangleGroupIcon();
    module.exports.RectangleStackIcon = require_RectangleStackIcon();
    module.exports.RocketLaunchIcon = require_RocketLaunchIcon();
    module.exports.RssIcon = require_RssIcon();
    module.exports.ScaleIcon = require_ScaleIcon();
    module.exports.ScissorsIcon = require_ScissorsIcon();
    module.exports.ServerStackIcon = require_ServerStackIcon();
    module.exports.ServerIcon = require_ServerIcon();
    module.exports.ShareIcon = require_ShareIcon();
    module.exports.ShieldCheckIcon = require_ShieldCheckIcon();
    module.exports.ShieldExclamationIcon = require_ShieldExclamationIcon();
    module.exports.ShoppingBagIcon = require_ShoppingBagIcon();
    module.exports.ShoppingCartIcon = require_ShoppingCartIcon();
    module.exports.SignalSlashIcon = require_SignalSlashIcon();
    module.exports.SignalIcon = require_SignalIcon();
    module.exports.SparklesIcon = require_SparklesIcon();
    module.exports.SpeakerWaveIcon = require_SpeakerWaveIcon();
    module.exports.SpeakerXMarkIcon = require_SpeakerXMarkIcon();
    module.exports.Square2StackIcon = require_Square2StackIcon();
    module.exports.Square3Stack3DIcon = require_Square3Stack3DIcon();
    module.exports.Squares2X2Icon = require_Squares2X2Icon();
    module.exports.SquaresPlusIcon = require_SquaresPlusIcon();
    module.exports.StarIcon = require_StarIcon();
    module.exports.StopCircleIcon = require_StopCircleIcon();
    module.exports.StopIcon = require_StopIcon();
    module.exports.SunIcon = require_SunIcon();
    module.exports.SwatchIcon = require_SwatchIcon();
    module.exports.TableCellsIcon = require_TableCellsIcon();
    module.exports.TagIcon = require_TagIcon();
    module.exports.TicketIcon = require_TicketIcon();
    module.exports.TrashIcon = require_TrashIcon();
    module.exports.TrophyIcon = require_TrophyIcon();
    module.exports.TruckIcon = require_TruckIcon();
    module.exports.TvIcon = require_TvIcon();
    module.exports.UserCircleIcon = require_UserCircleIcon();
    module.exports.UserGroupIcon = require_UserGroupIcon();
    module.exports.UserMinusIcon = require_UserMinusIcon();
    module.exports.UserPlusIcon = require_UserPlusIcon();
    module.exports.UserIcon = require_UserIcon();
    module.exports.UsersIcon = require_UsersIcon();
    module.exports.VariableIcon = require_VariableIcon();
    module.exports.VideoCameraSlashIcon = require_VideoCameraSlashIcon();
    module.exports.VideoCameraIcon = require_VideoCameraIcon();
    module.exports.ViewColumnsIcon = require_ViewColumnsIcon();
    module.exports.ViewfinderCircleIcon = require_ViewfinderCircleIcon();
    module.exports.WalletIcon = require_WalletIcon();
    module.exports.WifiIcon = require_WifiIcon();
    module.exports.WindowIcon = require_WindowIcon();
    module.exports.WrenchScrewdriverIcon = require_WrenchScrewdriverIcon();
    module.exports.WrenchIcon = require_WrenchIcon();
    module.exports.XCircleIcon = require_XCircleIcon();
    module.exports.XMarkIcon = require_XMarkIcon();
  }
});

// node_modules/@heroicons/react/24/outline/AcademicCapIcon.js
var require_AcademicCapIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/AcademicCapIcon.js"(exports, module) {
    var React58 = __require("react");
    function AcademicCapIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5"
      }));
    }
    var ForwardRef = React58.forwardRef(AcademicCapIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/AdjustmentsHorizontalIcon.js
var require_AdjustmentsHorizontalIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/AdjustmentsHorizontalIcon.js"(exports, module) {
    var React58 = __require("react");
    function AdjustmentsHorizontalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75"
      }));
    }
    var ForwardRef = React58.forwardRef(AdjustmentsHorizontalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/AdjustmentsVerticalIcon.js
var require_AdjustmentsVerticalIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/AdjustmentsVerticalIcon.js"(exports, module) {
    var React58 = __require("react");
    function AdjustmentsVerticalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6 13.5V3.75m0 9.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 3.75V16.5m12-3V3.75m0 9.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 3.75V16.5m-6-9V3.75m0 3.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 9.75V10.5"
      }));
    }
    var ForwardRef = React58.forwardRef(AdjustmentsVerticalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArchiveBoxArrowDownIcon.js
var require_ArchiveBoxArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArchiveBoxArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArchiveBoxArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5m8.25 3v6.75m0 0l-3-3m3 3l3-3M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArchiveBoxArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArchiveBoxXMarkIcon.js
var require_ArchiveBoxXMarkIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArchiveBoxXMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArchiveBoxXMarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5m6 4.125l2.25 2.25m0 0l2.25 2.25M12 13.875l2.25-2.25M12 13.875l-2.25 2.25M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArchiveBoxXMarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArchiveBoxIcon.js
var require_ArchiveBoxIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArchiveBoxIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArchiveBoxIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArchiveBoxIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownCircleIcon.js
var require_ArrowDownCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 12.75l3 3m0 0l3-3m-3 3v-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownLeftIcon.js
var require_ArrowDownLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 4.5l-15 15m0 0h11.25m-11.25 0V8.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownOnSquareStackIcon.js
var require_ArrowDownOnSquareStackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownOnSquareStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownOnSquareStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 7.5h-.75A2.25 2.25 0 004.5 9.75v7.5a2.25 2.25 0 002.25 2.25h7.5a2.25 2.25 0 002.25-2.25v-7.5a2.25 2.25 0 00-2.25-2.25h-.75m-6 3.75l3 3m0 0l3-3m-3 3V1.5m6 9h.75a2.25 2.25 0 012.25 2.25v7.5a2.25 2.25 0 01-2.25 2.25h-7.5a2.25 2.25 0 01-2.25-2.25v-.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownOnSquareStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownOnSquareIcon.js
var require_ArrowDownOnSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownOnSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownOnSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 8.25H7.5a2.25 2.25 0 00-2.25 2.25v9a2.25 2.25 0 002.25 2.25h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25H15M9 12l3 3m0 0l3-3m-3 3V2.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownOnSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownRightIcon.js
var require_ArrowDownRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 4.5l15 15m0 0V8.25m0 11.25H8.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownTrayIcon.js
var require_ArrowDownTrayIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownTrayIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownTrayIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownTrayIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowDownIcon.js
var require_ArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLeftCircleIcon.js
var require_ArrowLeftCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLeftCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLeftCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.25 9l-3 3m0 0l3 3m-3-3h7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLeftCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLeftOnRectangleIcon.js
var require_ArrowLeftOnRectangleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLeftOnRectangleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLeftOnRectangleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLeftOnRectangleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLeftIcon.js
var require_ArrowLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLongDownIcon.js
var require_ArrowLongDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLongDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 17.25L12 21m0 0l-3.75-3.75M12 21V3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLongLeftIcon.js
var require_ArrowLongLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLongLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongLeftIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongLeftIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLongRightIcon.js
var require_ArrowLongRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLongRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongRightIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongRightIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowLongUpIcon.js
var require_ArrowLongUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowLongUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowLongUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 6.75L12 3m0 0l3.75 3.75M12 3v18"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowLongUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowPathRoundedSquareIcon.js
var require_ArrowPathRoundedSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowPathRoundedSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowPathRoundedSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 12c0-1.232-.046-2.453-.138-3.662a4.006 4.006 0 00-3.7-3.7 48.678 48.678 0 00-7.324 0 4.006 4.006 0 00-3.7 3.7c-.017.22-.032.441-.046.662M19.5 12l3-3m-3 3l-3-3m-12 3c0 1.232.046 2.453.138 3.662a4.006 4.006 0 003.7 3.7 48.656 48.656 0 007.324 0 4.006 4.006 0 003.7-3.7c.017-.22.032-.441.046-.662M4.5 12l3 3m-3-3l-3 3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowPathRoundedSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowPathIcon.js
var require_ArrowPathIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowPathIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowPathIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowPathIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowRightCircleIcon.js
var require_ArrowRightCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowRightCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowRightCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12.75 15l3-3m0 0l-3-3m3 3h-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowRightCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowRightOnRectangleIcon.js
var require_ArrowRightOnRectangleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowRightOnRectangleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowRightOnRectangleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15m3 0l3-3m0 0l-3-3m3 3H9"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowRightOnRectangleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowRightIcon.js
var require_ArrowRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowSmallDownIcon.js
var require_ArrowSmallDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowSmallDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 4.5v15m0 0l6.75-6.75M12 19.5l-6.75-6.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowSmallLeftIcon.js
var require_ArrowSmallLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowSmallLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowSmallRightIcon.js
var require_ArrowSmallRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowSmallRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowSmallUpIcon.js
var require_ArrowSmallUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowSmallUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowSmallUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 19.5v-15m0 0l-6.75 6.75M12 4.5l6.75 6.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowSmallUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowTopRightOnSquareIcon.js
var require_ArrowTopRightOnSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowTopRightOnSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowTopRightOnSquareIcon3({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowTopRightOnSquareIcon3);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowTrendingDownIcon.js
var require_ArrowTrendingDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowTrendingDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowTrendingDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 6L9 12.75l4.286-4.286a11.948 11.948 0 014.306 6.43l.776 2.898m0 0l3.182-5.511m-3.182 5.51l-5.511-3.181"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowTrendingDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowTrendingUpIcon.js
var require_ArrowTrendingUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowTrendingUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowTrendingUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowTrendingUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpCircleIcon.js
var require_ArrowUpCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 11.25l-3-3m0 0l-3 3m3-3v7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpLeftIcon.js
var require_ArrowUpLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 19.5l-15-15m0 0v11.25m0-11.25h11.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpOnSquareStackIcon.js
var require_ArrowUpOnSquareStackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpOnSquareStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpOnSquareStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 7.5h-.75A2.25 2.25 0 004.5 9.75v7.5a2.25 2.25 0 002.25 2.25h7.5a2.25 2.25 0 002.25-2.25v-7.5a2.25 2.25 0 00-2.25-2.25h-.75m0-3l-3-3m0 0l-3 3m3-3v11.25m6-2.25h.75a2.25 2.25 0 012.25 2.25v7.5a2.25 2.25 0 01-2.25 2.25h-7.5a2.25 2.25 0 01-2.25-2.25v-.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpOnSquareStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpOnSquareIcon.js
var require_ArrowUpOnSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpOnSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpOnSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 8.25H7.5a2.25 2.25 0 00-2.25 2.25v9a2.25 2.25 0 002.25 2.25h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25H15m0-3l-3-3m0 0l-3 3m3-3V15"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpOnSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpRightIcon.js
var require_ArrowUpRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpTrayIcon.js
var require_ArrowUpTrayIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpTrayIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpTrayIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpTrayIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUpIcon.js
var require_ArrowUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 10.5L12 3m0 0l7.5 7.5M12 3v18"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUturnDownIcon.js
var require_ArrowUturnDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUturnDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 15l-6 6m0 0l-6-6m6 6V9a6 6 0 0112 0v3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUturnLeftIcon.js
var require_ArrowUturnLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUturnLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUturnRightIcon.js
var require_ArrowUturnRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUturnRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 15l6-6m0 0l-6-6m6 6H9a6 6 0 000 12h3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowUturnUpIcon.js
var require_ArrowUturnUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowUturnUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowUturnUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 9l6-6m0 0l6 6m-6-6v12a6 6 0 01-12 0v-3"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowUturnUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowsPointingInIcon.js
var require_ArrowsPointingInIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowsPointingInIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsPointingInIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 9V4.5M9 9H4.5M9 9L3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5l5.25 5.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsPointingInIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowsPointingOutIcon.js
var require_ArrowsPointingOutIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowsPointingOutIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsPointingOutIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsPointingOutIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowsRightLeftIcon.js
var require_ArrowsRightLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowsRightLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsRightLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 21L3 16.5m0 0L7.5 12M3 16.5h13.5m0-13.5L21 7.5m0 0L16.5 12M21 7.5H7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsRightLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ArrowsUpDownIcon.js
var require_ArrowsUpDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ArrowsUpDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ArrowsUpDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 7.5L7.5 3m0 0L12 7.5M7.5 3v13.5m13.5 0L16.5 21m0 0L12 16.5m4.5 4.5V7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ArrowsUpDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/AtSymbolIcon.js
var require_AtSymbolIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/AtSymbolIcon.js"(exports, module) {
    var React58 = __require("react");
    function AtSymbolIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        d: "M16.5 12a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 10-2.636 6.364M16.5 12V8.25"
      }));
    }
    var ForwardRef = React58.forwardRef(AtSymbolIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BackspaceIcon.js
var require_BackspaceIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BackspaceIcon.js"(exports, module) {
    var React58 = __require("react");
    function BackspaceIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 9.75L14.25 12m0 0l2.25 2.25M14.25 12l2.25-2.25M14.25 12L12 14.25m-2.58 4.92l-6.375-6.375a1.125 1.125 0 010-1.59L9.42 4.83c.211-.211.498-.33.796-.33H19.5a2.25 2.25 0 012.25 2.25v10.5a2.25 2.25 0 01-2.25 2.25h-9.284c-.298 0-.585-.119-.796-.33z"
      }));
    }
    var ForwardRef = React58.forwardRef(BackspaceIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BackwardIcon.js
var require_BackwardIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BackwardIcon.js"(exports, module) {
    var React58 = __require("react");
    function BackwardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z"
      }));
    }
    var ForwardRef = React58.forwardRef(BackwardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BanknotesIcon.js
var require_BanknotesIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BanknotesIcon.js"(exports, module) {
    var React58 = __require("react");
    function BanknotesIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 18.75a60.07 60.07 0 0115.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 013 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 00-.75.75v.75m0 0H3.75m0 0h-.375a1.125 1.125 0 01-1.125-1.125V15m1.5 1.5v-.75A.75.75 0 003 15h-.75M15 10.5a3 3 0 11-6 0 3 3 0 016 0zm3 0h.008v.008H18V10.5zm-12 0h.008v.008H6V10.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(BanknotesIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Bars2Icon.js
var require_Bars2Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Bars2Icon.js"(exports, module) {
    var React58 = __require("react");
    function Bars2Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 9h16.5m-16.5 6.75h16.5"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars2Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Bars3BottomLeftIcon.js
var require_Bars3BottomLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Bars3BottomLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3BottomLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3BottomLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Bars3BottomRightIcon.js
var require_Bars3BottomRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Bars3BottomRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3BottomRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 6.75h16.5M3.75 12h16.5M12 17.25h8.25"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3BottomRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Bars3CenterLeftIcon.js
var require_Bars3CenterLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Bars3CenterLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3CenterLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3CenterLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Bars3Icon.js
var require_Bars3Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Bars3Icon.js"(exports, module) {
    var React58 = __require("react");
    function Bars3Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars3Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Bars4Icon.js
var require_Bars4Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Bars4Icon.js"(exports, module) {
    var React58 = __require("react");
    function Bars4Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 5.25h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5"
      }));
    }
    var ForwardRef = React58.forwardRef(Bars4Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BarsArrowDownIcon.js
var require_BarsArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BarsArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function BarsArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 4.5h14.25M3 9h9.75M3 13.5h9.75m4.5-4.5v12m0 0l-3.75-3.75M17.25 21L21 17.25"
      }));
    }
    var ForwardRef = React58.forwardRef(BarsArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BarsArrowUpIcon.js
var require_BarsArrowUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BarsArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function BarsArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 4.5h14.25M3 9h9.75M3 13.5h5.25m5.25-.75L17.25 9m0 0L21 12.75M17.25 9v12"
      }));
    }
    var ForwardRef = React58.forwardRef(BarsArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Battery0Icon.js
var require_Battery0Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Battery0Icon.js"(exports, module) {
    var React58 = __require("react");
    function Battery0Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 10.5h.375c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125H21M3.75 18h15A2.25 2.25 0 0021 15.75v-6a2.25 2.25 0 00-2.25-2.25h-15A2.25 2.25 0 001.5 9.75v6A2.25 2.25 0 003.75 18z"
      }));
    }
    var ForwardRef = React58.forwardRef(Battery0Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Battery100Icon.js
var require_Battery100Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Battery100Icon.js"(exports, module) {
    var React58 = __require("react");
    function Battery100Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 10.5h.375c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125H21M4.5 10.5H18V15H4.5v-4.5zM3.75 18h15A2.25 2.25 0 0021 15.75v-6a2.25 2.25 0 00-2.25-2.25h-15A2.25 2.25 0 001.5 9.75v6A2.25 2.25 0 003.75 18z"
      }));
    }
    var ForwardRef = React58.forwardRef(Battery100Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Battery50Icon.js
var require_Battery50Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Battery50Icon.js"(exports, module) {
    var React58 = __require("react");
    function Battery50Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 10.5h.375c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125H21M4.5 10.5h6.75V15H4.5v-4.5zM3.75 18h15A2.25 2.25 0 0021 15.75v-6a2.25 2.25 0 00-2.25-2.25h-15A2.25 2.25 0 001.5 9.75v6A2.25 2.25 0 003.75 18z"
      }));
    }
    var ForwardRef = React58.forwardRef(Battery50Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BeakerIcon.js
var require_BeakerIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BeakerIcon.js"(exports, module) {
    var React58 = __require("react");
    function BeakerIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.75 3.104v5.714a2.25 2.25 0 01-.659 1.591L5 14.5M9.75 3.104c-.251.023-.501.05-.75.082m.75-.082a24.301 24.301 0 014.5 0m0 0v5.714c0 .597.237 1.17.659 1.591L19.8 15.3M14.25 3.104c.251.023.501.05.75.082M19.8 15.3l-1.57.393A9.065 9.065 0 0112 15a9.065 9.065 0 00-6.23-.693L5 14.5m14.8.8l1.402 1.402c1.232 1.232.65 3.318-1.067 3.611A48.309 48.309 0 0112 21c-2.773 0-5.491-.235-8.135-.687-1.718-.293-2.3-2.379-1.067-3.61L5 14.5"
      }));
    }
    var ForwardRef = React58.forwardRef(BeakerIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BellAlertIcon.js
var require_BellAlertIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BellAlertIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellAlertIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5"
      }));
    }
    var ForwardRef = React58.forwardRef(BellAlertIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BellSlashIcon.js
var require_BellSlashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BellSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.143 17.082a24.248 24.248 0 003.844.148m-3.844-.148a23.856 23.856 0 01-5.455-1.31 8.964 8.964 0 002.3-5.542m3.155 6.852a3 3 0 005.667 1.97m1.965-2.277L21 21m-4.225-4.225a23.81 23.81 0 003.536-1.003A8.967 8.967 0 0118 9.75V9A6 6 0 006.53 6.53m10.245 10.245L6.53 6.53M3 3l3.53 3.53"
      }));
    }
    var ForwardRef = React58.forwardRef(BellSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BellSnoozeIcon.js
var require_BellSnoozeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BellSnoozeIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellSnoozeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M10.5 8.25h3l-3 4.5h3"
      }));
    }
    var ForwardRef = React58.forwardRef(BellSnoozeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BellIcon.js
var require_BellIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BellIcon.js"(exports, module) {
    var React58 = __require("react");
    function BellIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0"
      }));
    }
    var ForwardRef = React58.forwardRef(BellIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BoltSlashIcon.js
var require_BoltSlashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BoltSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function BoltSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.412 15.655L9.75 21.75l3.745-4.012M9.257 13.5H3.75l2.659-2.849m2.048-2.194L14.25 2.25 12 10.5h8.25l-4.707 5.043M8.457 8.457L3 3m5.457 5.457l7.086 7.086m0 0L21 21"
      }));
    }
    var ForwardRef = React58.forwardRef(BoltSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BoltIcon.js
var require_BoltIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BoltIcon.js"(exports, module) {
    var React58 = __require("react");
    function BoltIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(BoltIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BookOpenIcon.js
var require_BookOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BookOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25"
      }));
    }
    var ForwardRef = React58.forwardRef(BookOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BookmarkSlashIcon.js
var require_BookmarkSlashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BookmarkSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookmarkSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 3l1.664 1.664M21 21l-1.5-1.5m-5.485-1.242L12 17.25 4.5 21V8.742m.164-4.078a2.15 2.15 0 011.743-1.342 48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185V19.5M4.664 4.664L19.5 19.5"
      }));
    }
    var ForwardRef = React58.forwardRef(BookmarkSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BookmarkSquareIcon.js
var require_BookmarkSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BookmarkSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookmarkSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.5 3.75V16.5L12 14.25 7.5 16.5V3.75m9 0H18A2.25 2.25 0 0120.25 6v12A2.25 2.25 0 0118 20.25H6A2.25 2.25 0 013.75 18V6A2.25 2.25 0 016 3.75h1.5m9 0h-9"
      }));
    }
    var ForwardRef = React58.forwardRef(BookmarkSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BookmarkIcon.js
var require_BookmarkIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BookmarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function BookmarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(BookmarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BriefcaseIcon.js
var require_BriefcaseIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BriefcaseIcon.js"(exports, module) {
    var React58 = __require("react");
    function BriefcaseIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 00.75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 00-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0112 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 01-.673-.38m0 0A2.18 2.18 0 013 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 013.413-.387m7.5 0V5.25A2.25 2.25 0 0013.5 3h-3a2.25 2.25 0 00-2.25 2.25v.894m7.5 0a48.667 48.667 0 00-7.5 0M12 12.75h.008v.008H12v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(BriefcaseIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BugAntIcon.js
var require_BugAntIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BugAntIcon.js"(exports, module) {
    var React58 = __require("react");
    function BugAntIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 12.75c1.148 0 2.278.08 3.383.237 1.037.146 1.866.966 1.866 2.013 0 3.728-2.35 6.75-5.25 6.75S6.75 18.728 6.75 15c0-1.046.83-1.867 1.866-2.013A24.204 24.204 0 0112 12.75zm0 0c2.883 0 5.647.508 8.207 1.44a23.91 23.91 0 01-1.152 6.06M12 12.75c-2.883 0-5.647.508-8.208 1.44.125 2.104.52 4.136 1.153 6.06M12 12.75a2.25 2.25 0 002.248-2.354M12 12.75a2.25 2.25 0 01-2.248-2.354M12 8.25c.995 0 1.971-.08 2.922-.236.403-.066.74-.358.795-.762a3.778 3.778 0 00-.399-2.25M12 8.25c-.995 0-1.97-.08-2.922-.236-.402-.066-.74-.358-.795-.762a3.734 3.734 0 01.4-2.253M12 8.25a2.25 2.25 0 00-2.248 2.146M12 8.25a2.25 2.25 0 012.248 2.146M8.683 5a6.032 6.032 0 01-1.155-1.002c.07-.63.27-1.222.574-1.747m.581 2.749A3.75 3.75 0 0115.318 5m0 0c.427-.283.815-.62 1.155-.999a4.471 4.471 0 00-.575-1.752M4.921 6a24.048 24.048 0 00-.392 3.314c1.668.546 3.416.914 5.223 1.082M19.08 6c.205 1.08.337 2.187.392 3.314a23.882 23.882 0 01-5.223 1.082"
      }));
    }
    var ForwardRef = React58.forwardRef(BugAntIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BuildingLibraryIcon.js
var require_BuildingLibraryIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BuildingLibraryIcon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingLibraryIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingLibraryIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BuildingOffice2Icon.js
var require_BuildingOffice2Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BuildingOffice2Icon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingOffice2Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 21h19.5m-18-18v18m10.5-18v18m6-13.5V21M6.75 6.75h.75m-.75 3h.75m-.75 3h.75m3-6h.75m-.75 3h.75m-.75 3h.75M6.75 21v-3.375c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21M3 3h12m-.75 4.5H21m-3.75 3.75h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingOffice2Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BuildingOfficeIcon.js
var require_BuildingOfficeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BuildingOfficeIcon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingOfficeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingOfficeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/BuildingStorefrontIcon.js
var require_BuildingStorefrontIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/BuildingStorefrontIcon.js"(exports, module) {
    var React58 = __require("react");
    function BuildingStorefrontIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.5 21v-7.5a.75.75 0 01.75-.75h3a.75.75 0 01.75.75V21m-4.5 0H2.36m11.14 0H18m0 0h3.64m-1.39 0V9.349m-16.5 11.65V9.35m0 0a3.001 3.001 0 003.75-.615A2.993 2.993 0 009.75 9.75c.896 0 1.7-.393 2.25-1.016a2.993 2.993 0 002.25 1.016c.896 0 1.7-.393 2.25-1.016a3.001 3.001 0 003.75.614m-16.5 0a3.004 3.004 0 01-.621-4.72L4.318 3.44A1.5 1.5 0 015.378 3h13.243a1.5 1.5 0 011.06.44l1.19 1.189a3 3 0 01-.621 4.72m-13.5 8.65h3.75a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75H6.75a.75.75 0 00-.75.75v3.75c0 .415.336.75.75.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(BuildingStorefrontIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CakeIcon.js
var require_CakeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CakeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CakeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 8.25v-1.5m0 1.5c-1.355 0-2.697.056-4.024.166C6.845 8.51 6 9.473 6 10.608v2.513m6-4.87c1.355 0 2.697.055 4.024.165C17.155 8.51 18 9.473 18 10.608v2.513m-3-4.87v-1.5m-6 1.5v-1.5m12 9.75l-1.5.75a3.354 3.354 0 01-3 0 3.354 3.354 0 00-3 0 3.354 3.354 0 01-3 0 3.354 3.354 0 00-3 0 3.354 3.354 0 01-3 0L3 16.5m15-3.38a48.474 48.474 0 00-6-.37c-2.032 0-4.034.125-6 .37m12 0c.39.049.777.102 1.163.16 1.07.16 1.837 1.094 1.837 2.175v5.17c0 .62-.504 1.124-1.125 1.124H4.125A1.125 1.125 0 013 20.625v-5.17c0-1.08.768-2.014 1.837-2.174A47.78 47.78 0 016 13.12M12.265 3.11a.375.375 0 11-.53 0L12 2.845l.265.265zm-3 0a.375.375 0 11-.53 0L9 2.845l.265.265zm6 0a.375.375 0 11-.53 0L15 2.845l.265.265z"
      }));
    }
    var ForwardRef = React58.forwardRef(CakeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CalculatorIcon.js
var require_CalculatorIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CalculatorIcon.js"(exports, module) {
    var React58 = __require("react");
    function CalculatorIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V13.5zm0 2.25h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V18zm2.498-6.75h.007v.008h-.007v-.008zm0 2.25h.007v.008h-.007V13.5zm0 2.25h.007v.008h-.007v-.008zm0 2.25h.007v.008h-.007V18zm2.504-6.75h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V13.5zm0 2.25h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V18zm2.498-6.75h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V13.5zM8.25 6h7.5v2.25h-7.5V6zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 002.25 2.25h10.5a2.25 2.25 0 002.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0012 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(CalculatorIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CalendarDaysIcon.js
var require_CalendarDaysIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CalendarDaysIcon.js"(exports, module) {
    var React58 = __require("react");
    function CalendarDaysIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z"
      }));
    }
    var ForwardRef = React58.forwardRef(CalendarDaysIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CalendarIcon.js
var require_CalendarIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CalendarIcon.js"(exports, module) {
    var React58 = __require("react");
    function CalendarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(CalendarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CameraIcon.js
var require_CameraIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CameraIcon.js"(exports, module) {
    var React58 = __require("react");
    function CameraIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(CameraIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChartBarSquareIcon.js
var require_ChartBarSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChartBarSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChartBarSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 14.25v2.25m3-4.5v4.5m3-6.75v6.75m3-9v9M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChartBarSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChartBarIcon.js
var require_ChartBarIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChartBarIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChartBarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 013 19.875v-6.75zM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V8.625zM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V4.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChartBarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChartPieIcon.js
var require_ChartPieIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChartPieIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChartPieIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.5 6a7.5 7.5 0 107.5 7.5h-7.5V6z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.5 10.5H21A7.5 7.5 0 0013.5 3v7.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChartPieIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterTextIcon.js
var require_ChatBubbleBottomCenterTextIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterTextIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleBottomCenterTextIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleBottomCenterTextIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterIcon.js
var require_ChatBubbleBottomCenterIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleBottomCenterIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.068.157 2.148.279 3.238.364.466.037.893.281 1.153.671L12 21l2.652-3.978c.26-.39.687-.634 1.153-.67 1.09-.086 2.17-.208 3.238-.365 1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleBottomCenterIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleLeftEllipsisIcon.js
var require_ChatBubbleLeftEllipsisIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleLeftEllipsisIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleLeftEllipsisIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleLeftEllipsisIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleLeftRightIcon.js
var require_ChatBubbleLeftRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleLeftRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleLeftRightIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 01-.825-.242m9.345-8.334a2.126 2.126 0 00-.476-.095 48.64 48.64 0 00-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0011.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleLeftRightIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleLeftIcon.js
var require_ChatBubbleLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.076-4.076a1.526 1.526 0 011.037-.443 48.282 48.282 0 005.68-.494c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftEllipsisIcon.js
var require_ChatBubbleOvalLeftEllipsisIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftEllipsisIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleOvalLeftEllipsisIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.625 12a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 01-2.555-.337A5.972 5.972 0 015.41 20.97a5.969 5.969 0 01-.474-.065 4.48 4.48 0 00.978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleOvalLeftEllipsisIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftIcon.js
var require_ChatBubbleOvalLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChatBubbleOvalLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 20.25c4.97 0 9-3.694 9-8.25s-4.03-8.25-9-8.25S3 7.444 3 12c0 2.104.859 4.023 2.273 5.48.432.447.74 1.04.586 1.641a4.483 4.483 0 01-.923 1.785A5.969 5.969 0 006 21c1.282 0 2.47-.402 3.445-1.087.81.22 1.668.337 2.555.337z"
      }));
    }
    var ForwardRef = React58.forwardRef(ChatBubbleOvalLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CheckBadgeIcon.js
var require_CheckBadgeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CheckBadgeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CheckBadgeIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 12.75L11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 01-1.043 3.296 3.745 3.745 0 01-3.296 1.043A3.745 3.745 0 0112 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 01-3.296-1.043 3.745 3.745 0 01-1.043-3.296A3.745 3.745 0 013 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 011.043-3.296 3.746 3.746 0 013.296-1.043A3.746 3.746 0 0112 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 013.296 1.043 3.746 3.746 0 011.043 3.296A3.745 3.745 0 0121 12z"
      }));
    }
    var ForwardRef = React58.forwardRef(CheckBadgeIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CheckCircleIcon.js
var require_CheckCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CheckCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function CheckCircleIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CheckCircleIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CheckIcon.js
var require_CheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function CheckIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 12.75l6 6 9-13.5"
      }));
    }
    var ForwardRef = React58.forwardRef(CheckIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronDoubleDownIcon.js
var require_ChevronDoubleDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronDoubleDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 5.25l-7.5 7.5-7.5-7.5m15 6l-7.5 7.5-7.5-7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronDoubleLeftIcon.js
var require_ChevronDoubleLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronDoubleLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M18.75 19.5l-7.5-7.5 7.5-7.5m-6 15L5.25 12l7.5-7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronDoubleRightIcon.js
var require_ChevronDoubleRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronDoubleRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.25 4.5l7.5 7.5-7.5 7.5m-6-15l7.5 7.5-7.5 7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronDoubleUpIcon.js
var require_ChevronDoubleUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronDoubleUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDoubleUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 12.75l7.5-7.5 7.5 7.5m-15 6l7.5-7.5 7.5 7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDoubleUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronDownIcon.js
var require_ChevronDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 8.25l-7.5 7.5-7.5-7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronLeftIcon.js
var require_ChevronLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 19.5L8.25 12l7.5-7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronRightIcon.js
var require_ChevronRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 4.5l7.5 7.5-7.5 7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronUpDownIcon.js
var require_ChevronUpDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronUpDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronUpDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronUpDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ChevronUpIcon.js
var require_ChevronUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ChevronUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function ChevronUpIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 15.75l7.5-7.5 7.5 7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(ChevronUpIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CircleStackIcon.js
var require_CircleStackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CircleStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function CircleStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125"
      }));
    }
    var ForwardRef = React58.forwardRef(CircleStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ClipboardDocumentCheckIcon.js
var require_ClipboardDocumentCheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ClipboardDocumentCheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardDocumentCheckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardDocumentCheckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ClipboardDocumentListIcon.js
var require_ClipboardDocumentListIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ClipboardDocumentListIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardDocumentListIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardDocumentListIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ClipboardDocumentIcon.js
var require_ClipboardDocumentIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ClipboardDocumentIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardDocumentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardDocumentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ClipboardIcon.js
var require_ClipboardIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ClipboardIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClipboardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184"
      }));
    }
    var ForwardRef = React58.forwardRef(ClipboardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ClockIcon.js
var require_ClockIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ClockIcon.js"(exports, module) {
    var React58 = __require("react");
    function ClockIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ClockIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CloudArrowDownIcon.js
var require_CloudArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CloudArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function CloudArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 9.75v6.75m0 0l-3-3m3 3l3-3m-8.25 6a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(CloudArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CloudArrowUpIcon.js
var require_CloudArrowUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CloudArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function CloudArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 16.5V9.75m0 0l3 3m-3-3l-3 3M6.75 19.5a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(CloudArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CloudIcon.js
var require_CloudIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CloudIcon.js"(exports, module) {
    var React58 = __require("react");
    function CloudIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 15a4.5 4.5 0 004.5 4.5H18a3.75 3.75 0 001.332-7.257 3 3 0 00-3.758-3.848 5.25 5.25 0 00-10.233 2.33A4.502 4.502 0 002.25 15z"
      }));
    }
    var ForwardRef = React58.forwardRef(CloudIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CodeBracketSquareIcon.js
var require_CodeBracketSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CodeBracketSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function CodeBracketSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.25 9.75L16.5 12l-2.25 2.25m-4.5 0L7.5 12l2.25-2.25M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(CodeBracketSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CodeBracketIcon.js
var require_CodeBracketIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CodeBracketIcon.js"(exports, module) {
    var React58 = __require("react");
    function CodeBracketIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M17.25 6.75L22.5 12l-5.25 5.25m-10.5 0L1.5 12l5.25-5.25m7.5-3l-4.5 16.5"
      }));
    }
    var ForwardRef = React58.forwardRef(CodeBracketIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Cog6ToothIcon.js
var require_Cog6ToothIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Cog6ToothIcon.js"(exports, module) {
    var React58 = __require("react");
    function Cog6ToothIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 011.37.49l1.296 2.247a1.125 1.125 0 01-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 010 .255c-.007.378.138.75.43.99l1.005.828c.424.35.534.954.26 1.43l-1.298 2.247a1.125 1.125 0 01-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 01-.22.128c-.331.183-.581.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 01-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 01-1.369-.49l-1.297-2.247a1.125 1.125 0 01.26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.932 6.932 0 010-.255c.007-.378-.138-.75-.43-.99l-1.004-.828a1.125 1.125 0 01-.26-1.43l1.297-2.247a1.125 1.125 0 011.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(Cog6ToothIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Cog8ToothIcon.js
var require_Cog8ToothIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Cog8ToothIcon.js"(exports, module) {
    var React58 = __require("react");
    function Cog8ToothIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(Cog8ToothIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CogIcon.js
var require_CogIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CogIcon.js"(exports, module) {
    var React58 = __require("react");
    function CogIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.5 12a7.5 7.5 0 0015 0m-15 0a7.5 7.5 0 1115 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077l1.41-.513m14.095-5.13l1.41-.513M5.106 17.785l1.15-.964m11.49-9.642l1.149-.964M7.501 19.795l.75-1.3m7.5-12.99l.75-1.3m-6.063 16.658l.26-1.477m2.605-14.772l.26-1.477m0 17.726l-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205L12 12m6.894 5.785l-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864l-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495"
      }));
    }
    var ForwardRef = React58.forwardRef(CogIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CommandLineIcon.js
var require_CommandLineIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CommandLineIcon.js"(exports, module) {
    var React58 = __require("react");
    function CommandLineIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.75 7.5l3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0021 18V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v12a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(CommandLineIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ComputerDesktopIcon.js
var require_ComputerDesktopIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ComputerDesktopIcon.js"(exports, module) {
    var React58 = __require("react");
    function ComputerDesktopIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"
      }));
    }
    var ForwardRef = React58.forwardRef(ComputerDesktopIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CpuChipIcon.js
var require_CpuChipIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CpuChipIcon.js"(exports, module) {
    var React58 = __require("react");
    function CpuChipIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 3v1.5M4.5 8.25H3m18 0h-1.5M4.5 12H3m18 0h-1.5m-15 3.75H3m18 0h-1.5M8.25 19.5V21M12 3v1.5m0 15V21m3.75-18v1.5m0 15V21m-9-1.5h10.5a2.25 2.25 0 002.25-2.25V6.75a2.25 2.25 0 00-2.25-2.25H6.75A2.25 2.25 0 004.5 6.75v10.5a2.25 2.25 0 002.25 2.25zm.75-12h9v9h-9v-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(CpuChipIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CreditCardIcon.js
var require_CreditCardIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CreditCardIcon.js"(exports, module) {
    var React58 = __require("react");
    function CreditCardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(CreditCardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CubeTransparentIcon.js
var require_CubeTransparentIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CubeTransparentIcon.js"(exports, module) {
    var React58 = __require("react");
    function CubeTransparentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 7.5l-2.25-1.313M21 7.5v2.25m0-2.25l-2.25 1.313M3 7.5l2.25-1.313M3 7.5l2.25 1.313M3 7.5v2.25m9 3l2.25-1.313M12 12.75l-2.25-1.313M12 12.75V15m0 6.75l2.25-1.313M12 21.75V19.5m0 2.25l-2.25-1.313m0-16.875L12 2.25l2.25 1.313M21 14.25v2.25l-2.25 1.313m-13.5 0L3 16.5v-2.25"
      }));
    }
    var ForwardRef = React58.forwardRef(CubeTransparentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CubeIcon.js
var require_CubeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CubeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CubeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 7.5l-9-5.25L3 7.5m18 0l-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9"
      }));
    }
    var ForwardRef = React58.forwardRef(CubeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CurrencyBangladeshiIcon.js
var require_CurrencyBangladeshiIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CurrencyBangladeshiIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyBangladeshiIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 7.5l.415-.207a.75.75 0 011.085.67V10.5m0 0h6m-6 0h-1.5m1.5 0v5.438c0 .354.161.697.473.865a3.751 3.751 0 005.452-2.553c.083-.409-.263-.75-.68-.75h-.745M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyBangladeshiIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CurrencyDollarIcon.js
var require_CurrencyDollarIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CurrencyDollarIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyDollarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 6v12m-3-2.818l.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyDollarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CurrencyEuroIcon.js
var require_CurrencyEuroIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CurrencyEuroIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyEuroIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.25 7.756a4.5 4.5 0 100 8.488M7.5 10.5h5.25m-5.25 3h5.25M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyEuroIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CurrencyPoundIcon.js
var require_CurrencyPoundIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CurrencyPoundIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyPoundIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.121 7.629A3 3 0 009.017 9.43c-.023.212-.002.425.028.636l.506 3.541a4.5 4.5 0 01-.43 2.65L9 16.5l1.539-.513a2.25 2.25 0 011.422 0l.655.218a2.25 2.25 0 001.718-.122L15 15.75M8.25 12H12m9 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyPoundIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CurrencyRupeeIcon.js
var require_CurrencyRupeeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CurrencyRupeeIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyRupeeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 8.25H9m6 3H9m3 6l-3-3h1.5a3 3 0 100-6M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyRupeeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CurrencyYenIcon.js
var require_CurrencyYenIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CurrencyYenIcon.js"(exports, module) {
    var React58 = __require("react");
    function CurrencyYenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 7.5l3 4.5m0 0l3-4.5M12 12v5.25M15 12H9m6 3H9m12-3a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(CurrencyYenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CursorArrowRaysIcon.js
var require_CursorArrowRaysIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CursorArrowRaysIcon.js"(exports, module) {
    var React58 = __require("react");
    function CursorArrowRaysIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zM12 2.25V4.5m5.834.166l-1.591 1.591M20.25 10.5H18M7.757 14.743l-1.59 1.59M6 10.5H3.75m4.007-4.243l-1.59-1.59"
      }));
    }
    var ForwardRef = React58.forwardRef(CursorArrowRaysIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/CursorArrowRippleIcon.js
var require_CursorArrowRippleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/CursorArrowRippleIcon.js"(exports, module) {
    var React58 = __require("react");
    function CursorArrowRippleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zm-7.518-.267A8.25 8.25 0 1120.25 10.5M8.288 14.212A5.25 5.25 0 1117.25 10.5"
      }));
    }
    var ForwardRef = React58.forwardRef(CursorArrowRippleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DevicePhoneMobileIcon.js
var require_DevicePhoneMobileIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DevicePhoneMobileIcon.js"(exports, module) {
    var React58 = __require("react");
    function DevicePhoneMobileIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"
      }));
    }
    var ForwardRef = React58.forwardRef(DevicePhoneMobileIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DeviceTabletIcon.js
var require_DeviceTabletIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DeviceTabletIcon.js"(exports, module) {
    var React58 = __require("react");
    function DeviceTabletIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.5 19.5h3m-6.75 2.25h10.5a2.25 2.25 0 002.25-2.25v-15a2.25 2.25 0 00-2.25-2.25H6.75A2.25 2.25 0 004.5 4.5v15a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(DeviceTabletIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentArrowDownIcon.js
var require_DocumentArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m.75 12l3 3m0 0l3-3m-3 3v-6m-1.5-9H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentArrowUpIcon.js
var require_DocumentArrowUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentArrowUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentArrowUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentArrowUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentChartBarIcon.js
var require_DocumentChartBarIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentChartBarIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentChartBarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25M9 16.5v.75m3-3v3M15 12v5.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentChartBarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentCheckIcon.js
var require_DocumentCheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentCheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentCheckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentCheckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentDuplicateIcon.js
var require_DocumentDuplicateIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentDuplicateIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentDuplicateIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentDuplicateIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentMagnifyingGlassIcon.js
var require_DocumentMagnifyingGlassIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentMagnifyingGlassIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentMagnifyingGlassIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentMagnifyingGlassIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentMinusIcon.js
var require_DocumentMinusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentPlusIcon.js
var require_DocumentPlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m3.75 9v6m3-3H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentTextIcon.js
var require_DocumentTextIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentTextIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentTextIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentTextIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/DocumentIcon.js
var require_DocumentIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/DocumentIcon.js"(exports, module) {
    var React58 = __require("react");
    function DocumentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(DocumentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EllipsisHorizontalCircleIcon.js
var require_EllipsisHorizontalCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EllipsisHorizontalCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function EllipsisHorizontalCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.625 12a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(EllipsisHorizontalCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EllipsisHorizontalIcon.js
var require_EllipsisHorizontalIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EllipsisHorizontalIcon.js"(exports, module) {
    var React58 = __require("react");
    function EllipsisHorizontalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(EllipsisHorizontalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EllipsisVerticalIcon.js
var require_EllipsisVerticalIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EllipsisVerticalIcon.js"(exports, module) {
    var React58 = __require("react");
    function EllipsisVerticalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(EllipsisVerticalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EnvelopeOpenIcon.js
var require_EnvelopeOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EnvelopeOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function EnvelopeOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21.75 9v.906a2.25 2.25 0 01-1.183 1.981l-6.478 3.488M2.25 9v.906a2.25 2.25 0 001.183 1.981l6.478 3.488m8.839 2.51l-4.66-2.51m0 0l-1.023-.55a2.25 2.25 0 00-2.134 0l-1.022.55m0 0l-4.661 2.51m16.5 1.615a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V8.844a2.25 2.25 0 011.183-1.98l7.5-4.04a2.25 2.25 0 012.134 0l7.5 4.04a2.25 2.25 0 011.183 1.98V19.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(EnvelopeOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EnvelopeIcon.js
var require_EnvelopeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EnvelopeIcon.js"(exports, module) {
    var React58 = __require("react");
    function EnvelopeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75"
      }));
    }
    var ForwardRef = React58.forwardRef(EnvelopeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ExclamationCircleIcon.js
var require_ExclamationCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ExclamationCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ExclamationCircleIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(ExclamationCircleIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ExclamationTriangleIcon.js
var require_ExclamationTriangleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ExclamationTriangleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ExclamationTriangleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(ExclamationTriangleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EyeDropperIcon.js
var require_EyeDropperIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EyeDropperIcon.js"(exports, module) {
    var React58 = __require("react");
    function EyeDropperIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 11.25l1.5 1.5.75-.75V8.758l2.276-.61a3 3 0 10-3.675-3.675l-.61 2.277H12l-.75.75 1.5 1.5M15 11.25l-8.47 8.47c-.34.34-.8.53-1.28.53s-.94.19-1.28.53l-.97.97-.75-.75.97-.97c.34-.34.53-.8.53-1.28s.19-.94.53-1.28L12.75 9M15 11.25L12.75 9"
      }));
    }
    var ForwardRef = React58.forwardRef(EyeDropperIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EyeSlashIcon.js
var require_EyeSlashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EyeSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function EyeSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88"
      }));
    }
    var ForwardRef = React58.forwardRef(EyeSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/EyeIcon.js
var require_EyeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/EyeIcon.js"(exports, module) {
    var React58 = __require("react");
    function EyeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(EyeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FaceFrownIcon.js
var require_FaceFrownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FaceFrownIcon.js"(exports, module) {
    var React58 = __require("react");
    function FaceFrownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(FaceFrownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FaceSmileIcon.js
var require_FaceSmileIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FaceSmileIcon.js"(exports, module) {
    var React58 = __require("react");
    function FaceSmileIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.182 15.182a4.5 4.5 0 01-6.364 0M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(FaceSmileIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FilmIcon.js
var require_FilmIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FilmIcon.js"(exports, module) {
    var React58 = __require("react");
    function FilmIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0118 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0118 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 016 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5"
      }));
    }
    var ForwardRef = React58.forwardRef(FilmIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FingerPrintIcon.js
var require_FingerPrintIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FingerPrintIcon.js"(exports, module) {
    var React58 = __require("react");
    function FingerPrintIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.864 4.243A7.5 7.5 0 0119.5 10.5c0 2.92-.556 5.709-1.568 8.268M5.742 6.364A7.465 7.465 0 004.5 10.5a7.464 7.464 0 01-1.15 3.993m1.989 3.559A11.209 11.209 0 008.25 10.5a3.75 3.75 0 117.5 0c0 .527-.021 1.049-.064 1.565M12 10.5a14.94 14.94 0 01-3.6 9.75m6.633-4.596a18.666 18.666 0 01-2.485 5.33"
      }));
    }
    var ForwardRef = React58.forwardRef(FingerPrintIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FireIcon.js
var require_FireIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FireIcon.js"(exports, module) {
    var React58 = __require("react");
    function FireIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z"
      }));
    }
    var ForwardRef = React58.forwardRef(FireIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FlagIcon.js
var require_FlagIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FlagIcon.js"(exports, module) {
    var React58 = __require("react");
    function FlagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 3v1.5M3 21v-6m0 0l2.77-.693a9 9 0 016.208.682l.108.054a9 9 0 006.086.71l3.114-.732a48.524 48.524 0 01-.005-10.499l-3.11.732a9 9 0 01-6.085-.711l-.108-.054a9 9 0 00-6.208-.682L3 4.5M3 15V4.5"
      }));
    }
    var ForwardRef = React58.forwardRef(FlagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FolderArrowDownIcon.js
var require_FolderArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FolderArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 13.5l3 3m0 0l3-3m-3 3v-6m1.06-4.19l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FolderMinusIcon.js
var require_FolderMinusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FolderMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 13.5H9m4.06-7.19l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FolderOpenIcon.js
var require_FolderOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FolderOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 00-1.883 2.542l.857 6a2.25 2.25 0 002.227 1.932H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-1.883-2.542m-16.5 0V6A2.25 2.25 0 016 3.75h3.879a1.5 1.5 0 011.06.44l2.122 2.12a1.5 1.5 0 001.06.44H18A2.25 2.25 0 0120.25 9v.776"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FolderPlusIcon.js
var require_FolderPlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FolderPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 10.5v6m3-3H9m4.06-7.19l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FolderIcon.js
var require_FolderIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FolderIcon.js"(exports, module) {
    var React58 = __require("react");
    function FolderIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
      }));
    }
    var ForwardRef = React58.forwardRef(FolderIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ForwardIcon.js
var require_ForwardIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ForwardIcon.js"(exports, module) {
    var React58 = __require("react");
    function ForwardIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062A1.125 1.125 0 013 16.81V8.688zM12.75 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062a1.125 1.125 0 01-1.683-.977V8.688z"
      }));
    }
    var ForwardRef = React58.forwardRef(ForwardIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/FunnelIcon.js
var require_FunnelIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/FunnelIcon.js"(exports, module) {
    var React58 = __require("react");
    function FunnelIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z"
      }));
    }
    var ForwardRef = React58.forwardRef(FunnelIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GifIcon.js
var require_GifIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GifIcon.js"(exports, module) {
    var React58 = __require("react");
    function GifIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12.75 8.25v7.5m6-7.5h-3V12m0 0v3.75m0-3.75H18M9.75 9.348c-1.03-1.464-2.698-1.464-3.728 0-1.03 1.465-1.03 3.84 0 5.304 1.03 1.464 2.699 1.464 3.728 0V12h-1.5M4.5 19.5h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(GifIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GiftTopIcon.js
var require_GiftTopIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GiftTopIcon.js"(exports, module) {
    var React58 = __require("react");
    function GiftTopIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 3.75v16.5M2.25 12h19.5M6.375 17.25a4.875 4.875 0 004.875-4.875V12m6.375 5.25a4.875 4.875 0 01-4.875-4.875V12m-9 8.25h16.5a1.5 1.5 0 001.5-1.5V5.25a1.5 1.5 0 00-1.5-1.5H3.75a1.5 1.5 0 00-1.5 1.5v13.5a1.5 1.5 0 001.5 1.5zm12.621-9.44c-1.409 1.41-4.242 1.061-4.242 1.061s-.349-2.833 1.06-4.242a2.25 2.25 0 013.182 3.182zM10.773 7.63c1.409 1.409 1.06 4.242 1.06 4.242S9 12.22 7.592 10.811a2.25 2.25 0 113.182-3.182z"
      }));
    }
    var ForwardRef = React58.forwardRef(GiftTopIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GiftIcon.js
var require_GiftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GiftIcon.js"(exports, module) {
    var React58 = __require("react");
    function GiftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 11.25v8.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5v-8.25M12 4.875A2.625 2.625 0 109.375 7.5H12m0-2.625V7.5m0-2.625A2.625 2.625 0 1114.625 7.5H12m0 0V21m-8.625-9.75h18c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125h-18c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(GiftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GlobeAltIcon.js
var require_GlobeAltIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GlobeAltIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeAltIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeAltIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GlobeAmericasIcon.js
var require_GlobeAmericasIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GlobeAmericasIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeAmericasIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeAmericasIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GlobeAsiaAustraliaIcon.js
var require_GlobeAsiaAustraliaIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GlobeAsiaAustraliaIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeAsiaAustraliaIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12.75 3.03v.568c0 .334.148.65.405.864l1.068.89c.442.369.535 1.01.216 1.49l-.51.766a2.25 2.25 0 01-1.161.886l-.143.048a1.107 1.107 0 00-.57 1.664c.369.555.169 1.307-.427 1.605L9 13.125l.423 1.059a.956.956 0 01-1.652.928l-.679-.906a1.125 1.125 0 00-1.906.172L4.5 15.75l-.612.153M12.75 3.031a9 9 0 00-8.862 12.872M12.75 3.031a9 9 0 016.69 14.036m0 0l-.177-.529A2.25 2.25 0 0017.128 15H16.5l-.324-.324a1.453 1.453 0 00-2.328.377l-.036.073a1.586 1.586 0 01-.982.816l-.99.282c-.55.157-.894.702-.8 1.267l.073.438c.08.474.49.821.97.821.846 0 1.598.542 1.865 1.345l.215.643m5.276-3.67a9.012 9.012 0 01-5.276 3.67m0 0a9 9 0 01-10.275-4.835M15.75 9c0 .896-.393 1.7-1.016 2.25"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeAsiaAustraliaIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/GlobeEuropeAfricaIcon.js
var require_GlobeEuropeAfricaIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/GlobeEuropeAfricaIcon.js"(exports, module) {
    var React58 = __require("react");
    function GlobeEuropeAfricaIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.893 13.393l-1.135-1.135a2.252 2.252 0 01-.421-.585l-1.08-2.16a.414.414 0 00-.663-.107.827.827 0 01-.812.21l-1.273-.363a.89.89 0 00-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 01-1.81 1.025 1.055 1.055 0 01-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 01-1.383-2.46l.007-.042a2.25 2.25 0 01.29-.787l.09-.15a2.25 2.25 0 012.37-1.048l1.178.236a1.125 1.125 0 001.302-.795l.208-.73a1.125 1.125 0 00-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 01-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 01-1.458-1.137l1.411-2.353a2.25 2.25 0 00.286-.76m11.928 9.869A9 9 0 008.965 3.525m11.928 9.868A9 9 0 118.965 3.525"
      }));
    }
    var ForwardRef = React58.forwardRef(GlobeEuropeAfricaIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HandRaisedIcon.js
var require_HandRaisedIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HandRaisedIcon.js"(exports, module) {
    var React58 = __require("react");
    function HandRaisedIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.05 4.575a1.575 1.575 0 10-3.15 0v3m3.15-3v-1.5a1.575 1.575 0 013.15 0v1.5m-3.15 0l.075 5.925m3.075.75V4.575m0 0a1.575 1.575 0 013.15 0V15M6.9 7.575a1.575 1.575 0 10-3.15 0v8.175a6.75 6.75 0 006.75 6.75h2.018a5.25 5.25 0 003.712-1.538l1.732-1.732a5.25 5.25 0 001.538-3.712l.003-2.024a.668.668 0 01.198-.471 1.575 1.575 0 10-2.228-2.228 3.818 3.818 0 00-1.12 2.687M6.9 7.575V12m6.27 4.318A4.49 4.49 0 0116.35 15m.002 0h-.002"
      }));
    }
    var ForwardRef = React58.forwardRef(HandRaisedIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HandThumbDownIcon.js
var require_HandThumbDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HandThumbDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function HandThumbDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 15h2.25m8.024-9.75c.011.05.028.1.052.148.591 1.2.924 2.55.924 3.977a8.96 8.96 0 01-.999 4.125m.023-8.25c-.076-.365.183-.75.575-.75h.908c.889 0 1.713.518 1.972 1.368.339 1.11.521 2.287.521 3.507 0 1.553-.295 3.036-.831 4.398C20.613 14.547 19.833 15 19 15h-1.053c-.472 0-.745-.556-.5-.96a8.95 8.95 0 00.303-.54m.023-8.25H16.48a4.5 4.5 0 01-1.423-.23l-3.114-1.04a4.5 4.5 0 00-1.423-.23H6.504c-.618 0-1.217.247-1.605.729A11.95 11.95 0 002.25 12c0 .434.023.863.068 1.285C2.427 14.306 3.346 15 4.372 15h3.126c.618 0 .991.724.725 1.282A7.471 7.471 0 007.5 19.5a2.25 2.25 0 002.25 2.25.75.75 0 00.75-.75v-.633c0-.573.11-1.14.322-1.672.304-.76.93-1.33 1.653-1.715a9.04 9.04 0 002.86-2.4c.498-.634 1.226-1.08 2.032-1.08h.384"
      }));
    }
    var ForwardRef = React58.forwardRef(HandThumbDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HandThumbUpIcon.js
var require_HandThumbUpIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HandThumbUpIcon.js"(exports, module) {
    var React58 = __require("react");
    function HandThumbUpIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.633 10.5c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75A2.25 2.25 0 0116.5 4.5c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23H5.904M14.25 9h2.25M5.904 18.75c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 01-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 10.203 4.167 9.75 5 9.75h1.053c.472 0 .745.556.5.96a8.958 8.958 0 00-1.302 4.665c0 1.194.232 2.333.654 3.375z"
      }));
    }
    var ForwardRef = React58.forwardRef(HandThumbUpIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HashtagIcon.js
var require_HashtagIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HashtagIcon.js"(exports, module) {
    var React58 = __require("react");
    function HashtagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"
      }));
    }
    var ForwardRef = React58.forwardRef(HashtagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HeartIcon.js
var require_HeartIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HeartIcon.js"(exports, module) {
    var React58 = __require("react");
    function HeartIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"
      }));
    }
    var ForwardRef = React58.forwardRef(HeartIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HomeModernIcon.js
var require_HomeModernIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HomeModernIcon.js"(exports, module) {
    var React58 = __require("react");
    function HomeModernIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 21v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21m0 0h4.5V3.545M12.75 21h7.5V10.75M2.25 21h1.5m18 0h-18M2.25 9l4.5-1.636M18.75 3l-1.5.545m0 6.205l3 1m1.5.5l-1.5-.5M6.75 7.364V3h-3v18m3-13.636l10.5-3.819"
      }));
    }
    var ForwardRef = React58.forwardRef(HomeModernIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/HomeIcon.js
var require_HomeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/HomeIcon.js"(exports, module) {
    var React58 = __require("react");
    function HomeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"
      }));
    }
    var ForwardRef = React58.forwardRef(HomeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/IdentificationIcon.js
var require_IdentificationIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/IdentificationIcon.js"(exports, module) {
    var React58 = __require("react");
    function IdentificationIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 9h3.75M15 12h3.75M15 15h3.75M4.5 19.5h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5zm6-10.125a1.875 1.875 0 11-3.75 0 1.875 1.875 0 013.75 0zm1.294 6.336a6.721 6.721 0 01-3.17.789 6.721 6.721 0 01-3.168-.789 3.376 3.376 0 016.338 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(IdentificationIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/InboxArrowDownIcon.js
var require_InboxArrowDownIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/InboxArrowDownIcon.js"(exports, module) {
    var React58 = __require("react");
    function InboxArrowDownIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 3.75H6.912a2.25 2.25 0 00-2.15 1.588L2.35 13.177a2.25 2.25 0 00-.1.661V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18v-4.162c0-.224-.034-.447-.1-.661L19.24 5.338a2.25 2.25 0 00-2.15-1.588H15M2.25 13.5h3.86a2.25 2.25 0 012.012 1.244l.256.512a2.25 2.25 0 002.013 1.244h3.218a2.25 2.25 0 002.013-1.244l.256-.512a2.25 2.25 0 012.013-1.244h3.859M12 3v8.25m0 0l-3-3m3 3l3-3"
      }));
    }
    var ForwardRef = React58.forwardRef(InboxArrowDownIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/InboxStackIcon.js
var require_InboxStackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/InboxStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function InboxStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.875 14.25l1.214 1.942a2.25 2.25 0 001.908 1.058h2.006c.776 0 1.497-.4 1.908-1.058l1.214-1.942M2.41 9h4.636a2.25 2.25 0 011.872 1.002l.164.246a2.25 2.25 0 001.872 1.002h2.092a2.25 2.25 0 001.872-1.002l.164-.246A2.25 2.25 0 0116.954 9h4.636M2.41 9a2.25 2.25 0 00-.16.832V12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 12V9.832c0-.287-.055-.57-.16-.832M2.41 9a2.25 2.25 0 01.382-.632l3.285-3.832a2.25 2.25 0 011.708-.786h8.43c.657 0 1.281.287 1.709.786l3.284 3.832c.163.19.291.404.382.632M4.5 20.25h15A2.25 2.25 0 0021.75 18v-2.625c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125V18a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(InboxStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/InboxIcon.js
var require_InboxIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/InboxIcon.js"(exports, module) {
    var React58 = __require("react");
    function InboxIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 13.5h3.86a2.25 2.25 0 012.012 1.244l.256.512a2.25 2.25 0 002.013 1.244h3.218a2.25 2.25 0 002.013-1.244l.256-.512a2.25 2.25 0 012.013-1.244h3.859m-19.5.338V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18v-4.162c0-.224-.034-.447-.1-.661L19.24 5.338a2.25 2.25 0 00-2.15-1.588H6.911a2.25 2.25 0 00-2.15 1.588L2.35 13.177a2.25 2.25 0 00-.1.661z"
      }));
    }
    var ForwardRef = React58.forwardRef(InboxIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/InformationCircleIcon.js
var require_InformationCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/InformationCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function InformationCircleIcon3({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(InformationCircleIcon3);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/KeyIcon.js
var require_KeyIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/KeyIcon.js"(exports, module) {
    var React58 = __require("react");
    function KeyIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 5.25a3 3 0 013 3m3 0a6 6 0 01-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1121.75 8.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(KeyIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/LanguageIcon.js
var require_LanguageIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/LanguageIcon.js"(exports, module) {
    var React58 = __require("react");
    function LanguageIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.5 21l5.25-11.25L21 21m-9-3h7.5M3 5.621a48.474 48.474 0 016-.371m0 0c1.12 0 2.233.038 3.334.114M9 5.25V3m3.334 2.364C11.176 10.658 7.69 15.08 3 17.502m9.334-12.138c.896.061 1.785.147 2.666.257m-4.589 8.495a18.023 18.023 0 01-3.827-5.802"
      }));
    }
    var ForwardRef = React58.forwardRef(LanguageIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/LifebuoyIcon.js
var require_LifebuoyIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/LifebuoyIcon.js"(exports, module) {
    var React58 = __require("react");
    function LifebuoyIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.712 4.33a9.027 9.027 0 011.652 1.306c.51.51.944 1.064 1.306 1.652M16.712 4.33l-3.448 4.138m3.448-4.138a9.014 9.014 0 00-9.424 0M19.67 7.288l-4.138 3.448m4.138-3.448a9.014 9.014 0 010 9.424m-4.138-5.976a3.736 3.736 0 00-.88-1.388 3.737 3.737 0 00-1.388-.88m2.268 2.268a3.765 3.765 0 010 2.528m-2.268-4.796a3.765 3.765 0 00-2.528 0m4.796 4.796c-.181.506-.475.982-.88 1.388a3.736 3.736 0 01-1.388.88m2.268-2.268l4.138 3.448m0 0a9.027 9.027 0 01-1.306 1.652c-.51.51-1.064.944-1.652 1.306m0 0l-3.448-4.138m3.448 4.138a9.014 9.014 0 01-9.424 0m5.976-4.138a3.765 3.765 0 01-2.528 0m0 0a3.736 3.736 0 01-1.388-.88 3.737 3.737 0 01-.88-1.388m2.268 2.268L7.288 19.67m0 0a9.024 9.024 0 01-1.652-1.306 9.027 9.027 0 01-1.306-1.652m0 0l4.138-3.448M4.33 16.712a9.014 9.014 0 010-9.424m4.138 5.976a3.765 3.765 0 010-2.528m0 0c.181-.506.475-.982.88-1.388a3.736 3.736 0 011.388-.88m-2.268 2.268L4.33 7.288m6.406 1.18L7.288 4.33m0 0a9.024 9.024 0 00-1.652 1.306A9.025 9.025 0 004.33 7.288"
      }));
    }
    var ForwardRef = React58.forwardRef(LifebuoyIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/LightBulbIcon.js
var require_LightBulbIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/LightBulbIcon.js"(exports, module) {
    var React58 = __require("react");
    function LightBulbIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18"
      }));
    }
    var ForwardRef = React58.forwardRef(LightBulbIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/LinkIcon.js
var require_LinkIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/LinkIcon.js"(exports, module) {
    var React58 = __require("react");
    function LinkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244"
      }));
    }
    var ForwardRef = React58.forwardRef(LinkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ListBulletIcon.js
var require_ListBulletIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ListBulletIcon.js"(exports, module) {
    var React58 = __require("react");
    function ListBulletIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ListBulletIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/LockClosedIcon.js
var require_LockClosedIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/LockClosedIcon.js"(exports, module) {
    var React58 = __require("react");
    function LockClosedIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(LockClosedIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/LockOpenIcon.js
var require_LockOpenIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/LockOpenIcon.js"(exports, module) {
    var React58 = __require("react");
    function LockOpenIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.5 10.5V6.75a4.5 4.5 0 119 0v3.75M3.75 21.75h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H3.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(LockOpenIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MagnifyingGlassCircleIcon.js
var require_MagnifyingGlassCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MagnifyingGlassCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 15.75l-2.489-2.489m0 0a3.375 3.375 0 10-4.773-4.773 3.375 3.375 0 004.774 4.774zM21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MagnifyingGlassMinusIcon.js
var require_MagnifyingGlassMinusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MagnifyingGlassMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM13.5 10.5h-6"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MagnifyingGlassPlusIcon.js
var require_MagnifyingGlassPlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MagnifyingGlassPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM10.5 7.5v6m3-3h-6"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MagnifyingGlassIcon.js
var require_MagnifyingGlassIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MagnifyingGlassIcon.js"(exports, module) {
    var React58 = __require("react");
    function MagnifyingGlassIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
      }));
    }
    var ForwardRef = React58.forwardRef(MagnifyingGlassIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MapPinIcon.js
var require_MapPinIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MapPinIcon.js"(exports, module) {
    var React58 = __require("react");
    function MapPinIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 10.5a3 3 0 11-6 0 3 3 0 016 0z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(MapPinIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MapIcon.js
var require_MapIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MapIcon.js"(exports, module) {
    var React58 = __require("react");
    function MapIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 6.75V15m6-6v8.25m.503 3.498l4.875-2.437c.381-.19.622-.58.622-1.006V4.82c0-.836-.88-1.38-1.628-1.006l-3.869 1.934c-.317.159-.69.159-1.006 0L9.503 3.252a1.125 1.125 0 00-1.006 0L3.622 5.689C3.24 5.88 3 6.27 3 6.695V19.18c0 .836.88 1.38 1.628 1.006l3.869-1.934c.317-.159.69-.159 1.006 0l4.994 2.497c.317.158.69.158 1.006 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(MapIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MegaphoneIcon.js
var require_MegaphoneIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MegaphoneIcon.js"(exports, module) {
    var React58 = __require("react");
    function MegaphoneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M10.34 15.84c-.688-.06-1.386-.09-2.09-.09H7.5a4.5 4.5 0 110-9h.75c.704 0 1.402-.03 2.09-.09m0 9.18c.253.962.584 1.892.985 2.783.247.55.06 1.21-.463 1.511l-.657.38c-.551.318-1.26.117-1.527-.461a20.845 20.845 0 01-1.44-4.282m3.102.069a18.03 18.03 0 01-.59-4.59c0-1.586.205-3.124.59-4.59m0 9.18a23.848 23.848 0 018.835 2.535M10.34 6.66a23.847 23.847 0 008.835-2.535m0 0A23.74 23.74 0 0018.795 3m.38 1.125a23.91 23.91 0 011.014 5.395m-1.014 8.855c-.118.38-.245.754-.38 1.125m.38-1.125a23.91 23.91 0 001.014-5.395m0-3.46c.495.413.811 1.035.811 1.73 0 .695-.316 1.317-.811 1.73m0-3.46a24.347 24.347 0 010 3.46"
      }));
    }
    var ForwardRef = React58.forwardRef(MegaphoneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MicrophoneIcon.js
var require_MicrophoneIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MicrophoneIcon.js"(exports, module) {
    var React58 = __require("react");
    function MicrophoneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 18.75a6 6 0 006-6v-1.5m-6 7.5a6 6 0 01-6-6v-1.5m6 7.5v3.75m-3.75 0h7.5M12 15.75a3 3 0 01-3-3V4.5a3 3 0 116 0v8.25a3 3 0 01-3 3z"
      }));
    }
    var ForwardRef = React58.forwardRef(MicrophoneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MinusCircleIcon.js
var require_MinusCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MinusCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function MinusCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(MinusCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MinusSmallIcon.js
var require_MinusSmallIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MinusSmallIcon.js"(exports, module) {
    var React58 = __require("react");
    function MinusSmallIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M18 12H6"
      }));
    }
    var ForwardRef = React58.forwardRef(MinusSmallIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MinusIcon.js
var require_MinusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function MinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.5 12h-15"
      }));
    }
    var ForwardRef = React58.forwardRef(MinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MoonIcon.js
var require_MoonIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MoonIcon.js"(exports, module) {
    var React58 = __require("react");
    function MoonIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
      }));
    }
    var ForwardRef = React58.forwardRef(MoonIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/MusicalNoteIcon.js
var require_MusicalNoteIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/MusicalNoteIcon.js"(exports, module) {
    var React58 = __require("react");
    function MusicalNoteIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 9l10.5-3m0 6.553v3.75a2.25 2.25 0 01-1.632 2.163l-1.32.377a1.803 1.803 0 11-.99-3.467l2.31-.66a2.25 2.25 0 001.632-2.163zm0 0V2.25L9 5.25v10.303m0 0v3.75a2.25 2.25 0 01-1.632 2.163l-1.32.377a1.803 1.803 0 01-.99-3.467l2.31-.66A2.25 2.25 0 009 15.553z"
      }));
    }
    var ForwardRef = React58.forwardRef(MusicalNoteIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/NewspaperIcon.js
var require_NewspaperIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/NewspaperIcon.js"(exports, module) {
    var React58 = __require("react");
    function NewspaperIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z"
      }));
    }
    var ForwardRef = React58.forwardRef(NewspaperIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/NoSymbolIcon.js
var require_NoSymbolIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/NoSymbolIcon.js"(exports, module) {
    var React58 = __require("react");
    function NoSymbolIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"
      }));
    }
    var ForwardRef = React58.forwardRef(NoSymbolIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PaintBrushIcon.js
var require_PaintBrushIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PaintBrushIcon.js"(exports, module) {
    var React58 = __require("react");
    function PaintBrushIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42"
      }));
    }
    var ForwardRef = React58.forwardRef(PaintBrushIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PaperAirplaneIcon.js
var require_PaperAirplaneIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PaperAirplaneIcon.js"(exports, module) {
    var React58 = __require("react");
    function PaperAirplaneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(PaperAirplaneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PaperClipIcon.js
var require_PaperClipIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PaperClipIcon.js"(exports, module) {
    var React58 = __require("react");
    function PaperClipIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
      }));
    }
    var ForwardRef = React58.forwardRef(PaperClipIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PauseCircleIcon.js
var require_PauseCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PauseCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function PauseCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.25 9v6m-4.5 0V9M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(PauseCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PauseIcon.js
var require_PauseIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PauseIcon.js"(exports, module) {
    var React58 = __require("react");
    function PauseIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 5.25v13.5m-7.5-13.5v13.5"
      }));
    }
    var ForwardRef = React58.forwardRef(PauseIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PencilSquareIcon.js
var require_PencilSquareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PencilSquareIcon.js"(exports, module) {
    var React58 = __require("react");
    function PencilSquareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
      }));
    }
    var ForwardRef = React58.forwardRef(PencilSquareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PencilIcon.js
var require_PencilIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PencilIcon.js"(exports, module) {
    var React58 = __require("react");
    function PencilIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"
      }));
    }
    var ForwardRef = React58.forwardRef(PencilIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PhoneArrowDownLeftIcon.js
var require_PhoneArrowDownLeftIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PhoneArrowDownLeftIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneArrowDownLeftIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.25 9.75v-4.5m0 4.5h4.5m-4.5 0l6-6m-3 18c-8.284 0-15-6.716-15-15V4.5A2.25 2.25 0 014.5 2.25h1.372c.516 0 .966.351 1.091.852l1.106 4.423c.11.44-.054.902-.417 1.173l-1.293.97a1.062 1.062 0 00-.38 1.21 12.035 12.035 0 007.143 7.143c.441.162.928-.004 1.21-.38l.97-1.293a1.125 1.125 0 011.173-.417l4.423 1.106c.5.125.852.575.852 1.091V19.5a2.25 2.25 0 01-2.25 2.25h-2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneArrowDownLeftIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PhoneArrowUpRightIcon.js
var require_PhoneArrowUpRightIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PhoneArrowUpRightIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneArrowUpRightIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M20.25 3.75v4.5m0-4.5h-4.5m4.5 0l-6 6m3 12c-8.284 0-15-6.716-15-15V4.5A2.25 2.25 0 014.5 2.25h1.372c.516 0 .966.351 1.091.852l1.106 4.423c.11.44-.054.902-.417 1.173l-1.293.97a1.062 1.062 0 00-.38 1.21 12.035 12.035 0 007.143 7.143c.441.162.928-.004 1.21-.38l.97-1.293a1.125 1.125 0 011.173-.417l4.423 1.106c.5.125.852.575.852 1.091V19.5a2.25 2.25 0 01-2.25 2.25h-2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneArrowUpRightIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PhoneXMarkIcon.js
var require_PhoneXMarkIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PhoneXMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneXMarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 3.75L18 6m0 0l2.25 2.25M18 6l2.25-2.25M18 6l-2.25 2.25m1.5 13.5c-8.284 0-15-6.716-15-15V4.5A2.25 2.25 0 014.5 2.25h1.372c.516 0 .966.351 1.091.852l1.106 4.423c.11.44-.054.902-.417 1.173l-1.293.97a1.062 1.062 0 00-.38 1.21 12.035 12.035 0 007.143 7.143c.441.162.928-.004 1.21-.38l.97-1.293a1.125 1.125 0 011.173-.417l4.423 1.106c.5.125.852.575.852 1.091V19.5a2.25 2.25 0 01-2.25 2.25h-2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneXMarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PhoneIcon.js
var require_PhoneIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PhoneIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhoneIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhoneIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PhotoIcon.js
var require_PhotoIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PhotoIcon.js"(exports, module) {
    var React58 = __require("react");
    function PhotoIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(PhotoIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PlayCircleIcon.js
var require_PlayCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PlayCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlayCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlayCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PlayPauseIcon.js
var require_PlayPauseIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PlayPauseIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlayPauseIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 7.5V18M15 7.5V18M3 16.811V8.69c0-.864.933-1.406 1.683-.977l7.108 4.061a1.125 1.125 0 010 1.954l-7.108 4.061A1.125 1.125 0 013 16.811z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlayPauseIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PlayIcon.js
var require_PlayIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PlayIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlayIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 010 1.971l-11.54 6.347a1.125 1.125 0 01-1.667-.985V5.653z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlayIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PlusCircleIcon.js
var require_PlusCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PlusCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlusCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(PlusCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PlusSmallIcon.js
var require_PlusSmallIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PlusSmallIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlusSmallIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 6v12m6-6H6"
      }));
    }
    var ForwardRef = React58.forwardRef(PlusSmallIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PlusIcon.js
var require_PlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function PlusIcon2({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 4.5v15m7.5-7.5h-15"
      }));
    }
    var ForwardRef = React58.forwardRef(PlusIcon2);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PowerIcon.js
var require_PowerIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PowerIcon.js"(exports, module) {
    var React58 = __require("react");
    function PowerIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M5.636 5.636a9 9 0 1012.728 0M12 3v9"
      }));
    }
    var ForwardRef = React58.forwardRef(PowerIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PresentationChartBarIcon.js
var require_PresentationChartBarIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PresentationChartBarIcon.js"(exports, module) {
    var React58 = __require("react");
    function PresentationChartBarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5M9 11.25v1.5M12 9v3.75m3-6v6"
      }));
    }
    var ForwardRef = React58.forwardRef(PresentationChartBarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PresentationChartLineIcon.js
var require_PresentationChartLineIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PresentationChartLineIcon.js"(exports, module) {
    var React58 = __require("react");
    function PresentationChartLineIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5m.75-9l3-3 2.148 2.148A12.061 12.061 0 0116.5 7.605"
      }));
    }
    var ForwardRef = React58.forwardRef(PresentationChartLineIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PrinterIcon.js
var require_PrinterIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PrinterIcon.js"(exports, module) {
    var React58 = __require("react");
    function PrinterIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0110.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0l.229 2.523a1.125 1.125 0 01-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0021 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 00-1.913-.247M6.34 18H5.25A2.25 2.25 0 013 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 011.913-.247m10.5 0a48.536 48.536 0 00-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5zm-3 0h.008v.008H15V10.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(PrinterIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/PuzzlePieceIcon.js
var require_PuzzlePieceIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/PuzzlePieceIcon.js"(exports, module) {
    var React58 = __require("react");
    function PuzzlePieceIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.25 6.087c0-.355.186-.676.401-.959.221-.29.349-.634.349-1.003 0-1.036-1.007-1.875-2.25-1.875s-2.25.84-2.25 1.875c0 .369.128.713.349 1.003.215.283.401.604.401.959v0a.64.64 0 01-.657.643 48.39 48.39 0 01-4.163-.3c.186 1.613.293 3.25.315 4.907a.656.656 0 01-.658.663v0c-.355 0-.676-.186-.959-.401a1.647 1.647 0 00-1.003-.349c-1.036 0-1.875 1.007-1.875 2.25s.84 2.25 1.875 2.25c.369 0 .713-.128 1.003-.349.283-.215.604-.401.959-.401v0c.31 0 .555.26.532.57a48.039 48.039 0 01-.642 5.056c1.518.19 3.058.309 4.616.354a.64.64 0 00.657-.643v0c0-.355-.186-.676-.401-.959a1.647 1.647 0 01-.349-1.003c0-1.035 1.008-1.875 2.25-1.875 1.243 0 2.25.84 2.25 1.875 0 .369-.128.713-.349 1.003-.215.283-.4.604-.4.959v0c0 .333.277.599.61.58a48.1 48.1 0 005.427-.63 48.05 48.05 0 00.582-4.717.532.532 0 00-.533-.57v0c-.355 0-.676.186-.959.401-.29.221-.634.349-1.003.349-1.035 0-1.875-1.007-1.875-2.25s.84-2.25 1.875-2.25c.37 0 .713.128 1.003.349.283.215.604.401.96.401v0a.656.656 0 00.658-.663 48.422 48.422 0 00-.37-5.36c-1.886.342-3.81.574-5.766.689a.578.578 0 01-.61-.58v0z"
      }));
    }
    var ForwardRef = React58.forwardRef(PuzzlePieceIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/QrCodeIcon.js
var require_QrCodeIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/QrCodeIcon.js"(exports, module) {
    var React58 = __require("react");
    function QrCodeIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 013.75 9.375v-4.5zM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 01-1.125-1.125v-4.5zM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0113.5 9.375v-4.5z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.75 6.75h.75v.75h-.75v-.75zM6.75 16.5h.75v.75h-.75v-.75zM16.5 6.75h.75v.75h-.75v-.75zM13.5 13.5h.75v.75h-.75v-.75zM13.5 19.5h.75v.75h-.75v-.75zM19.5 13.5h.75v.75h-.75v-.75zM19.5 19.5h.75v.75h-.75v-.75zM16.5 16.5h.75v.75h-.75v-.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(QrCodeIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/QuestionMarkCircleIcon.js
var require_QuestionMarkCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/QuestionMarkCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function QuestionMarkCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(QuestionMarkCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/QueueListIcon.js
var require_QueueListIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/QueueListIcon.js"(exports, module) {
    var React58 = __require("react");
    function QueueListIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(QueueListIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/RadioIcon.js
var require_RadioIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/RadioIcon.js"(exports, module) {
    var React58 = __require("react");
    function RadioIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 7.5l16.5-4.125M12 6.75c-2.708 0-5.363.224-7.948.655C2.999 7.58 2.25 8.507 2.25 9.574v9.176A2.25 2.25 0 004.5 21h15a2.25 2.25 0 002.25-2.25V9.574c0-1.067-.75-1.994-1.802-2.169A48.329 48.329 0 0012 6.75zm-1.683 6.443l-.005.005-.006-.005.006-.005.005.005zm-.005 2.127l-.005-.006.005-.005.005.005-.005.005zm-2.116-.006l-.005.006-.006-.006.005-.005.006.005zm-.005-2.116l-.006-.005.006-.005.005.005-.005.005zM9.255 10.5v.008h-.008V10.5h.008zm3.249 1.88l-.007.004-.003-.007.006-.003.004.006zm-1.38 5.126l-.003-.006.006-.004.004.007-.006.003zm.007-6.501l-.003.006-.007-.003.004-.007.006.004zm1.37 5.129l-.007-.004.004-.006.006.003-.004.007zm.504-1.877h-.008v-.007h.008v.007zM9.255 18v.008h-.008V18h.008zm-3.246-1.87l-.007.004L6 16.127l.006-.003.004.006zm1.366-5.119l-.004-.006.006-.004.004.007-.006.003zM7.38 17.5l-.003.006-.007-.003.004-.007.006.004zm-1.376-5.116L6 12.38l.003-.007.007.004-.004.007zm-.5 1.873h-.008v-.007h.008v.007zM17.25 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zm0 4.5a.75.75 0 110-1.5.75.75 0 010 1.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(RadioIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ReceiptPercentIcon.js
var require_ReceiptPercentIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ReceiptPercentIcon.js"(exports, module) {
    var React58 = __require("react");
    function ReceiptPercentIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 14.25l6-6m4.5-3.493V21.75l-3.75-1.5-3.75 1.5-3.75-1.5-3.75 1.5V4.757c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185zM9.75 9h.008v.008H9.75V9zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm4.125 4.5h.008v.008h-.008V13.5zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ReceiptPercentIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ReceiptRefundIcon.js
var require_ReceiptRefundIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ReceiptRefundIcon.js"(exports, module) {
    var React58 = __require("react");
    function ReceiptRefundIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 9.75h4.875a2.625 2.625 0 010 5.25H12M8.25 9.75L10.5 7.5M8.25 9.75L10.5 12m9-7.243V21.75l-3.75-1.5-3.75 1.5-3.75-1.5-3.75 1.5V4.757c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185z"
      }));
    }
    var ForwardRef = React58.forwardRef(ReceiptRefundIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/RectangleGroupIcon.js
var require_RectangleGroupIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/RectangleGroupIcon.js"(exports, module) {
    var React58 = __require("react");
    function RectangleGroupIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 01-1.125-1.125v-3.75zM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-8.25zM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(RectangleGroupIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/RectangleStackIcon.js
var require_RectangleStackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/RectangleStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function RectangleStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6 6.878V6a2.25 2.25 0 012.25-2.25h7.5A2.25 2.25 0 0118 6v.878m-12 0c.235-.083.487-.128.75-.128h10.5c.263 0 .515.045.75.128m-12 0A2.25 2.25 0 004.5 9v.878m13.5-3A2.25 2.25 0 0119.5 9v.878m0 0a2.246 2.246 0 00-.75-.128H5.25c-.263 0-.515.045-.75.128m15 0A2.25 2.25 0 0121 12v6a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 18v-6c0-.98.626-1.813 1.5-2.122"
      }));
    }
    var ForwardRef = React58.forwardRef(RectangleStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/RocketLaunchIcon.js
var require_RocketLaunchIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/RocketLaunchIcon.js"(exports, module) {
    var React58 = __require("react");
    function RocketLaunchIcon3({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.59 14.37a6 6 0 01-5.84 7.38v-4.8m5.84-2.58a14.98 14.98 0 006.16-12.12A14.98 14.98 0 009.631 8.41m5.96 5.96a14.926 14.926 0 01-5.841 2.58m-.119-8.54a6 6 0 00-7.381 5.84h4.8m2.581-5.84a14.927 14.927 0 00-2.58 5.84m2.699 2.7c-.103.021-.207.041-.311.06a15.09 15.09 0 01-2.448-2.448 14.9 14.9 0 01.06-.312m-2.24 2.39a4.493 4.493 0 00-1.757 4.306 4.493 4.493 0 004.306-1.758M16.5 9a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(RocketLaunchIcon3);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/RssIcon.js
var require_RssIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/RssIcon.js"(exports, module) {
    var React58 = __require("react");
    function RssIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12.75 19.5v-.75a7.5 7.5 0 00-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(RssIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ScaleIcon.js
var require_ScaleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ScaleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ScaleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 3v17.25m0 0c-1.472 0-2.882.265-4.185.75M12 20.25c1.472 0 2.882.265 4.185.75M18.75 4.97A48.416 48.416 0 0012 4.5c-2.291 0-4.545.16-6.75.47m13.5 0c1.01.143 2.01.317 3 .52m-3-.52l2.62 10.726c.122.499-.106 1.028-.589 1.202a5.988 5.988 0 01-2.031.352 5.988 5.988 0 01-2.031-.352c-.483-.174-.711-.703-.59-1.202L18.75 4.971zm-16.5.52c.99-.203 1.99-.377 3-.52m0 0l2.62 10.726c.122.499-.106 1.028-.589 1.202a5.989 5.989 0 01-2.031.352 5.989 5.989 0 01-2.031-.352c-.483-.174-.711-.703-.59-1.202L5.25 4.971z"
      }));
    }
    var ForwardRef = React58.forwardRef(ScaleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ScissorsIcon.js
var require_ScissorsIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ScissorsIcon.js"(exports, module) {
    var React58 = __require("react");
    function ScissorsIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.848 8.25l1.536.887M7.848 8.25a3 3 0 11-5.196-3 3 3 0 015.196 3zm1.536.887a2.165 2.165 0 011.083 1.839c.005.351.054.695.14 1.024M9.384 9.137l2.077 1.199M7.848 15.75l1.536-.887m-1.536.887a3 3 0 11-5.196 3 3 3 0 015.196-3zm1.536-.887a2.165 2.165 0 001.083-1.838c.005-.352.054-.695.14-1.025m-1.223 2.863l2.077-1.199m0-3.328a4.323 4.323 0 012.068-1.379l5.325-1.628a4.5 4.5 0 012.48-.044l.803.215-7.794 4.5m-2.882-1.664A4.331 4.331 0 0010.607 12m3.736 0l7.794 4.5-.802.215a4.5 4.5 0 01-2.48-.043l-5.326-1.629a4.324 4.324 0 01-2.068-1.379M14.343 12l-2.882 1.664"
      }));
    }
    var ForwardRef = React58.forwardRef(ScissorsIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ServerStackIcon.js
var require_ServerStackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ServerStackIcon.js"(exports, module) {
    var React58 = __require("react");
    function ServerStackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M5.25 14.25h13.5m-13.5 0a3 3 0 01-3-3m3 3a3 3 0 100 6h13.5a3 3 0 100-6m-16.5-3a3 3 0 013-3h13.5a3 3 0 013 3m-19.5 0a4.5 4.5 0 01.9-2.7L5.737 5.1a3.375 3.375 0 012.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 01.9 2.7m0 0a3 3 0 01-3 3m0 3h.008v.008h-.008v-.008zm0-6h.008v.008h-.008v-.008zm-3 6h.008v.008h-.008v-.008zm0-6h.008v.008h-.008v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(ServerStackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ServerIcon.js
var require_ServerIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ServerIcon.js"(exports, module) {
    var React58 = __require("react");
    function ServerIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21.75 17.25v-.228a4.5 4.5 0 00-.12-1.03l-2.268-9.64a3.375 3.375 0 00-3.285-2.602H7.923a3.375 3.375 0 00-3.285 2.602l-2.268 9.64a4.5 4.5 0 00-.12 1.03v.228m19.5 0a3 3 0 01-3 3H5.25a3 3 0 01-3-3m19.5 0a3 3 0 00-3-3H5.25a3 3 0 00-3 3m16.5 0h.008v.008h-.008v-.008zm-3 0h.008v.008h-.008v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(ServerIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ShareIcon.js
var require_ShareIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ShareIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShareIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShareIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ShieldCheckIcon.js
var require_ShieldCheckIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ShieldCheckIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShieldCheckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShieldCheckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ShieldExclamationIcon.js
var require_ShieldExclamationIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ShieldExclamationIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShieldExclamationIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 9v3.75m0-10.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.75c0 5.592 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.57-.598-3.75h-.152c-3.196 0-6.1-1.249-8.25-3.286zm0 13.036h.008v.008H12v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShieldExclamationIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ShoppingBagIcon.js
var require_ShoppingBagIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ShoppingBagIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShoppingBagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 10.5V6a3.75 3.75 0 10-7.5 0v4.5m11.356-1.993l1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 01-1.12-1.243l1.264-12A1.125 1.125 0 015.513 7.5h12.974c.576 0 1.059.435 1.119 1.007zM8.625 10.5a.375.375 0 11-.75 0 .375.375 0 01.75 0zm7.5 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShoppingBagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ShoppingCartIcon.js
var require_ShoppingCartIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ShoppingCartIcon.js"(exports, module) {
    var React58 = __require("react");
    function ShoppingCartIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ShoppingCartIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SignalSlashIcon.js
var require_SignalSlashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SignalSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function SignalSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 3l8.735 8.735m0 0a.374.374 0 11.53.53m-.53-.53l.53.53m0 0L21 21M14.652 9.348a3.75 3.75 0 010 5.304m2.121-7.425a6.75 6.75 0 010 9.546m2.121-11.667c3.808 3.807 3.808 9.98 0 13.788m-9.546-4.242a3.733 3.733 0 01-1.06-2.122m-1.061 4.243a6.75 6.75 0 01-1.625-6.929m-.496 9.05c-3.068-3.067-3.664-7.67-1.79-11.334M12 12h.008v.008H12V12z"
      }));
    }
    var ForwardRef = React58.forwardRef(SignalSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SignalIcon.js
var require_SignalIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SignalIcon.js"(exports, module) {
    var React58 = __require("react");
    function SignalIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.348 14.651a3.75 3.75 0 010-5.303m5.304 0a3.75 3.75 0 010 5.303m-7.425 2.122a6.75 6.75 0 010-9.546m9.546 0a6.75 6.75 0 010 9.546M5.106 18.894c-3.808-3.808-3.808-9.98 0-13.789m13.788 0c3.808 3.808 3.808 9.981 0 13.79M12 12h.008v.007H12V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(SignalIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SparklesIcon.js
var require_SparklesIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SparklesIcon.js"(exports, module) {
    var React58 = __require("react");
    function SparklesIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09zM18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456zM16.894 20.567L16.5 21.75l-.394-1.183a2.25 2.25 0 00-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 001.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 001.423 1.423l1.183.394-1.183.394a2.25 2.25 0 00-1.423 1.423z"
      }));
    }
    var ForwardRef = React58.forwardRef(SparklesIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SpeakerWaveIcon.js
var require_SpeakerWaveIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SpeakerWaveIcon.js"(exports, module) {
    var React58 = __require("react");
    function SpeakerWaveIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19.114 5.636a9 9 0 010 12.728M16.463 8.288a5.25 5.25 0 010 7.424M6.75 8.25l4.72-4.72a.75.75 0 011.28.53v15.88a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.507-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.396C2.806 8.756 3.63 8.25 4.51 8.25H6.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(SpeakerWaveIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SpeakerXMarkIcon.js
var require_SpeakerXMarkIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SpeakerXMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function SpeakerXMarkIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M17.25 9.75L19.5 12m0 0l2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6l4.72-4.72a.75.75 0 011.28.531V19.94a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.506-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.395C2.806 8.757 3.63 8.25 4.51 8.25H6.75z"
      }));
    }
    var ForwardRef = React58.forwardRef(SpeakerXMarkIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Square2StackIcon.js
var require_Square2StackIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Square2StackIcon.js"(exports, module) {
    var React58 = __require("react");
    function Square2StackIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"
      }));
    }
    var ForwardRef = React58.forwardRef(Square2StackIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Square3Stack3DIcon.js
var require_Square3Stack3DIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Square3Stack3DIcon.js"(exports, module) {
    var React58 = __require("react");
    function Square3Stack3DIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3"
      }));
    }
    var ForwardRef = React58.forwardRef(Square3Stack3DIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/Squares2X2Icon.js
var require_Squares2X2Icon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/Squares2X2Icon.js"(exports, module) {
    var React58 = __require("react");
    function Squares2X2Icon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(Squares2X2Icon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SquaresPlusIcon.js
var require_SquaresPlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SquaresPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function SquaresPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M13.5 16.875h3.375m0 0h3.375m-3.375 0V13.5m0 3.375v3.375M6 10.5h2.25a2.25 2.25 0 002.25-2.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v2.25A2.25 2.25 0 006 10.5zm0 9.75h2.25A2.25 2.25 0 0010.5 18v-2.25a2.25 2.25 0 00-2.25-2.25H6a2.25 2.25 0 00-2.25 2.25V18A2.25 2.25 0 006 20.25zm9.75-9.75H18a2.25 2.25 0 002.25-2.25V6A2.25 2.25 0 0018 3.75h-2.25A2.25 2.25 0 0013.5 6v2.25a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(SquaresPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/StarIcon.js
var require_StarIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/StarIcon.js"(exports, module) {
    var React58 = __require("react");
    function StarIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z"
      }));
    }
    var ForwardRef = React58.forwardRef(StarIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/StopCircleIcon.js
var require_StopCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/StopCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function StopCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 9.563C9 9.252 9.252 9 9.563 9h4.874c.311 0 .563.252.563.563v4.874c0 .311-.252.563-.563.563H9.564A.562.562 0 019 14.437V9.564z"
      }));
    }
    var ForwardRef = React58.forwardRef(StopCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/StopIcon.js
var require_StopIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/StopIcon.js"(exports, module) {
    var React58 = __require("react");
    function StopIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M5.25 7.5A2.25 2.25 0 017.5 5.25h9a2.25 2.25 0 012.25 2.25v9a2.25 2.25 0 01-2.25 2.25h-9a2.25 2.25 0 01-2.25-2.25v-9z"
      }));
    }
    var ForwardRef = React58.forwardRef(StopIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SunIcon.js
var require_SunIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SunIcon.js"(exports, module) {
    var React58 = __require("react");
    function SunIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(SunIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/SwatchIcon.js
var require_SwatchIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/SwatchIcon.js"(exports, module) {
    var React58 = __require("react");
    function SwatchIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.098 19.902a3.75 3.75 0 005.304 0l6.401-6.402M6.75 21A3.75 3.75 0 013 17.25V4.125C3 3.504 3.504 3 4.125 3h5.25c.621 0 1.125.504 1.125 1.125v4.072M6.75 21a3.75 3.75 0 003.75-3.75V8.197M6.75 21h13.125c.621 0 1.125-.504 1.125-1.125v-5.25c0-.621-.504-1.125-1.125-1.125h-4.072M10.5 8.197l2.88-2.88c.438-.439 1.15-.439 1.59 0l3.712 3.713c.44.44.44 1.152 0 1.59l-2.879 2.88M6.75 17.25h.008v.008H6.75v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(SwatchIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TableCellsIcon.js
var require_TableCellsIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TableCellsIcon.js"(exports, module) {
    var React58 = __require("react");
    function TableCellsIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0112 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m17.25-3.75h-7.5c-.621 0-1.125.504-1.125 1.125m8.625-1.125c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M12 10.875v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125M13.125 12h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125M20.625 12c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5M12 14.625v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 14.625c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m0 1.5v-1.5m0 0c0-.621.504-1.125 1.125-1.125m0 0h7.5"
      }));
    }
    var ForwardRef = React58.forwardRef(TableCellsIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TagIcon.js
var require_TagIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TagIcon.js"(exports, module) {
    var React58 = __require("react");
    function TagIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6 6h.008v.008H6V6z"
      }));
    }
    var ForwardRef = React58.forwardRef(TagIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TicketIcon.js
var require_TicketIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TicketIcon.js"(exports, module) {
    var React58 = __require("react");
    function TicketIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.5 6v.75m0 3v.75m0 3v.75m0 3V18m-9-5.25h5.25M7.5 15h3M3.375 5.25c-.621 0-1.125.504-1.125 1.125v3.026a2.999 2.999 0 010 5.198v3.026c0 .621.504 1.125 1.125 1.125h17.25c.621 0 1.125-.504 1.125-1.125v-3.026a2.999 2.999 0 010-5.198V6.375c0-.621-.504-1.125-1.125-1.125H3.375z"
      }));
    }
    var ForwardRef = React58.forwardRef(TicketIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TrashIcon.js
var require_TrashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TrashIcon.js"(exports, module) {
    var React58 = __require("react");
    function TrashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"
      }));
    }
    var ForwardRef = React58.forwardRef(TrashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TrophyIcon.js
var require_TrophyIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TrophyIcon.js"(exports, module) {
    var React58 = __require("react");
    function TrophyIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M16.5 18.75h-9m9 0a3 3 0 013 3h-15a3 3 0 013-3m9 0v-3.375c0-.621-.503-1.125-1.125-1.125h-.871M7.5 18.75v-3.375c0-.621.504-1.125 1.125-1.125h.872m5.007 0H9.497m5.007 0a7.454 7.454 0 01-.982-3.172M9.497 14.25a7.454 7.454 0 00.981-3.172M5.25 4.236c-.982.143-1.954.317-2.916.52A6.003 6.003 0 007.73 9.728M5.25 4.236V4.5c0 2.108.966 3.99 2.48 5.228M5.25 4.236V2.721C7.456 2.41 9.71 2.25 12 2.25c2.291 0 4.545.16 6.75.47v1.516M7.73 9.728a6.726 6.726 0 002.748 1.35m8.272-6.842V4.5c0 2.108-.966 3.99-2.48 5.228m2.48-5.492a46.32 46.32 0 012.916.52 6.003 6.003 0 01-5.395 4.972m0 0a6.726 6.726 0 01-2.749 1.35m0 0a6.772 6.772 0 01-3.044 0"
      }));
    }
    var ForwardRef = React58.forwardRef(TrophyIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TruckIcon.js
var require_TruckIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TruckIcon.js"(exports, module) {
    var React58 = __require("react");
    function TruckIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.25 18.75a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m3 0h6m-9 0H3.375a1.125 1.125 0 01-1.125-1.125V14.25m17.25 4.5a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m3 0h1.125c.621 0 1.129-.504 1.09-1.124a17.902 17.902 0 00-3.213-9.193 2.056 2.056 0 00-1.58-.86H14.25M16.5 18.75h-2.25m0-11.177v-.958c0-.568-.422-1.048-.987-1.106a48.554 48.554 0 00-10.026 0 1.106 1.106 0 00-.987 1.106v7.635m12-6.677v6.677m0 4.5v-4.5m0 0h-12"
      }));
    }
    var ForwardRef = React58.forwardRef(TruckIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/TvIcon.js
var require_TvIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/TvIcon.js"(exports, module) {
    var React58 = __require("react");
    function TvIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(TvIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/UserCircleIcon.js
var require_UserCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/UserCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/UserGroupIcon.js
var require_UserGroupIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/UserGroupIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserGroupIcon4({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserGroupIcon4);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/UserMinusIcon.js
var require_UserMinusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/UserMinusIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserMinusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M22 10.5h-6m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserMinusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/UserPlusIcon.js
var require_UserPlusIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/UserPlusIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserPlusIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M19 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserPlusIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/UserIcon.js
var require_UserIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/UserIcon.js"(exports, module) {
    var React58 = __require("react");
    function UserIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z"
      }));
    }
    var ForwardRef = React58.forwardRef(UserIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/UsersIcon.js
var require_UsersIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/UsersIcon.js"(exports, module) {
    var React58 = __require("react");
    function UsersIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(UsersIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/VariableIcon.js
var require_VariableIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/VariableIcon.js"(exports, module) {
    var React58 = __require("react");
    function VariableIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.745 3A23.933 23.933 0 003 12c0 3.183.62 6.22 1.745 9M19.5 3c.967 2.78 1.5 5.817 1.5 9s-.533 6.22-1.5 9M8.25 8.885l1.444-.89a.75.75 0 011.105.402l2.402 7.206a.75.75 0 001.104.401l1.445-.889m-8.25.75l.213.09a1.687 1.687 0 002.062-.617l4.45-6.676a1.688 1.688 0 012.062-.618l.213.09"
      }));
    }
    var ForwardRef = React58.forwardRef(VariableIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/VideoCameraSlashIcon.js
var require_VideoCameraSlashIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/VideoCameraSlashIcon.js"(exports, module) {
    var React58 = __require("react");
    function VideoCameraSlashIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M12 18.75H4.5a2.25 2.25 0 01-2.25-2.25V9m12.841 9.091L16.5 19.5m-1.409-1.409c.407-.407.659-.97.659-1.591v-9a2.25 2.25 0 00-2.25-2.25h-9c-.621 0-1.184.252-1.591.659m12.182 12.182L2.909 5.909M1.5 4.5l1.409 1.409"
      }));
    }
    var ForwardRef = React58.forwardRef(VideoCameraSlashIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/VideoCameraIcon.js
var require_VideoCameraIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/VideoCameraIcon.js"(exports, module) {
    var React58 = __require("react");
    function VideoCameraIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        d: "M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z"
      }));
    }
    var ForwardRef = React58.forwardRef(VideoCameraIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ViewColumnsIcon.js
var require_ViewColumnsIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ViewColumnsIcon.js"(exports, module) {
    var React58 = __require("react");
    function ViewColumnsIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9 4.5v15m6-15v15m-10.875 0h15.75c.621 0 1.125-.504 1.125-1.125V5.625c0-.621-.504-1.125-1.125-1.125H4.125C3.504 4.5 3 5.004 3 5.625v12.75c0 .621.504 1.125 1.125 1.125z"
      }));
    }
    var ForwardRef = React58.forwardRef(ViewColumnsIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/ViewfinderCircleIcon.js
var require_ViewfinderCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/ViewfinderCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function ViewfinderCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M7.5 3.75H6A2.25 2.25 0 003.75 6v1.5M16.5 3.75H18A2.25 2.25 0 0120.25 6v1.5m0 9V18A2.25 2.25 0 0118 20.25h-1.5m-9 0H6A2.25 2.25 0 013.75 18v-1.5M15 12a3 3 0 11-6 0 3 3 0 016 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(ViewfinderCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/WalletIcon.js
var require_WalletIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/WalletIcon.js"(exports, module) {
    var React58 = __require("react");
    function WalletIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21 12a2.25 2.25 0 00-2.25-2.25H15a3 3 0 11-6 0H5.25A2.25 2.25 0 003 12m18 0v6a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 18v-6m18 0V9M3 12V9m18 0a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 9m18 0V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v3"
      }));
    }
    var ForwardRef = React58.forwardRef(WalletIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/WifiIcon.js
var require_WifiIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/WifiIcon.js"(exports, module) {
    var React58 = __require("react");
    function WifiIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M8.288 15.038a5.25 5.25 0 017.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 011.06 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(WifiIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/WindowIcon.js
var require_WindowIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/WindowIcon.js"(exports, module) {
    var React58 = __require("react");
    function WindowIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M3 8.25V18a2.25 2.25 0 002.25 2.25h13.5A2.25 2.25 0 0021 18V8.25m-18 0V6a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 6v2.25m-18 0h18M5.25 6h.008v.008H5.25V6zM7.5 6h.008v.008H7.5V6zm2.25 0h.008v.008H9.75V6z"
      }));
    }
    var ForwardRef = React58.forwardRef(WindowIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/WrenchScrewdriverIcon.js
var require_WrenchScrewdriverIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/WrenchScrewdriverIcon.js"(exports, module) {
    var React58 = __require("react");
    function WrenchScrewdriverIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M11.42 15.17L17.25 21A2.652 2.652 0 0021 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 11-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 004.486-6.336l-3.276 3.277a3.004 3.004 0 01-2.25-2.25l3.276-3.276a4.5 4.5 0 00-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437l1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(WrenchScrewdriverIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/WrenchIcon.js
var require_WrenchIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/WrenchIcon.js"(exports, module) {
    var React58 = __require("react");
    function WrenchIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M21.75 6.75a4.5 4.5 0 01-4.884 4.484c-1.076-.091-2.264.071-2.95.904l-7.152 8.684a2.548 2.548 0 11-3.586-3.586l8.684-7.152c.833-.686.995-1.874.904-2.95a4.5 4.5 0 016.336-4.486l-3.276 3.276a3.004 3.004 0 002.25 2.25l3.276-3.276c.256.565.398 1.192.398 1.852z"
      }), React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M4.867 19.125h.008v.008h-.008v-.008z"
      }));
    }
    var ForwardRef = React58.forwardRef(WrenchIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/XCircleIcon.js
var require_XCircleIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/XCircleIcon.js"(exports, module) {
    var React58 = __require("react");
    function XCircleIcon({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
      }));
    }
    var ForwardRef = React58.forwardRef(XCircleIcon);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/XMarkIcon.js
var require_XMarkIcon2 = __commonJS({
  "node_modules/@heroicons/react/24/outline/XMarkIcon.js"(exports, module) {
    var React58 = __require("react");
    function XMarkIcon5({
      title,
      titleId,
      ...props
    }, svgRef) {
      return React58.createElement("svg", Object.assign({
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: 1.5,
        stroke: "currentColor",
        "aria-hidden": "true",
        ref: svgRef,
        "aria-labelledby": titleId
      }, props), title ? React58.createElement("title", {
        id: titleId
      }, title) : null, React58.createElement("path", {
        strokeLinecap: "round",
        strokeLinejoin: "round",
        d: "M6 18L18 6M6 6l12 12"
      }));
    }
    var ForwardRef = React58.forwardRef(XMarkIcon5);
    module.exports = ForwardRef;
  }
});

// node_modules/@heroicons/react/24/outline/index.js
var require_outline = __commonJS({
  "node_modules/@heroicons/react/24/outline/index.js"(exports, module) {
    module.exports.AcademicCapIcon = require_AcademicCapIcon2();
    module.exports.AdjustmentsHorizontalIcon = require_AdjustmentsHorizontalIcon2();
    module.exports.AdjustmentsVerticalIcon = require_AdjustmentsVerticalIcon2();
    module.exports.ArchiveBoxArrowDownIcon = require_ArchiveBoxArrowDownIcon2();
    module.exports.ArchiveBoxXMarkIcon = require_ArchiveBoxXMarkIcon2();
    module.exports.ArchiveBoxIcon = require_ArchiveBoxIcon2();
    module.exports.ArrowDownCircleIcon = require_ArrowDownCircleIcon2();
    module.exports.ArrowDownLeftIcon = require_ArrowDownLeftIcon2();
    module.exports.ArrowDownOnSquareStackIcon = require_ArrowDownOnSquareStackIcon2();
    module.exports.ArrowDownOnSquareIcon = require_ArrowDownOnSquareIcon2();
    module.exports.ArrowDownRightIcon = require_ArrowDownRightIcon2();
    module.exports.ArrowDownTrayIcon = require_ArrowDownTrayIcon2();
    module.exports.ArrowDownIcon = require_ArrowDownIcon2();
    module.exports.ArrowLeftCircleIcon = require_ArrowLeftCircleIcon2();
    module.exports.ArrowLeftOnRectangleIcon = require_ArrowLeftOnRectangleIcon2();
    module.exports.ArrowLeftIcon = require_ArrowLeftIcon2();
    module.exports.ArrowLongDownIcon = require_ArrowLongDownIcon2();
    module.exports.ArrowLongLeftIcon = require_ArrowLongLeftIcon2();
    module.exports.ArrowLongRightIcon = require_ArrowLongRightIcon2();
    module.exports.ArrowLongUpIcon = require_ArrowLongUpIcon2();
    module.exports.ArrowPathRoundedSquareIcon = require_ArrowPathRoundedSquareIcon2();
    module.exports.ArrowPathIcon = require_ArrowPathIcon2();
    module.exports.ArrowRightCircleIcon = require_ArrowRightCircleIcon2();
    module.exports.ArrowRightOnRectangleIcon = require_ArrowRightOnRectangleIcon2();
    module.exports.ArrowRightIcon = require_ArrowRightIcon2();
    module.exports.ArrowSmallDownIcon = require_ArrowSmallDownIcon2();
    module.exports.ArrowSmallLeftIcon = require_ArrowSmallLeftIcon2();
    module.exports.ArrowSmallRightIcon = require_ArrowSmallRightIcon2();
    module.exports.ArrowSmallUpIcon = require_ArrowSmallUpIcon2();
    module.exports.ArrowTopRightOnSquareIcon = require_ArrowTopRightOnSquareIcon2();
    module.exports.ArrowTrendingDownIcon = require_ArrowTrendingDownIcon2();
    module.exports.ArrowTrendingUpIcon = require_ArrowTrendingUpIcon2();
    module.exports.ArrowUpCircleIcon = require_ArrowUpCircleIcon2();
    module.exports.ArrowUpLeftIcon = require_ArrowUpLeftIcon2();
    module.exports.ArrowUpOnSquareStackIcon = require_ArrowUpOnSquareStackIcon2();
    module.exports.ArrowUpOnSquareIcon = require_ArrowUpOnSquareIcon2();
    module.exports.ArrowUpRightIcon = require_ArrowUpRightIcon2();
    module.exports.ArrowUpTrayIcon = require_ArrowUpTrayIcon2();
    module.exports.ArrowUpIcon = require_ArrowUpIcon2();
    module.exports.ArrowUturnDownIcon = require_ArrowUturnDownIcon2();
    module.exports.ArrowUturnLeftIcon = require_ArrowUturnLeftIcon2();
    module.exports.ArrowUturnRightIcon = require_ArrowUturnRightIcon2();
    module.exports.ArrowUturnUpIcon = require_ArrowUturnUpIcon2();
    module.exports.ArrowsPointingInIcon = require_ArrowsPointingInIcon2();
    module.exports.ArrowsPointingOutIcon = require_ArrowsPointingOutIcon2();
    module.exports.ArrowsRightLeftIcon = require_ArrowsRightLeftIcon2();
    module.exports.ArrowsUpDownIcon = require_ArrowsUpDownIcon2();
    module.exports.AtSymbolIcon = require_AtSymbolIcon2();
    module.exports.BackspaceIcon = require_BackspaceIcon2();
    module.exports.BackwardIcon = require_BackwardIcon2();
    module.exports.BanknotesIcon = require_BanknotesIcon2();
    module.exports.Bars2Icon = require_Bars2Icon2();
    module.exports.Bars3BottomLeftIcon = require_Bars3BottomLeftIcon2();
    module.exports.Bars3BottomRightIcon = require_Bars3BottomRightIcon2();
    module.exports.Bars3CenterLeftIcon = require_Bars3CenterLeftIcon2();
    module.exports.Bars3Icon = require_Bars3Icon2();
    module.exports.Bars4Icon = require_Bars4Icon2();
    module.exports.BarsArrowDownIcon = require_BarsArrowDownIcon2();
    module.exports.BarsArrowUpIcon = require_BarsArrowUpIcon2();
    module.exports.Battery0Icon = require_Battery0Icon2();
    module.exports.Battery100Icon = require_Battery100Icon2();
    module.exports.Battery50Icon = require_Battery50Icon2();
    module.exports.BeakerIcon = require_BeakerIcon2();
    module.exports.BellAlertIcon = require_BellAlertIcon2();
    module.exports.BellSlashIcon = require_BellSlashIcon2();
    module.exports.BellSnoozeIcon = require_BellSnoozeIcon2();
    module.exports.BellIcon = require_BellIcon2();
    module.exports.BoltSlashIcon = require_BoltSlashIcon2();
    module.exports.BoltIcon = require_BoltIcon2();
    module.exports.BookOpenIcon = require_BookOpenIcon2();
    module.exports.BookmarkSlashIcon = require_BookmarkSlashIcon2();
    module.exports.BookmarkSquareIcon = require_BookmarkSquareIcon2();
    module.exports.BookmarkIcon = require_BookmarkIcon2();
    module.exports.BriefcaseIcon = require_BriefcaseIcon2();
    module.exports.BugAntIcon = require_BugAntIcon2();
    module.exports.BuildingLibraryIcon = require_BuildingLibraryIcon2();
    module.exports.BuildingOffice2Icon = require_BuildingOffice2Icon2();
    module.exports.BuildingOfficeIcon = require_BuildingOfficeIcon2();
    module.exports.BuildingStorefrontIcon = require_BuildingStorefrontIcon2();
    module.exports.CakeIcon = require_CakeIcon2();
    module.exports.CalculatorIcon = require_CalculatorIcon2();
    module.exports.CalendarDaysIcon = require_CalendarDaysIcon2();
    module.exports.CalendarIcon = require_CalendarIcon2();
    module.exports.CameraIcon = require_CameraIcon2();
    module.exports.ChartBarSquareIcon = require_ChartBarSquareIcon2();
    module.exports.ChartBarIcon = require_ChartBarIcon2();
    module.exports.ChartPieIcon = require_ChartPieIcon2();
    module.exports.ChatBubbleBottomCenterTextIcon = require_ChatBubbleBottomCenterTextIcon2();
    module.exports.ChatBubbleBottomCenterIcon = require_ChatBubbleBottomCenterIcon2();
    module.exports.ChatBubbleLeftEllipsisIcon = require_ChatBubbleLeftEllipsisIcon2();
    module.exports.ChatBubbleLeftRightIcon = require_ChatBubbleLeftRightIcon2();
    module.exports.ChatBubbleLeftIcon = require_ChatBubbleLeftIcon2();
    module.exports.ChatBubbleOvalLeftEllipsisIcon = require_ChatBubbleOvalLeftEllipsisIcon2();
    module.exports.ChatBubbleOvalLeftIcon = require_ChatBubbleOvalLeftIcon2();
    module.exports.CheckBadgeIcon = require_CheckBadgeIcon2();
    module.exports.CheckCircleIcon = require_CheckCircleIcon2();
    module.exports.CheckIcon = require_CheckIcon2();
    module.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon2();
    module.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon2();
    module.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon2();
    module.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon2();
    module.exports.ChevronDownIcon = require_ChevronDownIcon2();
    module.exports.ChevronLeftIcon = require_ChevronLeftIcon2();
    module.exports.ChevronRightIcon = require_ChevronRightIcon2();
    module.exports.ChevronUpDownIcon = require_ChevronUpDownIcon2();
    module.exports.ChevronUpIcon = require_ChevronUpIcon2();
    module.exports.CircleStackIcon = require_CircleStackIcon2();
    module.exports.ClipboardDocumentCheckIcon = require_ClipboardDocumentCheckIcon2();
    module.exports.ClipboardDocumentListIcon = require_ClipboardDocumentListIcon2();
    module.exports.ClipboardDocumentIcon = require_ClipboardDocumentIcon2();
    module.exports.ClipboardIcon = require_ClipboardIcon2();
    module.exports.ClockIcon = require_ClockIcon2();
    module.exports.CloudArrowDownIcon = require_CloudArrowDownIcon2();
    module.exports.CloudArrowUpIcon = require_CloudArrowUpIcon2();
    module.exports.CloudIcon = require_CloudIcon2();
    module.exports.CodeBracketSquareIcon = require_CodeBracketSquareIcon2();
    module.exports.CodeBracketIcon = require_CodeBracketIcon2();
    module.exports.Cog6ToothIcon = require_Cog6ToothIcon2();
    module.exports.Cog8ToothIcon = require_Cog8ToothIcon2();
    module.exports.CogIcon = require_CogIcon2();
    module.exports.CommandLineIcon = require_CommandLineIcon2();
    module.exports.ComputerDesktopIcon = require_ComputerDesktopIcon2();
    module.exports.CpuChipIcon = require_CpuChipIcon2();
    module.exports.CreditCardIcon = require_CreditCardIcon2();
    module.exports.CubeTransparentIcon = require_CubeTransparentIcon2();
    module.exports.CubeIcon = require_CubeIcon2();
    module.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon2();
    module.exports.CurrencyDollarIcon = require_CurrencyDollarIcon2();
    module.exports.CurrencyEuroIcon = require_CurrencyEuroIcon2();
    module.exports.CurrencyPoundIcon = require_CurrencyPoundIcon2();
    module.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon2();
    module.exports.CurrencyYenIcon = require_CurrencyYenIcon2();
    module.exports.CursorArrowRaysIcon = require_CursorArrowRaysIcon2();
    module.exports.CursorArrowRippleIcon = require_CursorArrowRippleIcon2();
    module.exports.DevicePhoneMobileIcon = require_DevicePhoneMobileIcon2();
    module.exports.DeviceTabletIcon = require_DeviceTabletIcon2();
    module.exports.DocumentArrowDownIcon = require_DocumentArrowDownIcon2();
    module.exports.DocumentArrowUpIcon = require_DocumentArrowUpIcon2();
    module.exports.DocumentChartBarIcon = require_DocumentChartBarIcon2();
    module.exports.DocumentCheckIcon = require_DocumentCheckIcon2();
    module.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon2();
    module.exports.DocumentMagnifyingGlassIcon = require_DocumentMagnifyingGlassIcon2();
    module.exports.DocumentMinusIcon = require_DocumentMinusIcon2();
    module.exports.DocumentPlusIcon = require_DocumentPlusIcon2();
    module.exports.DocumentTextIcon = require_DocumentTextIcon2();
    module.exports.DocumentIcon = require_DocumentIcon2();
    module.exports.EllipsisHorizontalCircleIcon = require_EllipsisHorizontalCircleIcon2();
    module.exports.EllipsisHorizontalIcon = require_EllipsisHorizontalIcon2();
    module.exports.EllipsisVerticalIcon = require_EllipsisVerticalIcon2();
    module.exports.EnvelopeOpenIcon = require_EnvelopeOpenIcon2();
    module.exports.EnvelopeIcon = require_EnvelopeIcon2();
    module.exports.ExclamationCircleIcon = require_ExclamationCircleIcon2();
    module.exports.ExclamationTriangleIcon = require_ExclamationTriangleIcon2();
    module.exports.EyeDropperIcon = require_EyeDropperIcon2();
    module.exports.EyeSlashIcon = require_EyeSlashIcon2();
    module.exports.EyeIcon = require_EyeIcon2();
    module.exports.FaceFrownIcon = require_FaceFrownIcon2();
    module.exports.FaceSmileIcon = require_FaceSmileIcon2();
    module.exports.FilmIcon = require_FilmIcon2();
    module.exports.FingerPrintIcon = require_FingerPrintIcon2();
    module.exports.FireIcon = require_FireIcon2();
    module.exports.FlagIcon = require_FlagIcon2();
    module.exports.FolderArrowDownIcon = require_FolderArrowDownIcon2();
    module.exports.FolderMinusIcon = require_FolderMinusIcon2();
    module.exports.FolderOpenIcon = require_FolderOpenIcon2();
    module.exports.FolderPlusIcon = require_FolderPlusIcon2();
    module.exports.FolderIcon = require_FolderIcon2();
    module.exports.ForwardIcon = require_ForwardIcon2();
    module.exports.FunnelIcon = require_FunnelIcon2();
    module.exports.GifIcon = require_GifIcon2();
    module.exports.GiftTopIcon = require_GiftTopIcon2();
    module.exports.GiftIcon = require_GiftIcon2();
    module.exports.GlobeAltIcon = require_GlobeAltIcon2();
    module.exports.GlobeAmericasIcon = require_GlobeAmericasIcon2();
    module.exports.GlobeAsiaAustraliaIcon = require_GlobeAsiaAustraliaIcon2();
    module.exports.GlobeEuropeAfricaIcon = require_GlobeEuropeAfricaIcon2();
    module.exports.HandRaisedIcon = require_HandRaisedIcon2();
    module.exports.HandThumbDownIcon = require_HandThumbDownIcon2();
    module.exports.HandThumbUpIcon = require_HandThumbUpIcon2();
    module.exports.HashtagIcon = require_HashtagIcon2();
    module.exports.HeartIcon = require_HeartIcon2();
    module.exports.HomeModernIcon = require_HomeModernIcon2();
    module.exports.HomeIcon = require_HomeIcon2();
    module.exports.IdentificationIcon = require_IdentificationIcon2();
    module.exports.InboxArrowDownIcon = require_InboxArrowDownIcon2();
    module.exports.InboxStackIcon = require_InboxStackIcon2();
    module.exports.InboxIcon = require_InboxIcon2();
    module.exports.InformationCircleIcon = require_InformationCircleIcon2();
    module.exports.KeyIcon = require_KeyIcon2();
    module.exports.LanguageIcon = require_LanguageIcon2();
    module.exports.LifebuoyIcon = require_LifebuoyIcon2();
    module.exports.LightBulbIcon = require_LightBulbIcon2();
    module.exports.LinkIcon = require_LinkIcon2();
    module.exports.ListBulletIcon = require_ListBulletIcon2();
    module.exports.LockClosedIcon = require_LockClosedIcon2();
    module.exports.LockOpenIcon = require_LockOpenIcon2();
    module.exports.MagnifyingGlassCircleIcon = require_MagnifyingGlassCircleIcon2();
    module.exports.MagnifyingGlassMinusIcon = require_MagnifyingGlassMinusIcon2();
    module.exports.MagnifyingGlassPlusIcon = require_MagnifyingGlassPlusIcon2();
    module.exports.MagnifyingGlassIcon = require_MagnifyingGlassIcon2();
    module.exports.MapPinIcon = require_MapPinIcon2();
    module.exports.MapIcon = require_MapIcon2();
    module.exports.MegaphoneIcon = require_MegaphoneIcon2();
    module.exports.MicrophoneIcon = require_MicrophoneIcon2();
    module.exports.MinusCircleIcon = require_MinusCircleIcon2();
    module.exports.MinusSmallIcon = require_MinusSmallIcon2();
    module.exports.MinusIcon = require_MinusIcon2();
    module.exports.MoonIcon = require_MoonIcon2();
    module.exports.MusicalNoteIcon = require_MusicalNoteIcon2();
    module.exports.NewspaperIcon = require_NewspaperIcon2();
    module.exports.NoSymbolIcon = require_NoSymbolIcon2();
    module.exports.PaintBrushIcon = require_PaintBrushIcon2();
    module.exports.PaperAirplaneIcon = require_PaperAirplaneIcon2();
    module.exports.PaperClipIcon = require_PaperClipIcon2();
    module.exports.PauseCircleIcon = require_PauseCircleIcon2();
    module.exports.PauseIcon = require_PauseIcon2();
    module.exports.PencilSquareIcon = require_PencilSquareIcon2();
    module.exports.PencilIcon = require_PencilIcon2();
    module.exports.PhoneArrowDownLeftIcon = require_PhoneArrowDownLeftIcon2();
    module.exports.PhoneArrowUpRightIcon = require_PhoneArrowUpRightIcon2();
    module.exports.PhoneXMarkIcon = require_PhoneXMarkIcon2();
    module.exports.PhoneIcon = require_PhoneIcon2();
    module.exports.PhotoIcon = require_PhotoIcon2();
    module.exports.PlayCircleIcon = require_PlayCircleIcon2();
    module.exports.PlayPauseIcon = require_PlayPauseIcon2();
    module.exports.PlayIcon = require_PlayIcon2();
    module.exports.PlusCircleIcon = require_PlusCircleIcon2();
    module.exports.PlusSmallIcon = require_PlusSmallIcon2();
    module.exports.PlusIcon = require_PlusIcon2();
    module.exports.PowerIcon = require_PowerIcon2();
    module.exports.PresentationChartBarIcon = require_PresentationChartBarIcon2();
    module.exports.PresentationChartLineIcon = require_PresentationChartLineIcon2();
    module.exports.PrinterIcon = require_PrinterIcon2();
    module.exports.PuzzlePieceIcon = require_PuzzlePieceIcon2();
    module.exports.QrCodeIcon = require_QrCodeIcon2();
    module.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon2();
    module.exports.QueueListIcon = require_QueueListIcon2();
    module.exports.RadioIcon = require_RadioIcon2();
    module.exports.ReceiptPercentIcon = require_ReceiptPercentIcon2();
    module.exports.ReceiptRefundIcon = require_ReceiptRefundIcon2();
    module.exports.RectangleGroupIcon = require_RectangleGroupIcon2();
    module.exports.RectangleStackIcon = require_RectangleStackIcon2();
    module.exports.RocketLaunchIcon = require_RocketLaunchIcon2();
    module.exports.RssIcon = require_RssIcon2();
    module.exports.ScaleIcon = require_ScaleIcon2();
    module.exports.ScissorsIcon = require_ScissorsIcon2();
    module.exports.ServerStackIcon = require_ServerStackIcon2();
    module.exports.ServerIcon = require_ServerIcon2();
    module.exports.ShareIcon = require_ShareIcon2();
    module.exports.ShieldCheckIcon = require_ShieldCheckIcon2();
    module.exports.ShieldExclamationIcon = require_ShieldExclamationIcon2();
    module.exports.ShoppingBagIcon = require_ShoppingBagIcon2();
    module.exports.ShoppingCartIcon = require_ShoppingCartIcon2();
    module.exports.SignalSlashIcon = require_SignalSlashIcon2();
    module.exports.SignalIcon = require_SignalIcon2();
    module.exports.SparklesIcon = require_SparklesIcon2();
    module.exports.SpeakerWaveIcon = require_SpeakerWaveIcon2();
    module.exports.SpeakerXMarkIcon = require_SpeakerXMarkIcon2();
    module.exports.Square2StackIcon = require_Square2StackIcon2();
    module.exports.Square3Stack3DIcon = require_Square3Stack3DIcon2();
    module.exports.Squares2X2Icon = require_Squares2X2Icon2();
    module.exports.SquaresPlusIcon = require_SquaresPlusIcon2();
    module.exports.StarIcon = require_StarIcon2();
    module.exports.StopCircleIcon = require_StopCircleIcon2();
    module.exports.StopIcon = require_StopIcon2();
    module.exports.SunIcon = require_SunIcon2();
    module.exports.SwatchIcon = require_SwatchIcon2();
    module.exports.TableCellsIcon = require_TableCellsIcon2();
    module.exports.TagIcon = require_TagIcon2();
    module.exports.TicketIcon = require_TicketIcon2();
    module.exports.TrashIcon = require_TrashIcon2();
    module.exports.TrophyIcon = require_TrophyIcon2();
    module.exports.TruckIcon = require_TruckIcon2();
    module.exports.TvIcon = require_TvIcon2();
    module.exports.UserCircleIcon = require_UserCircleIcon2();
    module.exports.UserGroupIcon = require_UserGroupIcon2();
    module.exports.UserMinusIcon = require_UserMinusIcon2();
    module.exports.UserPlusIcon = require_UserPlusIcon2();
    module.exports.UserIcon = require_UserIcon2();
    module.exports.UsersIcon = require_UsersIcon2();
    module.exports.VariableIcon = require_VariableIcon2();
    module.exports.VideoCameraSlashIcon = require_VideoCameraSlashIcon2();
    module.exports.VideoCameraIcon = require_VideoCameraIcon2();
    module.exports.ViewColumnsIcon = require_ViewColumnsIcon2();
    module.exports.ViewfinderCircleIcon = require_ViewfinderCircleIcon2();
    module.exports.WalletIcon = require_WalletIcon2();
    module.exports.WifiIcon = require_WifiIcon2();
    module.exports.WindowIcon = require_WindowIcon2();
    module.exports.WrenchScrewdriverIcon = require_WrenchScrewdriverIcon2();
    module.exports.WrenchIcon = require_WrenchIcon2();
    module.exports.XCircleIcon = require_XCircleIcon2();
    module.exports.XMarkIcon = require_XMarkIcon2();
  }
});

// node_modules/next-tinacms-dos/dist/index.js
var require_dist = __commonJS({
  "node_modules/next-tinacms-dos/dist/index.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? factory(exports) : typeof define === "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, factory(global2["next-tinacms-dos"] = {}));
    })(exports, function(exports2) {
      "use strict";
      var commonjsGlobal$4 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      var react = { exports: {} };
      var react_production_min = {};
      var getOwnPropertySymbols = Object.getOwnPropertySymbols;
      var hasOwnProperty$t = Object.prototype.hasOwnProperty;
      var propIsEnumerable = Object.prototype.propertyIsEnumerable;
      function toObject$1(val) {
        if (val === null || val === void 0) {
          throw new TypeError("Object.assign cannot be called with null or undefined");
        }
        return Object(val);
      }
      function shouldUseNative() {
        try {
          if (!Object.assign) {
            return false;
          }
          var test1 = new String("abc");
          test1[5] = "de";
          if (Object.getOwnPropertyNames(test1)[0] === "5") {
            return false;
          }
          var test2 = {};
          for (var i22 = 0; i22 < 10; i22++) {
            test2["_" + String.fromCharCode(i22)] = i22;
          }
          var order2 = Object.getOwnPropertyNames(test2).map(function(n22) {
            return test2[n22];
          });
          if (order2.join("") !== "0123456789") {
            return false;
          }
          var test3 = {};
          "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
          });
          if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
            return false;
          }
          return true;
        } catch (err) {
          return false;
        }
      }
      var objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
        var from2;
        var to22 = toObject$1(target);
        var symbols;
        for (var s22 = 1; s22 < arguments.length; s22++) {
          from2 = Object(arguments[s22]);
          for (var key in from2) {
            if (hasOwnProperty$t.call(from2, key)) {
              to22[key] = from2[key];
            }
          }
          if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from2);
            for (var i22 = 0; i22 < symbols.length; i22++) {
              if (propIsEnumerable.call(from2, symbols[i22])) {
                to22[symbols[i22]] = from2[symbols[i22]];
              }
            }
          }
        }
        return to22;
      };
      var l$3 = objectAssign, n$3 = 60103, p$3 = 60106;
      react_production_min.Fragment = 60107;
      react_production_min.StrictMode = 60108;
      react_production_min.Profiler = 60114;
      var q$2 = 60109, r$4 = 60110, t$2 = 60112;
      react_production_min.Suspense = 60113;
      var u$3 = 60115, v$1 = 60116;
      if (typeof Symbol === "function" && Symbol.for) {
        var w$1 = Symbol.for;
        n$3 = w$1("react.element");
        p$3 = w$1("react.portal");
        react_production_min.Fragment = w$1("react.fragment");
        react_production_min.StrictMode = w$1("react.strict_mode");
        react_production_min.Profiler = w$1("react.profiler");
        q$2 = w$1("react.provider");
        r$4 = w$1("react.context");
        t$2 = w$1("react.forward_ref");
        react_production_min.Suspense = w$1("react.suspense");
        u$3 = w$1("react.memo");
        v$1 = w$1("react.lazy");
      }
      var x$1 = typeof Symbol === "function" && Symbol.iterator;
      function y$2(a22) {
        if (a22 === null || typeof a22 !== "object")
          return null;
        a22 = x$1 && a22[x$1] || a22["@@iterator"];
        return typeof a22 === "function" ? a22 : null;
      }
      function z$2(a22) {
        for (var b22 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a22, c22 = 1; c22 < arguments.length; c22++)
          b22 += "&args[]=" + encodeURIComponent(arguments[c22]);
        return "Minified React error #" + a22 + "; visit " + b22 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      }
      var A$1 = { isMounted: function() {
        return false;
      }, enqueueForceUpdate: function() {
      }, enqueueReplaceState: function() {
      }, enqueueSetState: function() {
      } }, B$3 = {};
      function C$1(a22, b22, c22) {
        this.props = a22;
        this.context = b22;
        this.refs = B$3;
        this.updater = c22 || A$1;
      }
      C$1.prototype.isReactComponent = {};
      C$1.prototype.setState = function(a22, b22) {
        if (typeof a22 !== "object" && typeof a22 !== "function" && a22 != null)
          throw Error(z$2(85));
        this.updater.enqueueSetState(this, a22, b22, "setState");
      };
      C$1.prototype.forceUpdate = function(a22) {
        this.updater.enqueueForceUpdate(this, a22, "forceUpdate");
      };
      function D$3() {
      }
      D$3.prototype = C$1.prototype;
      function E$3(a22, b22, c22) {
        this.props = a22;
        this.context = b22;
        this.refs = B$3;
        this.updater = c22 || A$1;
      }
      var F$3 = E$3.prototype = new D$3();
      F$3.constructor = E$3;
      l$3(F$3, C$1.prototype);
      F$3.isPureReactComponent = true;
      var G$2 = { current: null }, H$2 = Object.prototype.hasOwnProperty, I$3 = { key: true, ref: true, __self: true, __source: true };
      function J$1(a22, b22, c22) {
        var e22, d22 = {}, k22 = null, h22 = null;
        if (b22 != null)
          for (e22 in b22.ref !== void 0 && (h22 = b22.ref), b22.key !== void 0 && (k22 = "" + b22.key), b22)
            H$2.call(b22, e22) && !I$3.hasOwnProperty(e22) && (d22[e22] = b22[e22]);
        var g22 = arguments.length - 2;
        if (g22 === 1)
          d22.children = c22;
        else if (1 < g22) {
          for (var f22 = Array(g22), m22 = 0; m22 < g22; m22++)
            f22[m22] = arguments[m22 + 2];
          d22.children = f22;
        }
        if (a22 && a22.defaultProps)
          for (e22 in g22 = a22.defaultProps, g22)
            d22[e22] === void 0 && (d22[e22] = g22[e22]);
        return { $$typeof: n$3, type: a22, key: k22, ref: h22, props: d22, _owner: G$2.current };
      }
      function K$1(a22, b22) {
        return { $$typeof: n$3, type: a22.type, key: b22, ref: a22.ref, props: a22.props, _owner: a22._owner };
      }
      function L$1(a22) {
        return typeof a22 === "object" && a22 !== null && a22.$$typeof === n$3;
      }
      function escape(a22) {
        var b22 = { "=": "=0", ":": "=2" };
        return "$" + a22.replace(/[=:]/g, function(a32) {
          return b22[a32];
        });
      }
      var M$3 = /\/+/g;
      function N$2(a22, b22) {
        return typeof a22 === "object" && a22 !== null && a22.key != null ? escape("" + a22.key) : b22.toString(36);
      }
      function O$3(a22, b22, c22, e22, d22) {
        var k22 = typeof a22;
        if (k22 === "undefined" || k22 === "boolean")
          a22 = null;
        var h22 = false;
        if (a22 === null)
          h22 = true;
        else
          switch (k22) {
            case "string":
            case "number":
              h22 = true;
              break;
            case "object":
              switch (a22.$$typeof) {
                case n$3:
                case p$3:
                  h22 = true;
              }
          }
        if (h22)
          return h22 = a22, d22 = d22(h22), a22 = e22 === "" ? "." + N$2(h22, 0) : e22, Array.isArray(d22) ? (c22 = "", a22 != null && (c22 = a22.replace(M$3, "$&/") + "/"), O$3(d22, b22, c22, "", function(a32) {
            return a32;
          })) : d22 != null && (L$1(d22) && (d22 = K$1(d22, c22 + (!d22.key || h22 && h22.key === d22.key ? "" : ("" + d22.key).replace(M$3, "$&/") + "/") + a22)), b22.push(d22)), 1;
        h22 = 0;
        e22 = e22 === "" ? "." : e22 + ":";
        if (Array.isArray(a22))
          for (var g22 = 0; g22 < a22.length; g22++) {
            k22 = a22[g22];
            var f22 = e22 + N$2(k22, g22);
            h22 += O$3(k22, b22, c22, f22, d22);
          }
        else if (f22 = y$2(a22), typeof f22 === "function")
          for (a22 = f22.call(a22), g22 = 0; !(k22 = a22.next()).done; )
            k22 = k22.value, f22 = e22 + N$2(k22, g22++), h22 += O$3(k22, b22, c22, f22, d22);
        else if (k22 === "object")
          throw b22 = "" + a22, Error(z$2(31, b22 === "[object Object]" ? "object with keys {" + Object.keys(a22).join(", ") + "}" : b22));
        return h22;
      }
      function P$3(a22, b22, c22) {
        if (a22 == null)
          return a22;
        var e22 = [], d22 = 0;
        O$3(a22, e22, "", "", function(a32) {
          return b22.call(c22, a32, d22++);
        });
        return e22;
      }
      function Q$2(a22) {
        if (a22._status === -1) {
          var b22 = a22._result;
          b22 = b22();
          a22._status = 0;
          a22._result = b22;
          b22.then(function(b32) {
            a22._status === 0 && (b32 = b32.default, a22._status = 1, a22._result = b32);
          }, function(b32) {
            a22._status === 0 && (a22._status = 2, a22._result = b32);
          });
        }
        if (a22._status === 1)
          return a22._result;
        throw a22._result;
      }
      var R$3 = { current: null };
      function S$3() {
        var a22 = R$3.current;
        if (a22 === null)
          throw Error(z$2(321));
        return a22;
      }
      var T$2 = { ReactCurrentDispatcher: R$3, ReactCurrentBatchConfig: { transition: 0 }, ReactCurrentOwner: G$2, IsSomeRendererActing: { current: false }, assign: l$3 };
      react_production_min.Children = { map: P$3, forEach: function(a22, b22, c22) {
        P$3(a22, function() {
          b22.apply(this, arguments);
        }, c22);
      }, count: function(a22) {
        var b22 = 0;
        P$3(a22, function() {
          b22++;
        });
        return b22;
      }, toArray: function(a22) {
        return P$3(a22, function(a32) {
          return a32;
        }) || [];
      }, only: function(a22) {
        if (!L$1(a22))
          throw Error(z$2(143));
        return a22;
      } };
      react_production_min.Component = C$1;
      react_production_min.PureComponent = E$3;
      react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T$2;
      react_production_min.cloneElement = function(a22, b22, c22) {
        if (a22 === null || a22 === void 0)
          throw Error(z$2(267, a22));
        var e22 = l$3({}, a22.props), d22 = a22.key, k22 = a22.ref, h22 = a22._owner;
        if (b22 != null) {
          b22.ref !== void 0 && (k22 = b22.ref, h22 = G$2.current);
          b22.key !== void 0 && (d22 = "" + b22.key);
          if (a22.type && a22.type.defaultProps)
            var g22 = a22.type.defaultProps;
          for (f22 in b22)
            H$2.call(b22, f22) && !I$3.hasOwnProperty(f22) && (e22[f22] = b22[f22] === void 0 && g22 !== void 0 ? g22[f22] : b22[f22]);
        }
        var f22 = arguments.length - 2;
        if (f22 === 1)
          e22.children = c22;
        else if (1 < f22) {
          g22 = Array(f22);
          for (var m22 = 0; m22 < f22; m22++)
            g22[m22] = arguments[m22 + 2];
          e22.children = g22;
        }
        return {
          $$typeof: n$3,
          type: a22.type,
          key: d22,
          ref: k22,
          props: e22,
          _owner: h22
        };
      };
      react_production_min.createContext = function(a22, b22) {
        b22 === void 0 && (b22 = null);
        a22 = { $$typeof: r$4, _calculateChangedBits: b22, _currentValue: a22, _currentValue2: a22, _threadCount: 0, Provider: null, Consumer: null };
        a22.Provider = { $$typeof: q$2, _context: a22 };
        return a22.Consumer = a22;
      };
      react_production_min.createElement = J$1;
      react_production_min.createFactory = function(a22) {
        var b22 = J$1.bind(null, a22);
        b22.type = a22;
        return b22;
      };
      react_production_min.createRef = function() {
        return { current: null };
      };
      react_production_min.forwardRef = function(a22) {
        return { $$typeof: t$2, render: a22 };
      };
      react_production_min.isValidElement = L$1;
      react_production_min.lazy = function(a22) {
        return { $$typeof: v$1, _payload: { _status: -1, _result: a22 }, _init: Q$2 };
      };
      react_production_min.memo = function(a22, b22) {
        return { $$typeof: u$3, type: a22, compare: b22 === void 0 ? null : b22 };
      };
      react_production_min.useCallback = function(a22, b22) {
        return S$3().useCallback(a22, b22);
      };
      react_production_min.useContext = function(a22, b22) {
        return S$3().useContext(a22, b22);
      };
      react_production_min.useDebugValue = function() {
      };
      react_production_min.useEffect = function(a22, b22) {
        return S$3().useEffect(a22, b22);
      };
      react_production_min.useImperativeHandle = function(a22, b22, c22) {
        return S$3().useImperativeHandle(a22, b22, c22);
      };
      react_production_min.useLayoutEffect = function(a22, b22) {
        return S$3().useLayoutEffect(a22, b22);
      };
      react_production_min.useMemo = function(a22, b22) {
        return S$3().useMemo(a22, b22);
      };
      react_production_min.useReducer = function(a22, b22, c22) {
        return S$3().useReducer(a22, b22, c22);
      };
      react_production_min.useRef = function(a22) {
        return S$3().useRef(a22);
      };
      react_production_min.useState = function(a22) {
        return S$3().useState(a22);
      };
      react_production_min.version = "17.0.2";
      {
        react.exports = react_production_min;
      }
      var React__default = react.exports;
      var reactDom = { exports: {} };
      var reactDom_production_min = {};
      var scheduler = { exports: {} };
      var scheduler_production_min = {};
      (function(exports3) {
        var f22, g22, h22, k22;
        if (typeof performance === "object" && typeof performance.now === "function") {
          var l22 = performance;
          exports3.unstable_now = function() {
            return l22.now();
          };
        } else {
          var p22 = Date, q22 = p22.now();
          exports3.unstable_now = function() {
            return p22.now() - q22;
          };
        }
        if (typeof window === "undefined" || typeof MessageChannel !== "function") {
          var t22 = null, u22 = null, w22 = function() {
            if (t22 !== null)
              try {
                var a22 = exports3.unstable_now();
                t22(true, a22);
                t22 = null;
              } catch (b22) {
                throw setTimeout(w22, 0), b22;
              }
          };
          f22 = function(a22) {
            t22 !== null ? setTimeout(f22, 0, a22) : (t22 = a22, setTimeout(w22, 0));
          };
          g22 = function(a22, b22) {
            u22 = setTimeout(a22, b22);
          };
          h22 = function() {
            clearTimeout(u22);
          };
          exports3.unstable_shouldYield = function() {
            return false;
          };
          k22 = exports3.unstable_forceFrameRate = function() {
          };
        } else {
          var x22 = window.setTimeout, y22 = window.clearTimeout;
          if (typeof console !== "undefined") {
            var z22 = window.cancelAnimationFrame;
            typeof window.requestAnimationFrame !== "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
            typeof z22 !== "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
          }
          var A22 = false, B22 = null, C22 = -1, D22 = 5, E22 = 0;
          exports3.unstable_shouldYield = function() {
            return exports3.unstable_now() >= E22;
          };
          k22 = function() {
          };
          exports3.unstable_forceFrameRate = function(a22) {
            0 > a22 || 125 < a22 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D22 = 0 < a22 ? Math.floor(1e3 / a22) : 5;
          };
          var F22 = new MessageChannel(), G22 = F22.port2;
          F22.port1.onmessage = function() {
            if (B22 !== null) {
              var a22 = exports3.unstable_now();
              E22 = a22 + D22;
              try {
                B22(true, a22) ? G22.postMessage(null) : (A22 = false, B22 = null);
              } catch (b22) {
                throw G22.postMessage(null), b22;
              }
            } else
              A22 = false;
          };
          f22 = function(a22) {
            B22 = a22;
            A22 || (A22 = true, G22.postMessage(null));
          };
          g22 = function(a22, b22) {
            C22 = x22(function() {
              a22(exports3.unstable_now());
            }, b22);
          };
          h22 = function() {
            y22(C22);
            C22 = -1;
          };
        }
        function H22(a22, b22) {
          var c22 = a22.length;
          a22.push(b22);
          a:
            for (; ; ) {
              var d22 = c22 - 1 >>> 1, e22 = a22[d22];
              if (e22 !== void 0 && 0 < I22(e22, b22))
                a22[d22] = b22, a22[c22] = e22, c22 = d22;
              else
                break a;
            }
        }
        function J22(a22) {
          a22 = a22[0];
          return a22 === void 0 ? null : a22;
        }
        function K22(a22) {
          var b22 = a22[0];
          if (b22 !== void 0) {
            var c22 = a22.pop();
            if (c22 !== b22) {
              a22[0] = c22;
              a:
                for (var d22 = 0, e22 = a22.length; d22 < e22; ) {
                  var m22 = 2 * (d22 + 1) - 1, n22 = a22[m22], v22 = m22 + 1, r22 = a22[v22];
                  if (n22 !== void 0 && 0 > I22(n22, c22))
                    r22 !== void 0 && 0 > I22(r22, n22) ? (a22[d22] = r22, a22[v22] = c22, d22 = v22) : (a22[d22] = n22, a22[m22] = c22, d22 = m22);
                  else if (r22 !== void 0 && 0 > I22(r22, c22))
                    a22[d22] = r22, a22[v22] = c22, d22 = v22;
                  else
                    break a;
                }
            }
            return b22;
          }
          return null;
        }
        function I22(a22, b22) {
          var c22 = a22.sortIndex - b22.sortIndex;
          return c22 !== 0 ? c22 : a22.id - b22.id;
        }
        var L22 = [], M22 = [], N22 = 1, O22 = null, P22 = 3, Q22 = false, R22 = false, S22 = false;
        function T22(a22) {
          for (var b22 = J22(M22); b22 !== null; ) {
            if (b22.callback === null)
              K22(M22);
            else if (b22.startTime <= a22)
              K22(M22), b22.sortIndex = b22.expirationTime, H22(L22, b22);
            else
              break;
            b22 = J22(M22);
          }
        }
        function U22(a22) {
          S22 = false;
          T22(a22);
          if (!R22)
            if (J22(L22) !== null)
              R22 = true, f22(V22);
            else {
              var b22 = J22(M22);
              b22 !== null && g22(U22, b22.startTime - a22);
            }
        }
        function V22(a22, b22) {
          R22 = false;
          S22 && (S22 = false, h22());
          Q22 = true;
          var c22 = P22;
          try {
            T22(b22);
            for (O22 = J22(L22); O22 !== null && (!(O22.expirationTime > b22) || a22 && !exports3.unstable_shouldYield()); ) {
              var d22 = O22.callback;
              if (typeof d22 === "function") {
                O22.callback = null;
                P22 = O22.priorityLevel;
                var e22 = d22(O22.expirationTime <= b22);
                b22 = exports3.unstable_now();
                typeof e22 === "function" ? O22.callback = e22 : O22 === J22(L22) && K22(L22);
                T22(b22);
              } else
                K22(L22);
              O22 = J22(L22);
            }
            if (O22 !== null)
              var m22 = true;
            else {
              var n22 = J22(M22);
              n22 !== null && g22(U22, n22.startTime - b22);
              m22 = false;
            }
            return m22;
          } finally {
            O22 = null, P22 = c22, Q22 = false;
          }
        }
        var W2 = k22;
        exports3.unstable_IdlePriority = 5;
        exports3.unstable_ImmediatePriority = 1;
        exports3.unstable_LowPriority = 4;
        exports3.unstable_NormalPriority = 3;
        exports3.unstable_Profiling = null;
        exports3.unstable_UserBlockingPriority = 2;
        exports3.unstable_cancelCallback = function(a22) {
          a22.callback = null;
        };
        exports3.unstable_continueExecution = function() {
          R22 || Q22 || (R22 = true, f22(V22));
        };
        exports3.unstable_getCurrentPriorityLevel = function() {
          return P22;
        };
        exports3.unstable_getFirstCallbackNode = function() {
          return J22(L22);
        };
        exports3.unstable_next = function(a22) {
          switch (P22) {
            case 1:
            case 2:
            case 3:
              var b22 = 3;
              break;
            default:
              b22 = P22;
          }
          var c22 = P22;
          P22 = b22;
          try {
            return a22();
          } finally {
            P22 = c22;
          }
        };
        exports3.unstable_pauseExecution = function() {
        };
        exports3.unstable_requestPaint = W2;
        exports3.unstable_runWithPriority = function(a22, b22) {
          switch (a22) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
              break;
            default:
              a22 = 3;
          }
          var c22 = P22;
          P22 = a22;
          try {
            return b22();
          } finally {
            P22 = c22;
          }
        };
        exports3.unstable_scheduleCallback = function(a22, b22, c22) {
          var d22 = exports3.unstable_now();
          typeof c22 === "object" && c22 !== null ? (c22 = c22.delay, c22 = typeof c22 === "number" && 0 < c22 ? d22 + c22 : d22) : c22 = d22;
          switch (a22) {
            case 1:
              var e22 = -1;
              break;
            case 2:
              e22 = 250;
              break;
            case 5:
              e22 = 1073741823;
              break;
            case 4:
              e22 = 1e4;
              break;
            default:
              e22 = 5e3;
          }
          e22 = c22 + e22;
          a22 = { id: N22++, callback: b22, priorityLevel: a22, startTime: c22, expirationTime: e22, sortIndex: -1 };
          c22 > d22 ? (a22.sortIndex = c22, H22(M22, a22), J22(L22) === null && a22 === J22(M22) && (S22 ? h22() : S22 = true, g22(U22, c22 - d22))) : (a22.sortIndex = e22, H22(L22, a22), R22 || Q22 || (R22 = true, f22(V22)));
          return a22;
        };
        exports3.unstable_wrapCallback = function(a22) {
          var b22 = P22;
          return function() {
            var c22 = P22;
            P22 = b22;
            try {
              return a22.apply(this, arguments);
            } finally {
              P22 = c22;
            }
          };
        };
      })(scheduler_production_min);
      {
        scheduler.exports = scheduler_production_min;
      }
      var aa$1 = react.exports, m$2 = objectAssign, r$3 = scheduler.exports;
      function y$1(a22) {
        for (var b22 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a22, c22 = 1; c22 < arguments.length; c22++)
          b22 += "&args[]=" + encodeURIComponent(arguments[c22]);
        return "Minified React error #" + a22 + "; visit " + b22 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      }
      if (!aa$1)
        throw Error(y$1(227));
      var ba$1 = /* @__PURE__ */ new Set(), ca$1 = {};
      function da$1(a22, b22) {
        ea$1(a22, b22);
        ea$1(a22 + "Capture", b22);
      }
      function ea$1(a22, b22) {
        ca$1[a22] = b22;
        for (a22 = 0; a22 < b22.length; a22++)
          ba$1.add(b22[a22]);
      }
      var fa$1 = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined"), ha$1 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ia$1 = Object.prototype.hasOwnProperty, ja$1 = {}, ka$1 = {};
      function la$1(a22) {
        if (ia$1.call(ka$1, a22))
          return true;
        if (ia$1.call(ja$1, a22))
          return false;
        if (ha$1.test(a22))
          return ka$1[a22] = true;
        ja$1[a22] = true;
        return false;
      }
      function ma$1(a22, b22, c22, d22) {
        if (c22 !== null && c22.type === 0)
          return false;
        switch (typeof b22) {
          case "function":
          case "symbol":
            return true;
          case "boolean":
            if (d22)
              return false;
            if (c22 !== null)
              return !c22.acceptsBooleans;
            a22 = a22.toLowerCase().slice(0, 5);
            return a22 !== "data-" && a22 !== "aria-";
          default:
            return false;
        }
      }
      function na$1(a22, b22, c22, d22) {
        if (b22 === null || typeof b22 === "undefined" || ma$1(a22, b22, c22, d22))
          return true;
        if (d22)
          return false;
        if (c22 !== null)
          switch (c22.type) {
            case 3:
              return !b22;
            case 4:
              return b22 === false;
            case 5:
              return isNaN(b22);
            case 6:
              return isNaN(b22) || 1 > b22;
          }
        return false;
      }
      function B$2(a22, b22, c22, d22, e22, f22, g22) {
        this.acceptsBooleans = b22 === 2 || b22 === 3 || b22 === 4;
        this.attributeName = d22;
        this.attributeNamespace = e22;
        this.mustUseProperty = c22;
        this.propertyName = a22;
        this.type = b22;
        this.sanitizeURL = f22;
        this.removeEmptyString = g22;
      }
      var D$2 = {};
      "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a22) {
        D$2[a22] = new B$2(a22, 0, false, a22, null, false, false);
      });
      [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a22) {
        var b22 = a22[0];
        D$2[b22] = new B$2(b22, 1, false, a22[1], null, false, false);
      });
      ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 2, false, a22.toLowerCase(), null, false, false);
      });
      ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 2, false, a22, null, false, false);
      });
      "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a22) {
        D$2[a22] = new B$2(a22, 3, false, a22.toLowerCase(), null, false, false);
      });
      ["checked", "multiple", "muted", "selected"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 3, true, a22, null, false, false);
      });
      ["capture", "download"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 4, false, a22, null, false, false);
      });
      ["cols", "rows", "size", "span"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 6, false, a22, null, false, false);
      });
      ["rowSpan", "start"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 5, false, a22.toLowerCase(), null, false, false);
      });
      var oa$1 = /[\-:]([a-z])/g;
      function pa$1(a22) {
        return a22[1].toUpperCase();
      }
      "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a22) {
        var b22 = a22.replace(oa$1, pa$1);
        D$2[b22] = new B$2(b22, 1, false, a22, null, false, false);
      });
      "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a22) {
        var b22 = a22.replace(oa$1, pa$1);
        D$2[b22] = new B$2(b22, 1, false, a22, "http://www.w3.org/1999/xlink", false, false);
      });
      ["xml:base", "xml:lang", "xml:space"].forEach(function(a22) {
        var b22 = a22.replace(oa$1, pa$1);
        D$2[b22] = new B$2(b22, 1, false, a22, "http://www.w3.org/XML/1998/namespace", false, false);
      });
      ["tabIndex", "crossOrigin"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 1, false, a22.toLowerCase(), null, false, false);
      });
      D$2.xlinkHref = new B$2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
      ["src", "href", "action", "formAction"].forEach(function(a22) {
        D$2[a22] = new B$2(a22, 1, false, a22.toLowerCase(), null, true, true);
      });
      function qa$1(a22, b22, c22, d22) {
        var e22 = D$2.hasOwnProperty(b22) ? D$2[b22] : null;
        var f22 = e22 !== null ? e22.type === 0 : d22 ? false : !(2 < b22.length) || b22[0] !== "o" && b22[0] !== "O" || b22[1] !== "n" && b22[1] !== "N" ? false : true;
        f22 || (na$1(b22, c22, e22, d22) && (c22 = null), d22 || e22 === null ? la$1(b22) && (c22 === null ? a22.removeAttribute(b22) : a22.setAttribute(b22, "" + c22)) : e22.mustUseProperty ? a22[e22.propertyName] = c22 === null ? e22.type === 3 ? false : "" : c22 : (b22 = e22.attributeName, d22 = e22.attributeNamespace, c22 === null ? a22.removeAttribute(b22) : (e22 = e22.type, c22 = e22 === 3 || e22 === 4 && c22 === true ? "" : "" + c22, d22 ? a22.setAttributeNS(d22, b22, c22) : a22.setAttribute(b22, c22))));
      }
      var ra$1 = aa$1.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, sa$1 = 60103, ta$1 = 60106, ua$1 = 60107, wa$1 = 60108, xa$1 = 60114, ya$1 = 60109, za$1 = 60110, Aa$1 = 60112, Ba$1 = 60113, Ca$1 = 60120, Da$1 = 60115, Ea$1 = 60116, Fa$1 = 60121, Ga$1 = 60128, Ha$1 = 60129, Ia$1 = 60130, Ja$1 = 60131;
      if (typeof Symbol === "function" && Symbol.for) {
        var E$2 = Symbol.for;
        sa$1 = E$2("react.element");
        ta$1 = E$2("react.portal");
        ua$1 = E$2("react.fragment");
        wa$1 = E$2("react.strict_mode");
        xa$1 = E$2("react.profiler");
        ya$1 = E$2("react.provider");
        za$1 = E$2("react.context");
        Aa$1 = E$2("react.forward_ref");
        Ba$1 = E$2("react.suspense");
        Ca$1 = E$2("react.suspense_list");
        Da$1 = E$2("react.memo");
        Ea$1 = E$2("react.lazy");
        Fa$1 = E$2("react.block");
        E$2("react.scope");
        Ga$1 = E$2("react.opaque.id");
        Ha$1 = E$2("react.debug_trace_mode");
        Ia$1 = E$2("react.offscreen");
        Ja$1 = E$2("react.legacy_hidden");
      }
      var Ka$1 = typeof Symbol === "function" && Symbol.iterator;
      function La$1(a22) {
        if (a22 === null || typeof a22 !== "object")
          return null;
        a22 = Ka$1 && a22[Ka$1] || a22["@@iterator"];
        return typeof a22 === "function" ? a22 : null;
      }
      var Ma$1;
      function Na$1(a22) {
        if (Ma$1 === void 0)
          try {
            throw Error();
          } catch (c22) {
            var b22 = c22.stack.trim().match(/\n( *(at )?)/);
            Ma$1 = b22 && b22[1] || "";
          }
        return "\n" + Ma$1 + a22;
      }
      var Oa$1 = false;
      function Pa$1(a22, b22) {
        if (!a22 || Oa$1)
          return "";
        Oa$1 = true;
        var c22 = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        try {
          if (b22)
            if (b22 = function() {
              throw Error();
            }, Object.defineProperty(b22.prototype, "props", { set: function() {
              throw Error();
            } }), typeof Reflect === "object" && Reflect.construct) {
              try {
                Reflect.construct(b22, []);
              } catch (k22) {
                var d22 = k22;
              }
              Reflect.construct(a22, [], b22);
            } else {
              try {
                b22.call();
              } catch (k22) {
                d22 = k22;
              }
              a22.call(b22.prototype);
            }
          else {
            try {
              throw Error();
            } catch (k22) {
              d22 = k22;
            }
            a22();
          }
        } catch (k22) {
          if (k22 && d22 && typeof k22.stack === "string") {
            for (var e22 = k22.stack.split("\n"), f22 = d22.stack.split("\n"), g22 = e22.length - 1, h22 = f22.length - 1; 1 <= g22 && 0 <= h22 && e22[g22] !== f22[h22]; )
              h22--;
            for (; 1 <= g22 && 0 <= h22; g22--, h22--)
              if (e22[g22] !== f22[h22]) {
                if (g22 !== 1 || h22 !== 1) {
                  do
                    if (g22--, h22--, 0 > h22 || e22[g22] !== f22[h22])
                      return "\n" + e22[g22].replace(" at new ", " at ");
                  while (1 <= g22 && 0 <= h22);
                }
                break;
              }
          }
        } finally {
          Oa$1 = false, Error.prepareStackTrace = c22;
        }
        return (a22 = a22 ? a22.displayName || a22.name : "") ? Na$1(a22) : "";
      }
      function Qa$1(a22) {
        switch (a22.tag) {
          case 5:
            return Na$1(a22.type);
          case 16:
            return Na$1("Lazy");
          case 13:
            return Na$1("Suspense");
          case 19:
            return Na$1("SuspenseList");
          case 0:
          case 2:
          case 15:
            return a22 = Pa$1(a22.type, false), a22;
          case 11:
            return a22 = Pa$1(a22.type.render, false), a22;
          case 22:
            return a22 = Pa$1(a22.type._render, false), a22;
          case 1:
            return a22 = Pa$1(a22.type, true), a22;
          default:
            return "";
        }
      }
      function Ra$1(a22) {
        if (a22 == null)
          return null;
        if (typeof a22 === "function")
          return a22.displayName || a22.name || null;
        if (typeof a22 === "string")
          return a22;
        switch (a22) {
          case ua$1:
            return "Fragment";
          case ta$1:
            return "Portal";
          case xa$1:
            return "Profiler";
          case wa$1:
            return "StrictMode";
          case Ba$1:
            return "Suspense";
          case Ca$1:
            return "SuspenseList";
        }
        if (typeof a22 === "object")
          switch (a22.$$typeof) {
            case za$1:
              return (a22.displayName || "Context") + ".Consumer";
            case ya$1:
              return (a22._context.displayName || "Context") + ".Provider";
            case Aa$1:
              var b22 = a22.render;
              b22 = b22.displayName || b22.name || "";
              return a22.displayName || (b22 !== "" ? "ForwardRef(" + b22 + ")" : "ForwardRef");
            case Da$1:
              return Ra$1(a22.type);
            case Fa$1:
              return Ra$1(a22._render);
            case Ea$1:
              b22 = a22._payload;
              a22 = a22._init;
              try {
                return Ra$1(a22(b22));
              } catch (c22) {
              }
          }
        return null;
      }
      function Sa$1(a22) {
        switch (typeof a22) {
          case "boolean":
          case "number":
          case "object":
          case "string":
          case "undefined":
            return a22;
          default:
            return "";
        }
      }
      function Ta$1(a22) {
        var b22 = a22.type;
        return (a22 = a22.nodeName) && a22.toLowerCase() === "input" && (b22 === "checkbox" || b22 === "radio");
      }
      function Ua$1(a22) {
        var b22 = Ta$1(a22) ? "checked" : "value", c22 = Object.getOwnPropertyDescriptor(a22.constructor.prototype, b22), d22 = "" + a22[b22];
        if (!a22.hasOwnProperty(b22) && typeof c22 !== "undefined" && typeof c22.get === "function" && typeof c22.set === "function") {
          var e22 = c22.get, f22 = c22.set;
          Object.defineProperty(a22, b22, { configurable: true, get: function() {
            return e22.call(this);
          }, set: function(a32) {
            d22 = "" + a32;
            f22.call(this, a32);
          } });
          Object.defineProperty(a22, b22, { enumerable: c22.enumerable });
          return { getValue: function() {
            return d22;
          }, setValue: function(a32) {
            d22 = "" + a32;
          }, stopTracking: function() {
            a22._valueTracker = null;
            delete a22[b22];
          } };
        }
      }
      function Va$1(a22) {
        a22._valueTracker || (a22._valueTracker = Ua$1(a22));
      }
      function Wa$1(a22) {
        if (!a22)
          return false;
        var b22 = a22._valueTracker;
        if (!b22)
          return true;
        var c22 = b22.getValue();
        var d22 = "";
        a22 && (d22 = Ta$1(a22) ? a22.checked ? "true" : "false" : a22.value);
        a22 = d22;
        return a22 !== c22 ? (b22.setValue(a22), true) : false;
      }
      function Xa$1(a22) {
        a22 = a22 || (typeof document !== "undefined" ? document : void 0);
        if (typeof a22 === "undefined")
          return null;
        try {
          return a22.activeElement || a22.body;
        } catch (b22) {
          return a22.body;
        }
      }
      function Ya$1(a22, b22) {
        var c22 = b22.checked;
        return m$2({}, b22, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c22 != null ? c22 : a22._wrapperState.initialChecked });
      }
      function Za$1(a22, b22) {
        var c22 = b22.defaultValue == null ? "" : b22.defaultValue, d22 = b22.checked != null ? b22.checked : b22.defaultChecked;
        c22 = Sa$1(b22.value != null ? b22.value : c22);
        a22._wrapperState = { initialChecked: d22, initialValue: c22, controlled: b22.type === "checkbox" || b22.type === "radio" ? b22.checked != null : b22.value != null };
      }
      function $a$1(a22, b22) {
        b22 = b22.checked;
        b22 != null && qa$1(a22, "checked", b22, false);
      }
      function ab$1(a22, b22) {
        $a$1(a22, b22);
        var c22 = Sa$1(b22.value), d22 = b22.type;
        if (c22 != null)
          if (d22 === "number") {
            if (c22 === 0 && a22.value === "" || a22.value != c22)
              a22.value = "" + c22;
          } else
            a22.value !== "" + c22 && (a22.value = "" + c22);
        else if (d22 === "submit" || d22 === "reset") {
          a22.removeAttribute("value");
          return;
        }
        b22.hasOwnProperty("value") ? bb$1(a22, b22.type, c22) : b22.hasOwnProperty("defaultValue") && bb$1(a22, b22.type, Sa$1(b22.defaultValue));
        b22.checked == null && b22.defaultChecked != null && (a22.defaultChecked = !!b22.defaultChecked);
      }
      function cb(a22, b22, c22) {
        if (b22.hasOwnProperty("value") || b22.hasOwnProperty("defaultValue")) {
          var d22 = b22.type;
          if (!(d22 !== "submit" && d22 !== "reset" || b22.value !== void 0 && b22.value !== null))
            return;
          b22 = "" + a22._wrapperState.initialValue;
          c22 || b22 === a22.value || (a22.value = b22);
          a22.defaultValue = b22;
        }
        c22 = a22.name;
        c22 !== "" && (a22.name = "");
        a22.defaultChecked = !!a22._wrapperState.initialChecked;
        c22 !== "" && (a22.name = c22);
      }
      function bb$1(a22, b22, c22) {
        if (b22 !== "number" || Xa$1(a22.ownerDocument) !== a22)
          c22 == null ? a22.defaultValue = "" + a22._wrapperState.initialValue : a22.defaultValue !== "" + c22 && (a22.defaultValue = "" + c22);
      }
      function db(a22) {
        var b22 = "";
        aa$1.Children.forEach(a22, function(a32) {
          a32 != null && (b22 += a32);
        });
        return b22;
      }
      function eb(a22, b22) {
        a22 = m$2({ children: void 0 }, b22);
        if (b22 = db(b22.children))
          a22.children = b22;
        return a22;
      }
      function fb(a22, b22, c22, d22) {
        a22 = a22.options;
        if (b22) {
          b22 = {};
          for (var e22 = 0; e22 < c22.length; e22++)
            b22["$" + c22[e22]] = true;
          for (c22 = 0; c22 < a22.length; c22++)
            e22 = b22.hasOwnProperty("$" + a22[c22].value), a22[c22].selected !== e22 && (a22[c22].selected = e22), e22 && d22 && (a22[c22].defaultSelected = true);
        } else {
          c22 = "" + Sa$1(c22);
          b22 = null;
          for (e22 = 0; e22 < a22.length; e22++) {
            if (a22[e22].value === c22) {
              a22[e22].selected = true;
              d22 && (a22[e22].defaultSelected = true);
              return;
            }
            b22 !== null || a22[e22].disabled || (b22 = a22[e22]);
          }
          b22 !== null && (b22.selected = true);
        }
      }
      function gb(a22, b22) {
        if (b22.dangerouslySetInnerHTML != null)
          throw Error(y$1(91));
        return m$2({}, b22, { value: void 0, defaultValue: void 0, children: "" + a22._wrapperState.initialValue });
      }
      function hb(a22, b22) {
        var c22 = b22.value;
        if (c22 == null) {
          c22 = b22.children;
          b22 = b22.defaultValue;
          if (c22 != null) {
            if (b22 != null)
              throw Error(y$1(92));
            if (Array.isArray(c22)) {
              if (!(1 >= c22.length))
                throw Error(y$1(93));
              c22 = c22[0];
            }
            b22 = c22;
          }
          b22 == null && (b22 = "");
          c22 = b22;
        }
        a22._wrapperState = { initialValue: Sa$1(c22) };
      }
      function ib(a22, b22) {
        var c22 = Sa$1(b22.value), d22 = Sa$1(b22.defaultValue);
        c22 != null && (c22 = "" + c22, c22 !== a22.value && (a22.value = c22), b22.defaultValue == null && a22.defaultValue !== c22 && (a22.defaultValue = c22));
        d22 != null && (a22.defaultValue = "" + d22);
      }
      function jb(a22) {
        var b22 = a22.textContent;
        b22 === a22._wrapperState.initialValue && b22 !== "" && b22 !== null && (a22.value = b22);
      }
      var kb = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };
      function lb(a22) {
        switch (a22) {
          case "svg":
            return "http://www.w3.org/2000/svg";
          case "math":
            return "http://www.w3.org/1998/Math/MathML";
          default:
            return "http://www.w3.org/1999/xhtml";
        }
      }
      function mb(a22, b22) {
        return a22 == null || a22 === "http://www.w3.org/1999/xhtml" ? lb(b22) : a22 === "http://www.w3.org/2000/svg" && b22 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a22;
      }
      var nb, ob = function(a22) {
        return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b22, c22, d22, e22) {
          MSApp.execUnsafeLocalFunction(function() {
            return a22(b22, c22, d22, e22);
          });
        } : a22;
      }(function(a22, b22) {
        if (a22.namespaceURI !== kb.svg || "innerHTML" in a22)
          a22.innerHTML = b22;
        else {
          nb = nb || document.createElement("div");
          nb.innerHTML = "<svg>" + b22.valueOf().toString() + "</svg>";
          for (b22 = nb.firstChild; a22.firstChild; )
            a22.removeChild(a22.firstChild);
          for (; b22.firstChild; )
            a22.appendChild(b22.firstChild);
        }
      });
      function pb(a22, b22) {
        if (b22) {
          var c22 = a22.firstChild;
          if (c22 && c22 === a22.lastChild && c22.nodeType === 3) {
            c22.nodeValue = b22;
            return;
          }
        }
        a22.textContent = b22;
      }
      var qb = {
        animationIterationCount: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
      }, rb = ["Webkit", "ms", "Moz", "O"];
      Object.keys(qb).forEach(function(a22) {
        rb.forEach(function(b22) {
          b22 = b22 + a22.charAt(0).toUpperCase() + a22.substring(1);
          qb[b22] = qb[a22];
        });
      });
      function sb(a22, b22, c22) {
        return b22 == null || typeof b22 === "boolean" || b22 === "" ? "" : c22 || typeof b22 !== "number" || b22 === 0 || qb.hasOwnProperty(a22) && qb[a22] ? ("" + b22).trim() : b22 + "px";
      }
      function tb(a22, b22) {
        a22 = a22.style;
        for (var c22 in b22)
          if (b22.hasOwnProperty(c22)) {
            var d22 = c22.indexOf("--") === 0, e22 = sb(c22, b22[c22], d22);
            c22 === "float" && (c22 = "cssFloat");
            d22 ? a22.setProperty(c22, e22) : a22[c22] = e22;
          }
      }
      var ub = m$2({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
      function vb(a22, b22) {
        if (b22) {
          if (ub[a22] && (b22.children != null || b22.dangerouslySetInnerHTML != null))
            throw Error(y$1(137, a22));
          if (b22.dangerouslySetInnerHTML != null) {
            if (b22.children != null)
              throw Error(y$1(60));
            if (!(typeof b22.dangerouslySetInnerHTML === "object" && "__html" in b22.dangerouslySetInnerHTML))
              throw Error(y$1(61));
          }
          if (b22.style != null && typeof b22.style !== "object")
            throw Error(y$1(62));
        }
      }
      function wb(a22, b22) {
        if (a22.indexOf("-") === -1)
          return typeof b22.is === "string";
        switch (a22) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return false;
          default:
            return true;
        }
      }
      function xb(a22) {
        a22 = a22.target || a22.srcElement || window;
        a22.correspondingUseElement && (a22 = a22.correspondingUseElement);
        return a22.nodeType === 3 ? a22.parentNode : a22;
      }
      var yb = null, zb = null, Ab = null;
      function Bb(a22) {
        if (a22 = Cb(a22)) {
          if (typeof yb !== "function")
            throw Error(y$1(280));
          var b22 = a22.stateNode;
          b22 && (b22 = Db(b22), yb(a22.stateNode, a22.type, b22));
        }
      }
      function Eb(a22) {
        zb ? Ab ? Ab.push(a22) : Ab = [a22] : zb = a22;
      }
      function Fb() {
        if (zb) {
          var a22 = zb, b22 = Ab;
          Ab = zb = null;
          Bb(a22);
          if (b22)
            for (a22 = 0; a22 < b22.length; a22++)
              Bb(b22[a22]);
        }
      }
      function Gb(a22, b22) {
        return a22(b22);
      }
      function Hb(a22, b22, c22, d22, e22) {
        return a22(b22, c22, d22, e22);
      }
      function Ib() {
      }
      var Jb = Gb, Kb = false, Lb = false;
      function Mb() {
        if (zb !== null || Ab !== null)
          Ib(), Fb();
      }
      function Nb(a22, b22, c22) {
        if (Lb)
          return a22(b22, c22);
        Lb = true;
        try {
          return Jb(a22, b22, c22);
        } finally {
          Lb = false, Mb();
        }
      }
      function Ob(a22, b22) {
        var c22 = a22.stateNode;
        if (c22 === null)
          return null;
        var d22 = Db(c22);
        if (d22 === null)
          return null;
        c22 = d22[b22];
        a:
          switch (b22) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (d22 = !d22.disabled) || (a22 = a22.type, d22 = !(a22 === "button" || a22 === "input" || a22 === "select" || a22 === "textarea"));
              a22 = !d22;
              break a;
            default:
              a22 = false;
          }
        if (a22)
          return null;
        if (c22 && typeof c22 !== "function")
          throw Error(y$1(231, b22, typeof c22));
        return c22;
      }
      var Pb = false;
      if (fa$1)
        try {
          var Qb = {};
          Object.defineProperty(Qb, "passive", { get: function() {
            Pb = true;
          } });
          window.addEventListener("test", Qb, Qb);
          window.removeEventListener("test", Qb, Qb);
        } catch (a22) {
          Pb = false;
        }
      function Rb(a22, b22, c22, d22, e22, f22, g22, h22, k22) {
        var l22 = Array.prototype.slice.call(arguments, 3);
        try {
          b22.apply(c22, l22);
        } catch (n22) {
          this.onError(n22);
        }
      }
      var Sb = false, Tb = null, Ub = false, Vb = null, Wb = { onError: function(a22) {
        Sb = true;
        Tb = a22;
      } };
      function Xb(a22, b22, c22, d22, e22, f22, g22, h22, k22) {
        Sb = false;
        Tb = null;
        Rb.apply(Wb, arguments);
      }
      function Yb(a22, b22, c22, d22, e22, f22, g22, h22, k22) {
        Xb.apply(this, arguments);
        if (Sb) {
          if (Sb) {
            var l22 = Tb;
            Sb = false;
            Tb = null;
          } else
            throw Error(y$1(198));
          Ub || (Ub = true, Vb = l22);
        }
      }
      function Zb(a22) {
        var b22 = a22, c22 = a22;
        if (a22.alternate)
          for (; b22.return; )
            b22 = b22.return;
        else {
          a22 = b22;
          do
            b22 = a22, (b22.flags & 1026) !== 0 && (c22 = b22.return), a22 = b22.return;
          while (a22);
        }
        return b22.tag === 3 ? c22 : null;
      }
      function $b(a22) {
        if (a22.tag === 13) {
          var b22 = a22.memoizedState;
          b22 === null && (a22 = a22.alternate, a22 !== null && (b22 = a22.memoizedState));
          if (b22 !== null)
            return b22.dehydrated;
        }
        return null;
      }
      function ac(a22) {
        if (Zb(a22) !== a22)
          throw Error(y$1(188));
      }
      function bc(a22) {
        var b22 = a22.alternate;
        if (!b22) {
          b22 = Zb(a22);
          if (b22 === null)
            throw Error(y$1(188));
          return b22 !== a22 ? null : a22;
        }
        for (var c22 = a22, d22 = b22; ; ) {
          var e22 = c22.return;
          if (e22 === null)
            break;
          var f22 = e22.alternate;
          if (f22 === null) {
            d22 = e22.return;
            if (d22 !== null) {
              c22 = d22;
              continue;
            }
            break;
          }
          if (e22.child === f22.child) {
            for (f22 = e22.child; f22; ) {
              if (f22 === c22)
                return ac(e22), a22;
              if (f22 === d22)
                return ac(e22), b22;
              f22 = f22.sibling;
            }
            throw Error(y$1(188));
          }
          if (c22.return !== d22.return)
            c22 = e22, d22 = f22;
          else {
            for (var g22 = false, h22 = e22.child; h22; ) {
              if (h22 === c22) {
                g22 = true;
                c22 = e22;
                d22 = f22;
                break;
              }
              if (h22 === d22) {
                g22 = true;
                d22 = e22;
                c22 = f22;
                break;
              }
              h22 = h22.sibling;
            }
            if (!g22) {
              for (h22 = f22.child; h22; ) {
                if (h22 === c22) {
                  g22 = true;
                  c22 = f22;
                  d22 = e22;
                  break;
                }
                if (h22 === d22) {
                  g22 = true;
                  d22 = f22;
                  c22 = e22;
                  break;
                }
                h22 = h22.sibling;
              }
              if (!g22)
                throw Error(y$1(189));
            }
          }
          if (c22.alternate !== d22)
            throw Error(y$1(190));
        }
        if (c22.tag !== 3)
          throw Error(y$1(188));
        return c22.stateNode.current === c22 ? a22 : b22;
      }
      function cc(a22) {
        a22 = bc(a22);
        if (!a22)
          return null;
        for (var b22 = a22; ; ) {
          if (b22.tag === 5 || b22.tag === 6)
            return b22;
          if (b22.child)
            b22.child.return = b22, b22 = b22.child;
          else {
            if (b22 === a22)
              break;
            for (; !b22.sibling; ) {
              if (!b22.return || b22.return === a22)
                return null;
              b22 = b22.return;
            }
            b22.sibling.return = b22.return;
            b22 = b22.sibling;
          }
        }
        return null;
      }
      function dc(a22, b22) {
        for (var c22 = a22.alternate; b22 !== null; ) {
          if (b22 === a22 || b22 === c22)
            return true;
          b22 = b22.return;
        }
        return false;
      }
      var ec, fc, gc, hc, ic = false, jc = [], kc = null, lc = null, mc = null, nc = /* @__PURE__ */ new Map(), oc = /* @__PURE__ */ new Map(), pc = [], qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
      function rc(a22, b22, c22, d22, e22) {
        return { blockedOn: a22, domEventName: b22, eventSystemFlags: c22 | 16, nativeEvent: e22, targetContainers: [d22] };
      }
      function sc(a22, b22) {
        switch (a22) {
          case "focusin":
          case "focusout":
            kc = null;
            break;
          case "dragenter":
          case "dragleave":
            lc = null;
            break;
          case "mouseover":
          case "mouseout":
            mc = null;
            break;
          case "pointerover":
          case "pointerout":
            nc.delete(b22.pointerId);
            break;
          case "gotpointercapture":
          case "lostpointercapture":
            oc.delete(b22.pointerId);
        }
      }
      function tc(a22, b22, c22, d22, e22, f22) {
        if (a22 === null || a22.nativeEvent !== f22)
          return a22 = rc(b22, c22, d22, e22, f22), b22 !== null && (b22 = Cb(b22), b22 !== null && fc(b22)), a22;
        a22.eventSystemFlags |= d22;
        b22 = a22.targetContainers;
        e22 !== null && b22.indexOf(e22) === -1 && b22.push(e22);
        return a22;
      }
      function uc(a22, b22, c22, d22, e22) {
        switch (b22) {
          case "focusin":
            return kc = tc(kc, a22, b22, c22, d22, e22), true;
          case "dragenter":
            return lc = tc(lc, a22, b22, c22, d22, e22), true;
          case "mouseover":
            return mc = tc(mc, a22, b22, c22, d22, e22), true;
          case "pointerover":
            var f22 = e22.pointerId;
            nc.set(f22, tc(nc.get(f22) || null, a22, b22, c22, d22, e22));
            return true;
          case "gotpointercapture":
            return f22 = e22.pointerId, oc.set(f22, tc(oc.get(f22) || null, a22, b22, c22, d22, e22)), true;
        }
        return false;
      }
      function vc(a22) {
        var b22 = wc(a22.target);
        if (b22 !== null) {
          var c22 = Zb(b22);
          if (c22 !== null) {
            if (b22 = c22.tag, b22 === 13) {
              if (b22 = $b(c22), b22 !== null) {
                a22.blockedOn = b22;
                hc(a22.lanePriority, function() {
                  r$3.unstable_runWithPriority(a22.priority, function() {
                    gc(c22);
                  });
                });
                return;
              }
            } else if (b22 === 3 && c22.stateNode.hydrate) {
              a22.blockedOn = c22.tag === 3 ? c22.stateNode.containerInfo : null;
              return;
            }
          }
        }
        a22.blockedOn = null;
      }
      function xc(a22) {
        if (a22.blockedOn !== null)
          return false;
        for (var b22 = a22.targetContainers; 0 < b22.length; ) {
          var c22 = yc(a22.domEventName, a22.eventSystemFlags, b22[0], a22.nativeEvent);
          if (c22 !== null)
            return b22 = Cb(c22), b22 !== null && fc(b22), a22.blockedOn = c22, false;
          b22.shift();
        }
        return true;
      }
      function zc(a22, b22, c22) {
        xc(a22) && c22.delete(b22);
      }
      function Ac() {
        for (ic = false; 0 < jc.length; ) {
          var a22 = jc[0];
          if (a22.blockedOn !== null) {
            a22 = Cb(a22.blockedOn);
            a22 !== null && ec(a22);
            break;
          }
          for (var b22 = a22.targetContainers; 0 < b22.length; ) {
            var c22 = yc(a22.domEventName, a22.eventSystemFlags, b22[0], a22.nativeEvent);
            if (c22 !== null) {
              a22.blockedOn = c22;
              break;
            }
            b22.shift();
          }
          a22.blockedOn === null && jc.shift();
        }
        kc !== null && xc(kc) && (kc = null);
        lc !== null && xc(lc) && (lc = null);
        mc !== null && xc(mc) && (mc = null);
        nc.forEach(zc);
        oc.forEach(zc);
      }
      function Bc(a22, b22) {
        a22.blockedOn === b22 && (a22.blockedOn = null, ic || (ic = true, r$3.unstable_scheduleCallback(r$3.unstable_NormalPriority, Ac)));
      }
      function Cc(a22) {
        function b22(b32) {
          return Bc(b32, a22);
        }
        if (0 < jc.length) {
          Bc(jc[0], a22);
          for (var c22 = 1; c22 < jc.length; c22++) {
            var d22 = jc[c22];
            d22.blockedOn === a22 && (d22.blockedOn = null);
          }
        }
        kc !== null && Bc(kc, a22);
        lc !== null && Bc(lc, a22);
        mc !== null && Bc(mc, a22);
        nc.forEach(b22);
        oc.forEach(b22);
        for (c22 = 0; c22 < pc.length; c22++)
          d22 = pc[c22], d22.blockedOn === a22 && (d22.blockedOn = null);
        for (; 0 < pc.length && (c22 = pc[0], c22.blockedOn === null); )
          vc(c22), c22.blockedOn === null && pc.shift();
      }
      function Dc(a22, b22) {
        var c22 = {};
        c22[a22.toLowerCase()] = b22.toLowerCase();
        c22["Webkit" + a22] = "webkit" + b22;
        c22["Moz" + a22] = "moz" + b22;
        return c22;
      }
      var Ec = { animationend: Dc("Animation", "AnimationEnd"), animationiteration: Dc("Animation", "AnimationIteration"), animationstart: Dc("Animation", "AnimationStart"), transitionend: Dc("Transition", "TransitionEnd") }, Fc = {}, Gc = {};
      fa$1 && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);
      function Hc(a22) {
        if (Fc[a22])
          return Fc[a22];
        if (!Ec[a22])
          return a22;
        var b22 = Ec[a22], c22;
        for (c22 in b22)
          if (b22.hasOwnProperty(c22) && c22 in Gc)
            return Fc[a22] = b22[c22];
        return a22;
      }
      var Ic = Hc("animationend"), Jc = Hc("animationiteration"), Kc = Hc("animationstart"), Lc = Hc("transitionend"), Mc = /* @__PURE__ */ new Map(), Nc = /* @__PURE__ */ new Map(), Oc = [
        "abort",
        "abort",
        Ic,
        "animationEnd",
        Jc,
        "animationIteration",
        Kc,
        "animationStart",
        "canplay",
        "canPlay",
        "canplaythrough",
        "canPlayThrough",
        "durationchange",
        "durationChange",
        "emptied",
        "emptied",
        "encrypted",
        "encrypted",
        "ended",
        "ended",
        "error",
        "error",
        "gotpointercapture",
        "gotPointerCapture",
        "load",
        "load",
        "loadeddata",
        "loadedData",
        "loadedmetadata",
        "loadedMetadata",
        "loadstart",
        "loadStart",
        "lostpointercapture",
        "lostPointerCapture",
        "playing",
        "playing",
        "progress",
        "progress",
        "seeking",
        "seeking",
        "stalled",
        "stalled",
        "suspend",
        "suspend",
        "timeupdate",
        "timeUpdate",
        Lc,
        "transitionEnd",
        "waiting",
        "waiting"
      ];
      function Pc(a22, b22) {
        for (var c22 = 0; c22 < a22.length; c22 += 2) {
          var d22 = a22[c22], e22 = a22[c22 + 1];
          e22 = "on" + (e22[0].toUpperCase() + e22.slice(1));
          Nc.set(d22, b22);
          Mc.set(d22, e22);
          da$1(e22, [d22]);
        }
      }
      var Qc = r$3.unstable_now;
      Qc();
      var F$2 = 8;
      function Rc(a22) {
        if ((1 & a22) !== 0)
          return F$2 = 15, 1;
        if ((2 & a22) !== 0)
          return F$2 = 14, 2;
        if ((4 & a22) !== 0)
          return F$2 = 13, 4;
        var b22 = 24 & a22;
        if (b22 !== 0)
          return F$2 = 12, b22;
        if ((a22 & 32) !== 0)
          return F$2 = 11, 32;
        b22 = 192 & a22;
        if (b22 !== 0)
          return F$2 = 10, b22;
        if ((a22 & 256) !== 0)
          return F$2 = 9, 256;
        b22 = 3584 & a22;
        if (b22 !== 0)
          return F$2 = 8, b22;
        if ((a22 & 4096) !== 0)
          return F$2 = 7, 4096;
        b22 = 4186112 & a22;
        if (b22 !== 0)
          return F$2 = 6, b22;
        b22 = 62914560 & a22;
        if (b22 !== 0)
          return F$2 = 5, b22;
        if (a22 & 67108864)
          return F$2 = 4, 67108864;
        if ((a22 & 134217728) !== 0)
          return F$2 = 3, 134217728;
        b22 = 805306368 & a22;
        if (b22 !== 0)
          return F$2 = 2, b22;
        if ((1073741824 & a22) !== 0)
          return F$2 = 1, 1073741824;
        F$2 = 8;
        return a22;
      }
      function Sc(a22) {
        switch (a22) {
          case 99:
            return 15;
          case 98:
            return 10;
          case 97:
          case 96:
            return 8;
          case 95:
            return 2;
          default:
            return 0;
        }
      }
      function Tc(a22) {
        switch (a22) {
          case 15:
          case 14:
            return 99;
          case 13:
          case 12:
          case 11:
          case 10:
            return 98;
          case 9:
          case 8:
          case 7:
          case 6:
          case 4:
          case 5:
            return 97;
          case 3:
          case 2:
          case 1:
            return 95;
          case 0:
            return 90;
          default:
            throw Error(y$1(358, a22));
        }
      }
      function Uc(a22, b22) {
        var c22 = a22.pendingLanes;
        if (c22 === 0)
          return F$2 = 0;
        var d22 = 0, e22 = 0, f22 = a22.expiredLanes, g22 = a22.suspendedLanes, h22 = a22.pingedLanes;
        if (f22 !== 0)
          d22 = f22, e22 = F$2 = 15;
        else if (f22 = c22 & 134217727, f22 !== 0) {
          var k22 = f22 & ~g22;
          k22 !== 0 ? (d22 = Rc(k22), e22 = F$2) : (h22 &= f22, h22 !== 0 && (d22 = Rc(h22), e22 = F$2));
        } else
          f22 = c22 & ~g22, f22 !== 0 ? (d22 = Rc(f22), e22 = F$2) : h22 !== 0 && (d22 = Rc(h22), e22 = F$2);
        if (d22 === 0)
          return 0;
        d22 = 31 - Vc(d22);
        d22 = c22 & ((0 > d22 ? 0 : 1 << d22) << 1) - 1;
        if (b22 !== 0 && b22 !== d22 && (b22 & g22) === 0) {
          Rc(b22);
          if (e22 <= F$2)
            return b22;
          F$2 = e22;
        }
        b22 = a22.entangledLanes;
        if (b22 !== 0)
          for (a22 = a22.entanglements, b22 &= d22; 0 < b22; )
            c22 = 31 - Vc(b22), e22 = 1 << c22, d22 |= a22[c22], b22 &= ~e22;
        return d22;
      }
      function Wc(a22) {
        a22 = a22.pendingLanes & -1073741825;
        return a22 !== 0 ? a22 : a22 & 1073741824 ? 1073741824 : 0;
      }
      function Xc(a22, b22) {
        switch (a22) {
          case 15:
            return 1;
          case 14:
            return 2;
          case 12:
            return a22 = Yc(24 & ~b22), a22 === 0 ? Xc(10, b22) : a22;
          case 10:
            return a22 = Yc(192 & ~b22), a22 === 0 ? Xc(8, b22) : a22;
          case 8:
            return a22 = Yc(3584 & ~b22), a22 === 0 && (a22 = Yc(4186112 & ~b22), a22 === 0 && (a22 = 512)), a22;
          case 2:
            return b22 = Yc(805306368 & ~b22), b22 === 0 && (b22 = 268435456), b22;
        }
        throw Error(y$1(358, a22));
      }
      function Yc(a22) {
        return a22 & -a22;
      }
      function Zc(a22) {
        for (var b22 = [], c22 = 0; 31 > c22; c22++)
          b22.push(a22);
        return b22;
      }
      function $c(a22, b22, c22) {
        a22.pendingLanes |= b22;
        var d22 = b22 - 1;
        a22.suspendedLanes &= d22;
        a22.pingedLanes &= d22;
        a22 = a22.eventTimes;
        b22 = 31 - Vc(b22);
        a22[b22] = c22;
      }
      var Vc = Math.clz32 ? Math.clz32 : ad, bd = Math.log, cd = Math.LN2;
      function ad(a22) {
        return a22 === 0 ? 32 : 31 - (bd(a22) / cd | 0) | 0;
      }
      var dd = r$3.unstable_UserBlockingPriority, ed = r$3.unstable_runWithPriority, fd = true;
      function gd(a22, b22, c22, d22) {
        Kb || Ib();
        var e22 = hd, f22 = Kb;
        Kb = true;
        try {
          Hb(e22, a22, b22, c22, d22);
        } finally {
          (Kb = f22) || Mb();
        }
      }
      function id(a22, b22, c22, d22) {
        ed(dd, hd.bind(null, a22, b22, c22, d22));
      }
      function hd(a22, b22, c22, d22) {
        if (fd) {
          var e22;
          if ((e22 = (b22 & 4) === 0) && 0 < jc.length && -1 < qc.indexOf(a22))
            a22 = rc(null, a22, b22, c22, d22), jc.push(a22);
          else {
            var f22 = yc(a22, b22, c22, d22);
            if (f22 === null)
              e22 && sc(a22, d22);
            else {
              if (e22) {
                if (-1 < qc.indexOf(a22)) {
                  a22 = rc(f22, a22, b22, c22, d22);
                  jc.push(a22);
                  return;
                }
                if (uc(f22, a22, b22, c22, d22))
                  return;
                sc(a22, d22);
              }
              jd(a22, b22, d22, null, c22);
            }
          }
        }
      }
      function yc(a22, b22, c22, d22) {
        var e22 = xb(d22);
        e22 = wc(e22);
        if (e22 !== null) {
          var f22 = Zb(e22);
          if (f22 === null)
            e22 = null;
          else {
            var g22 = f22.tag;
            if (g22 === 13) {
              e22 = $b(f22);
              if (e22 !== null)
                return e22;
              e22 = null;
            } else if (g22 === 3) {
              if (f22.stateNode.hydrate)
                return f22.tag === 3 ? f22.stateNode.containerInfo : null;
              e22 = null;
            } else
              f22 !== e22 && (e22 = null);
          }
        }
        jd(a22, b22, d22, e22, c22);
        return null;
      }
      var kd = null, ld = null, md = null;
      function nd() {
        if (md)
          return md;
        var a22, b22 = ld, c22 = b22.length, d22, e22 = "value" in kd ? kd.value : kd.textContent, f22 = e22.length;
        for (a22 = 0; a22 < c22 && b22[a22] === e22[a22]; a22++)
          ;
        var g22 = c22 - a22;
        for (d22 = 1; d22 <= g22 && b22[c22 - d22] === e22[f22 - d22]; d22++)
          ;
        return md = e22.slice(a22, 1 < d22 ? 1 - d22 : void 0);
      }
      function od(a22) {
        var b22 = a22.keyCode;
        "charCode" in a22 ? (a22 = a22.charCode, a22 === 0 && b22 === 13 && (a22 = 13)) : a22 = b22;
        a22 === 10 && (a22 = 13);
        return 32 <= a22 || a22 === 13 ? a22 : 0;
      }
      function pd() {
        return true;
      }
      function qd() {
        return false;
      }
      function rd(a22) {
        function b22(b32, d22, e22, f22, g22) {
          this._reactName = b32;
          this._targetInst = e22;
          this.type = d22;
          this.nativeEvent = f22;
          this.target = g22;
          this.currentTarget = null;
          for (var c22 in a22)
            a22.hasOwnProperty(c22) && (b32 = a22[c22], this[c22] = b32 ? b32(f22) : f22[c22]);
          this.isDefaultPrevented = (f22.defaultPrevented != null ? f22.defaultPrevented : f22.returnValue === false) ? pd : qd;
          this.isPropagationStopped = qd;
          return this;
        }
        m$2(b22.prototype, { preventDefault: function() {
          this.defaultPrevented = true;
          var a32 = this.nativeEvent;
          a32 && (a32.preventDefault ? a32.preventDefault() : typeof a32.returnValue !== "unknown" && (a32.returnValue = false), this.isDefaultPrevented = pd);
        }, stopPropagation: function() {
          var a32 = this.nativeEvent;
          a32 && (a32.stopPropagation ? a32.stopPropagation() : typeof a32.cancelBubble !== "unknown" && (a32.cancelBubble = true), this.isPropagationStopped = pd);
        }, persist: function() {
        }, isPersistent: pd });
        return b22;
      }
      var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a22) {
        return a22.timeStamp || Date.now();
      }, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = m$2({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = m$2({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a22) {
        return a22.relatedTarget === void 0 ? a22.fromElement === a22.srcElement ? a22.toElement : a22.fromElement : a22.relatedTarget;
      }, movementX: function(a22) {
        if ("movementX" in a22)
          return a22.movementX;
        a22 !== yd && (yd && a22.type === "mousemove" ? (wd = a22.screenX - yd.screenX, xd = a22.screenY - yd.screenY) : xd = wd = 0, yd = a22);
        return wd;
      }, movementY: function(a22) {
        return "movementY" in a22 ? a22.movementY : xd;
      } }), Bd = rd(Ad), Cd = m$2({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = m$2({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = m$2({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = m$2({}, sd, { clipboardData: function(a22) {
        return "clipboardData" in a22 ? a22.clipboardData : window.clipboardData;
      } }), Jd = rd(Id), Kd = m$2({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
      }, Nd = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
      }, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
      function Pd(a22) {
        var b22 = this.nativeEvent;
        return b22.getModifierState ? b22.getModifierState(a22) : (a22 = Od[a22]) ? !!b22[a22] : false;
      }
      function zd() {
        return Pd;
      }
      var Qd = m$2({}, ud, { key: function(a22) {
        if (a22.key) {
          var b22 = Md[a22.key] || a22.key;
          if (b22 !== "Unidentified")
            return b22;
        }
        return a22.type === "keypress" ? (a22 = od(a22), a22 === 13 ? "Enter" : String.fromCharCode(a22)) : a22.type === "keydown" || a22.type === "keyup" ? Nd[a22.keyCode] || "Unidentified" : "";
      }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a22) {
        return a22.type === "keypress" ? od(a22) : 0;
      }, keyCode: function(a22) {
        return a22.type === "keydown" || a22.type === "keyup" ? a22.keyCode : 0;
      }, which: function(a22) {
        return a22.type === "keypress" ? od(a22) : a22.type === "keydown" || a22.type === "keyup" ? a22.keyCode : 0;
      } }), Rd = rd(Qd), Sd = m$2({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = m$2({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = m$2({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = m$2({}, Ad, {
        deltaX: function(a22) {
          return "deltaX" in a22 ? a22.deltaX : "wheelDeltaX" in a22 ? -a22.wheelDeltaX : 0;
        },
        deltaY: function(a22) {
          return "deltaY" in a22 ? a22.deltaY : "wheelDeltaY" in a22 ? -a22.wheelDeltaY : "wheelDelta" in a22 ? -a22.wheelDelta : 0;
        },
        deltaZ: 0,
        deltaMode: 0
      }), Zd = rd(Yd), $d = [9, 13, 27, 32], ae3 = fa$1 && "CompositionEvent" in window, be4 = null;
      fa$1 && "documentMode" in document && (be4 = document.documentMode);
      var ce4 = fa$1 && "TextEvent" in window && !be4, de3 = fa$1 && (!ae3 || be4 && 8 < be4 && 11 >= be4), ee4 = String.fromCharCode(32), fe4 = false;
      function ge6(a22, b22) {
        switch (a22) {
          case "keyup":
            return $d.indexOf(b22.keyCode) !== -1;
          case "keydown":
            return b22.keyCode !== 229;
          case "keypress":
          case "mousedown":
          case "focusout":
            return true;
          default:
            return false;
        }
      }
      function he4(a22) {
        a22 = a22.detail;
        return typeof a22 === "object" && "data" in a22 ? a22.data : null;
      }
      var ie4 = false;
      function je5(a22, b22) {
        switch (a22) {
          case "compositionend":
            return he4(b22);
          case "keypress":
            if (b22.which !== 32)
              return null;
            fe4 = true;
            return ee4;
          case "textInput":
            return a22 = b22.data, a22 === ee4 && fe4 ? null : a22;
          default:
            return null;
        }
      }
      function ke5(a22, b22) {
        if (ie4)
          return a22 === "compositionend" || !ae3 && ge6(a22, b22) ? (a22 = nd(), md = ld = kd = null, ie4 = false, a22) : null;
        switch (a22) {
          case "paste":
            return null;
          case "keypress":
            if (!(b22.ctrlKey || b22.altKey || b22.metaKey) || b22.ctrlKey && b22.altKey) {
              if (b22.char && 1 < b22.char.length)
                return b22.char;
              if (b22.which)
                return String.fromCharCode(b22.which);
            }
            return null;
          case "compositionend":
            return de3 && b22.locale !== "ko" ? null : b22.data;
          default:
            return null;
        }
      }
      var le4 = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
      function me4(a22) {
        var b22 = a22 && a22.nodeName && a22.nodeName.toLowerCase();
        return b22 === "input" ? !!le4[a22.type] : b22 === "textarea" ? true : false;
      }
      function ne6(a22, b22, c22, d22) {
        Eb(d22);
        b22 = oe4(b22, "onChange");
        0 < b22.length && (c22 = new td("onChange", "change", null, c22, d22), a22.push({ event: c22, listeners: b22 }));
      }
      var pe4 = null, qe3 = null;
      function re6(a22) {
        se5(a22, 0);
      }
      function te4(a22) {
        var b22 = ue6(a22);
        if (Wa$1(b22))
          return a22;
      }
      function ve3(a22, b22) {
        if (a22 === "change")
          return b22;
      }
      var we5 = false;
      if (fa$1) {
        var xe9;
        if (fa$1) {
          var ye5 = "oninput" in document;
          if (!ye5) {
            var ze3 = document.createElement("div");
            ze3.setAttribute("oninput", "return;");
            ye5 = typeof ze3.oninput === "function";
          }
          xe9 = ye5;
        } else
          xe9 = false;
        we5 = xe9 && (!document.documentMode || 9 < document.documentMode);
      }
      function Ae3() {
        pe4 && (pe4.detachEvent("onpropertychange", Be4), qe3 = pe4 = null);
      }
      function Be4(a22) {
        if (a22.propertyName === "value" && te4(qe3)) {
          var b22 = [];
          ne6(b22, qe3, a22, xb(a22));
          a22 = re6;
          if (Kb)
            a22(b22);
          else {
            Kb = true;
            try {
              Gb(a22, b22);
            } finally {
              Kb = false, Mb();
            }
          }
        }
      }
      function Ce4(a22, b22, c22) {
        a22 === "focusin" ? (Ae3(), pe4 = b22, qe3 = c22, pe4.attachEvent("onpropertychange", Be4)) : a22 === "focusout" && Ae3();
      }
      function De4(a22) {
        if (a22 === "selectionchange" || a22 === "keyup" || a22 === "keydown")
          return te4(qe3);
      }
      function Ee4(a22, b22) {
        if (a22 === "click")
          return te4(b22);
      }
      function Fe5(a22, b22) {
        if (a22 === "input" || a22 === "change")
          return te4(b22);
      }
      function Ge6(a22, b22) {
        return a22 === b22 && (a22 !== 0 || 1 / a22 === 1 / b22) || a22 !== a22 && b22 !== b22;
      }
      var He6 = typeof Object.is === "function" ? Object.is : Ge6, Ie6 = Object.prototype.hasOwnProperty;
      function Je5(a22, b22) {
        if (He6(a22, b22))
          return true;
        if (typeof a22 !== "object" || a22 === null || typeof b22 !== "object" || b22 === null)
          return false;
        var c22 = Object.keys(a22), d22 = Object.keys(b22);
        if (c22.length !== d22.length)
          return false;
        for (d22 = 0; d22 < c22.length; d22++)
          if (!Ie6.call(b22, c22[d22]) || !He6(a22[c22[d22]], b22[c22[d22]]))
            return false;
        return true;
      }
      function Ke5(a22) {
        for (; a22 && a22.firstChild; )
          a22 = a22.firstChild;
        return a22;
      }
      function Le5(a22, b22) {
        var c22 = Ke5(a22);
        a22 = 0;
        for (var d22; c22; ) {
          if (c22.nodeType === 3) {
            d22 = a22 + c22.textContent.length;
            if (a22 <= b22 && d22 >= b22)
              return { node: c22, offset: b22 - a22 };
            a22 = d22;
          }
          a: {
            for (; c22; ) {
              if (c22.nextSibling) {
                c22 = c22.nextSibling;
                break a;
              }
              c22 = c22.parentNode;
            }
            c22 = void 0;
          }
          c22 = Ke5(c22);
        }
      }
      function Me5(a22, b22) {
        return a22 && b22 ? a22 === b22 ? true : a22 && a22.nodeType === 3 ? false : b22 && b22.nodeType === 3 ? Me5(a22, b22.parentNode) : "contains" in a22 ? a22.contains(b22) : a22.compareDocumentPosition ? !!(a22.compareDocumentPosition(b22) & 16) : false : false;
      }
      function Ne6() {
        for (var a22 = window, b22 = Xa$1(); b22 instanceof a22.HTMLIFrameElement; ) {
          try {
            var c22 = typeof b22.contentWindow.location.href === "string";
          } catch (d22) {
            c22 = false;
          }
          if (c22)
            a22 = b22.contentWindow;
          else
            break;
          b22 = Xa$1(a22.document);
        }
        return b22;
      }
      function Oe2(a22) {
        var b22 = a22 && a22.nodeName && a22.nodeName.toLowerCase();
        return b22 && (b22 === "input" && (a22.type === "text" || a22.type === "search" || a22.type === "tel" || a22.type === "url" || a22.type === "password") || b22 === "textarea" || a22.contentEditable === "true");
      }
      var Pe4 = fa$1 && "documentMode" in document && 11 >= document.documentMode, Qe3 = null, Re5 = null, Se6 = null, Te4 = false;
      function Ue5(a22, b22, c22) {
        var d22 = c22.window === c22 ? c22.document : c22.nodeType === 9 ? c22 : c22.ownerDocument;
        Te4 || Qe3 == null || Qe3 !== Xa$1(d22) || (d22 = Qe3, "selectionStart" in d22 && Oe2(d22) ? d22 = { start: d22.selectionStart, end: d22.selectionEnd } : (d22 = (d22.ownerDocument && d22.ownerDocument.defaultView || window).getSelection(), d22 = { anchorNode: d22.anchorNode, anchorOffset: d22.anchorOffset, focusNode: d22.focusNode, focusOffset: d22.focusOffset }), Se6 && Je5(Se6, d22) || (Se6 = d22, d22 = oe4(Re5, "onSelect"), 0 < d22.length && (b22 = new td("onSelect", "select", null, b22, c22), a22.push({ event: b22, listeners: d22 }), b22.target = Qe3)));
      }
      Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
      Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
      Pc(Oc, 2);
      for (var Ve5 = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We5 = 0; We5 < Ve5.length; We5++)
        Nc.set(Ve5[We5], 0);
      ea$1("onMouseEnter", ["mouseout", "mouseover"]);
      ea$1("onMouseLeave", ["mouseout", "mouseover"]);
      ea$1("onPointerEnter", ["pointerout", "pointerover"]);
      ea$1("onPointerLeave", ["pointerout", "pointerover"]);
      da$1("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
      da$1("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
      da$1("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
      da$1("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
      da$1("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
      da$1("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
      var Xe5 = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), Ye4 = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe5));
      function Ze3(a22, b22, c22) {
        var d22 = a22.type || "unknown-event";
        a22.currentTarget = c22;
        Yb(d22, b22, void 0, a22);
        a22.currentTarget = null;
      }
      function se5(a22, b22) {
        b22 = (b22 & 4) !== 0;
        for (var c22 = 0; c22 < a22.length; c22++) {
          var d22 = a22[c22], e22 = d22.event;
          d22 = d22.listeners;
          a: {
            var f22 = void 0;
            if (b22)
              for (var g22 = d22.length - 1; 0 <= g22; g22--) {
                var h22 = d22[g22], k22 = h22.instance, l22 = h22.currentTarget;
                h22 = h22.listener;
                if (k22 !== f22 && e22.isPropagationStopped())
                  break a;
                Ze3(e22, h22, l22);
                f22 = k22;
              }
            else
              for (g22 = 0; g22 < d22.length; g22++) {
                h22 = d22[g22];
                k22 = h22.instance;
                l22 = h22.currentTarget;
                h22 = h22.listener;
                if (k22 !== f22 && e22.isPropagationStopped())
                  break a;
                Ze3(e22, h22, l22);
                f22 = k22;
              }
          }
        }
        if (Ub)
          throw a22 = Vb, Ub = false, Vb = null, a22;
      }
      function G$1(a22, b22) {
        var c22 = $e5(b22), d22 = a22 + "__bubble";
        c22.has(d22) || (af(b22, a22, 2, false), c22.add(d22));
      }
      var bf = "_reactListening" + Math.random().toString(36).slice(2);
      function cf(a22) {
        a22[bf] || (a22[bf] = true, ba$1.forEach(function(b22) {
          Ye4.has(b22) || df(b22, false, a22, null);
          df(b22, true, a22, null);
        }));
      }
      function df(a22, b22, c22, d22) {
        var e22 = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0, f22 = c22;
        a22 === "selectionchange" && c22.nodeType !== 9 && (f22 = c22.ownerDocument);
        if (d22 !== null && !b22 && Ye4.has(a22)) {
          if (a22 !== "scroll")
            return;
          e22 |= 2;
          f22 = d22;
        }
        var g22 = $e5(f22), h22 = a22 + "__" + (b22 ? "capture" : "bubble");
        g22.has(h22) || (b22 && (e22 |= 4), af(f22, a22, e22, b22), g22.add(h22));
      }
      function af(a22, b22, c22, d22) {
        var e22 = Nc.get(b22);
        switch (e22 === void 0 ? 2 : e22) {
          case 0:
            e22 = gd;
            break;
          case 1:
            e22 = id;
            break;
          default:
            e22 = hd;
        }
        c22 = e22.bind(null, b22, c22, a22);
        e22 = void 0;
        !Pb || b22 !== "touchstart" && b22 !== "touchmove" && b22 !== "wheel" || (e22 = true);
        d22 ? e22 !== void 0 ? a22.addEventListener(b22, c22, { capture: true, passive: e22 }) : a22.addEventListener(b22, c22, true) : e22 !== void 0 ? a22.addEventListener(b22, c22, { passive: e22 }) : a22.addEventListener(b22, c22, false);
      }
      function jd(a22, b22, c22, d22, e22) {
        var f22 = d22;
        if ((b22 & 1) === 0 && (b22 & 2) === 0 && d22 !== null)
          a:
            for (; ; ) {
              if (d22 === null)
                return;
              var g22 = d22.tag;
              if (g22 === 3 || g22 === 4) {
                var h22 = d22.stateNode.containerInfo;
                if (h22 === e22 || h22.nodeType === 8 && h22.parentNode === e22)
                  break;
                if (g22 === 4)
                  for (g22 = d22.return; g22 !== null; ) {
                    var k22 = g22.tag;
                    if (k22 === 3 || k22 === 4) {
                      if (k22 = g22.stateNode.containerInfo, k22 === e22 || k22.nodeType === 8 && k22.parentNode === e22)
                        return;
                    }
                    g22 = g22.return;
                  }
                for (; h22 !== null; ) {
                  g22 = wc(h22);
                  if (g22 === null)
                    return;
                  k22 = g22.tag;
                  if (k22 === 5 || k22 === 6) {
                    d22 = f22 = g22;
                    continue a;
                  }
                  h22 = h22.parentNode;
                }
              }
              d22 = d22.return;
            }
        Nb(function() {
          var d32 = f22, e32 = xb(c22), g32 = [];
          a: {
            var h32 = Mc.get(a22);
            if (h32 !== void 0) {
              var k3 = td, x22 = a22;
              switch (a22) {
                case "keypress":
                  if (od(c22) === 0)
                    break a;
                case "keydown":
                case "keyup":
                  k3 = Rd;
                  break;
                case "focusin":
                  x22 = "focus";
                  k3 = Fd;
                  break;
                case "focusout":
                  x22 = "blur";
                  k3 = Fd;
                  break;
                case "beforeblur":
                case "afterblur":
                  k3 = Fd;
                  break;
                case "click":
                  if (c22.button === 2)
                    break a;
                case "auxclick":
                case "dblclick":
                case "mousedown":
                case "mousemove":
                case "mouseup":
                case "mouseout":
                case "mouseover":
                case "contextmenu":
                  k3 = Bd;
                  break;
                case "drag":
                case "dragend":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "dragstart":
                case "drop":
                  k3 = Dd;
                  break;
                case "touchcancel":
                case "touchend":
                case "touchmove":
                case "touchstart":
                  k3 = Vd;
                  break;
                case Ic:
                case Jc:
                case Kc:
                  k3 = Hd;
                  break;
                case Lc:
                  k3 = Xd;
                  break;
                case "scroll":
                  k3 = vd;
                  break;
                case "wheel":
                  k3 = Zd;
                  break;
                case "copy":
                case "cut":
                case "paste":
                  k3 = Jd;
                  break;
                case "gotpointercapture":
                case "lostpointercapture":
                case "pointercancel":
                case "pointerdown":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "pointerup":
                  k3 = Td;
              }
              var w22 = (b22 & 4) !== 0, z22 = !w22 && a22 === "scroll", u22 = w22 ? h32 !== null ? h32 + "Capture" : null : h32;
              w22 = [];
              for (var t22 = d32, q22; t22 !== null; ) {
                q22 = t22;
                var v22 = q22.stateNode;
                q22.tag === 5 && v22 !== null && (q22 = v22, u22 !== null && (v22 = Ob(t22, u22), v22 != null && w22.push(ef(t22, v22, q22))));
                if (z22)
                  break;
                t22 = t22.return;
              }
              0 < w22.length && (h32 = new k3(h32, x22, null, c22, e32), g32.push({ event: h32, listeners: w22 }));
            }
          }
          if ((b22 & 7) === 0) {
            a: {
              h32 = a22 === "mouseover" || a22 === "pointerover";
              k3 = a22 === "mouseout" || a22 === "pointerout";
              if (h32 && (b22 & 16) === 0 && (x22 = c22.relatedTarget || c22.fromElement) && (wc(x22) || x22[ff]))
                break a;
              if (k3 || h32) {
                h32 = e32.window === e32 ? e32 : (h32 = e32.ownerDocument) ? h32.defaultView || h32.parentWindow : window;
                if (k3) {
                  if (x22 = c22.relatedTarget || c22.toElement, k3 = d32, x22 = x22 ? wc(x22) : null, x22 !== null && (z22 = Zb(x22), x22 !== z22 || x22.tag !== 5 && x22.tag !== 6))
                    x22 = null;
                } else
                  k3 = null, x22 = d32;
                if (k3 !== x22) {
                  w22 = Bd;
                  v22 = "onMouseLeave";
                  u22 = "onMouseEnter";
                  t22 = "mouse";
                  if (a22 === "pointerout" || a22 === "pointerover")
                    w22 = Td, v22 = "onPointerLeave", u22 = "onPointerEnter", t22 = "pointer";
                  z22 = k3 == null ? h32 : ue6(k3);
                  q22 = x22 == null ? h32 : ue6(x22);
                  h32 = new w22(v22, t22 + "leave", k3, c22, e32);
                  h32.target = z22;
                  h32.relatedTarget = q22;
                  v22 = null;
                  wc(e32) === d32 && (w22 = new w22(u22, t22 + "enter", x22, c22, e32), w22.target = q22, w22.relatedTarget = z22, v22 = w22);
                  z22 = v22;
                  if (k3 && x22)
                    b: {
                      w22 = k3;
                      u22 = x22;
                      t22 = 0;
                      for (q22 = w22; q22; q22 = gf(q22))
                        t22++;
                      q22 = 0;
                      for (v22 = u22; v22; v22 = gf(v22))
                        q22++;
                      for (; 0 < t22 - q22; )
                        w22 = gf(w22), t22--;
                      for (; 0 < q22 - t22; )
                        u22 = gf(u22), q22--;
                      for (; t22--; ) {
                        if (w22 === u22 || u22 !== null && w22 === u22.alternate)
                          break b;
                        w22 = gf(w22);
                        u22 = gf(u22);
                      }
                      w22 = null;
                    }
                  else
                    w22 = null;
                  k3 !== null && hf(g32, h32, k3, w22, false);
                  x22 !== null && z22 !== null && hf(g32, z22, x22, w22, true);
                }
              }
            }
            a: {
              h32 = d32 ? ue6(d32) : window;
              k3 = h32.nodeName && h32.nodeName.toLowerCase();
              if (k3 === "select" || k3 === "input" && h32.type === "file")
                var J22 = ve3;
              else if (me4(h32))
                if (we5)
                  J22 = Fe5;
                else {
                  J22 = De4;
                  var K22 = Ce4;
                }
              else
                (k3 = h32.nodeName) && k3.toLowerCase() === "input" && (h32.type === "checkbox" || h32.type === "radio") && (J22 = Ee4);
              if (J22 && (J22 = J22(a22, d32))) {
                ne6(g32, J22, c22, e32);
                break a;
              }
              K22 && K22(a22, h32, d32);
              a22 === "focusout" && (K22 = h32._wrapperState) && K22.controlled && h32.type === "number" && bb$1(h32, "number", h32.value);
            }
            K22 = d32 ? ue6(d32) : window;
            switch (a22) {
              case "focusin":
                if (me4(K22) || K22.contentEditable === "true")
                  Qe3 = K22, Re5 = d32, Se6 = null;
                break;
              case "focusout":
                Se6 = Re5 = Qe3 = null;
                break;
              case "mousedown":
                Te4 = true;
                break;
              case "contextmenu":
              case "mouseup":
              case "dragend":
                Te4 = false;
                Ue5(g32, c22, e32);
                break;
              case "selectionchange":
                if (Pe4)
                  break;
              case "keydown":
              case "keyup":
                Ue5(g32, c22, e32);
            }
            var Q22;
            if (ae3)
              b: {
                switch (a22) {
                  case "compositionstart":
                    var L22 = "onCompositionStart";
                    break b;
                  case "compositionend":
                    L22 = "onCompositionEnd";
                    break b;
                  case "compositionupdate":
                    L22 = "onCompositionUpdate";
                    break b;
                }
                L22 = void 0;
              }
            else
              ie4 ? ge6(a22, c22) && (L22 = "onCompositionEnd") : a22 === "keydown" && c22.keyCode === 229 && (L22 = "onCompositionStart");
            L22 && (de3 && c22.locale !== "ko" && (ie4 || L22 !== "onCompositionStart" ? L22 === "onCompositionEnd" && ie4 && (Q22 = nd()) : (kd = e32, ld = "value" in kd ? kd.value : kd.textContent, ie4 = true)), K22 = oe4(d32, L22), 0 < K22.length && (L22 = new Ld(L22, a22, null, c22, e32), g32.push({ event: L22, listeners: K22 }), Q22 ? L22.data = Q22 : (Q22 = he4(c22), Q22 !== null && (L22.data = Q22))));
            if (Q22 = ce4 ? je5(a22, c22) : ke5(a22, c22))
              d32 = oe4(d32, "onBeforeInput"), 0 < d32.length && (e32 = new Ld("onBeforeInput", "beforeinput", null, c22, e32), g32.push({ event: e32, listeners: d32 }), e32.data = Q22);
          }
          se5(g32, b22);
        });
      }
      function ef(a22, b22, c22) {
        return { instance: a22, listener: b22, currentTarget: c22 };
      }
      function oe4(a22, b22) {
        for (var c22 = b22 + "Capture", d22 = []; a22 !== null; ) {
          var e22 = a22, f22 = e22.stateNode;
          e22.tag === 5 && f22 !== null && (e22 = f22, f22 = Ob(a22, c22), f22 != null && d22.unshift(ef(a22, f22, e22)), f22 = Ob(a22, b22), f22 != null && d22.push(ef(a22, f22, e22)));
          a22 = a22.return;
        }
        return d22;
      }
      function gf(a22) {
        if (a22 === null)
          return null;
        do
          a22 = a22.return;
        while (a22 && a22.tag !== 5);
        return a22 ? a22 : null;
      }
      function hf(a22, b22, c22, d22, e22) {
        for (var f22 = b22._reactName, g22 = []; c22 !== null && c22 !== d22; ) {
          var h22 = c22, k22 = h22.alternate, l22 = h22.stateNode;
          if (k22 !== null && k22 === d22)
            break;
          h22.tag === 5 && l22 !== null && (h22 = l22, e22 ? (k22 = Ob(c22, f22), k22 != null && g22.unshift(ef(c22, k22, h22))) : e22 || (k22 = Ob(c22, f22), k22 != null && g22.push(ef(c22, k22, h22))));
          c22 = c22.return;
        }
        g22.length !== 0 && a22.push({ event: b22, listeners: g22 });
      }
      function jf() {
      }
      var kf = null, lf = null;
      function mf(a22, b22) {
        switch (a22) {
          case "button":
          case "input":
          case "select":
          case "textarea":
            return !!b22.autoFocus;
        }
        return false;
      }
      function nf(a22, b22) {
        return a22 === "textarea" || a22 === "option" || a22 === "noscript" || typeof b22.children === "string" || typeof b22.children === "number" || typeof b22.dangerouslySetInnerHTML === "object" && b22.dangerouslySetInnerHTML !== null && b22.dangerouslySetInnerHTML.__html != null;
      }
      var of = typeof setTimeout === "function" ? setTimeout : void 0, pf = typeof clearTimeout === "function" ? clearTimeout : void 0;
      function qf(a22) {
        a22.nodeType === 1 ? a22.textContent = "" : a22.nodeType === 9 && (a22 = a22.body, a22 != null && (a22.textContent = ""));
      }
      function rf(a22) {
        for (; a22 != null; a22 = a22.nextSibling) {
          var b22 = a22.nodeType;
          if (b22 === 1 || b22 === 3)
            break;
        }
        return a22;
      }
      function sf(a22) {
        a22 = a22.previousSibling;
        for (var b22 = 0; a22; ) {
          if (a22.nodeType === 8) {
            var c22 = a22.data;
            if (c22 === "$" || c22 === "$!" || c22 === "$?") {
              if (b22 === 0)
                return a22;
              b22--;
            } else
              c22 === "/$" && b22++;
          }
          a22 = a22.previousSibling;
        }
        return null;
      }
      var tf = 0;
      function uf(a22) {
        return { $$typeof: Ga$1, toString: a22, valueOf: a22 };
      }
      var vf = Math.random().toString(36).slice(2), wf = "__reactFiber$" + vf, xf = "__reactProps$" + vf, ff = "__reactContainer$" + vf, yf = "__reactEvents$" + vf;
      function wc(a22) {
        var b22 = a22[wf];
        if (b22)
          return b22;
        for (var c22 = a22.parentNode; c22; ) {
          if (b22 = c22[ff] || c22[wf]) {
            c22 = b22.alternate;
            if (b22.child !== null || c22 !== null && c22.child !== null)
              for (a22 = sf(a22); a22 !== null; ) {
                if (c22 = a22[wf])
                  return c22;
                a22 = sf(a22);
              }
            return b22;
          }
          a22 = c22;
          c22 = a22.parentNode;
        }
        return null;
      }
      function Cb(a22) {
        a22 = a22[wf] || a22[ff];
        return !a22 || a22.tag !== 5 && a22.tag !== 6 && a22.tag !== 13 && a22.tag !== 3 ? null : a22;
      }
      function ue6(a22) {
        if (a22.tag === 5 || a22.tag === 6)
          return a22.stateNode;
        throw Error(y$1(33));
      }
      function Db(a22) {
        return a22[xf] || null;
      }
      function $e5(a22) {
        var b22 = a22[yf];
        b22 === void 0 && (b22 = a22[yf] = /* @__PURE__ */ new Set());
        return b22;
      }
      var zf = [], Af = -1;
      function Bf(a22) {
        return { current: a22 };
      }
      function H$1(a22) {
        0 > Af || (a22.current = zf[Af], zf[Af] = null, Af--);
      }
      function I$2(a22, b22) {
        Af++;
        zf[Af] = a22.current;
        a22.current = b22;
      }
      var Cf = {}, M$2 = Bf(Cf), N$1 = Bf(false), Df = Cf;
      function Ef(a22, b22) {
        var c22 = a22.type.contextTypes;
        if (!c22)
          return Cf;
        var d22 = a22.stateNode;
        if (d22 && d22.__reactInternalMemoizedUnmaskedChildContext === b22)
          return d22.__reactInternalMemoizedMaskedChildContext;
        var e22 = {}, f22;
        for (f22 in c22)
          e22[f22] = b22[f22];
        d22 && (a22 = a22.stateNode, a22.__reactInternalMemoizedUnmaskedChildContext = b22, a22.__reactInternalMemoizedMaskedChildContext = e22);
        return e22;
      }
      function Ff(a22) {
        a22 = a22.childContextTypes;
        return a22 !== null && a22 !== void 0;
      }
      function Gf() {
        H$1(N$1);
        H$1(M$2);
      }
      function Hf(a22, b22, c22) {
        if (M$2.current !== Cf)
          throw Error(y$1(168));
        I$2(M$2, b22);
        I$2(N$1, c22);
      }
      function If(a22, b22, c22) {
        var d22 = a22.stateNode;
        a22 = b22.childContextTypes;
        if (typeof d22.getChildContext !== "function")
          return c22;
        d22 = d22.getChildContext();
        for (var e22 in d22)
          if (!(e22 in a22))
            throw Error(y$1(108, Ra$1(b22) || "Unknown", e22));
        return m$2({}, c22, d22);
      }
      function Jf(a22) {
        a22 = (a22 = a22.stateNode) && a22.__reactInternalMemoizedMergedChildContext || Cf;
        Df = M$2.current;
        I$2(M$2, a22);
        I$2(N$1, N$1.current);
        return true;
      }
      function Kf(a22, b22, c22) {
        var d22 = a22.stateNode;
        if (!d22)
          throw Error(y$1(169));
        c22 ? (a22 = If(a22, b22, Df), d22.__reactInternalMemoizedMergedChildContext = a22, H$1(N$1), H$1(M$2), I$2(M$2, a22)) : H$1(N$1);
        I$2(N$1, c22);
      }
      var Lf = null, Mf = null, Nf = r$3.unstable_runWithPriority, Of = r$3.unstable_scheduleCallback, Pf = r$3.unstable_cancelCallback, Qf = r$3.unstable_shouldYield, Rf = r$3.unstable_requestPaint, Sf = r$3.unstable_now, Tf = r$3.unstable_getCurrentPriorityLevel, Uf = r$3.unstable_ImmediatePriority, Vf = r$3.unstable_UserBlockingPriority, Wf = r$3.unstable_NormalPriority, Xf = r$3.unstable_LowPriority, Yf = r$3.unstable_IdlePriority, Zf = {}, $f = Rf !== void 0 ? Rf : function() {
      }, ag = null, bg = null, cg = false, dg = Sf(), O$2 = 1e4 > dg ? Sf : function() {
        return Sf() - dg;
      };
      function eg() {
        switch (Tf()) {
          case Uf:
            return 99;
          case Vf:
            return 98;
          case Wf:
            return 97;
          case Xf:
            return 96;
          case Yf:
            return 95;
          default:
            throw Error(y$1(332));
        }
      }
      function fg(a22) {
        switch (a22) {
          case 99:
            return Uf;
          case 98:
            return Vf;
          case 97:
            return Wf;
          case 96:
            return Xf;
          case 95:
            return Yf;
          default:
            throw Error(y$1(332));
        }
      }
      function gg(a22, b22) {
        a22 = fg(a22);
        return Nf(a22, b22);
      }
      function hg(a22, b22, c22) {
        a22 = fg(a22);
        return Of(a22, b22, c22);
      }
      function ig() {
        if (bg !== null) {
          var a22 = bg;
          bg = null;
          Pf(a22);
        }
        jg();
      }
      function jg() {
        if (!cg && ag !== null) {
          cg = true;
          var a22 = 0;
          try {
            var b22 = ag;
            gg(99, function() {
              for (; a22 < b22.length; a22++) {
                var c22 = b22[a22];
                do
                  c22 = c22(true);
                while (c22 !== null);
              }
            });
            ag = null;
          } catch (c22) {
            throw ag !== null && (ag = ag.slice(a22 + 1)), Of(Uf, ig), c22;
          } finally {
            cg = false;
          }
        }
      }
      var kg = ra$1.ReactCurrentBatchConfig;
      function lg(a22, b22) {
        if (a22 && a22.defaultProps) {
          b22 = m$2({}, b22);
          a22 = a22.defaultProps;
          for (var c22 in a22)
            b22[c22] === void 0 && (b22[c22] = a22[c22]);
          return b22;
        }
        return b22;
      }
      var mg = Bf(null), ng = null, og = null, pg = null;
      function qg() {
        pg = og = ng = null;
      }
      function rg(a22) {
        var b22 = mg.current;
        H$1(mg);
        a22.type._context._currentValue = b22;
      }
      function sg(a22, b22) {
        for (; a22 !== null; ) {
          var c22 = a22.alternate;
          if ((a22.childLanes & b22) === b22)
            if (c22 === null || (c22.childLanes & b22) === b22)
              break;
            else
              c22.childLanes |= b22;
          else
            a22.childLanes |= b22, c22 !== null && (c22.childLanes |= b22);
          a22 = a22.return;
        }
      }
      function tg(a22, b22) {
        ng = a22;
        pg = og = null;
        a22 = a22.dependencies;
        a22 !== null && a22.firstContext !== null && ((a22.lanes & b22) !== 0 && (ug = true), a22.firstContext = null);
      }
      function vg(a22, b22) {
        if (pg !== a22 && b22 !== false && b22 !== 0) {
          if (typeof b22 !== "number" || b22 === 1073741823)
            pg = a22, b22 = 1073741823;
          b22 = { context: a22, observedBits: b22, next: null };
          if (og === null) {
            if (ng === null)
              throw Error(y$1(308));
            og = b22;
            ng.dependencies = { lanes: 0, firstContext: b22, responders: null };
          } else
            og = og.next = b22;
        }
        return a22._currentValue;
      }
      var wg = false;
      function xg(a22) {
        a22.updateQueue = { baseState: a22.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null }, effects: null };
      }
      function yg(a22, b22) {
        a22 = a22.updateQueue;
        b22.updateQueue === a22 && (b22.updateQueue = { baseState: a22.baseState, firstBaseUpdate: a22.firstBaseUpdate, lastBaseUpdate: a22.lastBaseUpdate, shared: a22.shared, effects: a22.effects });
      }
      function zg(a22, b22) {
        return { eventTime: a22, lane: b22, tag: 0, payload: null, callback: null, next: null };
      }
      function Ag(a22, b22) {
        a22 = a22.updateQueue;
        if (a22 !== null) {
          a22 = a22.shared;
          var c22 = a22.pending;
          c22 === null ? b22.next = b22 : (b22.next = c22.next, c22.next = b22);
          a22.pending = b22;
        }
      }
      function Bg(a22, b22) {
        var c22 = a22.updateQueue, d22 = a22.alternate;
        if (d22 !== null && (d22 = d22.updateQueue, c22 === d22)) {
          var e22 = null, f22 = null;
          c22 = c22.firstBaseUpdate;
          if (c22 !== null) {
            do {
              var g22 = { eventTime: c22.eventTime, lane: c22.lane, tag: c22.tag, payload: c22.payload, callback: c22.callback, next: null };
              f22 === null ? e22 = f22 = g22 : f22 = f22.next = g22;
              c22 = c22.next;
            } while (c22 !== null);
            f22 === null ? e22 = f22 = b22 : f22 = f22.next = b22;
          } else
            e22 = f22 = b22;
          c22 = { baseState: d22.baseState, firstBaseUpdate: e22, lastBaseUpdate: f22, shared: d22.shared, effects: d22.effects };
          a22.updateQueue = c22;
          return;
        }
        a22 = c22.lastBaseUpdate;
        a22 === null ? c22.firstBaseUpdate = b22 : a22.next = b22;
        c22.lastBaseUpdate = b22;
      }
      function Cg(a22, b22, c22, d22) {
        var e22 = a22.updateQueue;
        wg = false;
        var f22 = e22.firstBaseUpdate, g22 = e22.lastBaseUpdate, h22 = e22.shared.pending;
        if (h22 !== null) {
          e22.shared.pending = null;
          var k22 = h22, l22 = k22.next;
          k22.next = null;
          g22 === null ? f22 = l22 : g22.next = l22;
          g22 = k22;
          var n22 = a22.alternate;
          if (n22 !== null) {
            n22 = n22.updateQueue;
            var A22 = n22.lastBaseUpdate;
            A22 !== g22 && (A22 === null ? n22.firstBaseUpdate = l22 : A22.next = l22, n22.lastBaseUpdate = k22);
          }
        }
        if (f22 !== null) {
          A22 = e22.baseState;
          g22 = 0;
          n22 = l22 = k22 = null;
          do {
            h22 = f22.lane;
            var p22 = f22.eventTime;
            if ((d22 & h22) === h22) {
              n22 !== null && (n22 = n22.next = {
                eventTime: p22,
                lane: 0,
                tag: f22.tag,
                payload: f22.payload,
                callback: f22.callback,
                next: null
              });
              a: {
                var C22 = a22, x22 = f22;
                h22 = b22;
                p22 = c22;
                switch (x22.tag) {
                  case 1:
                    C22 = x22.payload;
                    if (typeof C22 === "function") {
                      A22 = C22.call(p22, A22, h22);
                      break a;
                    }
                    A22 = C22;
                    break a;
                  case 3:
                    C22.flags = C22.flags & -4097 | 64;
                  case 0:
                    C22 = x22.payload;
                    h22 = typeof C22 === "function" ? C22.call(p22, A22, h22) : C22;
                    if (h22 === null || h22 === void 0)
                      break a;
                    A22 = m$2({}, A22, h22);
                    break a;
                  case 2:
                    wg = true;
                }
              }
              f22.callback !== null && (a22.flags |= 32, h22 = e22.effects, h22 === null ? e22.effects = [f22] : h22.push(f22));
            } else
              p22 = { eventTime: p22, lane: h22, tag: f22.tag, payload: f22.payload, callback: f22.callback, next: null }, n22 === null ? (l22 = n22 = p22, k22 = A22) : n22 = n22.next = p22, g22 |= h22;
            f22 = f22.next;
            if (f22 === null)
              if (h22 = e22.shared.pending, h22 === null)
                break;
              else
                f22 = h22.next, h22.next = null, e22.lastBaseUpdate = h22, e22.shared.pending = null;
          } while (1);
          n22 === null && (k22 = A22);
          e22.baseState = k22;
          e22.firstBaseUpdate = l22;
          e22.lastBaseUpdate = n22;
          Dg |= g22;
          a22.lanes = g22;
          a22.memoizedState = A22;
        }
      }
      function Eg(a22, b22, c22) {
        a22 = b22.effects;
        b22.effects = null;
        if (a22 !== null)
          for (b22 = 0; b22 < a22.length; b22++) {
            var d22 = a22[b22], e22 = d22.callback;
            if (e22 !== null) {
              d22.callback = null;
              d22 = c22;
              if (typeof e22 !== "function")
                throw Error(y$1(191, e22));
              e22.call(d22);
            }
          }
      }
      var Fg = new aa$1.Component().refs;
      function Gg(a22, b22, c22, d22) {
        b22 = a22.memoizedState;
        c22 = c22(d22, b22);
        c22 = c22 === null || c22 === void 0 ? b22 : m$2({}, b22, c22);
        a22.memoizedState = c22;
        a22.lanes === 0 && (a22.updateQueue.baseState = c22);
      }
      var Kg = { isMounted: function(a22) {
        return (a22 = a22._reactInternals) ? Zb(a22) === a22 : false;
      }, enqueueSetState: function(a22, b22, c22) {
        a22 = a22._reactInternals;
        var d22 = Hg(), e22 = Ig(a22), f22 = zg(d22, e22);
        f22.payload = b22;
        c22 !== void 0 && c22 !== null && (f22.callback = c22);
        Ag(a22, f22);
        Jg(a22, e22, d22);
      }, enqueueReplaceState: function(a22, b22, c22) {
        a22 = a22._reactInternals;
        var d22 = Hg(), e22 = Ig(a22), f22 = zg(d22, e22);
        f22.tag = 1;
        f22.payload = b22;
        c22 !== void 0 && c22 !== null && (f22.callback = c22);
        Ag(a22, f22);
        Jg(a22, e22, d22);
      }, enqueueForceUpdate: function(a22, b22) {
        a22 = a22._reactInternals;
        var c22 = Hg(), d22 = Ig(a22), e22 = zg(c22, d22);
        e22.tag = 2;
        b22 !== void 0 && b22 !== null && (e22.callback = b22);
        Ag(a22, e22);
        Jg(a22, d22, c22);
      } };
      function Lg(a22, b22, c22, d22, e22, f22, g22) {
        a22 = a22.stateNode;
        return typeof a22.shouldComponentUpdate === "function" ? a22.shouldComponentUpdate(d22, f22, g22) : b22.prototype && b22.prototype.isPureReactComponent ? !Je5(c22, d22) || !Je5(e22, f22) : true;
      }
      function Mg(a22, b22, c22) {
        var d22 = false, e22 = Cf;
        var f22 = b22.contextType;
        typeof f22 === "object" && f22 !== null ? f22 = vg(f22) : (e22 = Ff(b22) ? Df : M$2.current, d22 = b22.contextTypes, f22 = (d22 = d22 !== null && d22 !== void 0) ? Ef(a22, e22) : Cf);
        b22 = new b22(c22, f22);
        a22.memoizedState = b22.state !== null && b22.state !== void 0 ? b22.state : null;
        b22.updater = Kg;
        a22.stateNode = b22;
        b22._reactInternals = a22;
        d22 && (a22 = a22.stateNode, a22.__reactInternalMemoizedUnmaskedChildContext = e22, a22.__reactInternalMemoizedMaskedChildContext = f22);
        return b22;
      }
      function Ng(a22, b22, c22, d22) {
        a22 = b22.state;
        typeof b22.componentWillReceiveProps === "function" && b22.componentWillReceiveProps(c22, d22);
        typeof b22.UNSAFE_componentWillReceiveProps === "function" && b22.UNSAFE_componentWillReceiveProps(c22, d22);
        b22.state !== a22 && Kg.enqueueReplaceState(b22, b22.state, null);
      }
      function Og(a22, b22, c22, d22) {
        var e22 = a22.stateNode;
        e22.props = c22;
        e22.state = a22.memoizedState;
        e22.refs = Fg;
        xg(a22);
        var f22 = b22.contextType;
        typeof f22 === "object" && f22 !== null ? e22.context = vg(f22) : (f22 = Ff(b22) ? Df : M$2.current, e22.context = Ef(a22, f22));
        Cg(a22, c22, e22, d22);
        e22.state = a22.memoizedState;
        f22 = b22.getDerivedStateFromProps;
        typeof f22 === "function" && (Gg(a22, b22, f22, c22), e22.state = a22.memoizedState);
        typeof b22.getDerivedStateFromProps === "function" || typeof e22.getSnapshotBeforeUpdate === "function" || typeof e22.UNSAFE_componentWillMount !== "function" && typeof e22.componentWillMount !== "function" || (b22 = e22.state, typeof e22.componentWillMount === "function" && e22.componentWillMount(), typeof e22.UNSAFE_componentWillMount === "function" && e22.UNSAFE_componentWillMount(), b22 !== e22.state && Kg.enqueueReplaceState(e22, e22.state, null), Cg(a22, c22, e22, d22), e22.state = a22.memoizedState);
        typeof e22.componentDidMount === "function" && (a22.flags |= 4);
      }
      var Pg = Array.isArray;
      function Qg(a22, b22, c22) {
        a22 = c22.ref;
        if (a22 !== null && typeof a22 !== "function" && typeof a22 !== "object") {
          if (c22._owner) {
            c22 = c22._owner;
            if (c22) {
              if (c22.tag !== 1)
                throw Error(y$1(309));
              var d22 = c22.stateNode;
            }
            if (!d22)
              throw Error(y$1(147, a22));
            var e22 = "" + a22;
            if (b22 !== null && b22.ref !== null && typeof b22.ref === "function" && b22.ref._stringRef === e22)
              return b22.ref;
            b22 = function(a32) {
              var b32 = d22.refs;
              b32 === Fg && (b32 = d22.refs = {});
              a32 === null ? delete b32[e22] : b32[e22] = a32;
            };
            b22._stringRef = e22;
            return b22;
          }
          if (typeof a22 !== "string")
            throw Error(y$1(284));
          if (!c22._owner)
            throw Error(y$1(290, a22));
        }
        return a22;
      }
      function Rg(a22, b22) {
        if (a22.type !== "textarea")
          throw Error(y$1(31, Object.prototype.toString.call(b22) === "[object Object]" ? "object with keys {" + Object.keys(b22).join(", ") + "}" : b22));
      }
      function Sg(a22) {
        function b22(b32, c32) {
          if (a22) {
            var d32 = b32.lastEffect;
            d32 !== null ? (d32.nextEffect = c32, b32.lastEffect = c32) : b32.firstEffect = b32.lastEffect = c32;
            c32.nextEffect = null;
            c32.flags = 8;
          }
        }
        function c22(c32, d32) {
          if (!a22)
            return null;
          for (; d32 !== null; )
            b22(c32, d32), d32 = d32.sibling;
          return null;
        }
        function d22(a32, b32) {
          for (a32 = /* @__PURE__ */ new Map(); b32 !== null; )
            b32.key !== null ? a32.set(b32.key, b32) : a32.set(b32.index, b32), b32 = b32.sibling;
          return a32;
        }
        function e22(a32, b32) {
          a32 = Tg(a32, b32);
          a32.index = 0;
          a32.sibling = null;
          return a32;
        }
        function f22(b32, c32, d32) {
          b32.index = d32;
          if (!a22)
            return c32;
          d32 = b32.alternate;
          if (d32 !== null)
            return d32 = d32.index, d32 < c32 ? (b32.flags = 2, c32) : d32;
          b32.flags = 2;
          return c32;
        }
        function g22(b32) {
          a22 && b32.alternate === null && (b32.flags = 2);
          return b32;
        }
        function h22(a32, b32, c32, d32) {
          if (b32 === null || b32.tag !== 6)
            return b32 = Ug(c32, a32.mode, d32), b32.return = a32, b32;
          b32 = e22(b32, c32);
          b32.return = a32;
          return b32;
        }
        function k22(a32, b32, c32, d32) {
          if (b32 !== null && b32.elementType === c32.type)
            return d32 = e22(b32, c32.props), d32.ref = Qg(a32, b32, c32), d32.return = a32, d32;
          d32 = Vg(c32.type, c32.key, c32.props, null, a32.mode, d32);
          d32.ref = Qg(a32, b32, c32);
          d32.return = a32;
          return d32;
        }
        function l22(a32, b32, c32, d32) {
          if (b32 === null || b32.tag !== 4 || b32.stateNode.containerInfo !== c32.containerInfo || b32.stateNode.implementation !== c32.implementation)
            return b32 = Wg(c32, a32.mode, d32), b32.return = a32, b32;
          b32 = e22(b32, c32.children || []);
          b32.return = a32;
          return b32;
        }
        function n22(a32, b32, c32, d32, f32) {
          if (b32 === null || b32.tag !== 7)
            return b32 = Xg(c32, a32.mode, d32, f32), b32.return = a32, b32;
          b32 = e22(b32, c32);
          b32.return = a32;
          return b32;
        }
        function A22(a32, b32, c32) {
          if (typeof b32 === "string" || typeof b32 === "number")
            return b32 = Ug("" + b32, a32.mode, c32), b32.return = a32, b32;
          if (typeof b32 === "object" && b32 !== null) {
            switch (b32.$$typeof) {
              case sa$1:
                return c32 = Vg(b32.type, b32.key, b32.props, null, a32.mode, c32), c32.ref = Qg(a32, null, b32), c32.return = a32, c32;
              case ta$1:
                return b32 = Wg(b32, a32.mode, c32), b32.return = a32, b32;
            }
            if (Pg(b32) || La$1(b32))
              return b32 = Xg(b32, a32.mode, c32, null), b32.return = a32, b32;
            Rg(a32, b32);
          }
          return null;
        }
        function p22(a32, b32, c32, d32) {
          var e32 = b32 !== null ? b32.key : null;
          if (typeof c32 === "string" || typeof c32 === "number")
            return e32 !== null ? null : h22(a32, b32, "" + c32, d32);
          if (typeof c32 === "object" && c32 !== null) {
            switch (c32.$$typeof) {
              case sa$1:
                return c32.key === e32 ? c32.type === ua$1 ? n22(a32, b32, c32.props.children, d32, e32) : k22(a32, b32, c32, d32) : null;
              case ta$1:
                return c32.key === e32 ? l22(a32, b32, c32, d32) : null;
            }
            if (Pg(c32) || La$1(c32))
              return e32 !== null ? null : n22(a32, b32, c32, d32, null);
            Rg(a32, c32);
          }
          return null;
        }
        function C22(a32, b32, c32, d32, e32) {
          if (typeof d32 === "string" || typeof d32 === "number")
            return a32 = a32.get(c32) || null, h22(b32, a32, "" + d32, e32);
          if (typeof d32 === "object" && d32 !== null) {
            switch (d32.$$typeof) {
              case sa$1:
                return a32 = a32.get(d32.key === null ? c32 : d32.key) || null, d32.type === ua$1 ? n22(b32, a32, d32.props.children, e32, d32.key) : k22(b32, a32, d32, e32);
              case ta$1:
                return a32 = a32.get(d32.key === null ? c32 : d32.key) || null, l22(b32, a32, d32, e32);
            }
            if (Pg(d32) || La$1(d32))
              return a32 = a32.get(c32) || null, n22(b32, a32, d32, e32, null);
            Rg(b32, d32);
          }
          return null;
        }
        function x22(e32, g32, h32, k3) {
          for (var l32 = null, t22 = null, u22 = g32, z22 = g32 = 0, q22 = null; u22 !== null && z22 < h32.length; z22++) {
            u22.index > z22 ? (q22 = u22, u22 = null) : q22 = u22.sibling;
            var n32 = p22(e32, u22, h32[z22], k3);
            if (n32 === null) {
              u22 === null && (u22 = q22);
              break;
            }
            a22 && u22 && n32.alternate === null && b22(e32, u22);
            g32 = f22(n32, g32, z22);
            t22 === null ? l32 = n32 : t22.sibling = n32;
            t22 = n32;
            u22 = q22;
          }
          if (z22 === h32.length)
            return c22(e32, u22), l32;
          if (u22 === null) {
            for (; z22 < h32.length; z22++)
              u22 = A22(e32, h32[z22], k3), u22 !== null && (g32 = f22(u22, g32, z22), t22 === null ? l32 = u22 : t22.sibling = u22, t22 = u22);
            return l32;
          }
          for (u22 = d22(e32, u22); z22 < h32.length; z22++)
            q22 = C22(u22, e32, z22, h32[z22], k3), q22 !== null && (a22 && q22.alternate !== null && u22.delete(q22.key === null ? z22 : q22.key), g32 = f22(q22, g32, z22), t22 === null ? l32 = q22 : t22.sibling = q22, t22 = q22);
          a22 && u22.forEach(function(a32) {
            return b22(e32, a32);
          });
          return l32;
        }
        function w22(e32, g32, h32, k3) {
          var l32 = La$1(h32);
          if (typeof l32 !== "function")
            throw Error(y$1(150));
          h32 = l32.call(h32);
          if (h32 == null)
            throw Error(y$1(151));
          for (var t22 = l32 = null, u22 = g32, z22 = g32 = 0, q22 = null, n32 = h32.next(); u22 !== null && !n32.done; z22++, n32 = h32.next()) {
            u22.index > z22 ? (q22 = u22, u22 = null) : q22 = u22.sibling;
            var w32 = p22(e32, u22, n32.value, k3);
            if (w32 === null) {
              u22 === null && (u22 = q22);
              break;
            }
            a22 && u22 && w32.alternate === null && b22(e32, u22);
            g32 = f22(w32, g32, z22);
            t22 === null ? l32 = w32 : t22.sibling = w32;
            t22 = w32;
            u22 = q22;
          }
          if (n32.done)
            return c22(e32, u22), l32;
          if (u22 === null) {
            for (; !n32.done; z22++, n32 = h32.next())
              n32 = A22(e32, n32.value, k3), n32 !== null && (g32 = f22(n32, g32, z22), t22 === null ? l32 = n32 : t22.sibling = n32, t22 = n32);
            return l32;
          }
          for (u22 = d22(e32, u22); !n32.done; z22++, n32 = h32.next())
            n32 = C22(u22, e32, z22, n32.value, k3), n32 !== null && (a22 && n32.alternate !== null && u22.delete(n32.key === null ? z22 : n32.key), g32 = f22(n32, g32, z22), t22 === null ? l32 = n32 : t22.sibling = n32, t22 = n32);
          a22 && u22.forEach(function(a32) {
            return b22(e32, a32);
          });
          return l32;
        }
        return function(a32, d32, f32, h32) {
          var k3 = typeof f32 === "object" && f32 !== null && f32.type === ua$1 && f32.key === null;
          k3 && (f32 = f32.props.children);
          var l32 = typeof f32 === "object" && f32 !== null;
          if (l32)
            switch (f32.$$typeof) {
              case sa$1:
                a: {
                  l32 = f32.key;
                  for (k3 = d32; k3 !== null; ) {
                    if (k3.key === l32) {
                      switch (k3.tag) {
                        case 7:
                          if (f32.type === ua$1) {
                            c22(a32, k3.sibling);
                            d32 = e22(k3, f32.props.children);
                            d32.return = a32;
                            a32 = d32;
                            break a;
                          }
                          break;
                        default:
                          if (k3.elementType === f32.type) {
                            c22(a32, k3.sibling);
                            d32 = e22(k3, f32.props);
                            d32.ref = Qg(a32, k3, f32);
                            d32.return = a32;
                            a32 = d32;
                            break a;
                          }
                      }
                      c22(a32, k3);
                      break;
                    } else
                      b22(a32, k3);
                    k3 = k3.sibling;
                  }
                  f32.type === ua$1 ? (d32 = Xg(f32.props.children, a32.mode, h32, f32.key), d32.return = a32, a32 = d32) : (h32 = Vg(f32.type, f32.key, f32.props, null, a32.mode, h32), h32.ref = Qg(a32, d32, f32), h32.return = a32, a32 = h32);
                }
                return g22(a32);
              case ta$1:
                a: {
                  for (k3 = f32.key; d32 !== null; ) {
                    if (d32.key === k3)
                      if (d32.tag === 4 && d32.stateNode.containerInfo === f32.containerInfo && d32.stateNode.implementation === f32.implementation) {
                        c22(a32, d32.sibling);
                        d32 = e22(d32, f32.children || []);
                        d32.return = a32;
                        a32 = d32;
                        break a;
                      } else {
                        c22(a32, d32);
                        break;
                      }
                    else
                      b22(a32, d32);
                    d32 = d32.sibling;
                  }
                  d32 = Wg(f32, a32.mode, h32);
                  d32.return = a32;
                  a32 = d32;
                }
                return g22(a32);
            }
          if (typeof f32 === "string" || typeof f32 === "number")
            return f32 = "" + f32, d32 !== null && d32.tag === 6 ? (c22(a32, d32.sibling), d32 = e22(d32, f32), d32.return = a32, a32 = d32) : (c22(a32, d32), d32 = Ug(f32, a32.mode, h32), d32.return = a32, a32 = d32), g22(a32);
          if (Pg(f32))
            return x22(a32, d32, f32, h32);
          if (La$1(f32))
            return w22(a32, d32, f32, h32);
          l32 && Rg(a32, f32);
          if (typeof f32 === "undefined" && !k3)
            switch (a32.tag) {
              case 1:
              case 22:
              case 0:
              case 11:
              case 15:
                throw Error(y$1(152, Ra$1(a32.type) || "Component"));
            }
          return c22(a32, d32);
        };
      }
      var Yg = Sg(true), Zg = Sg(false), $g = {}, ah = Bf($g), bh = Bf($g), ch = Bf($g);
      function dh(a22) {
        if (a22 === $g)
          throw Error(y$1(174));
        return a22;
      }
      function eh(a22, b22) {
        I$2(ch, b22);
        I$2(bh, a22);
        I$2(ah, $g);
        a22 = b22.nodeType;
        switch (a22) {
          case 9:
          case 11:
            b22 = (b22 = b22.documentElement) ? b22.namespaceURI : mb(null, "");
            break;
          default:
            a22 = a22 === 8 ? b22.parentNode : b22, b22 = a22.namespaceURI || null, a22 = a22.tagName, b22 = mb(b22, a22);
        }
        H$1(ah);
        I$2(ah, b22);
      }
      function fh() {
        H$1(ah);
        H$1(bh);
        H$1(ch);
      }
      function gh(a22) {
        dh(ch.current);
        var b22 = dh(ah.current);
        var c22 = mb(b22, a22.type);
        b22 !== c22 && (I$2(bh, a22), I$2(ah, c22));
      }
      function hh(a22) {
        bh.current === a22 && (H$1(ah), H$1(bh));
      }
      var P$2 = Bf(0);
      function ih(a22) {
        for (var b22 = a22; b22 !== null; ) {
          if (b22.tag === 13) {
            var c22 = b22.memoizedState;
            if (c22 !== null && (c22 = c22.dehydrated, c22 === null || c22.data === "$?" || c22.data === "$!"))
              return b22;
          } else if (b22.tag === 19 && b22.memoizedProps.revealOrder !== void 0) {
            if ((b22.flags & 64) !== 0)
              return b22;
          } else if (b22.child !== null) {
            b22.child.return = b22;
            b22 = b22.child;
            continue;
          }
          if (b22 === a22)
            break;
          for (; b22.sibling === null; ) {
            if (b22.return === null || b22.return === a22)
              return null;
            b22 = b22.return;
          }
          b22.sibling.return = b22.return;
          b22 = b22.sibling;
        }
        return null;
      }
      var jh = null, kh = null, lh = false;
      function mh(a22, b22) {
        var c22 = nh(5, null, null, 0);
        c22.elementType = "DELETED";
        c22.type = "DELETED";
        c22.stateNode = b22;
        c22.return = a22;
        c22.flags = 8;
        a22.lastEffect !== null ? (a22.lastEffect.nextEffect = c22, a22.lastEffect = c22) : a22.firstEffect = a22.lastEffect = c22;
      }
      function oh(a22, b22) {
        switch (a22.tag) {
          case 5:
            var c22 = a22.type;
            b22 = b22.nodeType !== 1 || c22.toLowerCase() !== b22.nodeName.toLowerCase() ? null : b22;
            return b22 !== null ? (a22.stateNode = b22, true) : false;
          case 6:
            return b22 = a22.pendingProps === "" || b22.nodeType !== 3 ? null : b22, b22 !== null ? (a22.stateNode = b22, true) : false;
          case 13:
            return false;
          default:
            return false;
        }
      }
      function ph(a22) {
        if (lh) {
          var b22 = kh;
          if (b22) {
            var c22 = b22;
            if (!oh(a22, b22)) {
              b22 = rf(c22.nextSibling);
              if (!b22 || !oh(a22, b22)) {
                a22.flags = a22.flags & -1025 | 2;
                lh = false;
                jh = a22;
                return;
              }
              mh(jh, c22);
            }
            jh = a22;
            kh = rf(b22.firstChild);
          } else
            a22.flags = a22.flags & -1025 | 2, lh = false, jh = a22;
        }
      }
      function qh(a22) {
        for (a22 = a22.return; a22 !== null && a22.tag !== 5 && a22.tag !== 3 && a22.tag !== 13; )
          a22 = a22.return;
        jh = a22;
      }
      function rh(a22) {
        if (a22 !== jh)
          return false;
        if (!lh)
          return qh(a22), lh = true, false;
        var b22 = a22.type;
        if (a22.tag !== 5 || b22 !== "head" && b22 !== "body" && !nf(b22, a22.memoizedProps))
          for (b22 = kh; b22; )
            mh(a22, b22), b22 = rf(b22.nextSibling);
        qh(a22);
        if (a22.tag === 13) {
          a22 = a22.memoizedState;
          a22 = a22 !== null ? a22.dehydrated : null;
          if (!a22)
            throw Error(y$1(317));
          a: {
            a22 = a22.nextSibling;
            for (b22 = 0; a22; ) {
              if (a22.nodeType === 8) {
                var c22 = a22.data;
                if (c22 === "/$") {
                  if (b22 === 0) {
                    kh = rf(a22.nextSibling);
                    break a;
                  }
                  b22--;
                } else
                  c22 !== "$" && c22 !== "$!" && c22 !== "$?" || b22++;
              }
              a22 = a22.nextSibling;
            }
            kh = null;
          }
        } else
          kh = jh ? rf(a22.stateNode.nextSibling) : null;
        return true;
      }
      function sh() {
        kh = jh = null;
        lh = false;
      }
      var th = [];
      function uh() {
        for (var a22 = 0; a22 < th.length; a22++)
          th[a22]._workInProgressVersionPrimary = null;
        th.length = 0;
      }
      var vh = ra$1.ReactCurrentDispatcher, wh = ra$1.ReactCurrentBatchConfig, xh = 0, R$2 = null, S$2 = null, T$1 = null, yh = false, zh = false;
      function Ah() {
        throw Error(y$1(321));
      }
      function Bh(a22, b22) {
        if (b22 === null)
          return false;
        for (var c22 = 0; c22 < b22.length && c22 < a22.length; c22++)
          if (!He6(a22[c22], b22[c22]))
            return false;
        return true;
      }
      function Ch(a22, b22, c22, d22, e22, f22) {
        xh = f22;
        R$2 = b22;
        b22.memoizedState = null;
        b22.updateQueue = null;
        b22.lanes = 0;
        vh.current = a22 === null || a22.memoizedState === null ? Dh : Eh;
        a22 = c22(d22, e22);
        if (zh) {
          f22 = 0;
          do {
            zh = false;
            if (!(25 > f22))
              throw Error(y$1(301));
            f22 += 1;
            T$1 = S$2 = null;
            b22.updateQueue = null;
            vh.current = Fh;
            a22 = c22(d22, e22);
          } while (zh);
        }
        vh.current = Gh;
        b22 = S$2 !== null && S$2.next !== null;
        xh = 0;
        T$1 = S$2 = R$2 = null;
        yh = false;
        if (b22)
          throw Error(y$1(300));
        return a22;
      }
      function Hh() {
        var a22 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
        T$1 === null ? R$2.memoizedState = T$1 = a22 : T$1 = T$1.next = a22;
        return T$1;
      }
      function Ih() {
        if (S$2 === null) {
          var a22 = R$2.alternate;
          a22 = a22 !== null ? a22.memoizedState : null;
        } else
          a22 = S$2.next;
        var b22 = T$1 === null ? R$2.memoizedState : T$1.next;
        if (b22 !== null)
          T$1 = b22, S$2 = a22;
        else {
          if (a22 === null)
            throw Error(y$1(310));
          S$2 = a22;
          a22 = { memoizedState: S$2.memoizedState, baseState: S$2.baseState, baseQueue: S$2.baseQueue, queue: S$2.queue, next: null };
          T$1 === null ? R$2.memoizedState = T$1 = a22 : T$1 = T$1.next = a22;
        }
        return T$1;
      }
      function Jh(a22, b22) {
        return typeof b22 === "function" ? b22(a22) : b22;
      }
      function Kh(a22) {
        var b22 = Ih(), c22 = b22.queue;
        if (c22 === null)
          throw Error(y$1(311));
        c22.lastRenderedReducer = a22;
        var d22 = S$2, e22 = d22.baseQueue, f22 = c22.pending;
        if (f22 !== null) {
          if (e22 !== null) {
            var g22 = e22.next;
            e22.next = f22.next;
            f22.next = g22;
          }
          d22.baseQueue = e22 = f22;
          c22.pending = null;
        }
        if (e22 !== null) {
          e22 = e22.next;
          d22 = d22.baseState;
          var h22 = g22 = f22 = null, k22 = e22;
          do {
            var l22 = k22.lane;
            if ((xh & l22) === l22)
              h22 !== null && (h22 = h22.next = { lane: 0, action: k22.action, eagerReducer: k22.eagerReducer, eagerState: k22.eagerState, next: null }), d22 = k22.eagerReducer === a22 ? k22.eagerState : a22(d22, k22.action);
            else {
              var n22 = {
                lane: l22,
                action: k22.action,
                eagerReducer: k22.eagerReducer,
                eagerState: k22.eagerState,
                next: null
              };
              h22 === null ? (g22 = h22 = n22, f22 = d22) : h22 = h22.next = n22;
              R$2.lanes |= l22;
              Dg |= l22;
            }
            k22 = k22.next;
          } while (k22 !== null && k22 !== e22);
          h22 === null ? f22 = d22 : h22.next = g22;
          He6(d22, b22.memoizedState) || (ug = true);
          b22.memoizedState = d22;
          b22.baseState = f22;
          b22.baseQueue = h22;
          c22.lastRenderedState = d22;
        }
        return [b22.memoizedState, c22.dispatch];
      }
      function Lh(a22) {
        var b22 = Ih(), c22 = b22.queue;
        if (c22 === null)
          throw Error(y$1(311));
        c22.lastRenderedReducer = a22;
        var d22 = c22.dispatch, e22 = c22.pending, f22 = b22.memoizedState;
        if (e22 !== null) {
          c22.pending = null;
          var g22 = e22 = e22.next;
          do
            f22 = a22(f22, g22.action), g22 = g22.next;
          while (g22 !== e22);
          He6(f22, b22.memoizedState) || (ug = true);
          b22.memoizedState = f22;
          b22.baseQueue === null && (b22.baseState = f22);
          c22.lastRenderedState = f22;
        }
        return [f22, d22];
      }
      function Mh(a22, b22, c22) {
        var d22 = b22._getVersion;
        d22 = d22(b22._source);
        var e22 = b22._workInProgressVersionPrimary;
        if (e22 !== null)
          a22 = e22 === d22;
        else if (a22 = a22.mutableReadLanes, a22 = (xh & a22) === a22)
          b22._workInProgressVersionPrimary = d22, th.push(b22);
        if (a22)
          return c22(b22._source);
        th.push(b22);
        throw Error(y$1(350));
      }
      function Nh(a22, b22, c22, d22) {
        var e22 = U$2;
        if (e22 === null)
          throw Error(y$1(349));
        var f22 = b22._getVersion, g22 = f22(b22._source), h22 = vh.current, k22 = h22.useState(function() {
          return Mh(e22, b22, c22);
        }), l22 = k22[1], n22 = k22[0];
        k22 = T$1;
        var A22 = a22.memoizedState, p22 = A22.refs, C22 = p22.getSnapshot, x22 = A22.source;
        A22 = A22.subscribe;
        var w22 = R$2;
        a22.memoizedState = { refs: p22, source: b22, subscribe: d22 };
        h22.useEffect(function() {
          p22.getSnapshot = c22;
          p22.setSnapshot = l22;
          var a32 = f22(b22._source);
          if (!He6(g22, a32)) {
            a32 = c22(b22._source);
            He6(n22, a32) || (l22(a32), a32 = Ig(w22), e22.mutableReadLanes |= a32 & e22.pendingLanes);
            a32 = e22.mutableReadLanes;
            e22.entangledLanes |= a32;
            for (var d32 = e22.entanglements, h32 = a32; 0 < h32; ) {
              var k3 = 31 - Vc(h32), v22 = 1 << k3;
              d32[k3] |= a32;
              h32 &= ~v22;
            }
          }
        }, [c22, b22, d22]);
        h22.useEffect(function() {
          return d22(b22._source, function() {
            var a32 = p22.getSnapshot, c32 = p22.setSnapshot;
            try {
              c32(a32(b22._source));
              var d32 = Ig(w22);
              e22.mutableReadLanes |= d32 & e22.pendingLanes;
            } catch (q22) {
              c32(function() {
                throw q22;
              });
            }
          });
        }, [b22, d22]);
        He6(C22, c22) && He6(x22, b22) && He6(A22, d22) || (a22 = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: n22 }, a22.dispatch = l22 = Oh.bind(null, R$2, a22), k22.queue = a22, k22.baseQueue = null, n22 = Mh(e22, b22, c22), k22.memoizedState = k22.baseState = n22);
        return n22;
      }
      function Ph(a22, b22, c22) {
        var d22 = Ih();
        return Nh(d22, a22, b22, c22);
      }
      function Qh(a22) {
        var b22 = Hh();
        typeof a22 === "function" && (a22 = a22());
        b22.memoizedState = b22.baseState = a22;
        a22 = b22.queue = { pending: null, dispatch: null, lastRenderedReducer: Jh, lastRenderedState: a22 };
        a22 = a22.dispatch = Oh.bind(null, R$2, a22);
        return [b22.memoizedState, a22];
      }
      function Rh(a22, b22, c22, d22) {
        a22 = { tag: a22, create: b22, destroy: c22, deps: d22, next: null };
        b22 = R$2.updateQueue;
        b22 === null ? (b22 = { lastEffect: null }, R$2.updateQueue = b22, b22.lastEffect = a22.next = a22) : (c22 = b22.lastEffect, c22 === null ? b22.lastEffect = a22.next = a22 : (d22 = c22.next, c22.next = a22, a22.next = d22, b22.lastEffect = a22));
        return a22;
      }
      function Sh(a22) {
        var b22 = Hh();
        a22 = { current: a22 };
        return b22.memoizedState = a22;
      }
      function Th() {
        return Ih().memoizedState;
      }
      function Uh(a22, b22, c22, d22) {
        var e22 = Hh();
        R$2.flags |= a22;
        e22.memoizedState = Rh(1 | b22, c22, void 0, d22 === void 0 ? null : d22);
      }
      function Vh(a22, b22, c22, d22) {
        var e22 = Ih();
        d22 = d22 === void 0 ? null : d22;
        var f22 = void 0;
        if (S$2 !== null) {
          var g22 = S$2.memoizedState;
          f22 = g22.destroy;
          if (d22 !== null && Bh(d22, g22.deps)) {
            Rh(b22, c22, f22, d22);
            return;
          }
        }
        R$2.flags |= a22;
        e22.memoizedState = Rh(1 | b22, c22, f22, d22);
      }
      function Wh(a22, b22) {
        return Uh(516, 4, a22, b22);
      }
      function Xh(a22, b22) {
        return Vh(516, 4, a22, b22);
      }
      function Yh(a22, b22) {
        return Vh(4, 2, a22, b22);
      }
      function Zh(a22, b22) {
        if (typeof b22 === "function")
          return a22 = a22(), b22(a22), function() {
            b22(null);
          };
        if (b22 !== null && b22 !== void 0)
          return a22 = a22(), b22.current = a22, function() {
            b22.current = null;
          };
      }
      function $h(a22, b22, c22) {
        c22 = c22 !== null && c22 !== void 0 ? c22.concat([a22]) : null;
        return Vh(4, 2, Zh.bind(null, b22, a22), c22);
      }
      function ai() {
      }
      function bi(a22, b22) {
        var c22 = Ih();
        b22 = b22 === void 0 ? null : b22;
        var d22 = c22.memoizedState;
        if (d22 !== null && b22 !== null && Bh(b22, d22[1]))
          return d22[0];
        c22.memoizedState = [a22, b22];
        return a22;
      }
      function ci(a22, b22) {
        var c22 = Ih();
        b22 = b22 === void 0 ? null : b22;
        var d22 = c22.memoizedState;
        if (d22 !== null && b22 !== null && Bh(b22, d22[1]))
          return d22[0];
        a22 = a22();
        c22.memoizedState = [a22, b22];
        return a22;
      }
      function di(a22, b22) {
        var c22 = eg();
        gg(98 > c22 ? 98 : c22, function() {
          a22(true);
        });
        gg(97 < c22 ? 97 : c22, function() {
          var c32 = wh.transition;
          wh.transition = 1;
          try {
            a22(false), b22();
          } finally {
            wh.transition = c32;
          }
        });
      }
      function Oh(a22, b22, c22) {
        var d22 = Hg(), e22 = Ig(a22), f22 = { lane: e22, action: c22, eagerReducer: null, eagerState: null, next: null }, g22 = b22.pending;
        g22 === null ? f22.next = f22 : (f22.next = g22.next, g22.next = f22);
        b22.pending = f22;
        g22 = a22.alternate;
        if (a22 === R$2 || g22 !== null && g22 === R$2)
          zh = yh = true;
        else {
          if (a22.lanes === 0 && (g22 === null || g22.lanes === 0) && (g22 = b22.lastRenderedReducer, g22 !== null))
            try {
              var h22 = b22.lastRenderedState, k22 = g22(h22, c22);
              f22.eagerReducer = g22;
              f22.eagerState = k22;
              if (He6(k22, h22))
                return;
            } catch (l22) {
            } finally {
            }
          Jg(a22, e22, d22);
        }
      }
      var Gh = { readContext: vg, useCallback: Ah, useContext: Ah, useEffect: Ah, useImperativeHandle: Ah, useLayoutEffect: Ah, useMemo: Ah, useReducer: Ah, useRef: Ah, useState: Ah, useDebugValue: Ah, useDeferredValue: Ah, useTransition: Ah, useMutableSource: Ah, useOpaqueIdentifier: Ah, unstable_isNewReconciler: false }, Dh = { readContext: vg, useCallback: function(a22, b22) {
        Hh().memoizedState = [a22, b22 === void 0 ? null : b22];
        return a22;
      }, useContext: vg, useEffect: Wh, useImperativeHandle: function(a22, b22, c22) {
        c22 = c22 !== null && c22 !== void 0 ? c22.concat([a22]) : null;
        return Uh(4, 2, Zh.bind(null, b22, a22), c22);
      }, useLayoutEffect: function(a22, b22) {
        return Uh(4, 2, a22, b22);
      }, useMemo: function(a22, b22) {
        var c22 = Hh();
        b22 = b22 === void 0 ? null : b22;
        a22 = a22();
        c22.memoizedState = [a22, b22];
        return a22;
      }, useReducer: function(a22, b22, c22) {
        var d22 = Hh();
        b22 = c22 !== void 0 ? c22(b22) : b22;
        d22.memoizedState = d22.baseState = b22;
        a22 = d22.queue = { pending: null, dispatch: null, lastRenderedReducer: a22, lastRenderedState: b22 };
        a22 = a22.dispatch = Oh.bind(null, R$2, a22);
        return [d22.memoizedState, a22];
      }, useRef: Sh, useState: Qh, useDebugValue: ai, useDeferredValue: function(a22) {
        var b22 = Qh(a22), c22 = b22[0], d22 = b22[1];
        Wh(function() {
          var b32 = wh.transition;
          wh.transition = 1;
          try {
            d22(a22);
          } finally {
            wh.transition = b32;
          }
        }, [a22]);
        return c22;
      }, useTransition: function() {
        var a22 = Qh(false), b22 = a22[0];
        a22 = di.bind(null, a22[1]);
        Sh(a22);
        return [a22, b22];
      }, useMutableSource: function(a22, b22, c22) {
        var d22 = Hh();
        d22.memoizedState = { refs: { getSnapshot: b22, setSnapshot: null }, source: a22, subscribe: c22 };
        return Nh(d22, a22, b22, c22);
      }, useOpaqueIdentifier: function() {
        if (lh) {
          var a22 = false, b22 = uf(function() {
            a22 || (a22 = true, c22("r:" + (tf++).toString(36)));
            throw Error(y$1(355));
          }), c22 = Qh(b22)[1];
          (R$2.mode & 2) === 0 && (R$2.flags |= 516, Rh(5, function() {
            c22("r:" + (tf++).toString(36));
          }, void 0, null));
          return b22;
        }
        b22 = "r:" + (tf++).toString(36);
        Qh(b22);
        return b22;
      }, unstable_isNewReconciler: false }, Eh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Kh, useRef: Th, useState: function() {
        return Kh(Jh);
      }, useDebugValue: ai, useDeferredValue: function(a22) {
        var b22 = Kh(Jh), c22 = b22[0], d22 = b22[1];
        Xh(function() {
          var b32 = wh.transition;
          wh.transition = 1;
          try {
            d22(a22);
          } finally {
            wh.transition = b32;
          }
        }, [a22]);
        return c22;
      }, useTransition: function() {
        var a22 = Kh(Jh)[0];
        return [
          Th().current,
          a22
        ];
      }, useMutableSource: Ph, useOpaqueIdentifier: function() {
        return Kh(Jh)[0];
      }, unstable_isNewReconciler: false }, Fh = { readContext: vg, useCallback: bi, useContext: vg, useEffect: Xh, useImperativeHandle: $h, useLayoutEffect: Yh, useMemo: ci, useReducer: Lh, useRef: Th, useState: function() {
        return Lh(Jh);
      }, useDebugValue: ai, useDeferredValue: function(a22) {
        var b22 = Lh(Jh), c22 = b22[0], d22 = b22[1];
        Xh(function() {
          var b32 = wh.transition;
          wh.transition = 1;
          try {
            d22(a22);
          } finally {
            wh.transition = b32;
          }
        }, [a22]);
        return c22;
      }, useTransition: function() {
        var a22 = Lh(Jh)[0];
        return [
          Th().current,
          a22
        ];
      }, useMutableSource: Ph, useOpaqueIdentifier: function() {
        return Lh(Jh)[0];
      }, unstable_isNewReconciler: false }, ei = ra$1.ReactCurrentOwner, ug = false;
      function fi(a22, b22, c22, d22) {
        b22.child = a22 === null ? Zg(b22, null, c22, d22) : Yg(b22, a22.child, c22, d22);
      }
      function gi(a22, b22, c22, d22, e22) {
        c22 = c22.render;
        var f22 = b22.ref;
        tg(b22, e22);
        d22 = Ch(a22, b22, c22, d22, f22, e22);
        if (a22 !== null && !ug)
          return b22.updateQueue = a22.updateQueue, b22.flags &= -517, a22.lanes &= ~e22, hi(a22, b22, e22);
        b22.flags |= 1;
        fi(a22, b22, d22, e22);
        return b22.child;
      }
      function ii(a22, b22, c22, d22, e22, f22) {
        if (a22 === null) {
          var g22 = c22.type;
          if (typeof g22 === "function" && !ji(g22) && g22.defaultProps === void 0 && c22.compare === null && c22.defaultProps === void 0)
            return b22.tag = 15, b22.type = g22, ki(a22, b22, g22, d22, e22, f22);
          a22 = Vg(c22.type, null, d22, b22, b22.mode, f22);
          a22.ref = b22.ref;
          a22.return = b22;
          return b22.child = a22;
        }
        g22 = a22.child;
        if ((e22 & f22) === 0 && (e22 = g22.memoizedProps, c22 = c22.compare, c22 = c22 !== null ? c22 : Je5, c22(e22, d22) && a22.ref === b22.ref))
          return hi(a22, b22, f22);
        b22.flags |= 1;
        a22 = Tg(g22, d22);
        a22.ref = b22.ref;
        a22.return = b22;
        return b22.child = a22;
      }
      function ki(a22, b22, c22, d22, e22, f22) {
        if (a22 !== null && Je5(a22.memoizedProps, d22) && a22.ref === b22.ref)
          if (ug = false, (f22 & e22) !== 0)
            (a22.flags & 16384) !== 0 && (ug = true);
          else
            return b22.lanes = a22.lanes, hi(a22, b22, f22);
        return li(a22, b22, c22, d22, f22);
      }
      function mi(a22, b22, c22) {
        var d22 = b22.pendingProps, e22 = d22.children, f22 = a22 !== null ? a22.memoizedState : null;
        if (d22.mode === "hidden" || d22.mode === "unstable-defer-without-hiding")
          if ((b22.mode & 4) === 0)
            b22.memoizedState = { baseLanes: 0 }, ni(b22, c22);
          else if ((c22 & 1073741824) !== 0)
            b22.memoizedState = { baseLanes: 0 }, ni(b22, f22 !== null ? f22.baseLanes : c22);
          else
            return a22 = f22 !== null ? f22.baseLanes | c22 : c22, b22.lanes = b22.childLanes = 1073741824, b22.memoizedState = { baseLanes: a22 }, ni(b22, a22), null;
        else
          f22 !== null ? (d22 = f22.baseLanes | c22, b22.memoizedState = null) : d22 = c22, ni(b22, d22);
        fi(a22, b22, e22, c22);
        return b22.child;
      }
      function oi(a22, b22) {
        var c22 = b22.ref;
        if (a22 === null && c22 !== null || a22 !== null && a22.ref !== c22)
          b22.flags |= 128;
      }
      function li(a22, b22, c22, d22, e22) {
        var f22 = Ff(c22) ? Df : M$2.current;
        f22 = Ef(b22, f22);
        tg(b22, e22);
        c22 = Ch(a22, b22, c22, d22, f22, e22);
        if (a22 !== null && !ug)
          return b22.updateQueue = a22.updateQueue, b22.flags &= -517, a22.lanes &= ~e22, hi(a22, b22, e22);
        b22.flags |= 1;
        fi(a22, b22, c22, e22);
        return b22.child;
      }
      function pi(a22, b22, c22, d22, e22) {
        if (Ff(c22)) {
          var f22 = true;
          Jf(b22);
        } else
          f22 = false;
        tg(b22, e22);
        if (b22.stateNode === null)
          a22 !== null && (a22.alternate = null, b22.alternate = null, b22.flags |= 2), Mg(b22, c22, d22), Og(b22, c22, d22, e22), d22 = true;
        else if (a22 === null) {
          var g22 = b22.stateNode, h22 = b22.memoizedProps;
          g22.props = h22;
          var k22 = g22.context, l22 = c22.contextType;
          typeof l22 === "object" && l22 !== null ? l22 = vg(l22) : (l22 = Ff(c22) ? Df : M$2.current, l22 = Ef(b22, l22));
          var n22 = c22.getDerivedStateFromProps, A22 = typeof n22 === "function" || typeof g22.getSnapshotBeforeUpdate === "function";
          A22 || typeof g22.UNSAFE_componentWillReceiveProps !== "function" && typeof g22.componentWillReceiveProps !== "function" || (h22 !== d22 || k22 !== l22) && Ng(b22, g22, d22, l22);
          wg = false;
          var p22 = b22.memoizedState;
          g22.state = p22;
          Cg(b22, d22, g22, e22);
          k22 = b22.memoizedState;
          h22 !== d22 || p22 !== k22 || N$1.current || wg ? (typeof n22 === "function" && (Gg(b22, c22, n22, d22), k22 = b22.memoizedState), (h22 = wg || Lg(b22, c22, h22, d22, p22, k22, l22)) ? (A22 || typeof g22.UNSAFE_componentWillMount !== "function" && typeof g22.componentWillMount !== "function" || (typeof g22.componentWillMount === "function" && g22.componentWillMount(), typeof g22.UNSAFE_componentWillMount === "function" && g22.UNSAFE_componentWillMount()), typeof g22.componentDidMount === "function" && (b22.flags |= 4)) : (typeof g22.componentDidMount === "function" && (b22.flags |= 4), b22.memoizedProps = d22, b22.memoizedState = k22), g22.props = d22, g22.state = k22, g22.context = l22, d22 = h22) : (typeof g22.componentDidMount === "function" && (b22.flags |= 4), d22 = false);
        } else {
          g22 = b22.stateNode;
          yg(a22, b22);
          h22 = b22.memoizedProps;
          l22 = b22.type === b22.elementType ? h22 : lg(b22.type, h22);
          g22.props = l22;
          A22 = b22.pendingProps;
          p22 = g22.context;
          k22 = c22.contextType;
          typeof k22 === "object" && k22 !== null ? k22 = vg(k22) : (k22 = Ff(c22) ? Df : M$2.current, k22 = Ef(b22, k22));
          var C22 = c22.getDerivedStateFromProps;
          (n22 = typeof C22 === "function" || typeof g22.getSnapshotBeforeUpdate === "function") || typeof g22.UNSAFE_componentWillReceiveProps !== "function" && typeof g22.componentWillReceiveProps !== "function" || (h22 !== A22 || p22 !== k22) && Ng(b22, g22, d22, k22);
          wg = false;
          p22 = b22.memoizedState;
          g22.state = p22;
          Cg(b22, d22, g22, e22);
          var x22 = b22.memoizedState;
          h22 !== A22 || p22 !== x22 || N$1.current || wg ? (typeof C22 === "function" && (Gg(b22, c22, C22, d22), x22 = b22.memoizedState), (l22 = wg || Lg(b22, c22, l22, d22, p22, x22, k22)) ? (n22 || typeof g22.UNSAFE_componentWillUpdate !== "function" && typeof g22.componentWillUpdate !== "function" || (typeof g22.componentWillUpdate === "function" && g22.componentWillUpdate(d22, x22, k22), typeof g22.UNSAFE_componentWillUpdate === "function" && g22.UNSAFE_componentWillUpdate(d22, x22, k22)), typeof g22.componentDidUpdate === "function" && (b22.flags |= 4), typeof g22.getSnapshotBeforeUpdate === "function" && (b22.flags |= 256)) : (typeof g22.componentDidUpdate !== "function" || h22 === a22.memoizedProps && p22 === a22.memoizedState || (b22.flags |= 4), typeof g22.getSnapshotBeforeUpdate !== "function" || h22 === a22.memoizedProps && p22 === a22.memoizedState || (b22.flags |= 256), b22.memoizedProps = d22, b22.memoizedState = x22), g22.props = d22, g22.state = x22, g22.context = k22, d22 = l22) : (typeof g22.componentDidUpdate !== "function" || h22 === a22.memoizedProps && p22 === a22.memoizedState || (b22.flags |= 4), typeof g22.getSnapshotBeforeUpdate !== "function" || h22 === a22.memoizedProps && p22 === a22.memoizedState || (b22.flags |= 256), d22 = false);
        }
        return qi(a22, b22, c22, d22, f22, e22);
      }
      function qi(a22, b22, c22, d22, e22, f22) {
        oi(a22, b22);
        var g22 = (b22.flags & 64) !== 0;
        if (!d22 && !g22)
          return e22 && Kf(b22, c22, false), hi(a22, b22, f22);
        d22 = b22.stateNode;
        ei.current = b22;
        var h22 = g22 && typeof c22.getDerivedStateFromError !== "function" ? null : d22.render();
        b22.flags |= 1;
        a22 !== null && g22 ? (b22.child = Yg(b22, a22.child, null, f22), b22.child = Yg(b22, null, h22, f22)) : fi(a22, b22, h22, f22);
        b22.memoizedState = d22.state;
        e22 && Kf(b22, c22, true);
        return b22.child;
      }
      function ri(a22) {
        var b22 = a22.stateNode;
        b22.pendingContext ? Hf(a22, b22.pendingContext, b22.pendingContext !== b22.context) : b22.context && Hf(a22, b22.context, false);
        eh(a22, b22.containerInfo);
      }
      var si = { dehydrated: null, retryLane: 0 };
      function ti(a22, b22, c22) {
        var d22 = b22.pendingProps, e22 = P$2.current, f22 = false, g22;
        (g22 = (b22.flags & 64) !== 0) || (g22 = a22 !== null && a22.memoizedState === null ? false : (e22 & 2) !== 0);
        g22 ? (f22 = true, b22.flags &= -65) : a22 !== null && a22.memoizedState === null || d22.fallback === void 0 || d22.unstable_avoidThisFallback === true || (e22 |= 1);
        I$2(P$2, e22 & 1);
        if (a22 === null) {
          d22.fallback !== void 0 && ph(b22);
          a22 = d22.children;
          e22 = d22.fallback;
          if (f22)
            return a22 = ui(b22, a22, e22, c22), b22.child.memoizedState = { baseLanes: c22 }, b22.memoizedState = si, a22;
          if (typeof d22.unstable_expectedLoadTime === "number")
            return a22 = ui(b22, a22, e22, c22), b22.child.memoizedState = { baseLanes: c22 }, b22.memoizedState = si, b22.lanes = 33554432, a22;
          c22 = vi({ mode: "visible", children: a22 }, b22.mode, c22, null);
          c22.return = b22;
          return b22.child = c22;
        }
        if (a22.memoizedState !== null) {
          if (f22)
            return d22 = wi(a22, b22, d22.children, d22.fallback, c22), f22 = b22.child, e22 = a22.child.memoizedState, f22.memoizedState = e22 === null ? { baseLanes: c22 } : { baseLanes: e22.baseLanes | c22 }, f22.childLanes = a22.childLanes & ~c22, b22.memoizedState = si, d22;
          c22 = xi(a22, b22, d22.children, c22);
          b22.memoizedState = null;
          return c22;
        }
        if (f22)
          return d22 = wi(a22, b22, d22.children, d22.fallback, c22), f22 = b22.child, e22 = a22.child.memoizedState, f22.memoizedState = e22 === null ? { baseLanes: c22 } : { baseLanes: e22.baseLanes | c22 }, f22.childLanes = a22.childLanes & ~c22, b22.memoizedState = si, d22;
        c22 = xi(a22, b22, d22.children, c22);
        b22.memoizedState = null;
        return c22;
      }
      function ui(a22, b22, c22, d22) {
        var e22 = a22.mode, f22 = a22.child;
        b22 = { mode: "hidden", children: b22 };
        (e22 & 2) === 0 && f22 !== null ? (f22.childLanes = 0, f22.pendingProps = b22) : f22 = vi(b22, e22, 0, null);
        c22 = Xg(c22, e22, d22, null);
        f22.return = a22;
        c22.return = a22;
        f22.sibling = c22;
        a22.child = f22;
        return c22;
      }
      function xi(a22, b22, c22, d22) {
        var e22 = a22.child;
        a22 = e22.sibling;
        c22 = Tg(e22, { mode: "visible", children: c22 });
        (b22.mode & 2) === 0 && (c22.lanes = d22);
        c22.return = b22;
        c22.sibling = null;
        a22 !== null && (a22.nextEffect = null, a22.flags = 8, b22.firstEffect = b22.lastEffect = a22);
        return b22.child = c22;
      }
      function wi(a22, b22, c22, d22, e22) {
        var f22 = b22.mode, g22 = a22.child;
        a22 = g22.sibling;
        var h22 = { mode: "hidden", children: c22 };
        (f22 & 2) === 0 && b22.child !== g22 ? (c22 = b22.child, c22.childLanes = 0, c22.pendingProps = h22, g22 = c22.lastEffect, g22 !== null ? (b22.firstEffect = c22.firstEffect, b22.lastEffect = g22, g22.nextEffect = null) : b22.firstEffect = b22.lastEffect = null) : c22 = Tg(g22, h22);
        a22 !== null ? d22 = Tg(a22, d22) : (d22 = Xg(d22, f22, e22, null), d22.flags |= 2);
        d22.return = b22;
        c22.return = b22;
        c22.sibling = d22;
        b22.child = c22;
        return d22;
      }
      function yi(a22, b22) {
        a22.lanes |= b22;
        var c22 = a22.alternate;
        c22 !== null && (c22.lanes |= b22);
        sg(a22.return, b22);
      }
      function zi(a22, b22, c22, d22, e22, f22) {
        var g22 = a22.memoizedState;
        g22 === null ? a22.memoizedState = { isBackwards: b22, rendering: null, renderingStartTime: 0, last: d22, tail: c22, tailMode: e22, lastEffect: f22 } : (g22.isBackwards = b22, g22.rendering = null, g22.renderingStartTime = 0, g22.last = d22, g22.tail = c22, g22.tailMode = e22, g22.lastEffect = f22);
      }
      function Ai(a22, b22, c22) {
        var d22 = b22.pendingProps, e22 = d22.revealOrder, f22 = d22.tail;
        fi(a22, b22, d22.children, c22);
        d22 = P$2.current;
        if ((d22 & 2) !== 0)
          d22 = d22 & 1 | 2, b22.flags |= 64;
        else {
          if (a22 !== null && (a22.flags & 64) !== 0)
            a:
              for (a22 = b22.child; a22 !== null; ) {
                if (a22.tag === 13)
                  a22.memoizedState !== null && yi(a22, c22);
                else if (a22.tag === 19)
                  yi(a22, c22);
                else if (a22.child !== null) {
                  a22.child.return = a22;
                  a22 = a22.child;
                  continue;
                }
                if (a22 === b22)
                  break a;
                for (; a22.sibling === null; ) {
                  if (a22.return === null || a22.return === b22)
                    break a;
                  a22 = a22.return;
                }
                a22.sibling.return = a22.return;
                a22 = a22.sibling;
              }
          d22 &= 1;
        }
        I$2(P$2, d22);
        if ((b22.mode & 2) === 0)
          b22.memoizedState = null;
        else
          switch (e22) {
            case "forwards":
              c22 = b22.child;
              for (e22 = null; c22 !== null; )
                a22 = c22.alternate, a22 !== null && ih(a22) === null && (e22 = c22), c22 = c22.sibling;
              c22 = e22;
              c22 === null ? (e22 = b22.child, b22.child = null) : (e22 = c22.sibling, c22.sibling = null);
              zi(b22, false, e22, c22, f22, b22.lastEffect);
              break;
            case "backwards":
              c22 = null;
              e22 = b22.child;
              for (b22.child = null; e22 !== null; ) {
                a22 = e22.alternate;
                if (a22 !== null && ih(a22) === null) {
                  b22.child = e22;
                  break;
                }
                a22 = e22.sibling;
                e22.sibling = c22;
                c22 = e22;
                e22 = a22;
              }
              zi(b22, true, c22, null, f22, b22.lastEffect);
              break;
            case "together":
              zi(b22, false, null, null, void 0, b22.lastEffect);
              break;
            default:
              b22.memoizedState = null;
          }
        return b22.child;
      }
      function hi(a22, b22, c22) {
        a22 !== null && (b22.dependencies = a22.dependencies);
        Dg |= b22.lanes;
        if ((c22 & b22.childLanes) !== 0) {
          if (a22 !== null && b22.child !== a22.child)
            throw Error(y$1(153));
          if (b22.child !== null) {
            a22 = b22.child;
            c22 = Tg(a22, a22.pendingProps);
            b22.child = c22;
            for (c22.return = b22; a22.sibling !== null; )
              a22 = a22.sibling, c22 = c22.sibling = Tg(a22, a22.pendingProps), c22.return = b22;
            c22.sibling = null;
          }
          return b22.child;
        }
        return null;
      }
      var Bi, Ci, Di, Ei;
      Bi = function(a22, b22) {
        for (var c22 = b22.child; c22 !== null; ) {
          if (c22.tag === 5 || c22.tag === 6)
            a22.appendChild(c22.stateNode);
          else if (c22.tag !== 4 && c22.child !== null) {
            c22.child.return = c22;
            c22 = c22.child;
            continue;
          }
          if (c22 === b22)
            break;
          for (; c22.sibling === null; ) {
            if (c22.return === null || c22.return === b22)
              return;
            c22 = c22.return;
          }
          c22.sibling.return = c22.return;
          c22 = c22.sibling;
        }
      };
      Ci = function() {
      };
      Di = function(a22, b22, c22, d22) {
        var e22 = a22.memoizedProps;
        if (e22 !== d22) {
          a22 = b22.stateNode;
          dh(ah.current);
          var f22 = null;
          switch (c22) {
            case "input":
              e22 = Ya$1(a22, e22);
              d22 = Ya$1(a22, d22);
              f22 = [];
              break;
            case "option":
              e22 = eb(a22, e22);
              d22 = eb(a22, d22);
              f22 = [];
              break;
            case "select":
              e22 = m$2({}, e22, { value: void 0 });
              d22 = m$2({}, d22, { value: void 0 });
              f22 = [];
              break;
            case "textarea":
              e22 = gb(a22, e22);
              d22 = gb(a22, d22);
              f22 = [];
              break;
            default:
              typeof e22.onClick !== "function" && typeof d22.onClick === "function" && (a22.onclick = jf);
          }
          vb(c22, d22);
          var g22;
          c22 = null;
          for (l22 in e22)
            if (!d22.hasOwnProperty(l22) && e22.hasOwnProperty(l22) && e22[l22] != null)
              if (l22 === "style") {
                var h22 = e22[l22];
                for (g22 in h22)
                  h22.hasOwnProperty(g22) && (c22 || (c22 = {}), c22[g22] = "");
              } else
                l22 !== "dangerouslySetInnerHTML" && l22 !== "children" && l22 !== "suppressContentEditableWarning" && l22 !== "suppressHydrationWarning" && l22 !== "autoFocus" && (ca$1.hasOwnProperty(l22) ? f22 || (f22 = []) : (f22 = f22 || []).push(l22, null));
          for (l22 in d22) {
            var k22 = d22[l22];
            h22 = e22 != null ? e22[l22] : void 0;
            if (d22.hasOwnProperty(l22) && k22 !== h22 && (k22 != null || h22 != null))
              if (l22 === "style")
                if (h22) {
                  for (g22 in h22)
                    !h22.hasOwnProperty(g22) || k22 && k22.hasOwnProperty(g22) || (c22 || (c22 = {}), c22[g22] = "");
                  for (g22 in k22)
                    k22.hasOwnProperty(g22) && h22[g22] !== k22[g22] && (c22 || (c22 = {}), c22[g22] = k22[g22]);
                } else
                  c22 || (f22 || (f22 = []), f22.push(l22, c22)), c22 = k22;
              else
                l22 === "dangerouslySetInnerHTML" ? (k22 = k22 ? k22.__html : void 0, h22 = h22 ? h22.__html : void 0, k22 != null && h22 !== k22 && (f22 = f22 || []).push(l22, k22)) : l22 === "children" ? typeof k22 !== "string" && typeof k22 !== "number" || (f22 = f22 || []).push(l22, "" + k22) : l22 !== "suppressContentEditableWarning" && l22 !== "suppressHydrationWarning" && (ca$1.hasOwnProperty(l22) ? (k22 != null && l22 === "onScroll" && G$1("scroll", a22), f22 || h22 === k22 || (f22 = [])) : typeof k22 === "object" && k22 !== null && k22.$$typeof === Ga$1 ? k22.toString() : (f22 = f22 || []).push(l22, k22));
          }
          c22 && (f22 = f22 || []).push("style", c22);
          var l22 = f22;
          if (b22.updateQueue = l22)
            b22.flags |= 4;
        }
      };
      Ei = function(a22, b22, c22, d22) {
        c22 !== d22 && (b22.flags |= 4);
      };
      function Fi(a22, b22) {
        if (!lh)
          switch (a22.tailMode) {
            case "hidden":
              b22 = a22.tail;
              for (var c22 = null; b22 !== null; )
                b22.alternate !== null && (c22 = b22), b22 = b22.sibling;
              c22 === null ? a22.tail = null : c22.sibling = null;
              break;
            case "collapsed":
              c22 = a22.tail;
              for (var d22 = null; c22 !== null; )
                c22.alternate !== null && (d22 = c22), c22 = c22.sibling;
              d22 === null ? b22 || a22.tail === null ? a22.tail = null : a22.tail.sibling = null : d22.sibling = null;
          }
      }
      function Gi(a22, b22, c22) {
        var d22 = b22.pendingProps;
        switch (b22.tag) {
          case 2:
          case 16:
          case 15:
          case 0:
          case 11:
          case 7:
          case 8:
          case 12:
          case 9:
          case 14:
            return null;
          case 1:
            return Ff(b22.type) && Gf(), null;
          case 3:
            fh();
            H$1(N$1);
            H$1(M$2);
            uh();
            d22 = b22.stateNode;
            d22.pendingContext && (d22.context = d22.pendingContext, d22.pendingContext = null);
            if (a22 === null || a22.child === null)
              rh(b22) ? b22.flags |= 4 : d22.hydrate || (b22.flags |= 256);
            Ci(b22);
            return null;
          case 5:
            hh(b22);
            var e22 = dh(ch.current);
            c22 = b22.type;
            if (a22 !== null && b22.stateNode != null)
              Di(a22, b22, c22, d22, e22), a22.ref !== b22.ref && (b22.flags |= 128);
            else {
              if (!d22) {
                if (b22.stateNode === null)
                  throw Error(y$1(166));
                return null;
              }
              a22 = dh(ah.current);
              if (rh(b22)) {
                d22 = b22.stateNode;
                c22 = b22.type;
                var f22 = b22.memoizedProps;
                d22[wf] = b22;
                d22[xf] = f22;
                switch (c22) {
                  case "dialog":
                    G$1("cancel", d22);
                    G$1("close", d22);
                    break;
                  case "iframe":
                  case "object":
                  case "embed":
                    G$1("load", d22);
                    break;
                  case "video":
                  case "audio":
                    for (a22 = 0; a22 < Xe5.length; a22++)
                      G$1(Xe5[a22], d22);
                    break;
                  case "source":
                    G$1("error", d22);
                    break;
                  case "img":
                  case "image":
                  case "link":
                    G$1("error", d22);
                    G$1("load", d22);
                    break;
                  case "details":
                    G$1("toggle", d22);
                    break;
                  case "input":
                    Za$1(d22, f22);
                    G$1("invalid", d22);
                    break;
                  case "select":
                    d22._wrapperState = { wasMultiple: !!f22.multiple };
                    G$1("invalid", d22);
                    break;
                  case "textarea":
                    hb(d22, f22), G$1("invalid", d22);
                }
                vb(c22, f22);
                a22 = null;
                for (var g22 in f22)
                  f22.hasOwnProperty(g22) && (e22 = f22[g22], g22 === "children" ? typeof e22 === "string" ? d22.textContent !== e22 && (a22 = ["children", e22]) : typeof e22 === "number" && d22.textContent !== "" + e22 && (a22 = ["children", "" + e22]) : ca$1.hasOwnProperty(g22) && e22 != null && g22 === "onScroll" && G$1("scroll", d22));
                switch (c22) {
                  case "input":
                    Va$1(d22);
                    cb(d22, f22, true);
                    break;
                  case "textarea":
                    Va$1(d22);
                    jb(d22);
                    break;
                  case "select":
                  case "option":
                    break;
                  default:
                    typeof f22.onClick === "function" && (d22.onclick = jf);
                }
                d22 = a22;
                b22.updateQueue = d22;
                d22 !== null && (b22.flags |= 4);
              } else {
                g22 = e22.nodeType === 9 ? e22 : e22.ownerDocument;
                a22 === kb.html && (a22 = lb(c22));
                a22 === kb.html ? c22 === "script" ? (a22 = g22.createElement("div"), a22.innerHTML = "<script><\/script>", a22 = a22.removeChild(a22.firstChild)) : typeof d22.is === "string" ? a22 = g22.createElement(c22, { is: d22.is }) : (a22 = g22.createElement(c22), c22 === "select" && (g22 = a22, d22.multiple ? g22.multiple = true : d22.size && (g22.size = d22.size))) : a22 = g22.createElementNS(a22, c22);
                a22[wf] = b22;
                a22[xf] = d22;
                Bi(a22, b22, false, false);
                b22.stateNode = a22;
                g22 = wb(c22, d22);
                switch (c22) {
                  case "dialog":
                    G$1("cancel", a22);
                    G$1("close", a22);
                    e22 = d22;
                    break;
                  case "iframe":
                  case "object":
                  case "embed":
                    G$1("load", a22);
                    e22 = d22;
                    break;
                  case "video":
                  case "audio":
                    for (e22 = 0; e22 < Xe5.length; e22++)
                      G$1(Xe5[e22], a22);
                    e22 = d22;
                    break;
                  case "source":
                    G$1("error", a22);
                    e22 = d22;
                    break;
                  case "img":
                  case "image":
                  case "link":
                    G$1("error", a22);
                    G$1("load", a22);
                    e22 = d22;
                    break;
                  case "details":
                    G$1("toggle", a22);
                    e22 = d22;
                    break;
                  case "input":
                    Za$1(a22, d22);
                    e22 = Ya$1(a22, d22);
                    G$1("invalid", a22);
                    break;
                  case "option":
                    e22 = eb(a22, d22);
                    break;
                  case "select":
                    a22._wrapperState = { wasMultiple: !!d22.multiple };
                    e22 = m$2({}, d22, { value: void 0 });
                    G$1("invalid", a22);
                    break;
                  case "textarea":
                    hb(a22, d22);
                    e22 = gb(a22, d22);
                    G$1("invalid", a22);
                    break;
                  default:
                    e22 = d22;
                }
                vb(c22, e22);
                var h22 = e22;
                for (f22 in h22)
                  if (h22.hasOwnProperty(f22)) {
                    var k22 = h22[f22];
                    f22 === "style" ? tb(a22, k22) : f22 === "dangerouslySetInnerHTML" ? (k22 = k22 ? k22.__html : void 0, k22 != null && ob(a22, k22)) : f22 === "children" ? typeof k22 === "string" ? (c22 !== "textarea" || k22 !== "") && pb(a22, k22) : typeof k22 === "number" && pb(a22, "" + k22) : f22 !== "suppressContentEditableWarning" && f22 !== "suppressHydrationWarning" && f22 !== "autoFocus" && (ca$1.hasOwnProperty(f22) ? k22 != null && f22 === "onScroll" && G$1("scroll", a22) : k22 != null && qa$1(a22, f22, k22, g22));
                  }
                switch (c22) {
                  case "input":
                    Va$1(a22);
                    cb(a22, d22, false);
                    break;
                  case "textarea":
                    Va$1(a22);
                    jb(a22);
                    break;
                  case "option":
                    d22.value != null && a22.setAttribute("value", "" + Sa$1(d22.value));
                    break;
                  case "select":
                    a22.multiple = !!d22.multiple;
                    f22 = d22.value;
                    f22 != null ? fb(a22, !!d22.multiple, f22, false) : d22.defaultValue != null && fb(a22, !!d22.multiple, d22.defaultValue, true);
                    break;
                  default:
                    typeof e22.onClick === "function" && (a22.onclick = jf);
                }
                mf(c22, d22) && (b22.flags |= 4);
              }
              b22.ref !== null && (b22.flags |= 128);
            }
            return null;
          case 6:
            if (a22 && b22.stateNode != null)
              Ei(a22, b22, a22.memoizedProps, d22);
            else {
              if (typeof d22 !== "string" && b22.stateNode === null)
                throw Error(y$1(166));
              c22 = dh(ch.current);
              dh(ah.current);
              rh(b22) ? (d22 = b22.stateNode, c22 = b22.memoizedProps, d22[wf] = b22, d22.nodeValue !== c22 && (b22.flags |= 4)) : (d22 = (c22.nodeType === 9 ? c22 : c22.ownerDocument).createTextNode(d22), d22[wf] = b22, b22.stateNode = d22);
            }
            return null;
          case 13:
            H$1(P$2);
            d22 = b22.memoizedState;
            if ((b22.flags & 64) !== 0)
              return b22.lanes = c22, b22;
            d22 = d22 !== null;
            c22 = false;
            a22 === null ? b22.memoizedProps.fallback !== void 0 && rh(b22) : c22 = a22.memoizedState !== null;
            if (d22 && !c22 && (b22.mode & 2) !== 0)
              if (a22 === null && b22.memoizedProps.unstable_avoidThisFallback !== true || (P$2.current & 1) !== 0)
                V$2 === 0 && (V$2 = 3);
              else {
                if (V$2 === 0 || V$2 === 3)
                  V$2 = 4;
                U$2 === null || (Dg & 134217727) === 0 && (Hi & 134217727) === 0 || Ii(U$2, W$2);
              }
            if (d22 || c22)
              b22.flags |= 4;
            return null;
          case 4:
            return fh(), Ci(b22), a22 === null && cf(b22.stateNode.containerInfo), null;
          case 10:
            return rg(b22), null;
          case 17:
            return Ff(b22.type) && Gf(), null;
          case 19:
            H$1(P$2);
            d22 = b22.memoizedState;
            if (d22 === null)
              return null;
            f22 = (b22.flags & 64) !== 0;
            g22 = d22.rendering;
            if (g22 === null)
              if (f22)
                Fi(d22, false);
              else {
                if (V$2 !== 0 || a22 !== null && (a22.flags & 64) !== 0)
                  for (a22 = b22.child; a22 !== null; ) {
                    g22 = ih(a22);
                    if (g22 !== null) {
                      b22.flags |= 64;
                      Fi(d22, false);
                      f22 = g22.updateQueue;
                      f22 !== null && (b22.updateQueue = f22, b22.flags |= 4);
                      d22.lastEffect === null && (b22.firstEffect = null);
                      b22.lastEffect = d22.lastEffect;
                      d22 = c22;
                      for (c22 = b22.child; c22 !== null; )
                        f22 = c22, a22 = d22, f22.flags &= 2, f22.nextEffect = null, f22.firstEffect = null, f22.lastEffect = null, g22 = f22.alternate, g22 === null ? (f22.childLanes = 0, f22.lanes = a22, f22.child = null, f22.memoizedProps = null, f22.memoizedState = null, f22.updateQueue = null, f22.dependencies = null, f22.stateNode = null) : (f22.childLanes = g22.childLanes, f22.lanes = g22.lanes, f22.child = g22.child, f22.memoizedProps = g22.memoizedProps, f22.memoizedState = g22.memoizedState, f22.updateQueue = g22.updateQueue, f22.type = g22.type, a22 = g22.dependencies, f22.dependencies = a22 === null ? null : { lanes: a22.lanes, firstContext: a22.firstContext }), c22 = c22.sibling;
                      I$2(P$2, P$2.current & 1 | 2);
                      return b22.child;
                    }
                    a22 = a22.sibling;
                  }
                d22.tail !== null && O$2() > Ji && (b22.flags |= 64, f22 = true, Fi(d22, false), b22.lanes = 33554432);
              }
            else {
              if (!f22)
                if (a22 = ih(g22), a22 !== null) {
                  if (b22.flags |= 64, f22 = true, c22 = a22.updateQueue, c22 !== null && (b22.updateQueue = c22, b22.flags |= 4), Fi(d22, true), d22.tail === null && d22.tailMode === "hidden" && !g22.alternate && !lh)
                    return b22 = b22.lastEffect = d22.lastEffect, b22 !== null && (b22.nextEffect = null), null;
                } else
                  2 * O$2() - d22.renderingStartTime > Ji && c22 !== 1073741824 && (b22.flags |= 64, f22 = true, Fi(d22, false), b22.lanes = 33554432);
              d22.isBackwards ? (g22.sibling = b22.child, b22.child = g22) : (c22 = d22.last, c22 !== null ? c22.sibling = g22 : b22.child = g22, d22.last = g22);
            }
            return d22.tail !== null ? (c22 = d22.tail, d22.rendering = c22, d22.tail = c22.sibling, d22.lastEffect = b22.lastEffect, d22.renderingStartTime = O$2(), c22.sibling = null, b22 = P$2.current, I$2(P$2, f22 ? b22 & 1 | 2 : b22 & 1), c22) : null;
          case 23:
          case 24:
            return Ki(), a22 !== null && a22.memoizedState !== null !== (b22.memoizedState !== null) && d22.mode !== "unstable-defer-without-hiding" && (b22.flags |= 4), null;
        }
        throw Error(y$1(156, b22.tag));
      }
      function Li(a22) {
        switch (a22.tag) {
          case 1:
            Ff(a22.type) && Gf();
            var b22 = a22.flags;
            return b22 & 4096 ? (a22.flags = b22 & -4097 | 64, a22) : null;
          case 3:
            fh();
            H$1(N$1);
            H$1(M$2);
            uh();
            b22 = a22.flags;
            if ((b22 & 64) !== 0)
              throw Error(y$1(285));
            a22.flags = b22 & -4097 | 64;
            return a22;
          case 5:
            return hh(a22), null;
          case 13:
            return H$1(P$2), b22 = a22.flags, b22 & 4096 ? (a22.flags = b22 & -4097 | 64, a22) : null;
          case 19:
            return H$1(P$2), null;
          case 4:
            return fh(), null;
          case 10:
            return rg(a22), null;
          case 23:
          case 24:
            return Ki(), null;
          default:
            return null;
        }
      }
      function Mi(a22, b22) {
        try {
          var c22 = "", d22 = b22;
          do
            c22 += Qa$1(d22), d22 = d22.return;
          while (d22);
          var e22 = c22;
        } catch (f22) {
          e22 = "\nError generating stack: " + f22.message + "\n" + f22.stack;
        }
        return { value: a22, source: b22, stack: e22 };
      }
      function Ni(a22, b22) {
        try {
          console.error(b22.value);
        } catch (c22) {
          setTimeout(function() {
            throw c22;
          });
        }
      }
      var Oi = typeof WeakMap === "function" ? WeakMap : Map;
      function Pi(a22, b22, c22) {
        c22 = zg(-1, c22);
        c22.tag = 3;
        c22.payload = { element: null };
        var d22 = b22.value;
        c22.callback = function() {
          Qi || (Qi = true, Ri = d22);
          Ni(a22, b22);
        };
        return c22;
      }
      function Si(a22, b22, c22) {
        c22 = zg(-1, c22);
        c22.tag = 3;
        var d22 = a22.type.getDerivedStateFromError;
        if (typeof d22 === "function") {
          var e22 = b22.value;
          c22.payload = function() {
            Ni(a22, b22);
            return d22(e22);
          };
        }
        var f22 = a22.stateNode;
        f22 !== null && typeof f22.componentDidCatch === "function" && (c22.callback = function() {
          typeof d22 !== "function" && (Ti === null ? Ti = /* @__PURE__ */ new Set([this]) : Ti.add(this), Ni(a22, b22));
          var c32 = b22.stack;
          this.componentDidCatch(b22.value, { componentStack: c32 !== null ? c32 : "" });
        });
        return c22;
      }
      var Ui = typeof WeakSet === "function" ? WeakSet : Set;
      function Vi(a22) {
        var b22 = a22.ref;
        if (b22 !== null)
          if (typeof b22 === "function")
            try {
              b22(null);
            } catch (c22) {
              Wi(a22, c22);
            }
          else
            b22.current = null;
      }
      function Xi(a22, b22) {
        switch (b22.tag) {
          case 0:
          case 11:
          case 15:
          case 22:
            return;
          case 1:
            if (b22.flags & 256 && a22 !== null) {
              var c22 = a22.memoizedProps, d22 = a22.memoizedState;
              a22 = b22.stateNode;
              b22 = a22.getSnapshotBeforeUpdate(b22.elementType === b22.type ? c22 : lg(b22.type, c22), d22);
              a22.__reactInternalSnapshotBeforeUpdate = b22;
            }
            return;
          case 3:
            b22.flags & 256 && qf(b22.stateNode.containerInfo);
            return;
          case 5:
          case 6:
          case 4:
          case 17:
            return;
        }
        throw Error(y$1(163));
      }
      function Yi(a22, b22, c22) {
        switch (c22.tag) {
          case 0:
          case 11:
          case 15:
          case 22:
            b22 = c22.updateQueue;
            b22 = b22 !== null ? b22.lastEffect : null;
            if (b22 !== null) {
              a22 = b22 = b22.next;
              do {
                if ((a22.tag & 3) === 3) {
                  var d22 = a22.create;
                  a22.destroy = d22();
                }
                a22 = a22.next;
              } while (a22 !== b22);
            }
            b22 = c22.updateQueue;
            b22 = b22 !== null ? b22.lastEffect : null;
            if (b22 !== null) {
              a22 = b22 = b22.next;
              do {
                var e22 = a22;
                d22 = e22.next;
                e22 = e22.tag;
                (e22 & 4) !== 0 && (e22 & 1) !== 0 && (Zi(c22, a22), $i(c22, a22));
                a22 = d22;
              } while (a22 !== b22);
            }
            return;
          case 1:
            a22 = c22.stateNode;
            c22.flags & 4 && (b22 === null ? a22.componentDidMount() : (d22 = c22.elementType === c22.type ? b22.memoizedProps : lg(c22.type, b22.memoizedProps), a22.componentDidUpdate(d22, b22.memoizedState, a22.__reactInternalSnapshotBeforeUpdate)));
            b22 = c22.updateQueue;
            b22 !== null && Eg(c22, b22, a22);
            return;
          case 3:
            b22 = c22.updateQueue;
            if (b22 !== null) {
              a22 = null;
              if (c22.child !== null)
                switch (c22.child.tag) {
                  case 5:
                    a22 = c22.child.stateNode;
                    break;
                  case 1:
                    a22 = c22.child.stateNode;
                }
              Eg(c22, b22, a22);
            }
            return;
          case 5:
            a22 = c22.stateNode;
            b22 === null && c22.flags & 4 && mf(c22.type, c22.memoizedProps) && a22.focus();
            return;
          case 6:
            return;
          case 4:
            return;
          case 12:
            return;
          case 13:
            c22.memoizedState === null && (c22 = c22.alternate, c22 !== null && (c22 = c22.memoizedState, c22 !== null && (c22 = c22.dehydrated, c22 !== null && Cc(c22))));
            return;
          case 19:
          case 17:
          case 20:
          case 21:
          case 23:
          case 24:
            return;
        }
        throw Error(y$1(163));
      }
      function aj(a22, b22) {
        for (var c22 = a22; ; ) {
          if (c22.tag === 5) {
            var d22 = c22.stateNode;
            if (b22)
              d22 = d22.style, typeof d22.setProperty === "function" ? d22.setProperty("display", "none", "important") : d22.display = "none";
            else {
              d22 = c22.stateNode;
              var e22 = c22.memoizedProps.style;
              e22 = e22 !== void 0 && e22 !== null && e22.hasOwnProperty("display") ? e22.display : null;
              d22.style.display = sb("display", e22);
            }
          } else if (c22.tag === 6)
            c22.stateNode.nodeValue = b22 ? "" : c22.memoizedProps;
          else if ((c22.tag !== 23 && c22.tag !== 24 || c22.memoizedState === null || c22 === a22) && c22.child !== null) {
            c22.child.return = c22;
            c22 = c22.child;
            continue;
          }
          if (c22 === a22)
            break;
          for (; c22.sibling === null; ) {
            if (c22.return === null || c22.return === a22)
              return;
            c22 = c22.return;
          }
          c22.sibling.return = c22.return;
          c22 = c22.sibling;
        }
      }
      function bj(a22, b22) {
        if (Mf && typeof Mf.onCommitFiberUnmount === "function")
          try {
            Mf.onCommitFiberUnmount(Lf, b22);
          } catch (f22) {
          }
        switch (b22.tag) {
          case 0:
          case 11:
          case 14:
          case 15:
          case 22:
            a22 = b22.updateQueue;
            if (a22 !== null && (a22 = a22.lastEffect, a22 !== null)) {
              var c22 = a22 = a22.next;
              do {
                var d22 = c22, e22 = d22.destroy;
                d22 = d22.tag;
                if (e22 !== void 0)
                  if ((d22 & 4) !== 0)
                    Zi(b22, c22);
                  else {
                    d22 = b22;
                    try {
                      e22();
                    } catch (f22) {
                      Wi(d22, f22);
                    }
                  }
                c22 = c22.next;
              } while (c22 !== a22);
            }
            break;
          case 1:
            Vi(b22);
            a22 = b22.stateNode;
            if (typeof a22.componentWillUnmount === "function")
              try {
                a22.props = b22.memoizedProps, a22.state = b22.memoizedState, a22.componentWillUnmount();
              } catch (f22) {
                Wi(b22, f22);
              }
            break;
          case 5:
            Vi(b22);
            break;
          case 4:
            cj(a22, b22);
        }
      }
      function dj(a22) {
        a22.alternate = null;
        a22.child = null;
        a22.dependencies = null;
        a22.firstEffect = null;
        a22.lastEffect = null;
        a22.memoizedProps = null;
        a22.memoizedState = null;
        a22.pendingProps = null;
        a22.return = null;
        a22.updateQueue = null;
      }
      function ej(a22) {
        return a22.tag === 5 || a22.tag === 3 || a22.tag === 4;
      }
      function fj(a22) {
        a: {
          for (var b22 = a22.return; b22 !== null; ) {
            if (ej(b22))
              break a;
            b22 = b22.return;
          }
          throw Error(y$1(160));
        }
        var c22 = b22;
        b22 = c22.stateNode;
        switch (c22.tag) {
          case 5:
            var d22 = false;
            break;
          case 3:
            b22 = b22.containerInfo;
            d22 = true;
            break;
          case 4:
            b22 = b22.containerInfo;
            d22 = true;
            break;
          default:
            throw Error(y$1(161));
        }
        c22.flags & 16 && (pb(b22, ""), c22.flags &= -17);
        a:
          b:
            for (c22 = a22; ; ) {
              for (; c22.sibling === null; ) {
                if (c22.return === null || ej(c22.return)) {
                  c22 = null;
                  break a;
                }
                c22 = c22.return;
              }
              c22.sibling.return = c22.return;
              for (c22 = c22.sibling; c22.tag !== 5 && c22.tag !== 6 && c22.tag !== 18; ) {
                if (c22.flags & 2)
                  continue b;
                if (c22.child === null || c22.tag === 4)
                  continue b;
                else
                  c22.child.return = c22, c22 = c22.child;
              }
              if (!(c22.flags & 2)) {
                c22 = c22.stateNode;
                break a;
              }
            }
        d22 ? gj(a22, c22, b22) : hj(a22, c22, b22);
      }
      function gj(a22, b22, c22) {
        var d22 = a22.tag, e22 = d22 === 5 || d22 === 6;
        if (e22)
          a22 = e22 ? a22.stateNode : a22.stateNode.instance, b22 ? c22.nodeType === 8 ? c22.parentNode.insertBefore(a22, b22) : c22.insertBefore(a22, b22) : (c22.nodeType === 8 ? (b22 = c22.parentNode, b22.insertBefore(a22, c22)) : (b22 = c22, b22.appendChild(a22)), c22 = c22._reactRootContainer, c22 !== null && c22 !== void 0 || b22.onclick !== null || (b22.onclick = jf));
        else if (d22 !== 4 && (a22 = a22.child, a22 !== null))
          for (gj(a22, b22, c22), a22 = a22.sibling; a22 !== null; )
            gj(a22, b22, c22), a22 = a22.sibling;
      }
      function hj(a22, b22, c22) {
        var d22 = a22.tag, e22 = d22 === 5 || d22 === 6;
        if (e22)
          a22 = e22 ? a22.stateNode : a22.stateNode.instance, b22 ? c22.insertBefore(a22, b22) : c22.appendChild(a22);
        else if (d22 !== 4 && (a22 = a22.child, a22 !== null))
          for (hj(a22, b22, c22), a22 = a22.sibling; a22 !== null; )
            hj(a22, b22, c22), a22 = a22.sibling;
      }
      function cj(a22, b22) {
        for (var c22 = b22, d22 = false, e22, f22; ; ) {
          if (!d22) {
            d22 = c22.return;
            a:
              for (; ; ) {
                if (d22 === null)
                  throw Error(y$1(160));
                e22 = d22.stateNode;
                switch (d22.tag) {
                  case 5:
                    f22 = false;
                    break a;
                  case 3:
                    e22 = e22.containerInfo;
                    f22 = true;
                    break a;
                  case 4:
                    e22 = e22.containerInfo;
                    f22 = true;
                    break a;
                }
                d22 = d22.return;
              }
            d22 = true;
          }
          if (c22.tag === 5 || c22.tag === 6) {
            a:
              for (var g22 = a22, h22 = c22, k22 = h22; ; )
                if (bj(g22, k22), k22.child !== null && k22.tag !== 4)
                  k22.child.return = k22, k22 = k22.child;
                else {
                  if (k22 === h22)
                    break a;
                  for (; k22.sibling === null; ) {
                    if (k22.return === null || k22.return === h22)
                      break a;
                    k22 = k22.return;
                  }
                  k22.sibling.return = k22.return;
                  k22 = k22.sibling;
                }
            f22 ? (g22 = e22, h22 = c22.stateNode, g22.nodeType === 8 ? g22.parentNode.removeChild(h22) : g22.removeChild(h22)) : e22.removeChild(c22.stateNode);
          } else if (c22.tag === 4) {
            if (c22.child !== null) {
              e22 = c22.stateNode.containerInfo;
              f22 = true;
              c22.child.return = c22;
              c22 = c22.child;
              continue;
            }
          } else if (bj(a22, c22), c22.child !== null) {
            c22.child.return = c22;
            c22 = c22.child;
            continue;
          }
          if (c22 === b22)
            break;
          for (; c22.sibling === null; ) {
            if (c22.return === null || c22.return === b22)
              return;
            c22 = c22.return;
            c22.tag === 4 && (d22 = false);
          }
          c22.sibling.return = c22.return;
          c22 = c22.sibling;
        }
      }
      function ij(a22, b22) {
        switch (b22.tag) {
          case 0:
          case 11:
          case 14:
          case 15:
          case 22:
            var c22 = b22.updateQueue;
            c22 = c22 !== null ? c22.lastEffect : null;
            if (c22 !== null) {
              var d22 = c22 = c22.next;
              do
                (d22.tag & 3) === 3 && (a22 = d22.destroy, d22.destroy = void 0, a22 !== void 0 && a22()), d22 = d22.next;
              while (d22 !== c22);
            }
            return;
          case 1:
            return;
          case 5:
            c22 = b22.stateNode;
            if (c22 != null) {
              d22 = b22.memoizedProps;
              var e22 = a22 !== null ? a22.memoizedProps : d22;
              a22 = b22.type;
              var f22 = b22.updateQueue;
              b22.updateQueue = null;
              if (f22 !== null) {
                c22[xf] = d22;
                a22 === "input" && d22.type === "radio" && d22.name != null && $a$1(c22, d22);
                wb(a22, e22);
                b22 = wb(a22, d22);
                for (e22 = 0; e22 < f22.length; e22 += 2) {
                  var g22 = f22[e22], h22 = f22[e22 + 1];
                  g22 === "style" ? tb(c22, h22) : g22 === "dangerouslySetInnerHTML" ? ob(c22, h22) : g22 === "children" ? pb(c22, h22) : qa$1(c22, g22, h22, b22);
                }
                switch (a22) {
                  case "input":
                    ab$1(c22, d22);
                    break;
                  case "textarea":
                    ib(c22, d22);
                    break;
                  case "select":
                    a22 = c22._wrapperState.wasMultiple, c22._wrapperState.wasMultiple = !!d22.multiple, f22 = d22.value, f22 != null ? fb(c22, !!d22.multiple, f22, false) : a22 !== !!d22.multiple && (d22.defaultValue != null ? fb(c22, !!d22.multiple, d22.defaultValue, true) : fb(c22, !!d22.multiple, d22.multiple ? [] : "", false));
                }
              }
            }
            return;
          case 6:
            if (b22.stateNode === null)
              throw Error(y$1(162));
            b22.stateNode.nodeValue = b22.memoizedProps;
            return;
          case 3:
            c22 = b22.stateNode;
            c22.hydrate && (c22.hydrate = false, Cc(c22.containerInfo));
            return;
          case 12:
            return;
          case 13:
            b22.memoizedState !== null && (jj = O$2(), aj(b22.child, true));
            kj(b22);
            return;
          case 19:
            kj(b22);
            return;
          case 17:
            return;
          case 23:
          case 24:
            aj(b22, b22.memoizedState !== null);
            return;
        }
        throw Error(y$1(163));
      }
      function kj(a22) {
        var b22 = a22.updateQueue;
        if (b22 !== null) {
          a22.updateQueue = null;
          var c22 = a22.stateNode;
          c22 === null && (c22 = a22.stateNode = new Ui());
          b22.forEach(function(b32) {
            var d22 = lj.bind(null, a22, b32);
            c22.has(b32) || (c22.add(b32), b32.then(d22, d22));
          });
        }
      }
      function mj(a22, b22) {
        return a22 !== null && (a22 = a22.memoizedState, a22 === null || a22.dehydrated !== null) ? (b22 = b22.memoizedState, b22 !== null && b22.dehydrated === null) : false;
      }
      var nj = Math.ceil, oj = ra$1.ReactCurrentDispatcher, pj = ra$1.ReactCurrentOwner, X$2 = 0, U$2 = null, Y$1 = null, W$2 = 0, qj = 0, rj = Bf(0), V$2 = 0, sj = null, tj = 0, Dg = 0, Hi = 0, uj = 0, vj = null, jj = 0, Ji = Infinity;
      function wj() {
        Ji = O$2() + 500;
      }
      var Z$2 = null, Qi = false, Ri = null, Ti = null, xj = false, yj = null, zj = 90, Aj = [], Bj = [], Cj = null, Dj = 0, Ej = null, Fj = -1, Gj = 0, Hj = 0, Ij = null, Jj = false;
      function Hg() {
        return (X$2 & 48) !== 0 ? O$2() : Fj !== -1 ? Fj : Fj = O$2();
      }
      function Ig(a22) {
        a22 = a22.mode;
        if ((a22 & 2) === 0)
          return 1;
        if ((a22 & 4) === 0)
          return eg() === 99 ? 1 : 2;
        Gj === 0 && (Gj = tj);
        if (kg.transition !== 0) {
          Hj !== 0 && (Hj = vj !== null ? vj.pendingLanes : 0);
          a22 = Gj;
          var b22 = 4186112 & ~Hj;
          b22 &= -b22;
          b22 === 0 && (a22 = 4186112 & ~a22, b22 = a22 & -a22, b22 === 0 && (b22 = 8192));
          return b22;
        }
        a22 = eg();
        (X$2 & 4) !== 0 && a22 === 98 ? a22 = Xc(12, Gj) : (a22 = Sc(a22), a22 = Xc(a22, Gj));
        return a22;
      }
      function Jg(a22, b22, c22) {
        if (50 < Dj)
          throw Dj = 0, Ej = null, Error(y$1(185));
        a22 = Kj(a22, b22);
        if (a22 === null)
          return null;
        $c(a22, b22, c22);
        a22 === U$2 && (Hi |= b22, V$2 === 4 && Ii(a22, W$2));
        var d22 = eg();
        b22 === 1 ? (X$2 & 8) !== 0 && (X$2 & 48) === 0 ? Lj(a22) : (Mj(a22, c22), X$2 === 0 && (wj(), ig())) : ((X$2 & 4) === 0 || d22 !== 98 && d22 !== 99 || (Cj === null ? Cj = /* @__PURE__ */ new Set([a22]) : Cj.add(a22)), Mj(a22, c22));
        vj = a22;
      }
      function Kj(a22, b22) {
        a22.lanes |= b22;
        var c22 = a22.alternate;
        c22 !== null && (c22.lanes |= b22);
        c22 = a22;
        for (a22 = a22.return; a22 !== null; )
          a22.childLanes |= b22, c22 = a22.alternate, c22 !== null && (c22.childLanes |= b22), c22 = a22, a22 = a22.return;
        return c22.tag === 3 ? c22.stateNode : null;
      }
      function Mj(a22, b22) {
        for (var c22 = a22.callbackNode, d22 = a22.suspendedLanes, e22 = a22.pingedLanes, f22 = a22.expirationTimes, g22 = a22.pendingLanes; 0 < g22; ) {
          var h22 = 31 - Vc(g22), k22 = 1 << h22, l22 = f22[h22];
          if (l22 === -1) {
            if ((k22 & d22) === 0 || (k22 & e22) !== 0) {
              l22 = b22;
              Rc(k22);
              var n22 = F$2;
              f22[h22] = 10 <= n22 ? l22 + 250 : 6 <= n22 ? l22 + 5e3 : -1;
            }
          } else
            l22 <= b22 && (a22.expiredLanes |= k22);
          g22 &= ~k22;
        }
        d22 = Uc(a22, a22 === U$2 ? W$2 : 0);
        b22 = F$2;
        if (d22 === 0)
          c22 !== null && (c22 !== Zf && Pf(c22), a22.callbackNode = null, a22.callbackPriority = 0);
        else {
          if (c22 !== null) {
            if (a22.callbackPriority === b22)
              return;
            c22 !== Zf && Pf(c22);
          }
          b22 === 15 ? (c22 = Lj.bind(null, a22), ag === null ? (ag = [c22], bg = Of(Uf, jg)) : ag.push(c22), c22 = Zf) : b22 === 14 ? c22 = hg(99, Lj.bind(null, a22)) : (c22 = Tc(b22), c22 = hg(c22, Nj.bind(null, a22)));
          a22.callbackPriority = b22;
          a22.callbackNode = c22;
        }
      }
      function Nj(a22) {
        Fj = -1;
        Hj = Gj = 0;
        if ((X$2 & 48) !== 0)
          throw Error(y$1(327));
        var b22 = a22.callbackNode;
        if (Oj() && a22.callbackNode !== b22)
          return null;
        var c22 = Uc(a22, a22 === U$2 ? W$2 : 0);
        if (c22 === 0)
          return null;
        var d22 = c22;
        var e22 = X$2;
        X$2 |= 16;
        var f22 = Pj();
        if (U$2 !== a22 || W$2 !== d22)
          wj(), Qj(a22, d22);
        do
          try {
            Rj();
            break;
          } catch (h22) {
            Sj(a22, h22);
          }
        while (1);
        qg();
        oj.current = f22;
        X$2 = e22;
        Y$1 !== null ? d22 = 0 : (U$2 = null, W$2 = 0, d22 = V$2);
        if ((tj & Hi) !== 0)
          Qj(a22, 0);
        else if (d22 !== 0) {
          d22 === 2 && (X$2 |= 64, a22.hydrate && (a22.hydrate = false, qf(a22.containerInfo)), c22 = Wc(a22), c22 !== 0 && (d22 = Tj(a22, c22)));
          if (d22 === 1)
            throw b22 = sj, Qj(a22, 0), Ii(a22, c22), Mj(a22, O$2()), b22;
          a22.finishedWork = a22.current.alternate;
          a22.finishedLanes = c22;
          switch (d22) {
            case 0:
            case 1:
              throw Error(y$1(345));
            case 2:
              Uj(a22);
              break;
            case 3:
              Ii(a22, c22);
              if ((c22 & 62914560) === c22 && (d22 = jj + 500 - O$2(), 10 < d22)) {
                if (Uc(a22, 0) !== 0)
                  break;
                e22 = a22.suspendedLanes;
                if ((e22 & c22) !== c22) {
                  Hg();
                  a22.pingedLanes |= a22.suspendedLanes & e22;
                  break;
                }
                a22.timeoutHandle = of(Uj.bind(null, a22), d22);
                break;
              }
              Uj(a22);
              break;
            case 4:
              Ii(a22, c22);
              if ((c22 & 4186112) === c22)
                break;
              d22 = a22.eventTimes;
              for (e22 = -1; 0 < c22; ) {
                var g22 = 31 - Vc(c22);
                f22 = 1 << g22;
                g22 = d22[g22];
                g22 > e22 && (e22 = g22);
                c22 &= ~f22;
              }
              c22 = e22;
              c22 = O$2() - c22;
              c22 = (120 > c22 ? 120 : 480 > c22 ? 480 : 1080 > c22 ? 1080 : 1920 > c22 ? 1920 : 3e3 > c22 ? 3e3 : 4320 > c22 ? 4320 : 1960 * nj(c22 / 1960)) - c22;
              if (10 < c22) {
                a22.timeoutHandle = of(Uj.bind(null, a22), c22);
                break;
              }
              Uj(a22);
              break;
            case 5:
              Uj(a22);
              break;
            default:
              throw Error(y$1(329));
          }
        }
        Mj(a22, O$2());
        return a22.callbackNode === b22 ? Nj.bind(null, a22) : null;
      }
      function Ii(a22, b22) {
        b22 &= ~uj;
        b22 &= ~Hi;
        a22.suspendedLanes |= b22;
        a22.pingedLanes &= ~b22;
        for (a22 = a22.expirationTimes; 0 < b22; ) {
          var c22 = 31 - Vc(b22), d22 = 1 << c22;
          a22[c22] = -1;
          b22 &= ~d22;
        }
      }
      function Lj(a22) {
        if ((X$2 & 48) !== 0)
          throw Error(y$1(327));
        Oj();
        if (a22 === U$2 && (a22.expiredLanes & W$2) !== 0) {
          var b22 = W$2;
          var c22 = Tj(a22, b22);
          (tj & Hi) !== 0 && (b22 = Uc(a22, b22), c22 = Tj(a22, b22));
        } else
          b22 = Uc(a22, 0), c22 = Tj(a22, b22);
        a22.tag !== 0 && c22 === 2 && (X$2 |= 64, a22.hydrate && (a22.hydrate = false, qf(a22.containerInfo)), b22 = Wc(a22), b22 !== 0 && (c22 = Tj(a22, b22)));
        if (c22 === 1)
          throw c22 = sj, Qj(a22, 0), Ii(a22, b22), Mj(a22, O$2()), c22;
        a22.finishedWork = a22.current.alternate;
        a22.finishedLanes = b22;
        Uj(a22);
        Mj(a22, O$2());
        return null;
      }
      function Vj() {
        if (Cj !== null) {
          var a22 = Cj;
          Cj = null;
          a22.forEach(function(a32) {
            a32.expiredLanes |= 24 & a32.pendingLanes;
            Mj(a32, O$2());
          });
        }
        ig();
      }
      function Wj(a22, b22) {
        var c22 = X$2;
        X$2 |= 1;
        try {
          return a22(b22);
        } finally {
          X$2 = c22, X$2 === 0 && (wj(), ig());
        }
      }
      function Xj(a22, b22) {
        var c22 = X$2;
        X$2 &= -2;
        X$2 |= 8;
        try {
          return a22(b22);
        } finally {
          X$2 = c22, X$2 === 0 && (wj(), ig());
        }
      }
      function ni(a22, b22) {
        I$2(rj, qj);
        qj |= b22;
        tj |= b22;
      }
      function Ki() {
        qj = rj.current;
        H$1(rj);
      }
      function Qj(a22, b22) {
        a22.finishedWork = null;
        a22.finishedLanes = 0;
        var c22 = a22.timeoutHandle;
        c22 !== -1 && (a22.timeoutHandle = -1, pf(c22));
        if (Y$1 !== null)
          for (c22 = Y$1.return; c22 !== null; ) {
            var d22 = c22;
            switch (d22.tag) {
              case 1:
                d22 = d22.type.childContextTypes;
                d22 !== null && d22 !== void 0 && Gf();
                break;
              case 3:
                fh();
                H$1(N$1);
                H$1(M$2);
                uh();
                break;
              case 5:
                hh(d22);
                break;
              case 4:
                fh();
                break;
              case 13:
                H$1(P$2);
                break;
              case 19:
                H$1(P$2);
                break;
              case 10:
                rg(d22);
                break;
              case 23:
              case 24:
                Ki();
            }
            c22 = c22.return;
          }
        U$2 = a22;
        Y$1 = Tg(a22.current, null);
        W$2 = qj = tj = b22;
        V$2 = 0;
        sj = null;
        uj = Hi = Dg = 0;
      }
      function Sj(a22, b22) {
        do {
          var c22 = Y$1;
          try {
            qg();
            vh.current = Gh;
            if (yh) {
              for (var d22 = R$2.memoizedState; d22 !== null; ) {
                var e22 = d22.queue;
                e22 !== null && (e22.pending = null);
                d22 = d22.next;
              }
              yh = false;
            }
            xh = 0;
            T$1 = S$2 = R$2 = null;
            zh = false;
            pj.current = null;
            if (c22 === null || c22.return === null) {
              V$2 = 1;
              sj = b22;
              Y$1 = null;
              break;
            }
            a: {
              var f22 = a22, g22 = c22.return, h22 = c22, k22 = b22;
              b22 = W$2;
              h22.flags |= 2048;
              h22.firstEffect = h22.lastEffect = null;
              if (k22 !== null && typeof k22 === "object" && typeof k22.then === "function") {
                var l22 = k22;
                if ((h22.mode & 2) === 0) {
                  var n22 = h22.alternate;
                  n22 ? (h22.updateQueue = n22.updateQueue, h22.memoizedState = n22.memoizedState, h22.lanes = n22.lanes) : (h22.updateQueue = null, h22.memoizedState = null);
                }
                var A22 = (P$2.current & 1) !== 0, p22 = g22;
                do {
                  var C22;
                  if (C22 = p22.tag === 13) {
                    var x22 = p22.memoizedState;
                    if (x22 !== null)
                      C22 = x22.dehydrated !== null ? true : false;
                    else {
                      var w22 = p22.memoizedProps;
                      C22 = w22.fallback === void 0 ? false : w22.unstable_avoidThisFallback !== true ? true : A22 ? false : true;
                    }
                  }
                  if (C22) {
                    var z22 = p22.updateQueue;
                    if (z22 === null) {
                      var u22 = /* @__PURE__ */ new Set();
                      u22.add(l22);
                      p22.updateQueue = u22;
                    } else
                      z22.add(l22);
                    if ((p22.mode & 2) === 0) {
                      p22.flags |= 64;
                      h22.flags |= 16384;
                      h22.flags &= -2981;
                      if (h22.tag === 1)
                        if (h22.alternate === null)
                          h22.tag = 17;
                        else {
                          var t22 = zg(-1, 1);
                          t22.tag = 2;
                          Ag(h22, t22);
                        }
                      h22.lanes |= 1;
                      break a;
                    }
                    k22 = void 0;
                    h22 = b22;
                    var q22 = f22.pingCache;
                    q22 === null ? (q22 = f22.pingCache = new Oi(), k22 = /* @__PURE__ */ new Set(), q22.set(l22, k22)) : (k22 = q22.get(l22), k22 === void 0 && (k22 = /* @__PURE__ */ new Set(), q22.set(l22, k22)));
                    if (!k22.has(h22)) {
                      k22.add(h22);
                      var v22 = Yj.bind(null, f22, l22, h22);
                      l22.then(v22, v22);
                    }
                    p22.flags |= 4096;
                    p22.lanes = b22;
                    break a;
                  }
                  p22 = p22.return;
                } while (p22 !== null);
                k22 = Error((Ra$1(h22.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
              }
              V$2 !== 5 && (V$2 = 2);
              k22 = Mi(k22, h22);
              p22 = g22;
              do {
                switch (p22.tag) {
                  case 3:
                    f22 = k22;
                    p22.flags |= 4096;
                    b22 &= -b22;
                    p22.lanes |= b22;
                    var J22 = Pi(p22, f22, b22);
                    Bg(p22, J22);
                    break a;
                  case 1:
                    f22 = k22;
                    var K22 = p22.type, Q22 = p22.stateNode;
                    if ((p22.flags & 64) === 0 && (typeof K22.getDerivedStateFromError === "function" || Q22 !== null && typeof Q22.componentDidCatch === "function" && (Ti === null || !Ti.has(Q22)))) {
                      p22.flags |= 4096;
                      b22 &= -b22;
                      p22.lanes |= b22;
                      var L22 = Si(p22, f22, b22);
                      Bg(p22, L22);
                      break a;
                    }
                }
                p22 = p22.return;
              } while (p22 !== null);
            }
            Zj(c22);
          } catch (va2) {
            b22 = va2;
            Y$1 === c22 && c22 !== null && (Y$1 = c22 = c22.return);
            continue;
          }
          break;
        } while (1);
      }
      function Pj() {
        var a22 = oj.current;
        oj.current = Gh;
        return a22 === null ? Gh : a22;
      }
      function Tj(a22, b22) {
        var c22 = X$2;
        X$2 |= 16;
        var d22 = Pj();
        U$2 === a22 && W$2 === b22 || Qj(a22, b22);
        do
          try {
            ak();
            break;
          } catch (e22) {
            Sj(a22, e22);
          }
        while (1);
        qg();
        X$2 = c22;
        oj.current = d22;
        if (Y$1 !== null)
          throw Error(y$1(261));
        U$2 = null;
        W$2 = 0;
        return V$2;
      }
      function ak() {
        for (; Y$1 !== null; )
          bk(Y$1);
      }
      function Rj() {
        for (; Y$1 !== null && !Qf(); )
          bk(Y$1);
      }
      function bk(a22) {
        var b22 = ck(a22.alternate, a22, qj);
        a22.memoizedProps = a22.pendingProps;
        b22 === null ? Zj(a22) : Y$1 = b22;
        pj.current = null;
      }
      function Zj(a22) {
        var b22 = a22;
        do {
          var c22 = b22.alternate;
          a22 = b22.return;
          if ((b22.flags & 2048) === 0) {
            c22 = Gi(c22, b22, qj);
            if (c22 !== null) {
              Y$1 = c22;
              return;
            }
            c22 = b22;
            if (c22.tag !== 24 && c22.tag !== 23 || c22.memoizedState === null || (qj & 1073741824) !== 0 || (c22.mode & 4) === 0) {
              for (var d22 = 0, e22 = c22.child; e22 !== null; )
                d22 |= e22.lanes | e22.childLanes, e22 = e22.sibling;
              c22.childLanes = d22;
            }
            a22 !== null && (a22.flags & 2048) === 0 && (a22.firstEffect === null && (a22.firstEffect = b22.firstEffect), b22.lastEffect !== null && (a22.lastEffect !== null && (a22.lastEffect.nextEffect = b22.firstEffect), a22.lastEffect = b22.lastEffect), 1 < b22.flags && (a22.lastEffect !== null ? a22.lastEffect.nextEffect = b22 : a22.firstEffect = b22, a22.lastEffect = b22));
          } else {
            c22 = Li(b22);
            if (c22 !== null) {
              c22.flags &= 2047;
              Y$1 = c22;
              return;
            }
            a22 !== null && (a22.firstEffect = a22.lastEffect = null, a22.flags |= 2048);
          }
          b22 = b22.sibling;
          if (b22 !== null) {
            Y$1 = b22;
            return;
          }
          Y$1 = b22 = a22;
        } while (b22 !== null);
        V$2 === 0 && (V$2 = 5);
      }
      function Uj(a22) {
        var b22 = eg();
        gg(99, dk.bind(null, a22, b22));
        return null;
      }
      function dk(a22, b22) {
        do
          Oj();
        while (yj !== null);
        if ((X$2 & 48) !== 0)
          throw Error(y$1(327));
        var c22 = a22.finishedWork;
        if (c22 === null)
          return null;
        a22.finishedWork = null;
        a22.finishedLanes = 0;
        if (c22 === a22.current)
          throw Error(y$1(177));
        a22.callbackNode = null;
        var d22 = c22.lanes | c22.childLanes, e22 = d22, f22 = a22.pendingLanes & ~e22;
        a22.pendingLanes = e22;
        a22.suspendedLanes = 0;
        a22.pingedLanes = 0;
        a22.expiredLanes &= e22;
        a22.mutableReadLanes &= e22;
        a22.entangledLanes &= e22;
        e22 = a22.entanglements;
        for (var g22 = a22.eventTimes, h22 = a22.expirationTimes; 0 < f22; ) {
          var k22 = 31 - Vc(f22), l22 = 1 << k22;
          e22[k22] = 0;
          g22[k22] = -1;
          h22[k22] = -1;
          f22 &= ~l22;
        }
        Cj !== null && (d22 & 24) === 0 && Cj.has(a22) && Cj.delete(a22);
        a22 === U$2 && (Y$1 = U$2 = null, W$2 = 0);
        1 < c22.flags ? c22.lastEffect !== null ? (c22.lastEffect.nextEffect = c22, d22 = c22.firstEffect) : d22 = c22 : d22 = c22.firstEffect;
        if (d22 !== null) {
          e22 = X$2;
          X$2 |= 32;
          pj.current = null;
          kf = fd;
          g22 = Ne6();
          if (Oe2(g22)) {
            if ("selectionStart" in g22)
              h22 = { start: g22.selectionStart, end: g22.selectionEnd };
            else
              a:
                if (h22 = (h22 = g22.ownerDocument) && h22.defaultView || window, (l22 = h22.getSelection && h22.getSelection()) && l22.rangeCount !== 0) {
                  h22 = l22.anchorNode;
                  f22 = l22.anchorOffset;
                  k22 = l22.focusNode;
                  l22 = l22.focusOffset;
                  try {
                    h22.nodeType, k22.nodeType;
                  } catch (va2) {
                    h22 = null;
                    break a;
                  }
                  var n22 = 0, A22 = -1, p22 = -1, C22 = 0, x22 = 0, w22 = g22, z22 = null;
                  b:
                    for (; ; ) {
                      for (var u22; ; ) {
                        w22 !== h22 || f22 !== 0 && w22.nodeType !== 3 || (A22 = n22 + f22);
                        w22 !== k22 || l22 !== 0 && w22.nodeType !== 3 || (p22 = n22 + l22);
                        w22.nodeType === 3 && (n22 += w22.nodeValue.length);
                        if ((u22 = w22.firstChild) === null)
                          break;
                        z22 = w22;
                        w22 = u22;
                      }
                      for (; ; ) {
                        if (w22 === g22)
                          break b;
                        z22 === h22 && ++C22 === f22 && (A22 = n22);
                        z22 === k22 && ++x22 === l22 && (p22 = n22);
                        if ((u22 = w22.nextSibling) !== null)
                          break;
                        w22 = z22;
                        z22 = w22.parentNode;
                      }
                      w22 = u22;
                    }
                  h22 = A22 === -1 || p22 === -1 ? null : { start: A22, end: p22 };
                } else
                  h22 = null;
            h22 = h22 || { start: 0, end: 0 };
          } else
            h22 = null;
          lf = { focusedElem: g22, selectionRange: h22 };
          fd = false;
          Ij = null;
          Jj = false;
          Z$2 = d22;
          do
            try {
              ek();
            } catch (va2) {
              if (Z$2 === null)
                throw Error(y$1(330));
              Wi(Z$2, va2);
              Z$2 = Z$2.nextEffect;
            }
          while (Z$2 !== null);
          Ij = null;
          Z$2 = d22;
          do
            try {
              for (g22 = a22; Z$2 !== null; ) {
                var t22 = Z$2.flags;
                t22 & 16 && pb(Z$2.stateNode, "");
                if (t22 & 128) {
                  var q22 = Z$2.alternate;
                  if (q22 !== null) {
                    var v22 = q22.ref;
                    v22 !== null && (typeof v22 === "function" ? v22(null) : v22.current = null);
                  }
                }
                switch (t22 & 1038) {
                  case 2:
                    fj(Z$2);
                    Z$2.flags &= -3;
                    break;
                  case 6:
                    fj(Z$2);
                    Z$2.flags &= -3;
                    ij(Z$2.alternate, Z$2);
                    break;
                  case 1024:
                    Z$2.flags &= -1025;
                    break;
                  case 1028:
                    Z$2.flags &= -1025;
                    ij(Z$2.alternate, Z$2);
                    break;
                  case 4:
                    ij(Z$2.alternate, Z$2);
                    break;
                  case 8:
                    h22 = Z$2;
                    cj(g22, h22);
                    var J22 = h22.alternate;
                    dj(h22);
                    J22 !== null && dj(J22);
                }
                Z$2 = Z$2.nextEffect;
              }
            } catch (va2) {
              if (Z$2 === null)
                throw Error(y$1(330));
              Wi(Z$2, va2);
              Z$2 = Z$2.nextEffect;
            }
          while (Z$2 !== null);
          v22 = lf;
          q22 = Ne6();
          t22 = v22.focusedElem;
          g22 = v22.selectionRange;
          if (q22 !== t22 && t22 && t22.ownerDocument && Me5(t22.ownerDocument.documentElement, t22)) {
            g22 !== null && Oe2(t22) && (q22 = g22.start, v22 = g22.end, v22 === void 0 && (v22 = q22), "selectionStart" in t22 ? (t22.selectionStart = q22, t22.selectionEnd = Math.min(v22, t22.value.length)) : (v22 = (q22 = t22.ownerDocument || document) && q22.defaultView || window, v22.getSelection && (v22 = v22.getSelection(), h22 = t22.textContent.length, J22 = Math.min(g22.start, h22), g22 = g22.end === void 0 ? J22 : Math.min(g22.end, h22), !v22.extend && J22 > g22 && (h22 = g22, g22 = J22, J22 = h22), h22 = Le5(t22, J22), f22 = Le5(t22, g22), h22 && f22 && (v22.rangeCount !== 1 || v22.anchorNode !== h22.node || v22.anchorOffset !== h22.offset || v22.focusNode !== f22.node || v22.focusOffset !== f22.offset) && (q22 = q22.createRange(), q22.setStart(h22.node, h22.offset), v22.removeAllRanges(), J22 > g22 ? (v22.addRange(q22), v22.extend(f22.node, f22.offset)) : (q22.setEnd(f22.node, f22.offset), v22.addRange(q22))))));
            q22 = [];
            for (v22 = t22; v22 = v22.parentNode; )
              v22.nodeType === 1 && q22.push({ element: v22, left: v22.scrollLeft, top: v22.scrollTop });
            typeof t22.focus === "function" && t22.focus();
            for (t22 = 0; t22 < q22.length; t22++)
              v22 = q22[t22], v22.element.scrollLeft = v22.left, v22.element.scrollTop = v22.top;
          }
          fd = !!kf;
          lf = kf = null;
          a22.current = c22;
          Z$2 = d22;
          do
            try {
              for (t22 = a22; Z$2 !== null; ) {
                var K22 = Z$2.flags;
                K22 & 36 && Yi(t22, Z$2.alternate, Z$2);
                if (K22 & 128) {
                  q22 = void 0;
                  var Q22 = Z$2.ref;
                  if (Q22 !== null) {
                    var L22 = Z$2.stateNode;
                    switch (Z$2.tag) {
                      case 5:
                        q22 = L22;
                        break;
                      default:
                        q22 = L22;
                    }
                    typeof Q22 === "function" ? Q22(q22) : Q22.current = q22;
                  }
                }
                Z$2 = Z$2.nextEffect;
              }
            } catch (va2) {
              if (Z$2 === null)
                throw Error(y$1(330));
              Wi(Z$2, va2);
              Z$2 = Z$2.nextEffect;
            }
          while (Z$2 !== null);
          Z$2 = null;
          $f();
          X$2 = e22;
        } else
          a22.current = c22;
        if (xj)
          xj = false, yj = a22, zj = b22;
        else
          for (Z$2 = d22; Z$2 !== null; )
            b22 = Z$2.nextEffect, Z$2.nextEffect = null, Z$2.flags & 8 && (K22 = Z$2, K22.sibling = null, K22.stateNode = null), Z$2 = b22;
        d22 = a22.pendingLanes;
        d22 === 0 && (Ti = null);
        d22 === 1 ? a22 === Ej ? Dj++ : (Dj = 0, Ej = a22) : Dj = 0;
        c22 = c22.stateNode;
        if (Mf && typeof Mf.onCommitFiberRoot === "function")
          try {
            Mf.onCommitFiberRoot(Lf, c22, void 0, (c22.current.flags & 64) === 64);
          } catch (va2) {
          }
        Mj(a22, O$2());
        if (Qi)
          throw Qi = false, a22 = Ri, Ri = null, a22;
        if ((X$2 & 8) !== 0)
          return null;
        ig();
        return null;
      }
      function ek() {
        for (; Z$2 !== null; ) {
          var a22 = Z$2.alternate;
          Jj || Ij === null || ((Z$2.flags & 8) !== 0 ? dc(Z$2, Ij) && (Jj = true) : Z$2.tag === 13 && mj(a22, Z$2) && dc(Z$2, Ij) && (Jj = true));
          var b22 = Z$2.flags;
          (b22 & 256) !== 0 && Xi(a22, Z$2);
          (b22 & 512) === 0 || xj || (xj = true, hg(97, function() {
            Oj();
            return null;
          }));
          Z$2 = Z$2.nextEffect;
        }
      }
      function Oj() {
        if (zj !== 90) {
          var a22 = 97 < zj ? 97 : zj;
          zj = 90;
          return gg(a22, fk);
        }
        return false;
      }
      function $i(a22, b22) {
        Aj.push(b22, a22);
        xj || (xj = true, hg(97, function() {
          Oj();
          return null;
        }));
      }
      function Zi(a22, b22) {
        Bj.push(b22, a22);
        xj || (xj = true, hg(97, function() {
          Oj();
          return null;
        }));
      }
      function fk() {
        if (yj === null)
          return false;
        var a22 = yj;
        yj = null;
        if ((X$2 & 48) !== 0)
          throw Error(y$1(331));
        var b22 = X$2;
        X$2 |= 32;
        var c22 = Bj;
        Bj = [];
        for (var d22 = 0; d22 < c22.length; d22 += 2) {
          var e22 = c22[d22], f22 = c22[d22 + 1], g22 = e22.destroy;
          e22.destroy = void 0;
          if (typeof g22 === "function")
            try {
              g22();
            } catch (k22) {
              if (f22 === null)
                throw Error(y$1(330));
              Wi(f22, k22);
            }
        }
        c22 = Aj;
        Aj = [];
        for (d22 = 0; d22 < c22.length; d22 += 2) {
          e22 = c22[d22];
          f22 = c22[d22 + 1];
          try {
            var h22 = e22.create;
            e22.destroy = h22();
          } catch (k22) {
            if (f22 === null)
              throw Error(y$1(330));
            Wi(f22, k22);
          }
        }
        for (h22 = a22.current.firstEffect; h22 !== null; )
          a22 = h22.nextEffect, h22.nextEffect = null, h22.flags & 8 && (h22.sibling = null, h22.stateNode = null), h22 = a22;
        X$2 = b22;
        ig();
        return true;
      }
      function gk(a22, b22, c22) {
        b22 = Mi(c22, b22);
        b22 = Pi(a22, b22, 1);
        Ag(a22, b22);
        b22 = Hg();
        a22 = Kj(a22, 1);
        a22 !== null && ($c(a22, 1, b22), Mj(a22, b22));
      }
      function Wi(a22, b22) {
        if (a22.tag === 3)
          gk(a22, a22, b22);
        else
          for (var c22 = a22.return; c22 !== null; ) {
            if (c22.tag === 3) {
              gk(c22, a22, b22);
              break;
            } else if (c22.tag === 1) {
              var d22 = c22.stateNode;
              if (typeof c22.type.getDerivedStateFromError === "function" || typeof d22.componentDidCatch === "function" && (Ti === null || !Ti.has(d22))) {
                a22 = Mi(b22, a22);
                var e22 = Si(c22, a22, 1);
                Ag(c22, e22);
                e22 = Hg();
                c22 = Kj(c22, 1);
                if (c22 !== null)
                  $c(c22, 1, e22), Mj(c22, e22);
                else if (typeof d22.componentDidCatch === "function" && (Ti === null || !Ti.has(d22)))
                  try {
                    d22.componentDidCatch(b22, a22);
                  } catch (f22) {
                  }
                break;
              }
            }
            c22 = c22.return;
          }
      }
      function Yj(a22, b22, c22) {
        var d22 = a22.pingCache;
        d22 !== null && d22.delete(b22);
        b22 = Hg();
        a22.pingedLanes |= a22.suspendedLanes & c22;
        U$2 === a22 && (W$2 & c22) === c22 && (V$2 === 4 || V$2 === 3 && (W$2 & 62914560) === W$2 && 500 > O$2() - jj ? Qj(a22, 0) : uj |= c22);
        Mj(a22, b22);
      }
      function lj(a22, b22) {
        var c22 = a22.stateNode;
        c22 !== null && c22.delete(b22);
        b22 = 0;
        b22 === 0 && (b22 = a22.mode, (b22 & 2) === 0 ? b22 = 1 : (b22 & 4) === 0 ? b22 = eg() === 99 ? 1 : 2 : (Gj === 0 && (Gj = tj), b22 = Yc(62914560 & ~Gj), b22 === 0 && (b22 = 4194304)));
        c22 = Hg();
        a22 = Kj(a22, b22);
        a22 !== null && ($c(a22, b22, c22), Mj(a22, c22));
      }
      var ck;
      ck = function(a22, b22, c22) {
        var d22 = b22.lanes;
        if (a22 !== null)
          if (a22.memoizedProps !== b22.pendingProps || N$1.current)
            ug = true;
          else if ((c22 & d22) !== 0)
            ug = (a22.flags & 16384) !== 0 ? true : false;
          else {
            ug = false;
            switch (b22.tag) {
              case 3:
                ri(b22);
                sh();
                break;
              case 5:
                gh(b22);
                break;
              case 1:
                Ff(b22.type) && Jf(b22);
                break;
              case 4:
                eh(b22, b22.stateNode.containerInfo);
                break;
              case 10:
                d22 = b22.memoizedProps.value;
                var e22 = b22.type._context;
                I$2(mg, e22._currentValue);
                e22._currentValue = d22;
                break;
              case 13:
                if (b22.memoizedState !== null) {
                  if ((c22 & b22.child.childLanes) !== 0)
                    return ti(a22, b22, c22);
                  I$2(P$2, P$2.current & 1);
                  b22 = hi(a22, b22, c22);
                  return b22 !== null ? b22.sibling : null;
                }
                I$2(P$2, P$2.current & 1);
                break;
              case 19:
                d22 = (c22 & b22.childLanes) !== 0;
                if ((a22.flags & 64) !== 0) {
                  if (d22)
                    return Ai(a22, b22, c22);
                  b22.flags |= 64;
                }
                e22 = b22.memoizedState;
                e22 !== null && (e22.rendering = null, e22.tail = null, e22.lastEffect = null);
                I$2(P$2, P$2.current);
                if (d22)
                  break;
                else
                  return null;
              case 23:
              case 24:
                return b22.lanes = 0, mi(a22, b22, c22);
            }
            return hi(a22, b22, c22);
          }
        else
          ug = false;
        b22.lanes = 0;
        switch (b22.tag) {
          case 2:
            d22 = b22.type;
            a22 !== null && (a22.alternate = null, b22.alternate = null, b22.flags |= 2);
            a22 = b22.pendingProps;
            e22 = Ef(b22, M$2.current);
            tg(b22, c22);
            e22 = Ch(null, b22, d22, a22, e22, c22);
            b22.flags |= 1;
            if (typeof e22 === "object" && e22 !== null && typeof e22.render === "function" && e22.$$typeof === void 0) {
              b22.tag = 1;
              b22.memoizedState = null;
              b22.updateQueue = null;
              if (Ff(d22)) {
                var f22 = true;
                Jf(b22);
              } else
                f22 = false;
              b22.memoizedState = e22.state !== null && e22.state !== void 0 ? e22.state : null;
              xg(b22);
              var g22 = d22.getDerivedStateFromProps;
              typeof g22 === "function" && Gg(b22, d22, g22, a22);
              e22.updater = Kg;
              b22.stateNode = e22;
              e22._reactInternals = b22;
              Og(b22, d22, a22, c22);
              b22 = qi(null, b22, d22, true, f22, c22);
            } else
              b22.tag = 0, fi(null, b22, e22, c22), b22 = b22.child;
            return b22;
          case 16:
            e22 = b22.elementType;
            a: {
              a22 !== null && (a22.alternate = null, b22.alternate = null, b22.flags |= 2);
              a22 = b22.pendingProps;
              f22 = e22._init;
              e22 = f22(e22._payload);
              b22.type = e22;
              f22 = b22.tag = hk(e22);
              a22 = lg(e22, a22);
              switch (f22) {
                case 0:
                  b22 = li(null, b22, e22, a22, c22);
                  break a;
                case 1:
                  b22 = pi(null, b22, e22, a22, c22);
                  break a;
                case 11:
                  b22 = gi(null, b22, e22, a22, c22);
                  break a;
                case 14:
                  b22 = ii(null, b22, e22, lg(e22.type, a22), d22, c22);
                  break a;
              }
              throw Error(y$1(306, e22, ""));
            }
            return b22;
          case 0:
            return d22 = b22.type, e22 = b22.pendingProps, e22 = b22.elementType === d22 ? e22 : lg(d22, e22), li(a22, b22, d22, e22, c22);
          case 1:
            return d22 = b22.type, e22 = b22.pendingProps, e22 = b22.elementType === d22 ? e22 : lg(d22, e22), pi(a22, b22, d22, e22, c22);
          case 3:
            ri(b22);
            d22 = b22.updateQueue;
            if (a22 === null || d22 === null)
              throw Error(y$1(282));
            d22 = b22.pendingProps;
            e22 = b22.memoizedState;
            e22 = e22 !== null ? e22.element : null;
            yg(a22, b22);
            Cg(b22, d22, null, c22);
            d22 = b22.memoizedState.element;
            if (d22 === e22)
              sh(), b22 = hi(a22, b22, c22);
            else {
              e22 = b22.stateNode;
              if (f22 = e22.hydrate)
                kh = rf(b22.stateNode.containerInfo.firstChild), jh = b22, f22 = lh = true;
              if (f22) {
                a22 = e22.mutableSourceEagerHydrationData;
                if (a22 != null)
                  for (e22 = 0; e22 < a22.length; e22 += 2)
                    f22 = a22[e22], f22._workInProgressVersionPrimary = a22[e22 + 1], th.push(f22);
                c22 = Zg(b22, null, d22, c22);
                for (b22.child = c22; c22; )
                  c22.flags = c22.flags & -3 | 1024, c22 = c22.sibling;
              } else
                fi(a22, b22, d22, c22), sh();
              b22 = b22.child;
            }
            return b22;
          case 5:
            return gh(b22), a22 === null && ph(b22), d22 = b22.type, e22 = b22.pendingProps, f22 = a22 !== null ? a22.memoizedProps : null, g22 = e22.children, nf(d22, e22) ? g22 = null : f22 !== null && nf(d22, f22) && (b22.flags |= 16), oi(a22, b22), fi(a22, b22, g22, c22), b22.child;
          case 6:
            return a22 === null && ph(b22), null;
          case 13:
            return ti(a22, b22, c22);
          case 4:
            return eh(b22, b22.stateNode.containerInfo), d22 = b22.pendingProps, a22 === null ? b22.child = Yg(b22, null, d22, c22) : fi(a22, b22, d22, c22), b22.child;
          case 11:
            return d22 = b22.type, e22 = b22.pendingProps, e22 = b22.elementType === d22 ? e22 : lg(d22, e22), gi(a22, b22, d22, e22, c22);
          case 7:
            return fi(a22, b22, b22.pendingProps, c22), b22.child;
          case 8:
            return fi(a22, b22, b22.pendingProps.children, c22), b22.child;
          case 12:
            return fi(a22, b22, b22.pendingProps.children, c22), b22.child;
          case 10:
            a: {
              d22 = b22.type._context;
              e22 = b22.pendingProps;
              g22 = b22.memoizedProps;
              f22 = e22.value;
              var h22 = b22.type._context;
              I$2(mg, h22._currentValue);
              h22._currentValue = f22;
              if (g22 !== null)
                if (h22 = g22.value, f22 = He6(h22, f22) ? 0 : (typeof d22._calculateChangedBits === "function" ? d22._calculateChangedBits(h22, f22) : 1073741823) | 0, f22 === 0) {
                  if (g22.children === e22.children && !N$1.current) {
                    b22 = hi(a22, b22, c22);
                    break a;
                  }
                } else
                  for (h22 = b22.child, h22 !== null && (h22.return = b22); h22 !== null; ) {
                    var k22 = h22.dependencies;
                    if (k22 !== null) {
                      g22 = h22.child;
                      for (var l22 = k22.firstContext; l22 !== null; ) {
                        if (l22.context === d22 && (l22.observedBits & f22) !== 0) {
                          h22.tag === 1 && (l22 = zg(-1, c22 & -c22), l22.tag = 2, Ag(h22, l22));
                          h22.lanes |= c22;
                          l22 = h22.alternate;
                          l22 !== null && (l22.lanes |= c22);
                          sg(h22.return, c22);
                          k22.lanes |= c22;
                          break;
                        }
                        l22 = l22.next;
                      }
                    } else
                      g22 = h22.tag === 10 ? h22.type === b22.type ? null : h22.child : h22.child;
                    if (g22 !== null)
                      g22.return = h22;
                    else
                      for (g22 = h22; g22 !== null; ) {
                        if (g22 === b22) {
                          g22 = null;
                          break;
                        }
                        h22 = g22.sibling;
                        if (h22 !== null) {
                          h22.return = g22.return;
                          g22 = h22;
                          break;
                        }
                        g22 = g22.return;
                      }
                    h22 = g22;
                  }
              fi(a22, b22, e22.children, c22);
              b22 = b22.child;
            }
            return b22;
          case 9:
            return e22 = b22.type, f22 = b22.pendingProps, d22 = f22.children, tg(b22, c22), e22 = vg(e22, f22.unstable_observedBits), d22 = d22(e22), b22.flags |= 1, fi(a22, b22, d22, c22), b22.child;
          case 14:
            return e22 = b22.type, f22 = lg(e22, b22.pendingProps), f22 = lg(e22.type, f22), ii(a22, b22, e22, f22, d22, c22);
          case 15:
            return ki(a22, b22, b22.type, b22.pendingProps, d22, c22);
          case 17:
            return d22 = b22.type, e22 = b22.pendingProps, e22 = b22.elementType === d22 ? e22 : lg(d22, e22), a22 !== null && (a22.alternate = null, b22.alternate = null, b22.flags |= 2), b22.tag = 1, Ff(d22) ? (a22 = true, Jf(b22)) : a22 = false, tg(b22, c22), Mg(b22, d22, e22), Og(b22, d22, e22, c22), qi(null, b22, d22, true, a22, c22);
          case 19:
            return Ai(a22, b22, c22);
          case 23:
            return mi(a22, b22, c22);
          case 24:
            return mi(a22, b22, c22);
        }
        throw Error(y$1(156, b22.tag));
      };
      function ik(a22, b22, c22, d22) {
        this.tag = a22;
        this.key = c22;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = b22;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = d22;
        this.flags = 0;
        this.lastEffect = this.firstEffect = this.nextEffect = null;
        this.childLanes = this.lanes = 0;
        this.alternate = null;
      }
      function nh(a22, b22, c22, d22) {
        return new ik(a22, b22, c22, d22);
      }
      function ji(a22) {
        a22 = a22.prototype;
        return !(!a22 || !a22.isReactComponent);
      }
      function hk(a22) {
        if (typeof a22 === "function")
          return ji(a22) ? 1 : 0;
        if (a22 !== void 0 && a22 !== null) {
          a22 = a22.$$typeof;
          if (a22 === Aa$1)
            return 11;
          if (a22 === Da$1)
            return 14;
        }
        return 2;
      }
      function Tg(a22, b22) {
        var c22 = a22.alternate;
        c22 === null ? (c22 = nh(a22.tag, b22, a22.key, a22.mode), c22.elementType = a22.elementType, c22.type = a22.type, c22.stateNode = a22.stateNode, c22.alternate = a22, a22.alternate = c22) : (c22.pendingProps = b22, c22.type = a22.type, c22.flags = 0, c22.nextEffect = null, c22.firstEffect = null, c22.lastEffect = null);
        c22.childLanes = a22.childLanes;
        c22.lanes = a22.lanes;
        c22.child = a22.child;
        c22.memoizedProps = a22.memoizedProps;
        c22.memoizedState = a22.memoizedState;
        c22.updateQueue = a22.updateQueue;
        b22 = a22.dependencies;
        c22.dependencies = b22 === null ? null : { lanes: b22.lanes, firstContext: b22.firstContext };
        c22.sibling = a22.sibling;
        c22.index = a22.index;
        c22.ref = a22.ref;
        return c22;
      }
      function Vg(a22, b22, c22, d22, e22, f22) {
        var g22 = 2;
        d22 = a22;
        if (typeof a22 === "function")
          ji(a22) && (g22 = 1);
        else if (typeof a22 === "string")
          g22 = 5;
        else
          a:
            switch (a22) {
              case ua$1:
                return Xg(c22.children, e22, f22, b22);
              case Ha$1:
                g22 = 8;
                e22 |= 16;
                break;
              case wa$1:
                g22 = 8;
                e22 |= 1;
                break;
              case xa$1:
                return a22 = nh(12, c22, b22, e22 | 8), a22.elementType = xa$1, a22.type = xa$1, a22.lanes = f22, a22;
              case Ba$1:
                return a22 = nh(13, c22, b22, e22), a22.type = Ba$1, a22.elementType = Ba$1, a22.lanes = f22, a22;
              case Ca$1:
                return a22 = nh(19, c22, b22, e22), a22.elementType = Ca$1, a22.lanes = f22, a22;
              case Ia$1:
                return vi(c22, e22, f22, b22);
              case Ja$1:
                return a22 = nh(24, c22, b22, e22), a22.elementType = Ja$1, a22.lanes = f22, a22;
              default:
                if (typeof a22 === "object" && a22 !== null)
                  switch (a22.$$typeof) {
                    case ya$1:
                      g22 = 10;
                      break a;
                    case za$1:
                      g22 = 9;
                      break a;
                    case Aa$1:
                      g22 = 11;
                      break a;
                    case Da$1:
                      g22 = 14;
                      break a;
                    case Ea$1:
                      g22 = 16;
                      d22 = null;
                      break a;
                    case Fa$1:
                      g22 = 22;
                      break a;
                  }
                throw Error(y$1(130, a22 == null ? a22 : typeof a22, ""));
            }
        b22 = nh(g22, c22, b22, e22);
        b22.elementType = a22;
        b22.type = d22;
        b22.lanes = f22;
        return b22;
      }
      function Xg(a22, b22, c22, d22) {
        a22 = nh(7, a22, d22, b22);
        a22.lanes = c22;
        return a22;
      }
      function vi(a22, b22, c22, d22) {
        a22 = nh(23, a22, d22, b22);
        a22.elementType = Ia$1;
        a22.lanes = c22;
        return a22;
      }
      function Ug(a22, b22, c22) {
        a22 = nh(6, a22, null, b22);
        a22.lanes = c22;
        return a22;
      }
      function Wg(a22, b22, c22) {
        b22 = nh(4, a22.children !== null ? a22.children : [], a22.key, b22);
        b22.lanes = c22;
        b22.stateNode = { containerInfo: a22.containerInfo, pendingChildren: null, implementation: a22.implementation };
        return b22;
      }
      function jk(a22, b22, c22) {
        this.tag = b22;
        this.containerInfo = a22;
        this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
        this.timeoutHandle = -1;
        this.pendingContext = this.context = null;
        this.hydrate = c22;
        this.callbackNode = null;
        this.callbackPriority = 0;
        this.eventTimes = Zc(0);
        this.expirationTimes = Zc(-1);
        this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
        this.entanglements = Zc(0);
        this.mutableSourceEagerHydrationData = null;
      }
      function kk(a22, b22, c22) {
        var d22 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
        return { $$typeof: ta$1, key: d22 == null ? null : "" + d22, children: a22, containerInfo: b22, implementation: c22 };
      }
      function lk(a22, b22, c22, d22) {
        var e22 = b22.current, f22 = Hg(), g22 = Ig(e22);
        a:
          if (c22) {
            c22 = c22._reactInternals;
            b: {
              if (Zb(c22) !== c22 || c22.tag !== 1)
                throw Error(y$1(170));
              var h22 = c22;
              do {
                switch (h22.tag) {
                  case 3:
                    h22 = h22.stateNode.context;
                    break b;
                  case 1:
                    if (Ff(h22.type)) {
                      h22 = h22.stateNode.__reactInternalMemoizedMergedChildContext;
                      break b;
                    }
                }
                h22 = h22.return;
              } while (h22 !== null);
              throw Error(y$1(171));
            }
            if (c22.tag === 1) {
              var k22 = c22.type;
              if (Ff(k22)) {
                c22 = If(c22, k22, h22);
                break a;
              }
            }
            c22 = h22;
          } else
            c22 = Cf;
        b22.context === null ? b22.context = c22 : b22.pendingContext = c22;
        b22 = zg(f22, g22);
        b22.payload = { element: a22 };
        d22 = d22 === void 0 ? null : d22;
        d22 !== null && (b22.callback = d22);
        Ag(e22, b22);
        Jg(e22, g22, f22);
        return g22;
      }
      function mk(a22) {
        a22 = a22.current;
        if (!a22.child)
          return null;
        switch (a22.child.tag) {
          case 5:
            return a22.child.stateNode;
          default:
            return a22.child.stateNode;
        }
      }
      function nk(a22, b22) {
        a22 = a22.memoizedState;
        if (a22 !== null && a22.dehydrated !== null) {
          var c22 = a22.retryLane;
          a22.retryLane = c22 !== 0 && c22 < b22 ? c22 : b22;
        }
      }
      function ok(a22, b22) {
        nk(a22, b22);
        (a22 = a22.alternate) && nk(a22, b22);
      }
      function pk() {
        return null;
      }
      function qk(a22, b22, c22) {
        var d22 = c22 != null && c22.hydrationOptions != null && c22.hydrationOptions.mutableSources || null;
        c22 = new jk(a22, b22, c22 != null && c22.hydrate === true);
        b22 = nh(3, null, null, b22 === 2 ? 7 : b22 === 1 ? 3 : 0);
        c22.current = b22;
        b22.stateNode = c22;
        xg(b22);
        a22[ff] = c22.current;
        cf(a22.nodeType === 8 ? a22.parentNode : a22);
        if (d22)
          for (a22 = 0; a22 < d22.length; a22++) {
            b22 = d22[a22];
            var e22 = b22._getVersion;
            e22 = e22(b22._source);
            c22.mutableSourceEagerHydrationData == null ? c22.mutableSourceEagerHydrationData = [b22, e22] : c22.mutableSourceEagerHydrationData.push(b22, e22);
          }
        this._internalRoot = c22;
      }
      qk.prototype.render = function(a22) {
        lk(a22, this._internalRoot, null, null);
      };
      qk.prototype.unmount = function() {
        var a22 = this._internalRoot, b22 = a22.containerInfo;
        lk(null, a22, null, function() {
          b22[ff] = null;
        });
      };
      function rk(a22) {
        return !(!a22 || a22.nodeType !== 1 && a22.nodeType !== 9 && a22.nodeType !== 11 && (a22.nodeType !== 8 || a22.nodeValue !== " react-mount-point-unstable "));
      }
      function sk(a22, b22) {
        b22 || (b22 = a22 ? a22.nodeType === 9 ? a22.documentElement : a22.firstChild : null, b22 = !(!b22 || b22.nodeType !== 1 || !b22.hasAttribute("data-reactroot")));
        if (!b22)
          for (var c22; c22 = a22.lastChild; )
            a22.removeChild(c22);
        return new qk(a22, 0, b22 ? { hydrate: true } : void 0);
      }
      function tk(a22, b22, c22, d22, e22) {
        var f22 = c22._reactRootContainer;
        if (f22) {
          var g22 = f22._internalRoot;
          if (typeof e22 === "function") {
            var h22 = e22;
            e22 = function() {
              var a32 = mk(g22);
              h22.call(a32);
            };
          }
          lk(b22, g22, a22, e22);
        } else {
          f22 = c22._reactRootContainer = sk(c22, d22);
          g22 = f22._internalRoot;
          if (typeof e22 === "function") {
            var k22 = e22;
            e22 = function() {
              var a32 = mk(g22);
              k22.call(a32);
            };
          }
          Xj(function() {
            lk(b22, g22, a22, e22);
          });
        }
        return mk(g22);
      }
      ec = function(a22) {
        if (a22.tag === 13) {
          var b22 = Hg();
          Jg(a22, 4, b22);
          ok(a22, 4);
        }
      };
      fc = function(a22) {
        if (a22.tag === 13) {
          var b22 = Hg();
          Jg(a22, 67108864, b22);
          ok(a22, 67108864);
        }
      };
      gc = function(a22) {
        if (a22.tag === 13) {
          var b22 = Hg(), c22 = Ig(a22);
          Jg(a22, c22, b22);
          ok(a22, c22);
        }
      };
      hc = function(a22, b22) {
        return b22();
      };
      yb = function(a22, b22, c22) {
        switch (b22) {
          case "input":
            ab$1(a22, c22);
            b22 = c22.name;
            if (c22.type === "radio" && b22 != null) {
              for (c22 = a22; c22.parentNode; )
                c22 = c22.parentNode;
              c22 = c22.querySelectorAll("input[name=" + JSON.stringify("" + b22) + '][type="radio"]');
              for (b22 = 0; b22 < c22.length; b22++) {
                var d22 = c22[b22];
                if (d22 !== a22 && d22.form === a22.form) {
                  var e22 = Db(d22);
                  if (!e22)
                    throw Error(y$1(90));
                  Wa$1(d22);
                  ab$1(d22, e22);
                }
              }
            }
            break;
          case "textarea":
            ib(a22, c22);
            break;
          case "select":
            b22 = c22.value, b22 != null && fb(a22, !!c22.multiple, b22, false);
        }
      };
      Gb = Wj;
      Hb = function(a22, b22, c22, d22, e22) {
        var f22 = X$2;
        X$2 |= 4;
        try {
          return gg(98, a22.bind(null, b22, c22, d22, e22));
        } finally {
          X$2 = f22, X$2 === 0 && (wj(), ig());
        }
      };
      Ib = function() {
        (X$2 & 49) === 0 && (Vj(), Oj());
      };
      Jb = function(a22, b22) {
        var c22 = X$2;
        X$2 |= 2;
        try {
          return a22(b22);
        } finally {
          X$2 = c22, X$2 === 0 && (wj(), ig());
        }
      };
      function uk(a22, b22) {
        var c22 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
        if (!rk(b22))
          throw Error(y$1(200));
        return kk(a22, b22, null, c22);
      }
      var vk = { Events: [Cb, ue6, Db, Eb, Fb, Oj, { current: false }] }, wk = { findFiberByHostInstance: wc, bundleType: 0, version: "17.0.2", rendererPackageName: "react-dom" };
      var xk = { bundleType: wk.bundleType, version: wk.version, rendererPackageName: wk.rendererPackageName, rendererConfig: wk.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ra$1.ReactCurrentDispatcher, findHostInstanceByFiber: function(a22) {
        a22 = cc(a22);
        return a22 === null ? null : a22.stateNode;
      }, findFiberByHostInstance: wk.findFiberByHostInstance || pk, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null };
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
        var yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (!yk.isDisabled && yk.supportsFiber)
          try {
            Lf = yk.inject(xk), Mf = yk;
          } catch (a22) {
          }
      }
      reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;
      reactDom_production_min.createPortal = uk;
      reactDom_production_min.findDOMNode = function(a22) {
        if (a22 == null)
          return null;
        if (a22.nodeType === 1)
          return a22;
        var b22 = a22._reactInternals;
        if (b22 === void 0) {
          if (typeof a22.render === "function")
            throw Error(y$1(188));
          throw Error(y$1(268, Object.keys(a22)));
        }
        a22 = cc(b22);
        a22 = a22 === null ? null : a22.stateNode;
        return a22;
      };
      reactDom_production_min.flushSync = function(a22, b22) {
        var c22 = X$2;
        if ((c22 & 48) !== 0)
          return a22(b22);
        X$2 |= 1;
        try {
          if (a22)
            return gg(99, a22.bind(null, b22));
        } finally {
          X$2 = c22, ig();
        }
      };
      reactDom_production_min.hydrate = function(a22, b22, c22) {
        if (!rk(b22))
          throw Error(y$1(200));
        return tk(null, a22, b22, true, c22);
      };
      reactDom_production_min.render = function(a22, b22, c22) {
        if (!rk(b22))
          throw Error(y$1(200));
        return tk(null, a22, b22, false, c22);
      };
      reactDom_production_min.unmountComponentAtNode = function(a22) {
        if (!rk(a22))
          throw Error(y$1(40));
        return a22._reactRootContainer ? (Xj(function() {
          tk(null, null, a22, false, function() {
            a22._reactRootContainer = null;
            a22[ff] = null;
          });
        }), true) : false;
      };
      reactDom_production_min.unstable_batchedUpdates = Wj;
      reactDom_production_min.unstable_createPortal = function(a22, b22) {
        return uk(a22, b22, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null);
      };
      reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a22, b22, c22, d22) {
        if (!rk(c22))
          throw Error(y$1(200));
        if (a22 == null || a22._reactInternals === void 0)
          throw Error(y$1(38));
        return tk(a22, b22, c22, false, d22);
      };
      reactDom_production_min.version = "17.0.2";
      function checkDCE() {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
          return;
        }
        try {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
        } catch (err) {
          console.error(err);
        }
      }
      {
        checkDCE();
        reactDom.exports = reactDom_production_min;
      }
      var ReactDOM2 = reactDom.exports;
      const SUSPENSE_PROMISE = Symbol();
      const isSuspensePromise = (promise) => !!promise[SUSPENSE_PROMISE];
      const isSuspensePromiseAlreadyCancelled = (suspensePromise) => !suspensePromise[SUSPENSE_PROMISE].c;
      const cancelSuspensePromise = (suspensePromise) => {
        var _a, _b;
        (_b = (_a = suspensePromise[SUSPENSE_PROMISE]).c) == null ? void 0 : _b.call(_a);
      };
      const isEqualSuspensePromise = (oldSuspensePromise, newSuspensePromise) => {
        const oldOriginalPromise = oldSuspensePromise[SUSPENSE_PROMISE].o;
        const newOriginalPromise = newSuspensePromise[SUSPENSE_PROMISE].o;
        return oldOriginalPromise === newOriginalPromise || oldSuspensePromise === newOriginalPromise || isSuspensePromise(oldOriginalPromise) && isEqualSuspensePromise(oldOriginalPromise, newSuspensePromise);
      };
      const createSuspensePromise = (promise) => {
        const objectToAttach = {
          o: promise,
          c: null
        };
        const suspensePromise = new Promise((resolve) => {
          objectToAttach.c = () => {
            objectToAttach.c = null;
            resolve();
          };
          promise.then(objectToAttach.c, objectToAttach.c);
        });
        suspensePromise[SUSPENSE_PROMISE] = objectToAttach;
        return suspensePromise;
      };
      const hasInitialValue = (atom2) => "init" in atom2;
      const READ_ATOM = "r";
      const WRITE_ATOM = "w";
      const COMMIT_ATOM = "c";
      const SUBSCRIBE_ATOM = "s";
      const RESTORE_ATOMS = "h";
      const DEV_SUBSCRIBE_STATE = "n";
      const DEV_GET_MOUNTED_ATOMS = "l";
      const DEV_GET_ATOM_STATE = "a";
      const DEV_GET_MOUNTED = "m";
      const createStore$3 = (initialValues) => {
        const committedAtomStateMap = /* @__PURE__ */ new WeakMap();
        const mountedMap = /* @__PURE__ */ new WeakMap();
        const pendingMap = /* @__PURE__ */ new Map();
        let stateListeners;
        let mountedAtoms;
        if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
          stateListeners = /* @__PURE__ */ new Set();
          mountedAtoms = /* @__PURE__ */ new Set();
        }
        if (initialValues) {
          for (const [atom2, value] of initialValues) {
            const atomState = { v: value, r: 0, d: /* @__PURE__ */ new Map() };
            if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
              Object.freeze(atomState);
              if (!hasInitialValue(atom2)) {
                console.warn("Found initial value for derived atom which can cause unexpected behavior", atom2);
              }
            }
            committedAtomStateMap.set(atom2, atomState);
          }
        }
        const suspensePromiseCacheMap = /* @__PURE__ */ new WeakMap();
        const addSuspensePromiseToCache = (version, atom2, suspensePromise) => {
          let cache = suspensePromiseCacheMap.get(atom2);
          if (!cache) {
            cache = /* @__PURE__ */ new Map();
            suspensePromiseCacheMap.set(atom2, cache);
          }
          suspensePromise.then(() => {
            if (cache.get(version) === suspensePromise) {
              cache.delete(version);
              if (!cache.size) {
                suspensePromiseCacheMap.delete(atom2);
              }
            }
          });
          cache.set(version, suspensePromise);
        };
        const cancelAllSuspensePromiseInCache = (atom2) => {
          const versionSet = /* @__PURE__ */ new Set();
          const cache = suspensePromiseCacheMap.get(atom2);
          if (cache) {
            suspensePromiseCacheMap.delete(atom2);
            cache.forEach((suspensePromise, version) => {
              cancelSuspensePromise(suspensePromise);
              versionSet.add(version);
            });
          }
          return versionSet;
        };
        const versionedAtomStateMapMap = /* @__PURE__ */ new WeakMap();
        const getVersionedAtomStateMap = (version) => {
          let versionedAtomStateMap = versionedAtomStateMapMap.get(version);
          if (!versionedAtomStateMap) {
            versionedAtomStateMap = /* @__PURE__ */ new Map();
            versionedAtomStateMapMap.set(version, versionedAtomStateMap);
          }
          return versionedAtomStateMap;
        };
        const getAtomState = (version, atom2) => {
          if (version) {
            const versionedAtomStateMap = getVersionedAtomStateMap(version);
            let atomState = versionedAtomStateMap.get(atom2);
            if (!atomState) {
              atomState = getAtomState(version.p, atom2);
              if (atomState) {
                versionedAtomStateMap.set(atom2, atomState);
              }
            }
            return atomState;
          }
          return committedAtomStateMap.get(atom2);
        };
        const setAtomState = (version, atom2, atomState) => {
          if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
            Object.freeze(atomState);
          }
          if (version) {
            const versionedAtomStateMap = getVersionedAtomStateMap(version);
            versionedAtomStateMap.set(atom2, atomState);
          } else {
            const prevAtomState = committedAtomStateMap.get(atom2);
            committedAtomStateMap.set(atom2, atomState);
            if (!pendingMap.has(atom2)) {
              pendingMap.set(atom2, prevAtomState);
            }
          }
        };
        const createReadDependencies = (version, prevReadDependencies = /* @__PURE__ */ new Map(), dependencies) => {
          if (!dependencies) {
            return prevReadDependencies;
          }
          const readDependencies = /* @__PURE__ */ new Map();
          let changed = false;
          dependencies.forEach((atom2) => {
            var _a;
            const revision = ((_a = getAtomState(version, atom2)) == null ? void 0 : _a.r) || 0;
            readDependencies.set(atom2, revision);
            if (prevReadDependencies.get(atom2) !== revision) {
              changed = true;
            }
          });
          if (prevReadDependencies.size === readDependencies.size && !changed) {
            return prevReadDependencies;
          }
          return readDependencies;
        };
        const setAtomValue = (version, atom2, value, dependencies, suspensePromise) => {
          const atomState = getAtomState(version, atom2);
          if (atomState) {
            if (suspensePromise && (!("p" in atomState) || !isEqualSuspensePromise(atomState.p, suspensePromise))) {
              return atomState;
            }
            if ("p" in atomState) {
              cancelSuspensePromise(atomState.p);
            }
          }
          const nextAtomState = {
            v: value,
            r: (atomState == null ? void 0 : atomState.r) || 0,
            d: createReadDependencies(version, atomState == null ? void 0 : atomState.d, dependencies)
          };
          let changed = false;
          if (!atomState || !("v" in atomState) || !Object.is(atomState.v, value)) {
            changed = true;
            ++nextAtomState.r;
            if (nextAtomState.d.has(atom2)) {
              nextAtomState.d = new Map(nextAtomState.d).set(atom2, nextAtomState.r);
            }
          } else if ("i" in atomState || nextAtomState.d !== atomState.d && (nextAtomState.d.size !== atomState.d.size || !Array.from(nextAtomState.d.keys()).every((a22) => atomState.d.has(a22)))) {
            changed = true;
            Promise.resolve().then(() => {
              flushPending(version);
            });
          }
          if (atomState && !changed) {
            return atomState;
          }
          setAtomState(version, atom2, nextAtomState);
          return nextAtomState;
        };
        const setAtomReadError = (version, atom2, error, dependencies, suspensePromise) => {
          const atomState = getAtomState(version, atom2);
          if (atomState) {
            if (suspensePromise && (!("p" in atomState) || !isEqualSuspensePromise(atomState.p, suspensePromise))) {
              return atomState;
            }
            if ("p" in atomState) {
              cancelSuspensePromise(atomState.p);
            }
          }
          const nextAtomState = {
            e: error,
            r: (atomState == null ? void 0 : atomState.r) || 0,
            d: createReadDependencies(version, atomState == null ? void 0 : atomState.d, dependencies)
          };
          setAtomState(version, atom2, nextAtomState);
          return nextAtomState;
        };
        const setAtomSuspensePromise = (version, atom2, suspensePromise, dependencies) => {
          const atomState = getAtomState(version, atom2);
          if (atomState && "p" in atomState) {
            if (isEqualSuspensePromise(atomState.p, suspensePromise)) {
              return atomState;
            }
            cancelSuspensePromise(atomState.p);
          }
          addSuspensePromiseToCache(version, atom2, suspensePromise);
          const nextAtomState = {
            p: suspensePromise,
            r: (atomState == null ? void 0 : atomState.r) || 0,
            d: createReadDependencies(version, atomState == null ? void 0 : atomState.d, dependencies)
          };
          setAtomState(version, atom2, nextAtomState);
          return nextAtomState;
        };
        const setAtomPromiseOrValue = (version, atom2, promiseOrValue, dependencies) => {
          if (promiseOrValue instanceof Promise) {
            const suspensePromise = createSuspensePromise(promiseOrValue.then((value) => {
              setAtomValue(version, atom2, value, dependencies, suspensePromise);
            }).catch((e22) => {
              if (e22 instanceof Promise) {
                if (isSuspensePromise(e22)) {
                  return e22.then(() => {
                    readAtomState(version, atom2, true);
                  });
                }
                return e22;
              }
              setAtomReadError(version, atom2, e22, dependencies, suspensePromise);
            }));
            return setAtomSuspensePromise(version, atom2, suspensePromise, dependencies);
          }
          return setAtomValue(version, atom2, promiseOrValue, dependencies);
        };
        const setAtomInvalidated = (version, atom2) => {
          const atomState = getAtomState(version, atom2);
          if (atomState) {
            const nextAtomState = {
              ...atomState,
              i: atomState.r
            };
            setAtomState(version, atom2, nextAtomState);
          } else if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
            console.warn("[Bug] could not invalidate non existing atom", atom2);
          }
        };
        const readAtomState = (version, atom2, force) => {
          if (!force) {
            const atomState = getAtomState(version, atom2);
            if (atomState) {
              if (atomState.r !== atomState.i && "p" in atomState && !isSuspensePromiseAlreadyCancelled(atomState.p)) {
                return atomState;
              }
              atomState.d.forEach((_22, a22) => {
                if (a22 !== atom2) {
                  if (!mountedMap.has(a22)) {
                    readAtomState(version, a22);
                  } else {
                    const aState = getAtomState(version, a22);
                    if (aState && aState.r === aState.i) {
                      readAtomState(version, a22);
                    }
                  }
                }
              });
              if (Array.from(atomState.d).every(([a22, r22]) => {
                const aState = getAtomState(version, a22);
                return aState && "v" in aState && aState.r === r22;
              })) {
                return atomState;
              }
            }
          }
          const dependencies = /* @__PURE__ */ new Set();
          try {
            const promiseOrValue = atom2.read((a22) => {
              dependencies.add(a22);
              const aState = a22 === atom2 ? getAtomState(version, a22) : readAtomState(version, a22);
              if (aState) {
                if ("e" in aState) {
                  throw aState.e;
                }
                if ("p" in aState) {
                  throw aState.p;
                }
                return aState.v;
              }
              if (hasInitialValue(a22)) {
                return a22.init;
              }
              throw new Error("no atom init");
            });
            return setAtomPromiseOrValue(version, atom2, promiseOrValue, dependencies);
          } catch (errorOrPromise) {
            if (errorOrPromise instanceof Promise) {
              const suspensePromise = createSuspensePromise(errorOrPromise);
              return setAtomSuspensePromise(version, atom2, suspensePromise, dependencies);
            }
            return setAtomReadError(version, atom2, errorOrPromise, dependencies);
          }
        };
        const readAtom = (readingAtom, version) => {
          const atomState = readAtomState(version, readingAtom);
          return atomState;
        };
        const addAtom = (version, addingAtom) => {
          let mounted = mountedMap.get(addingAtom);
          if (!mounted) {
            mounted = mountAtom(version, addingAtom);
          }
          return mounted;
        };
        const canUnmountAtom = (atom2, mounted) => !mounted.l.size && (!mounted.t.size || mounted.t.size === 1 && mounted.t.has(atom2));
        const delAtom = (version, deletingAtom) => {
          const mounted = mountedMap.get(deletingAtom);
          if (mounted && canUnmountAtom(deletingAtom, mounted)) {
            unmountAtom(version, deletingAtom);
          }
        };
        const invalidateDependents = (version, atom2) => {
          const mounted = mountedMap.get(atom2);
          mounted == null ? void 0 : mounted.t.forEach((dependent) => {
            if (dependent !== atom2) {
              setAtomInvalidated(version, dependent);
              invalidateDependents(version, dependent);
            }
          });
        };
        const writeAtomState = (version, atom2, update) => {
          let isSync = true;
          const writeGetter = (a22, options) => {
            const aState = readAtomState(version, a22);
            if ("e" in aState) {
              throw aState.e;
            }
            if ("p" in aState) {
              if (options == null ? void 0 : options.unstable_promise) {
                return aState.p.then(() => writeGetter(a22, options));
              }
              if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
                console.info("Reading pending atom state in write operation. We throw a promise for now.", a22);
              }
              throw aState.p;
            }
            if ("v" in aState) {
              return aState.v;
            }
            if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
              console.warn("[Bug] no value found while reading atom in write operation. This is probably a bug.", a22);
            }
            throw new Error("no value found");
          };
          const setter = (a22, v22) => {
            let promiseOrVoid2;
            if (a22 === atom2) {
              if (!hasInitialValue(a22)) {
                throw new Error("atom not writable");
              }
              const versionSet = cancelAllSuspensePromiseInCache(a22);
              versionSet.forEach((cancelledVersion) => {
                if (cancelledVersion !== version) {
                  setAtomPromiseOrValue(cancelledVersion, a22, v22);
                }
              });
              const prevAtomState = getAtomState(version, a22);
              const nextAtomState = setAtomPromiseOrValue(version, a22, v22);
              if (prevAtomState !== nextAtomState) {
                invalidateDependents(version, a22);
              }
            } else {
              promiseOrVoid2 = writeAtomState(version, a22, v22);
            }
            if (!isSync) {
              flushPending(version);
            }
            return promiseOrVoid2;
          };
          const promiseOrVoid = atom2.write(writeGetter, setter, update);
          isSync = false;
          return promiseOrVoid;
        };
        const writeAtom = (writingAtom, update, version) => {
          const promiseOrVoid = writeAtomState(version, writingAtom, update);
          flushPending(version);
          return promiseOrVoid;
        };
        const isActuallyWritableAtom = (atom2) => !!atom2.write;
        const mountAtom = (version, atom2, initialDependent) => {
          const mounted = {
            t: new Set(initialDependent && [initialDependent]),
            l: /* @__PURE__ */ new Set()
          };
          mountedMap.set(atom2, mounted);
          if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
            mountedAtoms.add(atom2);
          }
          const atomState = readAtomState(void 0, atom2);
          atomState.d.forEach((_22, a22) => {
            const aMounted = mountedMap.get(a22);
            if (aMounted) {
              aMounted.t.add(atom2);
            } else {
              if (a22 !== atom2) {
                mountAtom(version, a22, atom2);
              }
            }
          });
          if (isActuallyWritableAtom(atom2) && atom2.onMount) {
            const setAtom = (update) => writeAtom(atom2, update, version);
            const onUnmount = atom2.onMount(setAtom);
            version = void 0;
            if (onUnmount) {
              mounted.u = onUnmount;
            }
          }
          return mounted;
        };
        const unmountAtom = (version, atom2) => {
          var _a;
          const onUnmount = (_a = mountedMap.get(atom2)) == null ? void 0 : _a.u;
          if (onUnmount) {
            onUnmount();
          }
          mountedMap.delete(atom2);
          if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
            mountedAtoms.delete(atom2);
          }
          const atomState = getAtomState(version, atom2);
          if (atomState) {
            atomState.d.forEach((_22, a22) => {
              if (a22 !== atom2) {
                const mounted = mountedMap.get(a22);
                if (mounted) {
                  mounted.t.delete(atom2);
                  if (canUnmountAtom(a22, mounted)) {
                    unmountAtom(version, a22);
                  }
                }
              }
            });
          } else if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
            console.warn("[Bug] could not find atom state to unmount", atom2);
          }
        };
        const mountDependencies = (version, atom2, atomState, prevReadDependencies) => {
          const dependencies = new Set(atomState.d.keys());
          prevReadDependencies == null ? void 0 : prevReadDependencies.forEach((_22, a22) => {
            if (dependencies.has(a22)) {
              dependencies.delete(a22);
              return;
            }
            const mounted = mountedMap.get(a22);
            if (mounted) {
              mounted.t.delete(atom2);
              if (canUnmountAtom(a22, mounted)) {
                unmountAtom(version, a22);
              }
            }
          });
          dependencies.forEach((a22) => {
            const mounted = mountedMap.get(a22);
            if (mounted) {
              mounted.t.add(atom2);
            } else if (mountedMap.has(atom2)) {
              mountAtom(version, a22, atom2);
            }
          });
        };
        const flushPending = (version) => {
          if (version) {
            const versionedAtomStateMap = getVersionedAtomStateMap(version);
            versionedAtomStateMap.forEach((atomState, atom2) => {
              const committedAtomState = committedAtomStateMap.get(atom2);
              if (atomState !== committedAtomState) {
                const mounted = mountedMap.get(atom2);
                mounted == null ? void 0 : mounted.l.forEach((listener) => listener(version));
              }
            });
            return;
          }
          while (pendingMap.size) {
            const pending = Array.from(pendingMap);
            pendingMap.clear();
            pending.forEach(([atom2, prevAtomState]) => {
              const atomState = getAtomState(void 0, atom2);
              if (atomState && atomState.d !== (prevAtomState == null ? void 0 : prevAtomState.d)) {
                mountDependencies(void 0, atom2, atomState, prevAtomState == null ? void 0 : prevAtomState.d);
              }
              if (prevAtomState && "i" in prevAtomState && atomState && !("i" in atomState)) {
                return;
              }
              const mounted = mountedMap.get(atom2);
              mounted == null ? void 0 : mounted.l.forEach((listener) => listener());
            });
          }
          if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
            stateListeners.forEach((l22) => l22());
          }
        };
        const commitVersionedAtomStateMap = (version) => {
          const versionedAtomStateMap = getVersionedAtomStateMap(version);
          versionedAtomStateMap.forEach((atomState, atom2) => {
            const prevAtomState = committedAtomStateMap.get(atom2);
            if (!prevAtomState || atomState.r > prevAtomState.r || "v" in atomState && atomState.r === prevAtomState.r && atomState.d !== prevAtomState.d) {
              committedAtomStateMap.set(atom2, atomState);
              if (atomState.d !== (prevAtomState == null ? void 0 : prevAtomState.d)) {
                mountDependencies(version, atom2, atomState, prevAtomState == null ? void 0 : prevAtomState.d);
              }
            }
          });
        };
        const commitAtom = (_atom, version) => {
          if (version) {
            commitVersionedAtomStateMap(version);
          }
          flushPending(void 0);
        };
        const subscribeAtom = (atom2, callback, version) => {
          const mounted = addAtom(version, atom2);
          const listeners = mounted.l;
          listeners.add(callback);
          return () => {
            listeners.delete(callback);
            delAtom(version, atom2);
          };
        };
        const restoreAtoms = (values2, version) => {
          for (const [atom2, value] of values2) {
            if (hasInitialValue(atom2)) {
              setAtomPromiseOrValue(version, atom2, value);
              invalidateDependents(version, atom2);
            }
          }
          flushPending(version);
        };
        if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production") {
          return {
            [READ_ATOM]: readAtom,
            [WRITE_ATOM]: writeAtom,
            [COMMIT_ATOM]: commitAtom,
            [SUBSCRIBE_ATOM]: subscribeAtom,
            [RESTORE_ATOMS]: restoreAtoms,
            [DEV_SUBSCRIBE_STATE]: (l22) => {
              stateListeners.add(l22);
              return () => {
                stateListeners.delete(l22);
              };
            },
            [DEV_GET_MOUNTED_ATOMS]: () => mountedAtoms.values(),
            [DEV_GET_ATOM_STATE]: (a22) => committedAtomStateMap.get(a22),
            [DEV_GET_MOUNTED]: (a22) => mountedMap.get(a22)
          };
        }
        return {
          [READ_ATOM]: readAtom,
          [WRITE_ATOM]: writeAtom,
          [COMMIT_ATOM]: commitAtom,
          [SUBSCRIBE_ATOM]: subscribeAtom,
          [RESTORE_ATOMS]: restoreAtoms
        };
      };
      const createScopeContainer = (initialValues, unstable_createStore) => {
        const store = unstable_createStore ? unstable_createStore(initialValues).SECRET_INTERNAL_store : createStore$3(initialValues);
        return { s: store };
      };
      const ScopeContextMap = /* @__PURE__ */ new Map();
      const getScopeContext = (scope) => {
        if (!ScopeContextMap.has(scope)) {
          ScopeContextMap.set(scope, react.exports.createContext(createScopeContainer()));
        }
        return ScopeContextMap.get(scope);
      };
      const Provider = ({
        children,
        initialValues,
        scope,
        unstable_createStore,
        unstable_enableVersionedWrite
      }) => {
        const [version, setVersion] = react.exports.useState({});
        react.exports.useEffect(() => {
          const scopeContainer = scopeContainerRef.current;
          if (scopeContainer.w) {
            scopeContainer.s[COMMIT_ATOM](null, version);
            delete version.p;
            scopeContainer.v = version;
          }
        }, [version]);
        const scopeContainerRef = react.exports.useRef();
        if (!scopeContainerRef.current) {
          const scopeContainer = createScopeContainer(initialValues, unstable_createStore);
          if (unstable_enableVersionedWrite) {
            scopeContainer.w = (write) => {
              setVersion((parentVersion) => {
                const nextVersion = { p: parentVersion };
                write(nextVersion);
                return nextVersion;
              });
            };
            scopeContainer.v = version;
          }
          scopeContainerRef.current = scopeContainer;
        }
        const ScopeContainerContext = getScopeContext(scope);
        return react.exports.createElement(ScopeContainerContext.Provider, {
          value: scopeContainerRef.current
        }, children);
      };
      let keyCount = 0;
      function atom(read, write) {
        const key = `atom${++keyCount}`;
        const config22 = {
          toString: () => key
        };
        if (typeof read === "function") {
          config22.read = read;
        } else {
          config22.init = read;
          config22.read = (get2) => get2(config22);
          config22.write = (get2, set2, update) => set2(config22, typeof update === "function" ? update(get2(config22)) : update);
        }
        if (write) {
          config22.write = write;
        }
        return config22;
      }
      function useAtomValue(atom2, scope) {
        const ScopeContext = getScopeContext(scope);
        const scopeContainer = react.exports.useContext(ScopeContext);
        const { s: store, v: versionFromProvider } = scopeContainer;
        const getAtomValue = (version2) => {
          const atomState = store[READ_ATOM](atom2, version2);
          if ("e" in atomState) {
            throw atomState.e;
          }
          if ("p" in atomState) {
            throw atomState.p;
          }
          if ("v" in atomState) {
            return atomState.v;
          }
          throw new Error("no atom value");
        };
        const [[version, valueFromReducer, atomFromReducer], rerenderIfChanged] = react.exports.useReducer((prev, nextVersion) => {
          const nextValue = getAtomValue(nextVersion);
          if (Object.is(prev[1], nextValue) && prev[2] === atom2) {
            return prev;
          }
          return [nextVersion, nextValue, atom2];
        }, versionFromProvider, (initialVersion) => {
          const initialValue = getAtomValue(initialVersion);
          return [initialVersion, initialValue, atom2];
        });
        let value = valueFromReducer;
        if (atomFromReducer !== atom2) {
          rerenderIfChanged(version);
          value = getAtomValue(version);
        }
        react.exports.useEffect(() => {
          const { v: versionFromProvider2 } = scopeContainer;
          if (versionFromProvider2) {
            store[COMMIT_ATOM](atom2, versionFromProvider2);
          }
          const unsubscribe = store[SUBSCRIBE_ATOM](atom2, rerenderIfChanged, versionFromProvider2);
          rerenderIfChanged(versionFromProvider2);
          return unsubscribe;
        }, [store, atom2, scopeContainer]);
        react.exports.useEffect(() => {
          store[COMMIT_ATOM](atom2, version);
        });
        react.exports.useDebugValue(value);
        return value;
      }
      function useSetAtom(atom2, scope) {
        const ScopeContext = getScopeContext(scope);
        const { s: store, w: versionedWrite } = react.exports.useContext(ScopeContext);
        const setAtom = react.exports.useCallback((update) => {
          if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production" && !("write" in atom2)) {
            throw new Error("not writable atom");
          }
          const write = (version) => store[WRITE_ATOM](atom2, update, version);
          return versionedWrite ? versionedWrite(write) : write();
        }, [store, versionedWrite, atom2]);
        return setAtom;
      }
      function useAtom(atom2, scope) {
        if ("scope" in atom2) {
          console.warn("atom.scope is deprecated. Please do useAtom(atom, scope) instead.");
          scope = atom2.scope;
        }
        return [
          useAtomValue(atom2, scope),
          useSetAtom(atom2, scope)
        ];
      }
      function isObject$g(o22) {
        return Object.prototype.toString.call(o22) === "[object Object]";
      }
      function isPlainObject$4(o22) {
        var ctor, prot;
        if (isObject$g(o22) === false)
          return false;
        ctor = o22.constructor;
        if (ctor === void 0)
          return true;
        prot = ctor.prototype;
        if (isObject$g(prot) === false)
          return false;
        if (prot.hasOwnProperty("isPrototypeOf") === false) {
          return false;
        }
        return true;
      }
      function n$2(n22) {
        for (var r22 = arguments.length, t22 = Array(r22 > 1 ? r22 - 1 : 0), e22 = 1; e22 < r22; e22++)
          t22[e22 - 1] = arguments[e22];
        throw Error("[Immer] minified error nr: " + n22 + (t22.length ? " " + t22.map(function(n32) {
          return "'" + n32 + "'";
        }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf");
      }
      function r$2(n22) {
        return !!n22 && !!n22[Q$1];
      }
      function t$1(n22) {
        return !!n22 && (function(n32) {
          if (!n32 || typeof n32 != "object")
            return false;
          var r22 = Object.getPrototypeOf(n32);
          if (r22 === null)
            return true;
          var t22 = Object.hasOwnProperty.call(r22, "constructor") && r22.constructor;
          return t22 === Object || typeof t22 == "function" && Function.toString.call(t22) === Z$1;
        }(n22) || Array.isArray(n22) || !!n22[L5] || !!n22.constructor[L5] || s$1(n22) || v4(n22));
      }
      function i$1(n22, r22, t22) {
        t22 === void 0 && (t22 = false), o$1(n22) === 0 ? (t22 ? Object.keys : nn)(n22).forEach(function(e22) {
          t22 && typeof e22 == "symbol" || r22(e22, n22[e22], n22);
        }) : n22.forEach(function(t32, e22) {
          return r22(e22, t32, n22);
        });
      }
      function o$1(n22) {
        var r22 = n22[Q$1];
        return r22 ? r22.i > 3 ? r22.i - 4 : r22.i : Array.isArray(n22) ? 1 : s$1(n22) ? 2 : v4(n22) ? 3 : 0;
      }
      function u$2(n22, r22) {
        return o$1(n22) === 2 ? n22.has(r22) : Object.prototype.hasOwnProperty.call(n22, r22);
      }
      function a$1(n22, r22) {
        return o$1(n22) === 2 ? n22.get(r22) : n22[r22];
      }
      function f$2(n22, r22, t22) {
        var e22 = o$1(n22);
        e22 === 2 ? n22.set(r22, t22) : e22 === 3 ? (n22.delete(r22), n22.add(t22)) : n22[r22] = t22;
      }
      function c$1(n22, r22) {
        return n22 === r22 ? n22 !== 0 || 1 / n22 == 1 / r22 : n22 != n22 && r22 != r22;
      }
      function s$1(n22) {
        return X$1 && n22 instanceof Map;
      }
      function v4(n22) {
        return q$1 && n22 instanceof Set;
      }
      function p$2(n22) {
        return n22.o || n22.t;
      }
      function l$2(n22) {
        if (Array.isArray(n22))
          return Array.prototype.slice.call(n22);
        var r22 = rn(n22);
        delete r22[Q$1];
        for (var t22 = nn(r22), e22 = 0; e22 < t22.length; e22++) {
          var i22 = t22[e22], o22 = r22[i22];
          o22.writable === false && (o22.writable = true, o22.configurable = true), (o22.get || o22.set) && (r22[i22] = { configurable: true, writable: true, enumerable: o22.enumerable, value: n22[i22] });
        }
        return Object.create(Object.getPrototypeOf(n22), r22);
      }
      function d15(n22, e22) {
        return e22 === void 0 && (e22 = false), y7(n22) || r$2(n22) || !t$1(n22) ? n22 : (o$1(n22) > 1 && (n22.set = n22.add = n22.clear = n22.delete = h9), Object.freeze(n22), e22 && i$1(n22, function(n32, r22) {
          return d15(r22, true);
        }, true), n22);
      }
      function h9() {
        n$2(2);
      }
      function y7(n22) {
        return n22 == null || typeof n22 != "object" || Object.isFrozen(n22);
      }
      function b4(r22) {
        var t22 = tn[r22];
        return t22 || n$2(18, r22), t22;
      }
      function m$1(n22, r22) {
        tn[n22] || (tn[n22] = r22);
      }
      function _6() {
        return U$1;
      }
      function j5(n22, r22) {
        r22 && (b4("Patches"), n22.u = [], n22.s = [], n22.v = r22);
      }
      function O$1(n22) {
        g$1(n22), n22.p.forEach(S$1), n22.p = null;
      }
      function g$1(n22) {
        n22 === U$1 && (U$1 = n22.l);
      }
      function w5(n22) {
        return U$1 = { p: [], l: U$1, h: n22, m: true, _: 0 };
      }
      function S$1(n22) {
        var r22 = n22[Q$1];
        r22.i === 0 || r22.i === 1 ? r22.j() : r22.O = true;
      }
      function P$1(r22, e22) {
        e22._ = e22.p.length;
        var i22 = e22.p[0], o22 = r22 !== void 0 && r22 !== i22;
        return e22.h.g || b4("ES5").S(e22, r22, o22), o22 ? (i22[Q$1].P && (O$1(e22), n$2(4)), t$1(r22) && (r22 = M$1(e22, r22), e22.l || x6(e22, r22)), e22.u && b4("Patches").M(i22[Q$1].t, r22, e22.u, e22.s)) : r22 = M$1(e22, i22, []), O$1(e22), e22.u && e22.v(e22.u, e22.s), r22 !== H8 ? r22 : void 0;
      }
      function M$1(n22, r22, t22) {
        if (y7(r22))
          return r22;
        var e22 = r22[Q$1];
        if (!e22)
          return i$1(r22, function(i22, o32) {
            return A7(n22, e22, r22, i22, o32, t22);
          }, true), r22;
        if (e22.A !== n22)
          return r22;
        if (!e22.P)
          return x6(n22, e22.t, true), e22.t;
        if (!e22.I) {
          e22.I = true, e22.A._--;
          var o22 = e22.i === 4 || e22.i === 5 ? e22.o = l$2(e22.k) : e22.o;
          i$1(e22.i === 3 ? new Set(o22) : o22, function(r32, i22) {
            return A7(n22, e22, o22, r32, i22, t22);
          }), x6(n22, o22, false), t22 && n22.u && b4("Patches").R(e22, t22, n22.u, n22.s);
        }
        return e22.o;
      }
      function A7(e22, i22, o22, a22, c22, s22) {
        if (r$2(c22)) {
          var v22 = M$1(e22, c22, s22 && i22 && i22.i !== 3 && !u$2(i22.D, a22) ? s22.concat(a22) : void 0);
          if (f$2(o22, a22, v22), !r$2(v22))
            return;
          e22.m = false;
        }
        if (t$1(c22) && !y7(c22)) {
          if (!e22.h.F && e22._ < 1)
            return;
          M$1(e22, c22), i22 && i22.A.l || x6(e22, c22);
        }
      }
      function x6(n22, r22, t22) {
        t22 === void 0 && (t22 = false), n22.h.F && n22.m && d15(r22, t22);
      }
      function z$1(n22, r22) {
        var t22 = n22[Q$1];
        return (t22 ? p$2(t22) : n22)[r22];
      }
      function I$1(n22, r22) {
        if (r22 in n22)
          for (var t22 = Object.getPrototypeOf(n22); t22; ) {
            var e22 = Object.getOwnPropertyDescriptor(t22, r22);
            if (e22)
              return e22;
            t22 = Object.getPrototypeOf(t22);
          }
      }
      function k2(n22) {
        n22.P || (n22.P = true, n22.l && k2(n22.l));
      }
      function E$1(n22) {
        n22.o || (n22.o = l$2(n22.t));
      }
      function R$1(n22, r22, t22) {
        var e22 = s$1(r22) ? b4("MapSet").N(r22, t22) : v4(r22) ? b4("MapSet").T(r22, t22) : n22.g ? function(n32, r32) {
          var t32 = Array.isArray(n32), e32 = { i: t32 ? 1 : 0, A: r32 ? r32.A : _6(), P: false, I: false, D: {}, l: r32, t: n32, k: null, o: null, j: null, C: false }, i22 = e32, o22 = en;
          t32 && (i22 = [e32], o22 = on);
          var u22 = Proxy.revocable(i22, o22), a22 = u22.revoke, f22 = u22.proxy;
          return e32.k = f22, e32.j = a22, f22;
        }(r22, t22) : b4("ES5").J(r22, t22);
        return (t22 ? t22.A : _6()).p.push(e22), e22;
      }
      function D$1(e22) {
        return r$2(e22) || n$2(22, e22), function n22(r22) {
          if (!t$1(r22))
            return r22;
          var e32, u22 = r22[Q$1], c22 = o$1(r22);
          if (u22) {
            if (!u22.P && (u22.i < 4 || !b4("ES5").K(u22)))
              return u22.t;
            u22.I = true, e32 = F$1(r22, c22), u22.I = false;
          } else
            e32 = F$1(r22, c22);
          return i$1(e32, function(r32, t22) {
            u22 && a$1(u22.t, r32) === t22 || f$2(e32, r32, n22(t22));
          }), c22 === 3 ? new Set(e32) : e32;
        }(e22);
      }
      function F$1(n22, r22) {
        switch (r22) {
          case 2:
            return new Map(n22);
          case 3:
            return Array.from(n22);
        }
        return l$2(n22);
      }
      function C4() {
        function r22(n22, r32) {
          function t22() {
            this.constructor = n22;
          }
          a22(n22, r32), n22.prototype = (t22.prototype = r32.prototype, new t22());
        }
        function e22(n22) {
          n22.o || (n22.D = /* @__PURE__ */ new Map(), n22.o = new Map(n22.t));
        }
        function o22(n22) {
          n22.o || (n22.o = /* @__PURE__ */ new Set(), n22.t.forEach(function(r32) {
            if (t$1(r32)) {
              var e32 = R$1(n22.A.h, r32, n22);
              n22.p.set(r32, e32), n22.o.add(e32);
            } else
              n22.o.add(r32);
          }));
        }
        function u22(r32) {
          r32.O && n$2(3, JSON.stringify(p$2(r32)));
        }
        var a22 = function(n22, r32) {
          return (a22 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n32, r42) {
            n32.__proto__ = r42;
          } || function(n32, r42) {
            for (var t22 in r42)
              r42.hasOwnProperty(t22) && (n32[t22] = r42[t22]);
          })(n22, r32);
        }, f22 = function() {
          function n22(n32, r32) {
            return this[Q$1] = { i: 2, l: r32, A: r32 ? r32.A : _6(), P: false, I: false, o: void 0, D: void 0, t: n32, k: this, C: false, O: false }, this;
          }
          r22(n22, Map);
          var o32 = n22.prototype;
          return Object.defineProperty(o32, "size", { get: function() {
            return p$2(this[Q$1]).size;
          } }), o32.has = function(n32) {
            return p$2(this[Q$1]).has(n32);
          }, o32.set = function(n32, r32) {
            var t22 = this[Q$1];
            return u22(t22), p$2(t22).has(n32) && p$2(t22).get(n32) === r32 || (e22(t22), k2(t22), t22.D.set(n32, true), t22.o.set(n32, r32), t22.D.set(n32, true)), this;
          }, o32.delete = function(n32) {
            if (!this.has(n32))
              return false;
            var r32 = this[Q$1];
            return u22(r32), e22(r32), k2(r32), r32.t.has(n32) ? r32.D.set(n32, false) : r32.D.delete(n32), r32.o.delete(n32), true;
          }, o32.clear = function() {
            var n32 = this[Q$1];
            u22(n32), p$2(n32).size && (e22(n32), k2(n32), n32.D = /* @__PURE__ */ new Map(), i$1(n32.t, function(r32) {
              n32.D.set(r32, false);
            }), n32.o.clear());
          }, o32.forEach = function(n32, r32) {
            var t22 = this;
            p$2(this[Q$1]).forEach(function(e32, i22) {
              n32.call(r32, t22.get(i22), i22, t22);
            });
          }, o32.get = function(n32) {
            var r32 = this[Q$1];
            u22(r32);
            var i22 = p$2(r32).get(n32);
            if (r32.I || !t$1(i22))
              return i22;
            if (i22 !== r32.t.get(n32))
              return i22;
            var o42 = R$1(r32.A.h, i22, r32);
            return e22(r32), r32.o.set(n32, o42), o42;
          }, o32.keys = function() {
            return p$2(this[Q$1]).keys();
          }, o32.values = function() {
            var n32, r32 = this, t22 = this.keys();
            return (n32 = {})[V$1] = function() {
              return r32.values();
            }, n32.next = function() {
              var n42 = t22.next();
              return n42.done ? n42 : { done: false, value: r32.get(n42.value) };
            }, n32;
          }, o32.entries = function() {
            var n32, r32 = this, t22 = this.keys();
            return (n32 = {})[V$1] = function() {
              return r32.entries();
            }, n32.next = function() {
              var n42 = t22.next();
              if (n42.done)
                return n42;
              var e32 = r32.get(n42.value);
              return { done: false, value: [n42.value, e32] };
            }, n32;
          }, o32[V$1] = function() {
            return this.entries();
          }, n22;
        }(), c22 = function() {
          function n22(n32, r32) {
            return this[Q$1] = { i: 3, l: r32, A: r32 ? r32.A : _6(), P: false, I: false, o: void 0, t: n32, k: this, p: /* @__PURE__ */ new Map(), O: false, C: false }, this;
          }
          r22(n22, Set);
          var t22 = n22.prototype;
          return Object.defineProperty(t22, "size", { get: function() {
            return p$2(this[Q$1]).size;
          } }), t22.has = function(n32) {
            var r32 = this[Q$1];
            return u22(r32), r32.o ? !!r32.o.has(n32) || !(!r32.p.has(n32) || !r32.o.has(r32.p.get(n32))) : r32.t.has(n32);
          }, t22.add = function(n32) {
            var r32 = this[Q$1];
            return u22(r32), this.has(n32) || (o22(r32), k2(r32), r32.o.add(n32)), this;
          }, t22.delete = function(n32) {
            if (!this.has(n32))
              return false;
            var r32 = this[Q$1];
            return u22(r32), o22(r32), k2(r32), r32.o.delete(n32) || !!r32.p.has(n32) && r32.o.delete(r32.p.get(n32));
          }, t22.clear = function() {
            var n32 = this[Q$1];
            u22(n32), p$2(n32).size && (o22(n32), k2(n32), n32.o.clear());
          }, t22.values = function() {
            var n32 = this[Q$1];
            return u22(n32), o22(n32), n32.o.values();
          }, t22.entries = function() {
            var n32 = this[Q$1];
            return u22(n32), o22(n32), n32.o.entries();
          }, t22.keys = function() {
            return this.values();
          }, t22[V$1] = function() {
            return this.values();
          }, t22.forEach = function(n32, r32) {
            for (var t32 = this.values(), e32 = t32.next(); !e32.done; )
              n32.call(r32, e32.value, e32.value, this), e32 = t32.next();
          }, n22;
        }();
        m$1("MapSet", { N: function(n22, r32) {
          return new f22(n22, r32);
        }, T: function(n22, r32) {
          return new c22(n22, r32);
        } });
      }
      var G4, U$1, W$1 = typeof Symbol != "undefined" && typeof Symbol("x") == "symbol", X$1 = typeof Map != "undefined", q$1 = typeof Set != "undefined", B$1 = typeof Proxy != "undefined" && Proxy.revocable !== void 0 && typeof Reflect != "undefined", H8 = W$1 ? Symbol.for("immer-nothing") : ((G4 = {})["immer-nothing"] = true, G4), L5 = W$1 ? Symbol.for("immer-draftable") : "__$immer_draftable", Q$1 = W$1 ? Symbol.for("immer-state") : "__$immer_state", V$1 = typeof Symbol != "undefined" && Symbol.iterator || "@@iterator", Z$1 = "" + Object.prototype.constructor, nn = typeof Reflect != "undefined" && Reflect.ownKeys ? Reflect.ownKeys : Object.getOwnPropertySymbols !== void 0 ? function(n22) {
        return Object.getOwnPropertyNames(n22).concat(Object.getOwnPropertySymbols(n22));
      } : Object.getOwnPropertyNames, rn = Object.getOwnPropertyDescriptors || function(n22) {
        var r22 = {};
        return nn(n22).forEach(function(t22) {
          r22[t22] = Object.getOwnPropertyDescriptor(n22, t22);
        }), r22;
      }, tn = {}, en = { get: function(n22, r22) {
        if (r22 === Q$1)
          return n22;
        var e22 = p$2(n22);
        if (!u$2(e22, r22))
          return function(n32, r32, t22) {
            var e32, i32 = I$1(r32, t22);
            return i32 ? "value" in i32 ? i32.value : (e32 = i32.get) === null || e32 === void 0 ? void 0 : e32.call(n32.k) : void 0;
          }(n22, e22, r22);
        var i22 = e22[r22];
        return n22.I || !t$1(i22) ? i22 : i22 === z$1(n22.t, r22) ? (E$1(n22), n22.o[r22] = R$1(n22.A.h, i22, n22)) : i22;
      }, has: function(n22, r22) {
        return r22 in p$2(n22);
      }, ownKeys: function(n22) {
        return Reflect.ownKeys(p$2(n22));
      }, set: function(n22, r22, t22) {
        var e22 = I$1(p$2(n22), r22);
        if (e22 == null ? void 0 : e22.set)
          return e22.set.call(n22.k, t22), true;
        if (!n22.P) {
          var i22 = z$1(p$2(n22), r22), o22 = i22 == null ? void 0 : i22[Q$1];
          if (o22 && o22.t === t22)
            return n22.o[r22] = t22, n22.D[r22] = false, true;
          if (c$1(t22, i22) && (t22 !== void 0 || u$2(n22.t, r22)))
            return true;
          E$1(n22), k2(n22);
        }
        return n22.o[r22] === t22 && typeof t22 != "number" && (t22 !== void 0 || r22 in n22.o) || (n22.o[r22] = t22, n22.D[r22] = true, true);
      }, deleteProperty: function(n22, r22) {
        return z$1(n22.t, r22) !== void 0 || r22 in n22.t ? (n22.D[r22] = false, E$1(n22), k2(n22)) : delete n22.D[r22], n22.o && delete n22.o[r22], true;
      }, getOwnPropertyDescriptor: function(n22, r22) {
        var t22 = p$2(n22), e22 = Reflect.getOwnPropertyDescriptor(t22, r22);
        return e22 ? { writable: true, configurable: n22.i !== 1 || r22 !== "length", enumerable: e22.enumerable, value: t22[r22] } : e22;
      }, defineProperty: function() {
        n$2(11);
      }, getPrototypeOf: function(n22) {
        return Object.getPrototypeOf(n22.t);
      }, setPrototypeOf: function() {
        n$2(12);
      } }, on = {};
      i$1(en, function(n22, r22) {
        on[n22] = function() {
          return arguments[0] = arguments[0][0], r22.apply(this, arguments);
        };
      }), on.deleteProperty = function(r22, t22) {
        return on.set.call(this, r22, t22, void 0);
      }, on.set = function(r22, t22, e22) {
        return en.set.call(this, r22[0], t22, e22, r22[0]);
      };
      var un = function() {
        function e22(r22) {
          var e32 = this;
          this.g = B$1, this.F = true, this.produce = function(r32, i32, o22) {
            if (typeof r32 == "function" && typeof i32 != "function") {
              var u22 = i32;
              i32 = r32;
              var a22 = e32;
              return function(n22) {
                var r42 = this;
                n22 === void 0 && (n22 = u22);
                for (var t22 = arguments.length, e42 = Array(t22 > 1 ? t22 - 1 : 0), o32 = 1; o32 < t22; o32++)
                  e42[o32 - 1] = arguments[o32];
                return a22.produce(n22, function(n32) {
                  var t32;
                  return (t32 = i32).call.apply(t32, [r42, n32].concat(e42));
                });
              };
            }
            var f22;
            if (typeof i32 != "function" && n$2(6), o22 !== void 0 && typeof o22 != "function" && n$2(7), t$1(r32)) {
              var c22 = w5(e32), s22 = R$1(e32, r32, void 0), v22 = true;
              try {
                f22 = i32(s22), v22 = false;
              } finally {
                v22 ? O$1(c22) : g$1(c22);
              }
              return typeof Promise != "undefined" && f22 instanceof Promise ? f22.then(function(n22) {
                return j5(c22, o22), P$1(n22, c22);
              }, function(n22) {
                throw O$1(c22), n22;
              }) : (j5(c22, o22), P$1(f22, c22));
            }
            if (!r32 || typeof r32 != "object") {
              if ((f22 = i32(r32)) === void 0 && (f22 = r32), f22 === H8 && (f22 = void 0), e32.F && d15(f22, true), o22) {
                var p22 = [], l22 = [];
                b4("Patches").M(r32, f22, p22, l22), o22(p22, l22);
              }
              return f22;
            }
            n$2(21, r32);
          }, this.produceWithPatches = function(n22, r32) {
            if (typeof n22 == "function")
              return function(r42) {
                for (var t32 = arguments.length, i42 = Array(t32 > 1 ? t32 - 1 : 0), o32 = 1; o32 < t32; o32++)
                  i42[o32 - 1] = arguments[o32];
                return e32.produceWithPatches(r42, function(r52) {
                  return n22.apply(void 0, [r52].concat(i42));
                });
              };
            var t22, i32, o22 = e32.produce(n22, r32, function(n32, r42) {
              t22 = n32, i32 = r42;
            });
            return typeof Promise != "undefined" && o22 instanceof Promise ? o22.then(function(n32) {
              return [n32, t22, i32];
            }) : [o22, t22, i32];
          }, typeof (r22 == null ? void 0 : r22.useProxies) == "boolean" && this.setUseProxies(r22.useProxies), typeof (r22 == null ? void 0 : r22.autoFreeze) == "boolean" && this.setAutoFreeze(r22.autoFreeze);
        }
        var i22 = e22.prototype;
        return i22.createDraft = function(e32) {
          t$1(e32) || n$2(8), r$2(e32) && (e32 = D$1(e32));
          var i32 = w5(this), o22 = R$1(this, e32, void 0);
          return o22[Q$1].C = true, g$1(i32), o22;
        }, i22.finishDraft = function(r22, t22) {
          var e32 = r22 && r22[Q$1];
          var i32 = e32.A;
          return j5(i32, t22), P$1(void 0, i32);
        }, i22.setAutoFreeze = function(n22) {
          this.F = n22;
        }, i22.setUseProxies = function(r22) {
          r22 && !B$1 && n$2(20), this.g = r22;
        }, i22.applyPatches = function(n22, t22) {
          var e32;
          for (e32 = t22.length - 1; e32 >= 0; e32--) {
            var i32 = t22[e32];
            if (i32.path.length === 0 && i32.op === "replace") {
              n22 = i32.value;
              break;
            }
          }
          e32 > -1 && (t22 = t22.slice(e32 + 1));
          var o22 = b4("Patches").$;
          return r$2(n22) ? o22(n22, t22) : this.produce(n22, function(n32) {
            return o22(n32, t22);
          });
        }, e22;
      }(), an = new un(), fn = an.produce;
      an.produceWithPatches.bind(an);
      var sn = an.setAutoFreeze.bind(an);
      an.setUseProxies.bind(an);
      an.applyPatches.bind(an);
      var ln = an.createDraft.bind(an), dn = an.finishDraft.bind(an);
      function _defineProperty$8(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      var DIRTY_PATHS = /* @__PURE__ */ new WeakMap();
      var DIRTY_PATH_KEYS = /* @__PURE__ */ new WeakMap();
      var FLUSHING = /* @__PURE__ */ new WeakMap();
      var NORMALIZING = /* @__PURE__ */ new WeakMap();
      var PATH_REFS = /* @__PURE__ */ new WeakMap();
      var POINT_REFS = /* @__PURE__ */ new WeakMap();
      var RANGE_REFS = /* @__PURE__ */ new WeakMap();
      function ownKeys$9(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$9(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$9(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$9(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var createEditor$1 = () => {
        var editor = {
          children: [],
          operations: [],
          selection: null,
          marks: null,
          isInline: () => false,
          isVoid: () => false,
          onChange: () => {
          },
          apply: (op) => {
            for (var ref of Editor$1.pathRefs(editor)) {
              PathRef.transform(ref, op);
            }
            for (var _ref of Editor$1.pointRefs(editor)) {
              PointRef.transform(_ref, op);
            }
            for (var _ref2 of Editor$1.rangeRefs(editor)) {
              RangeRef.transform(_ref2, op);
            }
            var oldDirtyPaths = DIRTY_PATHS.get(editor) || [];
            var oldDirtyPathKeys = DIRTY_PATH_KEYS.get(editor) || /* @__PURE__ */ new Set();
            var dirtyPaths;
            var dirtyPathKeys;
            var add2 = (path2) => {
              if (path2) {
                var key = path2.join(",");
                if (!dirtyPathKeys.has(key)) {
                  dirtyPathKeys.add(key);
                  dirtyPaths.push(path2);
                }
              }
            };
            if (Path.operationCanTransformPath(op)) {
              dirtyPaths = [];
              dirtyPathKeys = /* @__PURE__ */ new Set();
              for (var path of oldDirtyPaths) {
                var newPath = Path.transform(path, op);
                add2(newPath);
              }
            } else {
              dirtyPaths = oldDirtyPaths;
              dirtyPathKeys = oldDirtyPathKeys;
            }
            var newDirtyPaths = getDirtyPaths(op);
            for (var _path of newDirtyPaths) {
              add2(_path);
            }
            DIRTY_PATHS.set(editor, dirtyPaths);
            DIRTY_PATH_KEYS.set(editor, dirtyPathKeys);
            Transforms.transform(editor, op);
            editor.operations.push(op);
            Editor$1.normalize(editor);
            if (op.type === "set_selection") {
              editor.marks = null;
            }
            if (!FLUSHING.get(editor)) {
              FLUSHING.set(editor, true);
              Promise.resolve().then(() => {
                FLUSHING.set(editor, false);
                editor.onChange();
                editor.operations = [];
              });
            }
          },
          addMark: (key, value) => {
            var {
              selection
            } = editor;
            if (selection) {
              if (Range.isExpanded(selection)) {
                Transforms.setNodes(editor, {
                  [key]: value
                }, {
                  match: Text.isText,
                  split: true
                });
              } else {
                var marks = _objectSpread$9(_objectSpread$9({}, Editor$1.marks(editor) || {}), {}, {
                  [key]: value
                });
                editor.marks = marks;
                if (!FLUSHING.get(editor)) {
                  editor.onChange();
                }
              }
            }
          },
          deleteBackward: (unit) => {
            var {
              selection
            } = editor;
            if (selection && Range.isCollapsed(selection)) {
              Transforms.delete(editor, {
                unit,
                reverse: true
              });
            }
          },
          deleteForward: (unit) => {
            var {
              selection
            } = editor;
            if (selection && Range.isCollapsed(selection)) {
              Transforms.delete(editor, {
                unit
              });
            }
          },
          deleteFragment: (direction) => {
            var {
              selection
            } = editor;
            if (selection && Range.isExpanded(selection)) {
              Transforms.delete(editor, {
                reverse: direction === "backward"
              });
            }
          },
          getFragment: () => {
            var {
              selection
            } = editor;
            if (selection) {
              return Node$1.fragment(editor, selection);
            }
            return [];
          },
          insertBreak: () => {
            Transforms.splitNodes(editor, {
              always: true
            });
          },
          insertSoftBreak: () => {
            Transforms.splitNodes(editor, {
              always: true
            });
          },
          insertFragment: (fragment) => {
            Transforms.insertFragment(editor, fragment);
          },
          insertNode: (node) => {
            Transforms.insertNodes(editor, node);
          },
          insertText: (text2) => {
            var {
              selection,
              marks
            } = editor;
            if (selection) {
              if (marks) {
                var node = _objectSpread$9({
                  text: text2
                }, marks);
                Transforms.insertNodes(editor, node);
              } else {
                Transforms.insertText(editor, text2);
              }
              editor.marks = null;
            }
          },
          normalizeNode: (entry) => {
            var [node, path] = entry;
            if (Text.isText(node)) {
              return;
            }
            if (Element$1.isElement(node) && node.children.length === 0) {
              var child = {
                text: ""
              };
              Transforms.insertNodes(editor, child, {
                at: path.concat(0),
                voids: true
              });
              return;
            }
            var shouldHaveInlines = Editor$1.isEditor(node) ? false : Element$1.isElement(node) && (editor.isInline(node) || node.children.length === 0 || Text.isText(node.children[0]) || editor.isInline(node.children[0]));
            var n22 = 0;
            for (var i22 = 0; i22 < node.children.length; i22++, n22++) {
              var currentNode = Node$1.get(editor, path);
              if (Text.isText(currentNode))
                continue;
              var _child = node.children[i22];
              var prev = currentNode.children[n22 - 1];
              var isLast = i22 === node.children.length - 1;
              var isInlineOrText = Text.isText(_child) || Element$1.isElement(_child) && editor.isInline(_child);
              if (isInlineOrText !== shouldHaveInlines) {
                Transforms.removeNodes(editor, {
                  at: path.concat(n22),
                  voids: true
                });
                n22--;
              } else if (Element$1.isElement(_child)) {
                if (editor.isInline(_child)) {
                  if (prev == null || !Text.isText(prev)) {
                    var newChild = {
                      text: ""
                    };
                    Transforms.insertNodes(editor, newChild, {
                      at: path.concat(n22),
                      voids: true
                    });
                    n22++;
                  } else if (isLast) {
                    var _newChild = {
                      text: ""
                    };
                    Transforms.insertNodes(editor, _newChild, {
                      at: path.concat(n22 + 1),
                      voids: true
                    });
                    n22++;
                  }
                }
              } else {
                if (prev != null && Text.isText(prev)) {
                  if (Text.equals(_child, prev, {
                    loose: true
                  })) {
                    Transforms.mergeNodes(editor, {
                      at: path.concat(n22),
                      voids: true
                    });
                    n22--;
                  } else if (prev.text === "") {
                    Transforms.removeNodes(editor, {
                      at: path.concat(n22 - 1),
                      voids: true
                    });
                    n22--;
                  } else if (_child.text === "") {
                    Transforms.removeNodes(editor, {
                      at: path.concat(n22),
                      voids: true
                    });
                    n22--;
                  }
                }
              }
            }
          },
          removeMark: (key) => {
            var {
              selection
            } = editor;
            if (selection) {
              if (Range.isExpanded(selection)) {
                Transforms.unsetNodes(editor, key, {
                  match: Text.isText,
                  split: true
                });
              } else {
                var marks = _objectSpread$9({}, Editor$1.marks(editor) || {});
                delete marks[key];
                editor.marks = marks;
                if (!FLUSHING.get(editor)) {
                  editor.onChange();
                }
              }
            }
          }
        };
        return editor;
      };
      var getDirtyPaths = (op) => {
        switch (op.type) {
          case "insert_text":
          case "remove_text":
          case "set_node": {
            var {
              path
            } = op;
            return Path.levels(path);
          }
          case "insert_node": {
            var {
              node,
              path: _path2
            } = op;
            var levels = Path.levels(_path2);
            var descendants = Text.isText(node) ? [] : Array.from(Node$1.nodes(node), (_ref3) => {
              var [, p32] = _ref3;
              return _path2.concat(p32);
            });
            return [...levels, ...descendants];
          }
          case "merge_node": {
            var {
              path: _path3
            } = op;
            var ancestors = Path.ancestors(_path3);
            var previousPath = Path.previous(_path3);
            return [...ancestors, previousPath];
          }
          case "move_node": {
            var {
              path: _path4,
              newPath
            } = op;
            if (Path.equals(_path4, newPath)) {
              return [];
            }
            var oldAncestors = [];
            var newAncestors = [];
            for (var ancestor of Path.ancestors(_path4)) {
              var p22 = Path.transform(ancestor, op);
              oldAncestors.push(p22);
            }
            for (var _ancestor of Path.ancestors(newPath)) {
              var _p = Path.transform(_ancestor, op);
              newAncestors.push(_p);
            }
            var newParent = newAncestors[newAncestors.length - 1];
            var newIndex = newPath[newPath.length - 1];
            var resultPath = newParent.concat(newIndex);
            return [...oldAncestors, ...newAncestors, resultPath];
          }
          case "remove_node": {
            var {
              path: _path5
            } = op;
            var _ancestors = Path.ancestors(_path5);
            return [..._ancestors];
          }
          case "split_node": {
            var {
              path: _path6
            } = op;
            var _levels = Path.levels(_path6);
            var nextPath = Path.next(_path6);
            return [..._levels, nextPath];
          }
          default: {
            return [];
          }
        }
      };
      function _objectWithoutPropertiesLoose$3(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i22;
        for (i22 = 0; i22 < sourceKeys.length; i22++) {
          key = sourceKeys[i22];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      function _objectWithoutProperties$4(source, excluded) {
        if (source == null)
          return {};
        var target = _objectWithoutPropertiesLoose$3(source, excluded);
        var key, i22;
        if (Object.getOwnPropertySymbols) {
          var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
          for (i22 = 0; i22 < sourceSymbolKeys.length; i22++) {
            key = sourceSymbolKeys[i22];
            if (excluded.indexOf(key) >= 0)
              continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key))
              continue;
            target[key] = source[key];
          }
        }
        return target;
      }
      var getCharacterDistance = function getCharacterDistance2(str) {
        var isRTL = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var isLTR = !isRTL;
        var codepoints = isRTL ? codepointsIteratorRTL(str) : str;
        var left = CodepointType.None;
        var right = CodepointType.None;
        var distance = 0;
        var gb11 = null;
        var gb12Or13 = null;
        for (var char of codepoints) {
          var code = char.codePointAt(0);
          if (!code)
            break;
          var type = getCodepointType(char, code);
          [left, right] = isLTR ? [right, type] : [type, left];
          if (intersects(left, CodepointType.ZWJ) && intersects(right, CodepointType.ExtPict)) {
            if (isLTR) {
              gb11 = endsWithEmojiZWJ(str.substring(0, distance));
            } else {
              gb11 = endsWithEmojiZWJ(str.substring(0, str.length - distance));
            }
            if (!gb11)
              break;
          }
          if (intersects(left, CodepointType.RI) && intersects(right, CodepointType.RI)) {
            if (gb12Or13 !== null) {
              gb12Or13 = !gb12Or13;
            } else {
              if (isLTR) {
                gb12Or13 = true;
              } else {
                gb12Or13 = endsWithOddNumberOfRIs(str.substring(0, str.length - distance));
              }
            }
            if (!gb12Or13)
              break;
          }
          if (left !== CodepointType.None && right !== CodepointType.None && isBoundaryPair(left, right)) {
            break;
          }
          distance += char.length;
        }
        return distance || 1;
      };
      var SPACE = /\s/;
      var PUNCTUATION = /[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;
      var CHAMELEON = /['\u2018\u2019]/;
      var getWordDistance = function getWordDistance2(text2) {
        var isRTL = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
        var dist = 0;
        var started = false;
        while (text2.length > 0) {
          var charDist = getCharacterDistance(text2, isRTL);
          var [char, remaining] = splitByCharacterDistance(text2, charDist, isRTL);
          if (isWordCharacter(char, remaining, isRTL)) {
            started = true;
            dist += charDist;
          } else if (!started) {
            dist += charDist;
          } else {
            break;
          }
          text2 = remaining;
        }
        return dist;
      };
      var splitByCharacterDistance = (str, dist, isRTL) => {
        if (isRTL) {
          var at = str.length - dist;
          return [str.slice(at, str.length), str.slice(0, at)];
        }
        return [str.slice(0, dist), str.slice(dist)];
      };
      var isWordCharacter = function isWordCharacter2(char, remaining) {
        var isRTL = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
        if (SPACE.test(char)) {
          return false;
        }
        if (CHAMELEON.test(char)) {
          var charDist = getCharacterDistance(remaining, isRTL);
          var [nextChar, nextRemaining] = splitByCharacterDistance(remaining, charDist, isRTL);
          if (isWordCharacter2(nextChar, nextRemaining, isRTL)) {
            return true;
          }
        }
        if (PUNCTUATION.test(char)) {
          return false;
        }
        return true;
      };
      var codepointsIteratorRTL = function* codepointsIteratorRTL2(str) {
        var end = str.length - 1;
        for (var i22 = 0; i22 < str.length; i22++) {
          var char1 = str.charAt(end - i22);
          if (isLowSurrogate(char1.charCodeAt(0))) {
            var char2 = str.charAt(end - i22 - 1);
            if (isHighSurrogate(char2.charCodeAt(0))) {
              yield char2 + char1;
              i22++;
              continue;
            }
          }
          yield char1;
        }
      };
      var isHighSurrogate = (charCode) => {
        return charCode >= 55296 && charCode <= 56319;
      };
      var isLowSurrogate = (charCode) => {
        return charCode >= 56320 && charCode <= 57343;
      };
      var CodepointType;
      (function(CodepointType2) {
        CodepointType2[CodepointType2["None"] = 0] = "None";
        CodepointType2[CodepointType2["Extend"] = 1] = "Extend";
        CodepointType2[CodepointType2["ZWJ"] = 2] = "ZWJ";
        CodepointType2[CodepointType2["RI"] = 4] = "RI";
        CodepointType2[CodepointType2["Prepend"] = 8] = "Prepend";
        CodepointType2[CodepointType2["SpacingMark"] = 16] = "SpacingMark";
        CodepointType2[CodepointType2["L"] = 32] = "L";
        CodepointType2[CodepointType2["V"] = 64] = "V";
        CodepointType2[CodepointType2["T"] = 128] = "T";
        CodepointType2[CodepointType2["LV"] = 256] = "LV";
        CodepointType2[CodepointType2["LVT"] = 512] = "LVT";
        CodepointType2[CodepointType2["ExtPict"] = 1024] = "ExtPict";
        CodepointType2[CodepointType2["Any"] = 2048] = "Any";
      })(CodepointType || (CodepointType = {}));
      var reExtend = /^(?:[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09BE\u09C1-\u09C4\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3E\u0B3F\u0B41-\u0B44\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE\u0BC0\u0BCD\u0BD7\u0C00\u0C04\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC2\u0CC6\u0CCC\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D3E\u0D41-\u0D44\u0D4D\u0D57\u0D62\u0D63\u0D81\u0DCA\u0DCF\u0DD2-\u0DD4\u0DD6\u0DDF\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1AC0\u1B00-\u1B03\u1B34-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFF9E\uFF9F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF3E\uDF40\uDF57\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB0\uDCB3-\uDCB8\uDCBA\uDCBD\uDCBF\uDCC0\uDCC2\uDCC3\uDDAF\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD30\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65\uDD67-\uDD69\uDD6E-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uD83C[\uDFFB-\uDFFF]|\uDB40[\uDC20-\uDC7F\uDD00-\uDDEF])$/;
      var rePrepend = /^(?:[\u0600-\u0605\u06DD\u070F\u0890\u0891\u08E2\u0D4E]|\uD804[\uDCBD\uDCCD\uDDC2\uDDC3]|\uD806[\uDD3F\uDD41\uDE3A\uDE84-\uDE89]|\uD807\uDD46)$/;
      var reSpacingMark = /^(?:[\u0903\u093B\u093E-\u0940\u0949-\u094C\u094E\u094F\u0982\u0983\u09BF\u09C0\u09C7\u09C8\u09CB\u09CC\u0A03\u0A3E-\u0A40\u0A83\u0ABE-\u0AC0\u0AC9\u0ACB\u0ACC\u0B02\u0B03\u0B40\u0B47\u0B48\u0B4B\u0B4C\u0BBF\u0BC1\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0C01-\u0C03\u0C41-\u0C44\u0C82\u0C83\u0CBE\u0CC0\u0CC1\u0CC3\u0CC4\u0CC7\u0CC8\u0CCA\u0CCB\u0D02\u0D03\u0D3F\u0D40\u0D46-\u0D48\u0D4A-\u0D4C\u0D82\u0D83\u0DD0\u0DD1\u0DD8-\u0DDE\u0DF2\u0DF3\u0E33\u0EB3\u0F3E\u0F3F\u0F7F\u1031\u103B\u103C\u1056\u1057\u1084\u1715\u1734\u17B6\u17BE-\u17C5\u17C7\u17C8\u1923-\u1926\u1929-\u192B\u1930\u1931\u1933-\u1938\u1A19\u1A1A\u1A55\u1A57\u1A6D-\u1A72\u1B04\u1B3B\u1B3D-\u1B41\u1B43\u1B44\u1B82\u1BA1\u1BA6\u1BA7\u1BAA\u1BE7\u1BEA-\u1BEC\u1BEE\u1BF2\u1BF3\u1C24-\u1C2B\u1C34\u1C35\u1CE1\u1CF7\uA823\uA824\uA827\uA880\uA881\uA8B4-\uA8C3\uA952\uA953\uA983\uA9B4\uA9B5\uA9BA\uA9BB\uA9BE-\uA9C0\uAA2F\uAA30\uAA33\uAA34\uAA4D\uAAEB\uAAEE\uAAEF\uAAF5\uABE3\uABE4\uABE6\uABE7\uABE9\uABEA\uABEC]|\uD804[\uDC00\uDC02\uDC82\uDCB0-\uDCB2\uDCB7\uDCB8\uDD2C\uDD45\uDD46\uDD82\uDDB3-\uDDB5\uDDBF\uDDC0\uDDCE\uDE2C-\uDE2E\uDE32\uDE33\uDE35\uDEE0-\uDEE2\uDF02\uDF03\uDF3F\uDF41-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF62\uDF63]|\uD805[\uDC35-\uDC37\uDC40\uDC41\uDC45\uDCB1\uDCB2\uDCB9\uDCBB\uDCBC\uDCBE\uDCC1\uDDB0\uDDB1\uDDB8-\uDDBB\uDDBE\uDE30-\uDE32\uDE3B\uDE3C\uDE3E\uDEAC\uDEAE\uDEAF\uDEB6\uDF26]|\uD806[\uDC2C-\uDC2E\uDC38\uDD31-\uDD35\uDD37\uDD38\uDD3D\uDD40\uDD42\uDDD1-\uDDD3\uDDDC-\uDDDF\uDDE4\uDE39\uDE57\uDE58\uDE97]|\uD807[\uDC2F\uDC3E\uDCA9\uDCB1\uDCB4\uDD8A-\uDD8E\uDD93\uDD94\uDD96\uDEF5\uDEF6]|\uD81B[\uDF51-\uDF87\uDFF0\uDFF1]|\uD834[\uDD66\uDD6D])$/;
      var reL = /^[\u1100-\u115F\uA960-\uA97C]$/;
      var reV = /^[\u1160-\u11A7\uD7B0-\uD7C6]$/;
      var reT = /^[\u11A8-\u11FF\uD7CB-\uD7FB]$/;
      var reLV = /^[\uAC00\uAC1C\uAC38\uAC54\uAC70\uAC8C\uACA8\uACC4\uACE0\uACFC\uAD18\uAD34\uAD50\uAD6C\uAD88\uADA4\uADC0\uADDC\uADF8\uAE14\uAE30\uAE4C\uAE68\uAE84\uAEA0\uAEBC\uAED8\uAEF4\uAF10\uAF2C\uAF48\uAF64\uAF80\uAF9C\uAFB8\uAFD4\uAFF0\uB00C\uB028\uB044\uB060\uB07C\uB098\uB0B4\uB0D0\uB0EC\uB108\uB124\uB140\uB15C\uB178\uB194\uB1B0\uB1CC\uB1E8\uB204\uB220\uB23C\uB258\uB274\uB290\uB2AC\uB2C8\uB2E4\uB300\uB31C\uB338\uB354\uB370\uB38C\uB3A8\uB3C4\uB3E0\uB3FC\uB418\uB434\uB450\uB46C\uB488\uB4A4\uB4C0\uB4DC\uB4F8\uB514\uB530\uB54C\uB568\uB584\uB5A0\uB5BC\uB5D8\uB5F4\uB610\uB62C\uB648\uB664\uB680\uB69C\uB6B8\uB6D4\uB6F0\uB70C\uB728\uB744\uB760\uB77C\uB798\uB7B4\uB7D0\uB7EC\uB808\uB824\uB840\uB85C\uB878\uB894\uB8B0\uB8CC\uB8E8\uB904\uB920\uB93C\uB958\uB974\uB990\uB9AC\uB9C8\uB9E4\uBA00\uBA1C\uBA38\uBA54\uBA70\uBA8C\uBAA8\uBAC4\uBAE0\uBAFC\uBB18\uBB34\uBB50\uBB6C\uBB88\uBBA4\uBBC0\uBBDC\uBBF8\uBC14\uBC30\uBC4C\uBC68\uBC84\uBCA0\uBCBC\uBCD8\uBCF4\uBD10\uBD2C\uBD48\uBD64\uBD80\uBD9C\uBDB8\uBDD4\uBDF0\uBE0C\uBE28\uBE44\uBE60\uBE7C\uBE98\uBEB4\uBED0\uBEEC\uBF08\uBF24\uBF40\uBF5C\uBF78\uBF94\uBFB0\uBFCC\uBFE8\uC004\uC020\uC03C\uC058\uC074\uC090\uC0AC\uC0C8\uC0E4\uC100\uC11C\uC138\uC154\uC170\uC18C\uC1A8\uC1C4\uC1E0\uC1FC\uC218\uC234\uC250\uC26C\uC288\uC2A4\uC2C0\uC2DC\uC2F8\uC314\uC330\uC34C\uC368\uC384\uC3A0\uC3BC\uC3D8\uC3F4\uC410\uC42C\uC448\uC464\uC480\uC49C\uC4B8\uC4D4\uC4F0\uC50C\uC528\uC544\uC560\uC57C\uC598\uC5B4\uC5D0\uC5EC\uC608\uC624\uC640\uC65C\uC678\uC694\uC6B0\uC6CC\uC6E8\uC704\uC720\uC73C\uC758\uC774\uC790\uC7AC\uC7C8\uC7E4\uC800\uC81C\uC838\uC854\uC870\uC88C\uC8A8\uC8C4\uC8E0\uC8FC\uC918\uC934\uC950\uC96C\uC988\uC9A4\uC9C0\uC9DC\uC9F8\uCA14\uCA30\uCA4C\uCA68\uCA84\uCAA0\uCABC\uCAD8\uCAF4\uCB10\uCB2C\uCB48\uCB64\uCB80\uCB9C\uCBB8\uCBD4\uCBF0\uCC0C\uCC28\uCC44\uCC60\uCC7C\uCC98\uCCB4\uCCD0\uCCEC\uCD08\uCD24\uCD40\uCD5C\uCD78\uCD94\uCDB0\uCDCC\uCDE8\uCE04\uCE20\uCE3C\uCE58\uCE74\uCE90\uCEAC\uCEC8\uCEE4\uCF00\uCF1C\uCF38\uCF54\uCF70\uCF8C\uCFA8\uCFC4\uCFE0\uCFFC\uD018\uD034\uD050\uD06C\uD088\uD0A4\uD0C0\uD0DC\uD0F8\uD114\uD130\uD14C\uD168\uD184\uD1A0\uD1BC\uD1D8\uD1F4\uD210\uD22C\uD248\uD264\uD280\uD29C\uD2B8\uD2D4\uD2F0\uD30C\uD328\uD344\uD360\uD37C\uD398\uD3B4\uD3D0\uD3EC\uD408\uD424\uD440\uD45C\uD478\uD494\uD4B0\uD4CC\uD4E8\uD504\uD520\uD53C\uD558\uD574\uD590\uD5AC\uD5C8\uD5E4\uD600\uD61C\uD638\uD654\uD670\uD68C\uD6A8\uD6C4\uD6E0\uD6FC\uD718\uD734\uD750\uD76C\uD788]$/;
      var reLVT = /^[\uAC01-\uAC1B\uAC1D-\uAC37\uAC39-\uAC53\uAC55-\uAC6F\uAC71-\uAC8B\uAC8D-\uACA7\uACA9-\uACC3\uACC5-\uACDF\uACE1-\uACFB\uACFD-\uAD17\uAD19-\uAD33\uAD35-\uAD4F\uAD51-\uAD6B\uAD6D-\uAD87\uAD89-\uADA3\uADA5-\uADBF\uADC1-\uADDB\uADDD-\uADF7\uADF9-\uAE13\uAE15-\uAE2F\uAE31-\uAE4B\uAE4D-\uAE67\uAE69-\uAE83\uAE85-\uAE9F\uAEA1-\uAEBB\uAEBD-\uAED7\uAED9-\uAEF3\uAEF5-\uAF0F\uAF11-\uAF2B\uAF2D-\uAF47\uAF49-\uAF63\uAF65-\uAF7F\uAF81-\uAF9B\uAF9D-\uAFB7\uAFB9-\uAFD3\uAFD5-\uAFEF\uAFF1-\uB00B\uB00D-\uB027\uB029-\uB043\uB045-\uB05F\uB061-\uB07B\uB07D-\uB097\uB099-\uB0B3\uB0B5-\uB0CF\uB0D1-\uB0EB\uB0ED-\uB107\uB109-\uB123\uB125-\uB13F\uB141-\uB15B\uB15D-\uB177\uB179-\uB193\uB195-\uB1AF\uB1B1-\uB1CB\uB1CD-\uB1E7\uB1E9-\uB203\uB205-\uB21F\uB221-\uB23B\uB23D-\uB257\uB259-\uB273\uB275-\uB28F\uB291-\uB2AB\uB2AD-\uB2C7\uB2C9-\uB2E3\uB2E5-\uB2FF\uB301-\uB31B\uB31D-\uB337\uB339-\uB353\uB355-\uB36F\uB371-\uB38B\uB38D-\uB3A7\uB3A9-\uB3C3\uB3C5-\uB3DF\uB3E1-\uB3FB\uB3FD-\uB417\uB419-\uB433\uB435-\uB44F\uB451-\uB46B\uB46D-\uB487\uB489-\uB4A3\uB4A5-\uB4BF\uB4C1-\uB4DB\uB4DD-\uB4F7\uB4F9-\uB513\uB515-\uB52F\uB531-\uB54B\uB54D-\uB567\uB569-\uB583\uB585-\uB59F\uB5A1-\uB5BB\uB5BD-\uB5D7\uB5D9-\uB5F3\uB5F5-\uB60F\uB611-\uB62B\uB62D-\uB647\uB649-\uB663\uB665-\uB67F\uB681-\uB69B\uB69D-\uB6B7\uB6B9-\uB6D3\uB6D5-\uB6EF\uB6F1-\uB70B\uB70D-\uB727\uB729-\uB743\uB745-\uB75F\uB761-\uB77B\uB77D-\uB797\uB799-\uB7B3\uB7B5-\uB7CF\uB7D1-\uB7EB\uB7ED-\uB807\uB809-\uB823\uB825-\uB83F\uB841-\uB85B\uB85D-\uB877\uB879-\uB893\uB895-\uB8AF\uB8B1-\uB8CB\uB8CD-\uB8E7\uB8E9-\uB903\uB905-\uB91F\uB921-\uB93B\uB93D-\uB957\uB959-\uB973\uB975-\uB98F\uB991-\uB9AB\uB9AD-\uB9C7\uB9C9-\uB9E3\uB9E5-\uB9FF\uBA01-\uBA1B\uBA1D-\uBA37\uBA39-\uBA53\uBA55-\uBA6F\uBA71-\uBA8B\uBA8D-\uBAA7\uBAA9-\uBAC3\uBAC5-\uBADF\uBAE1-\uBAFB\uBAFD-\uBB17\uBB19-\uBB33\uBB35-\uBB4F\uBB51-\uBB6B\uBB6D-\uBB87\uBB89-\uBBA3\uBBA5-\uBBBF\uBBC1-\uBBDB\uBBDD-\uBBF7\uBBF9-\uBC13\uBC15-\uBC2F\uBC31-\uBC4B\uBC4D-\uBC67\uBC69-\uBC83\uBC85-\uBC9F\uBCA1-\uBCBB\uBCBD-\uBCD7\uBCD9-\uBCF3\uBCF5-\uBD0F\uBD11-\uBD2B\uBD2D-\uBD47\uBD49-\uBD63\uBD65-\uBD7F\uBD81-\uBD9B\uBD9D-\uBDB7\uBDB9-\uBDD3\uBDD5-\uBDEF\uBDF1-\uBE0B\uBE0D-\uBE27\uBE29-\uBE43\uBE45-\uBE5F\uBE61-\uBE7B\uBE7D-\uBE97\uBE99-\uBEB3\uBEB5-\uBECF\uBED1-\uBEEB\uBEED-\uBF07\uBF09-\uBF23\uBF25-\uBF3F\uBF41-\uBF5B\uBF5D-\uBF77\uBF79-\uBF93\uBF95-\uBFAF\uBFB1-\uBFCB\uBFCD-\uBFE7\uBFE9-\uC003\uC005-\uC01F\uC021-\uC03B\uC03D-\uC057\uC059-\uC073\uC075-\uC08F\uC091-\uC0AB\uC0AD-\uC0C7\uC0C9-\uC0E3\uC0E5-\uC0FF\uC101-\uC11B\uC11D-\uC137\uC139-\uC153\uC155-\uC16F\uC171-\uC18B\uC18D-\uC1A7\uC1A9-\uC1C3\uC1C5-\uC1DF\uC1E1-\uC1FB\uC1FD-\uC217\uC219-\uC233\uC235-\uC24F\uC251-\uC26B\uC26D-\uC287\uC289-\uC2A3\uC2A5-\uC2BF\uC2C1-\uC2DB\uC2DD-\uC2F7\uC2F9-\uC313\uC315-\uC32F\uC331-\uC34B\uC34D-\uC367\uC369-\uC383\uC385-\uC39F\uC3A1-\uC3BB\uC3BD-\uC3D7\uC3D9-\uC3F3\uC3F5-\uC40F\uC411-\uC42B\uC42D-\uC447\uC449-\uC463\uC465-\uC47F\uC481-\uC49B\uC49D-\uC4B7\uC4B9-\uC4D3\uC4D5-\uC4EF\uC4F1-\uC50B\uC50D-\uC527\uC529-\uC543\uC545-\uC55F\uC561-\uC57B\uC57D-\uC597\uC599-\uC5B3\uC5B5-\uC5CF\uC5D1-\uC5EB\uC5ED-\uC607\uC609-\uC623\uC625-\uC63F\uC641-\uC65B\uC65D-\uC677\uC679-\uC693\uC695-\uC6AF\uC6B1-\uC6CB\uC6CD-\uC6E7\uC6E9-\uC703\uC705-\uC71F\uC721-\uC73B\uC73D-\uC757\uC759-\uC773\uC775-\uC78F\uC791-\uC7AB\uC7AD-\uC7C7\uC7C9-\uC7E3\uC7E5-\uC7FF\uC801-\uC81B\uC81D-\uC837\uC839-\uC853\uC855-\uC86F\uC871-\uC88B\uC88D-\uC8A7\uC8A9-\uC8C3\uC8C5-\uC8DF\uC8E1-\uC8FB\uC8FD-\uC917\uC919-\uC933\uC935-\uC94F\uC951-\uC96B\uC96D-\uC987\uC989-\uC9A3\uC9A5-\uC9BF\uC9C1-\uC9DB\uC9DD-\uC9F7\uC9F9-\uCA13\uCA15-\uCA2F\uCA31-\uCA4B\uCA4D-\uCA67\uCA69-\uCA83\uCA85-\uCA9F\uCAA1-\uCABB\uCABD-\uCAD7\uCAD9-\uCAF3\uCAF5-\uCB0F\uCB11-\uCB2B\uCB2D-\uCB47\uCB49-\uCB63\uCB65-\uCB7F\uCB81-\uCB9B\uCB9D-\uCBB7\uCBB9-\uCBD3\uCBD5-\uCBEF\uCBF1-\uCC0B\uCC0D-\uCC27\uCC29-\uCC43\uCC45-\uCC5F\uCC61-\uCC7B\uCC7D-\uCC97\uCC99-\uCCB3\uCCB5-\uCCCF\uCCD1-\uCCEB\uCCED-\uCD07\uCD09-\uCD23\uCD25-\uCD3F\uCD41-\uCD5B\uCD5D-\uCD77\uCD79-\uCD93\uCD95-\uCDAF\uCDB1-\uCDCB\uCDCD-\uCDE7\uCDE9-\uCE03\uCE05-\uCE1F\uCE21-\uCE3B\uCE3D-\uCE57\uCE59-\uCE73\uCE75-\uCE8F\uCE91-\uCEAB\uCEAD-\uCEC7\uCEC9-\uCEE3\uCEE5-\uCEFF\uCF01-\uCF1B\uCF1D-\uCF37\uCF39-\uCF53\uCF55-\uCF6F\uCF71-\uCF8B\uCF8D-\uCFA7\uCFA9-\uCFC3\uCFC5-\uCFDF\uCFE1-\uCFFB\uCFFD-\uD017\uD019-\uD033\uD035-\uD04F\uD051-\uD06B\uD06D-\uD087\uD089-\uD0A3\uD0A5-\uD0BF\uD0C1-\uD0DB\uD0DD-\uD0F7\uD0F9-\uD113\uD115-\uD12F\uD131-\uD14B\uD14D-\uD167\uD169-\uD183\uD185-\uD19F\uD1A1-\uD1BB\uD1BD-\uD1D7\uD1D9-\uD1F3\uD1F5-\uD20F\uD211-\uD22B\uD22D-\uD247\uD249-\uD263\uD265-\uD27F\uD281-\uD29B\uD29D-\uD2B7\uD2B9-\uD2D3\uD2D5-\uD2EF\uD2F1-\uD30B\uD30D-\uD327\uD329-\uD343\uD345-\uD35F\uD361-\uD37B\uD37D-\uD397\uD399-\uD3B3\uD3B5-\uD3CF\uD3D1-\uD3EB\uD3ED-\uD407\uD409-\uD423\uD425-\uD43F\uD441-\uD45B\uD45D-\uD477\uD479-\uD493\uD495-\uD4AF\uD4B1-\uD4CB\uD4CD-\uD4E7\uD4E9-\uD503\uD505-\uD51F\uD521-\uD53B\uD53D-\uD557\uD559-\uD573\uD575-\uD58F\uD591-\uD5AB\uD5AD-\uD5C7\uD5C9-\uD5E3\uD5E5-\uD5FF\uD601-\uD61B\uD61D-\uD637\uD639-\uD653\uD655-\uD66F\uD671-\uD68B\uD68D-\uD6A7\uD6A9-\uD6C3\uD6C5-\uD6DF\uD6E1-\uD6FB\uD6FD-\uD717\uD719-\uD733\uD735-\uD74F\uD751-\uD76B\uD76D-\uD787\uD789-\uD7A3]$/;
      var reExtPict = /^(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])$/;
      var getCodepointType = (char, code) => {
        var type = CodepointType.Any;
        if (char.search(reExtend) !== -1) {
          type |= CodepointType.Extend;
        }
        if (code === 8205) {
          type |= CodepointType.ZWJ;
        }
        if (code >= 127462 && code <= 127487) {
          type |= CodepointType.RI;
        }
        if (char.search(rePrepend) !== -1) {
          type |= CodepointType.Prepend;
        }
        if (char.search(reSpacingMark) !== -1) {
          type |= CodepointType.SpacingMark;
        }
        if (char.search(reL) !== -1) {
          type |= CodepointType.L;
        }
        if (char.search(reV) !== -1) {
          type |= CodepointType.V;
        }
        if (char.search(reT) !== -1) {
          type |= CodepointType.T;
        }
        if (char.search(reLV) !== -1) {
          type |= CodepointType.LV;
        }
        if (char.search(reLVT) !== -1) {
          type |= CodepointType.LVT;
        }
        if (char.search(reExtPict) !== -1) {
          type |= CodepointType.ExtPict;
        }
        return type;
      };
      function intersects(x22, y22) {
        return (x22 & y22) !== 0;
      }
      var NonBoundaryPairs = [
        [CodepointType.L, CodepointType.L | CodepointType.V | CodepointType.LV | CodepointType.LVT],
        [CodepointType.LV | CodepointType.V, CodepointType.V | CodepointType.T],
        [CodepointType.LVT | CodepointType.T, CodepointType.T],
        [CodepointType.Any, CodepointType.Extend | CodepointType.ZWJ],
        [CodepointType.Any, CodepointType.SpacingMark],
        [CodepointType.Prepend, CodepointType.Any],
        [CodepointType.ZWJ, CodepointType.ExtPict],
        [CodepointType.RI, CodepointType.RI]
      ];
      function isBoundaryPair(left, right) {
        return NonBoundaryPairs.findIndex((r22) => intersects(left, r22[0]) && intersects(right, r22[1])) === -1;
      }
      var endingEmojiZWJ = /(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])(?:[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09BE\u09C1-\u09C4\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3E\u0B3F\u0B41-\u0B44\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE\u0BC0\u0BCD\u0BD7\u0C00\u0C04\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC2\u0CC6\u0CCC\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D3E\u0D41-\u0D44\u0D4D\u0D57\u0D62\u0D63\u0D81\u0DCA\u0DCF\u0DD2-\u0DD4\u0DD6\u0DDF\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1AC0\u1B00-\u1B03\u1B34-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFF9E\uFF9F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF3E\uDF40\uDF57\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB0\uDCB3-\uDCB8\uDCBA\uDCBD\uDCBF\uDCC0\uDCC2\uDCC3\uDDAF\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD30\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65\uDD67-\uDD69\uDD6E-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uD83C[\uDFFB-\uDFFF]|\uDB40[\uDC20-\uDC7F\uDD00-\uDDEF])*\u200D$/;
      var endsWithEmojiZWJ = (str) => {
        return str.search(endingEmojiZWJ) !== -1;
      };
      var endingRIs = /(?:\uD83C[\uDDE6-\uDDFF])+$/g;
      var endsWithOddNumberOfRIs = (str) => {
        var match5 = str.match(endingRIs);
        if (match5 === null) {
          return false;
        } else {
          var numRIs = match5[0].length / 2;
          return numRIs % 2 === 1;
        }
      };
      var isElement$1 = (value) => {
        return isPlainObject$4(value) && Node$1.isNodeList(value.children) && !Editor$1.isEditor(value);
      };
      var Element$1 = {
        isAncestor(value) {
          return isPlainObject$4(value) && Node$1.isNodeList(value.children);
        },
        isElement: isElement$1,
        isElementList(value) {
          return Array.isArray(value) && value.every((val) => Element$1.isElement(val));
        },
        isElementProps(props) {
          return props.children !== void 0;
        },
        isElementType: function isElementType(value, elementVal) {
          var elementKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "type";
          return isElement$1(value) && value[elementKey] === elementVal;
        },
        matches(element, props) {
          for (var key in props) {
            if (key === "children") {
              continue;
            }
            if (element[key] !== props[key]) {
              return false;
            }
          }
          return true;
        }
      };
      var _excluded$4 = ["text"], _excluded2$3 = ["text"];
      function ownKeys$8(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$8(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$8(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$8(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var IS_EDITOR_CACHE = /* @__PURE__ */ new WeakMap();
      var Editor$1 = {
        above(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            voids = false,
            mode = "lowest",
            at = editor.selection,
            match: match5
          } = options;
          if (!at) {
            return;
          }
          var path = Editor$1.path(editor, at);
          var reverse = mode === "lowest";
          for (var [n22, p22] of Editor$1.levels(editor, {
            at: path,
            voids,
            match: match5,
            reverse
          })) {
            if (!Text.isText(n22) && !Path.equals(path, p22)) {
              return [n22, p22];
            }
          }
        },
        addMark(editor, key, value) {
          editor.addMark(key, value);
        },
        after(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var anchor = Editor$1.point(editor, at, {
            edge: "end"
          });
          var focus = Editor$1.end(editor, []);
          var range = {
            anchor,
            focus
          };
          var {
            distance = 1
          } = options;
          var d22 = 0;
          var target;
          for (var p22 of Editor$1.positions(editor, _objectSpread$8(_objectSpread$8({}, options), {}, {
            at: range
          }))) {
            if (d22 > distance) {
              break;
            }
            if (d22 !== 0) {
              target = p22;
            }
            d22++;
          }
          return target;
        },
        before(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var anchor = Editor$1.start(editor, []);
          var focus = Editor$1.point(editor, at, {
            edge: "start"
          });
          var range = {
            anchor,
            focus
          };
          var {
            distance = 1
          } = options;
          var d22 = 0;
          var target;
          for (var p22 of Editor$1.positions(editor, _objectSpread$8(_objectSpread$8({}, options), {}, {
            at: range,
            reverse: true
          }))) {
            if (d22 > distance) {
              break;
            }
            if (d22 !== 0) {
              target = p22;
            }
            d22++;
          }
          return target;
        },
        deleteBackward(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            unit = "character"
          } = options;
          editor.deleteBackward(unit);
        },
        deleteForward(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            unit = "character"
          } = options;
          editor.deleteForward(unit);
        },
        deleteFragment(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            direction = "forward"
          } = options;
          editor.deleteFragment(direction);
        },
        edges(editor, at) {
          return [Editor$1.start(editor, at), Editor$1.end(editor, at)];
        },
        end(editor, at) {
          return Editor$1.point(editor, at, {
            edge: "end"
          });
        },
        first(editor, at) {
          var path = Editor$1.path(editor, at, {
            edge: "start"
          });
          return Editor$1.node(editor, path);
        },
        fragment(editor, at) {
          var range = Editor$1.range(editor, at);
          var fragment = Node$1.fragment(editor, range);
          return fragment;
        },
        hasBlocks(editor, element) {
          return element.children.some((n22) => Editor$1.isBlock(editor, n22));
        },
        hasInlines(editor, element) {
          return element.children.some((n22) => Text.isText(n22) || Editor$1.isInline(editor, n22));
        },
        hasTexts(editor, element) {
          return element.children.every((n22) => Text.isText(n22));
        },
        insertBreak(editor) {
          editor.insertBreak();
        },
        insertSoftBreak(editor) {
          editor.insertSoftBreak();
        },
        insertFragment(editor, fragment) {
          editor.insertFragment(fragment);
        },
        insertNode(editor, node) {
          editor.insertNode(node);
        },
        insertText(editor, text2) {
          editor.insertText(text2);
        },
        isBlock(editor, value) {
          return Element$1.isElement(value) && !editor.isInline(value);
        },
        isEditor(value) {
          if (!isPlainObject$4(value))
            return false;
          var cachedIsEditor = IS_EDITOR_CACHE.get(value);
          if (cachedIsEditor !== void 0) {
            return cachedIsEditor;
          }
          var isEditor = typeof value.addMark === "function" && typeof value.apply === "function" && typeof value.deleteBackward === "function" && typeof value.deleteForward === "function" && typeof value.deleteFragment === "function" && typeof value.insertBreak === "function" && typeof value.insertSoftBreak === "function" && typeof value.insertFragment === "function" && typeof value.insertNode === "function" && typeof value.insertText === "function" && typeof value.isInline === "function" && typeof value.isVoid === "function" && typeof value.normalizeNode === "function" && typeof value.onChange === "function" && typeof value.removeMark === "function" && (value.marks === null || isPlainObject$4(value.marks)) && (value.selection === null || Range.isRange(value.selection)) && Node$1.isNodeList(value.children) && Operation.isOperationList(value.operations);
          IS_EDITOR_CACHE.set(value, isEditor);
          return isEditor;
        },
        isEnd(editor, point2, at) {
          var end = Editor$1.end(editor, at);
          return Point.equals(point2, end);
        },
        isEdge(editor, point2, at) {
          return Editor$1.isStart(editor, point2, at) || Editor$1.isEnd(editor, point2, at);
        },
        isEmpty(editor, element) {
          var {
            children
          } = element;
          var [first] = children;
          return children.length === 0 || children.length === 1 && Text.isText(first) && first.text === "" && !editor.isVoid(element);
        },
        isInline(editor, value) {
          return Element$1.isElement(value) && editor.isInline(value);
        },
        isNormalizing(editor) {
          var isNormalizing = NORMALIZING.get(editor);
          return isNormalizing === void 0 ? true : isNormalizing;
        },
        isStart(editor, point2, at) {
          if (point2.offset !== 0) {
            return false;
          }
          var start = Editor$1.start(editor, at);
          return Point.equals(point2, start);
        },
        isVoid(editor, value) {
          return Element$1.isElement(value) && editor.isVoid(value);
        },
        last(editor, at) {
          var path = Editor$1.path(editor, at, {
            edge: "end"
          });
          return Editor$1.node(editor, path);
        },
        leaf(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var path = Editor$1.path(editor, at, options);
          var node = Node$1.leaf(editor, path);
          return [node, path];
        },
        *levels(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            at = editor.selection,
            reverse = false,
            voids = false
          } = options;
          var {
            match: match5
          } = options;
          if (match5 == null) {
            match5 = () => true;
          }
          if (!at) {
            return;
          }
          var levels = [];
          var path = Editor$1.path(editor, at);
          for (var [n22, p22] of Node$1.levels(editor, path)) {
            if (!match5(n22, p22)) {
              continue;
            }
            levels.push([n22, p22]);
            if (!voids && Editor$1.isVoid(editor, n22)) {
              break;
            }
          }
          if (reverse) {
            levels.reverse();
          }
          yield* levels;
        },
        marks(editor) {
          var {
            marks,
            selection
          } = editor;
          if (!selection) {
            return null;
          }
          if (marks) {
            return marks;
          }
          if (Range.isExpanded(selection)) {
            var [match5] = Editor$1.nodes(editor, {
              match: Text.isText
            });
            if (match5) {
              var [_node] = match5;
              var _rest = _objectWithoutProperties$4(_node, _excluded$4);
              return _rest;
            } else {
              return {};
            }
          }
          var {
            anchor
          } = selection;
          var {
            path
          } = anchor;
          var [node] = Editor$1.leaf(editor, path);
          if (anchor.offset === 0) {
            var prev = Editor$1.previous(editor, {
              at: path,
              match: Text.isText
            });
            var block = Editor$1.above(editor, {
              match: (n22) => Editor$1.isBlock(editor, n22)
            });
            if (prev && block) {
              var [prevNode, prevPath] = prev;
              var [, blockPath] = block;
              if (Path.isAncestor(blockPath, prevPath)) {
                node = prevNode;
              }
            }
          }
          var rest = _objectWithoutProperties$4(node, _excluded2$3);
          return rest;
        },
        next(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            mode = "lowest",
            voids = false
          } = options;
          var {
            match: match5,
            at = editor.selection
          } = options;
          if (!at) {
            return;
          }
          var pointAfterLocation = Editor$1.after(editor, at, {
            voids
          });
          if (!pointAfterLocation)
            return;
          var [, to22] = Editor$1.last(editor, []);
          var span = [pointAfterLocation.path, to22];
          if (Path.isPath(at) && at.length === 0) {
            throw new Error("Cannot get the next node from the root node!");
          }
          if (match5 == null) {
            if (Path.isPath(at)) {
              var [parent2] = Editor$1.parent(editor, at);
              match5 = (n22) => parent2.children.includes(n22);
            } else {
              match5 = () => true;
            }
          }
          var [next] = Editor$1.nodes(editor, {
            at: span,
            match: match5,
            mode,
            voids
          });
          return next;
        },
        node(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var path = Editor$1.path(editor, at, options);
          var node = Node$1.get(editor, path);
          return [node, path];
        },
        *nodes(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            at = editor.selection,
            mode = "all",
            universal = false,
            reverse = false,
            voids = false
          } = options;
          var {
            match: match5
          } = options;
          if (!match5) {
            match5 = () => true;
          }
          if (!at) {
            return;
          }
          var from2;
          var to22;
          if (Span.isSpan(at)) {
            from2 = at[0];
            to22 = at[1];
          } else {
            var first = Editor$1.path(editor, at, {
              edge: "start"
            });
            var last2 = Editor$1.path(editor, at, {
              edge: "end"
            });
            from2 = reverse ? last2 : first;
            to22 = reverse ? first : last2;
          }
          var nodeEntries = Node$1.nodes(editor, {
            reverse,
            from: from2,
            to: to22,
            pass: (_ref) => {
              var [n22] = _ref;
              return voids ? false : Editor$1.isVoid(editor, n22);
            }
          });
          var matches = [];
          var hit;
          for (var [node, path] of nodeEntries) {
            var isLower = hit && Path.compare(path, hit[1]) === 0;
            if (mode === "highest" && isLower) {
              continue;
            }
            if (!match5(node, path)) {
              if (universal && !isLower && Text.isText(node)) {
                return;
              } else {
                continue;
              }
            }
            if (mode === "lowest" && isLower) {
              hit = [node, path];
              continue;
            }
            var emit = mode === "lowest" ? hit : [node, path];
            if (emit) {
              if (universal) {
                matches.push(emit);
              } else {
                yield emit;
              }
            }
            hit = [node, path];
          }
          if (mode === "lowest" && hit) {
            if (universal) {
              matches.push(hit);
            } else {
              yield hit;
            }
          }
          if (universal) {
            yield* matches;
          }
        },
        normalize(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            force = false
          } = options;
          var getDirtyPaths2 = (editor2) => {
            return DIRTY_PATHS.get(editor2) || [];
          };
          var getDirtyPathKeys = (editor2) => {
            return DIRTY_PATH_KEYS.get(editor2) || /* @__PURE__ */ new Set();
          };
          var popDirtyPath = (editor2) => {
            var path = getDirtyPaths2(editor2).pop();
            var key = path.join(",");
            getDirtyPathKeys(editor2).delete(key);
            return path;
          };
          if (!Editor$1.isNormalizing(editor)) {
            return;
          }
          if (force) {
            var allPaths = Array.from(Node$1.nodes(editor), (_ref2) => {
              var [, p22] = _ref2;
              return p22;
            });
            var allPathKeys = new Set(allPaths.map((p22) => p22.join(",")));
            DIRTY_PATHS.set(editor, allPaths);
            DIRTY_PATH_KEYS.set(editor, allPathKeys);
          }
          if (getDirtyPaths2(editor).length === 0) {
            return;
          }
          Editor$1.withoutNormalizing(editor, () => {
            for (var dirtyPath of getDirtyPaths2(editor)) {
              if (Node$1.has(editor, dirtyPath)) {
                var entry = Editor$1.node(editor, dirtyPath);
                var [node, _22] = entry;
                if (Element$1.isElement(node) && node.children.length === 0) {
                  editor.normalizeNode(entry);
                }
              }
            }
            var max2 = getDirtyPaths2(editor).length * 42;
            var m22 = 0;
            while (getDirtyPaths2(editor).length !== 0) {
              if (m22 > max2) {
                throw new Error("\n            Could not completely normalize the editor after ".concat(max2, " iterations! This is usually due to incorrect normalization logic that leaves a node in an invalid state.\n          "));
              }
              var _dirtyPath = popDirtyPath(editor);
              if (Node$1.has(editor, _dirtyPath)) {
                var _entry = Editor$1.node(editor, _dirtyPath);
                editor.normalizeNode(_entry);
              }
              m22++;
            }
          });
        },
        parent(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var path = Editor$1.path(editor, at, options);
          var parentPath = Path.parent(path);
          var entry = Editor$1.node(editor, parentPath);
          return entry;
        },
        path(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            depth,
            edge
          } = options;
          if (Path.isPath(at)) {
            if (edge === "start") {
              var [, firstPath] = Node$1.first(editor, at);
              at = firstPath;
            } else if (edge === "end") {
              var [, lastPath] = Node$1.last(editor, at);
              at = lastPath;
            }
          }
          if (Range.isRange(at)) {
            if (edge === "start") {
              at = Range.start(at);
            } else if (edge === "end") {
              at = Range.end(at);
            } else {
              at = Path.common(at.anchor.path, at.focus.path);
            }
          }
          if (Point.isPoint(at)) {
            at = at.path;
          }
          if (depth != null) {
            at = at.slice(0, depth);
          }
          return at;
        },
        hasPath(editor, path) {
          return Node$1.has(editor, path);
        },
        pathRef(editor, path) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            affinity = "forward"
          } = options;
          var ref = {
            current: path,
            affinity,
            unref() {
              var {
                current
              } = ref;
              var pathRefs = Editor$1.pathRefs(editor);
              pathRefs.delete(ref);
              ref.current = null;
              return current;
            }
          };
          var refs = Editor$1.pathRefs(editor);
          refs.add(ref);
          return ref;
        },
        pathRefs(editor) {
          var refs = PATH_REFS.get(editor);
          if (!refs) {
            refs = /* @__PURE__ */ new Set();
            PATH_REFS.set(editor, refs);
          }
          return refs;
        },
        point(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            edge = "start"
          } = options;
          if (Path.isPath(at)) {
            var path;
            if (edge === "end") {
              var [, lastPath] = Node$1.last(editor, at);
              path = lastPath;
            } else {
              var [, firstPath] = Node$1.first(editor, at);
              path = firstPath;
            }
            var node = Node$1.get(editor, path);
            if (!Text.isText(node)) {
              throw new Error("Cannot get the ".concat(edge, " point in the node at path [").concat(at, "] because it has no ").concat(edge, " text node."));
            }
            return {
              path,
              offset: edge === "end" ? node.text.length : 0
            };
          }
          if (Range.isRange(at)) {
            var [start, end] = Range.edges(at);
            return edge === "start" ? start : end;
          }
          return at;
        },
        pointRef(editor, point2) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            affinity = "forward"
          } = options;
          var ref = {
            current: point2,
            affinity,
            unref() {
              var {
                current
              } = ref;
              var pointRefs = Editor$1.pointRefs(editor);
              pointRefs.delete(ref);
              ref.current = null;
              return current;
            }
          };
          var refs = Editor$1.pointRefs(editor);
          refs.add(ref);
          return ref;
        },
        pointRefs(editor) {
          var refs = POINT_REFS.get(editor);
          if (!refs) {
            refs = /* @__PURE__ */ new Set();
            POINT_REFS.set(editor, refs);
          }
          return refs;
        },
        *positions(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            at = editor.selection,
            unit = "offset",
            reverse = false,
            voids = false
          } = options;
          if (!at) {
            return;
          }
          var range = Editor$1.range(editor, at);
          var [start, end] = Range.edges(range);
          var first = reverse ? end : start;
          var isNewBlock = false;
          var blockText = "";
          var distance = 0;
          var leafTextRemaining = 0;
          var leafTextOffset = 0;
          for (var [node, path] of Editor$1.nodes(editor, {
            at,
            reverse,
            voids
          })) {
            if (Element$1.isElement(node)) {
              if (!voids && editor.isVoid(node)) {
                yield Editor$1.start(editor, path);
                continue;
              }
              if (editor.isInline(node))
                continue;
              if (Editor$1.hasInlines(editor, node)) {
                var e22 = Path.isAncestor(path, end.path) ? end : Editor$1.end(editor, path);
                var s22 = Path.isAncestor(path, start.path) ? start : Editor$1.start(editor, path);
                blockText = Editor$1.string(editor, {
                  anchor: s22,
                  focus: e22
                }, {
                  voids
                });
                isNewBlock = true;
              }
            }
            if (Text.isText(node)) {
              var isFirst = Path.equals(path, first.path);
              if (isFirst) {
                leafTextRemaining = reverse ? first.offset : node.text.length - first.offset;
                leafTextOffset = first.offset;
              } else {
                leafTextRemaining = node.text.length;
                leafTextOffset = reverse ? leafTextRemaining : 0;
              }
              if (isFirst || isNewBlock || unit === "offset") {
                yield {
                  path,
                  offset: leafTextOffset
                };
                isNewBlock = false;
              }
              while (true) {
                if (distance === 0) {
                  if (blockText === "")
                    break;
                  distance = calcDistance(blockText, unit, reverse);
                  blockText = splitByCharacterDistance(blockText, distance, reverse)[1];
                }
                leafTextOffset = reverse ? leafTextOffset - distance : leafTextOffset + distance;
                leafTextRemaining = leafTextRemaining - distance;
                if (leafTextRemaining < 0) {
                  distance = -leafTextRemaining;
                  break;
                }
                distance = 0;
                yield {
                  path,
                  offset: leafTextOffset
                };
              }
            }
          }
          function calcDistance(text2, unit2, reverse2) {
            if (unit2 === "character") {
              return getCharacterDistance(text2, reverse2);
            } else if (unit2 === "word") {
              return getWordDistance(text2, reverse2);
            } else if (unit2 === "line" || unit2 === "block") {
              return text2.length;
            }
            return 1;
          }
        },
        previous(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            mode = "lowest",
            voids = false
          } = options;
          var {
            match: match5,
            at = editor.selection
          } = options;
          if (!at) {
            return;
          }
          var pointBeforeLocation = Editor$1.before(editor, at, {
            voids
          });
          if (!pointBeforeLocation) {
            return;
          }
          var [, to22] = Editor$1.first(editor, []);
          var span = [pointBeforeLocation.path, to22];
          if (Path.isPath(at) && at.length === 0) {
            throw new Error("Cannot get the previous node from the root node!");
          }
          if (match5 == null) {
            if (Path.isPath(at)) {
              var [parent2] = Editor$1.parent(editor, at);
              match5 = (n22) => parent2.children.includes(n22);
            } else {
              match5 = () => true;
            }
          }
          var [previous2] = Editor$1.nodes(editor, {
            reverse: true,
            at: span,
            match: match5,
            mode,
            voids
          });
          return previous2;
        },
        range(editor, at, to22) {
          if (Range.isRange(at) && !to22) {
            return at;
          }
          var start = Editor$1.start(editor, at);
          var end = Editor$1.end(editor, to22 || at);
          return {
            anchor: start,
            focus: end
          };
        },
        rangeRef(editor, range) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            affinity = "forward"
          } = options;
          var ref = {
            current: range,
            affinity,
            unref() {
              var {
                current
              } = ref;
              var rangeRefs = Editor$1.rangeRefs(editor);
              rangeRefs.delete(ref);
              ref.current = null;
              return current;
            }
          };
          var refs = Editor$1.rangeRefs(editor);
          refs.add(ref);
          return ref;
        },
        rangeRefs(editor) {
          var refs = RANGE_REFS.get(editor);
          if (!refs) {
            refs = /* @__PURE__ */ new Set();
            RANGE_REFS.set(editor, refs);
          }
          return refs;
        },
        removeMark(editor, key) {
          editor.removeMark(key);
        },
        setNormalizing(editor, isNormalizing) {
          NORMALIZING.set(editor, isNormalizing);
        },
        start(editor, at) {
          return Editor$1.point(editor, at, {
            edge: "start"
          });
        },
        string(editor, at) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            voids = false
          } = options;
          var range = Editor$1.range(editor, at);
          var [start, end] = Range.edges(range);
          var text2 = "";
          for (var [node, path] of Editor$1.nodes(editor, {
            at: range,
            match: Text.isText,
            voids
          })) {
            var t22 = node.text;
            if (Path.equals(path, end.path)) {
              t22 = t22.slice(0, end.offset);
            }
            if (Path.equals(path, start.path)) {
              t22 = t22.slice(start.offset);
            }
            text2 += t22;
          }
          return text2;
        },
        unhangRange(editor, range) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            voids = false
          } = options;
          var [start, end] = Range.edges(range);
          if (start.offset !== 0 || end.offset !== 0 || Range.isCollapsed(range)) {
            return range;
          }
          var endBlock = Editor$1.above(editor, {
            at: end,
            match: (n22) => Editor$1.isBlock(editor, n22)
          });
          var blockPath = endBlock ? endBlock[1] : [];
          var first = Editor$1.start(editor, start);
          var before = {
            anchor: first,
            focus: end
          };
          var skip = true;
          for (var [node, path] of Editor$1.nodes(editor, {
            at: before,
            match: Text.isText,
            reverse: true,
            voids
          })) {
            if (skip) {
              skip = false;
              continue;
            }
            if (node.text !== "" || Path.isBefore(path, blockPath)) {
              end = {
                path,
                offset: node.text.length
              };
              break;
            }
          }
          return {
            anchor: start,
            focus: end
          };
        },
        void(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          return Editor$1.above(editor, _objectSpread$8(_objectSpread$8({}, options), {}, {
            match: (n22) => Editor$1.isVoid(editor, n22)
          }));
        },
        withoutNormalizing(editor, fn2) {
          var value = Editor$1.isNormalizing(editor);
          Editor$1.setNormalizing(editor, false);
          try {
            fn2();
          } finally {
            Editor$1.setNormalizing(editor, value);
          }
          Editor$1.normalize(editor);
        }
      };
      var Span = {
        isSpan(value) {
          return Array.isArray(value) && value.length === 2 && value.every(Path.isPath);
        }
      };
      var _excluded$3 = ["children"], _excluded2$2 = ["text"];
      var IS_NODE_LIST_CACHE = /* @__PURE__ */ new WeakMap();
      var Node$1 = {
        ancestor(root2, path) {
          var node = Node$1.get(root2, path);
          if (Text.isText(node)) {
            throw new Error("Cannot get the ancestor node at path [".concat(path, "] because it refers to a text node instead: ").concat(Scrubber.stringify(node)));
          }
          return node;
        },
        *ancestors(root2, path) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          for (var p22 of Path.ancestors(path, options)) {
            var n22 = Node$1.ancestor(root2, p22);
            var entry = [n22, p22];
            yield entry;
          }
        },
        child(root2, index2) {
          if (Text.isText(root2)) {
            throw new Error("Cannot get the child of a text node: ".concat(Scrubber.stringify(root2)));
          }
          var c22 = root2.children[index2];
          if (c22 == null) {
            throw new Error("Cannot get child at index `".concat(index2, "` in node: ").concat(Scrubber.stringify(root2)));
          }
          return c22;
        },
        *children(root2, path) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            reverse = false
          } = options;
          var ancestor = Node$1.ancestor(root2, path);
          var {
            children
          } = ancestor;
          var index2 = reverse ? children.length - 1 : 0;
          while (reverse ? index2 >= 0 : index2 < children.length) {
            var child = Node$1.child(ancestor, index2);
            var childPath = path.concat(index2);
            yield [child, childPath];
            index2 = reverse ? index2 - 1 : index2 + 1;
          }
        },
        common(root2, path, another) {
          var p22 = Path.common(path, another);
          var n22 = Node$1.get(root2, p22);
          return [n22, p22];
        },
        descendant(root2, path) {
          var node = Node$1.get(root2, path);
          if (Editor$1.isEditor(node)) {
            throw new Error("Cannot get the descendant node at path [".concat(path, "] because it refers to the root editor node instead: ").concat(Scrubber.stringify(node)));
          }
          return node;
        },
        *descendants(root2) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          for (var [node, path] of Node$1.nodes(root2, options)) {
            if (path.length !== 0) {
              yield [node, path];
            }
          }
        },
        *elements(root2) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          for (var [node, path] of Node$1.nodes(root2, options)) {
            if (Element$1.isElement(node)) {
              yield [node, path];
            }
          }
        },
        extractProps(node) {
          if (Element$1.isAncestor(node)) {
            var properties = _objectWithoutProperties$4(node, _excluded$3);
            return properties;
          } else {
            var properties = _objectWithoutProperties$4(node, _excluded2$2);
            return properties;
          }
        },
        first(root2, path) {
          var p22 = path.slice();
          var n22 = Node$1.get(root2, p22);
          while (n22) {
            if (Text.isText(n22) || n22.children.length === 0) {
              break;
            } else {
              n22 = n22.children[0];
              p22.push(0);
            }
          }
          return [n22, p22];
        },
        fragment(root2, range) {
          if (Text.isText(root2)) {
            throw new Error("Cannot get a fragment starting from a root text node: ".concat(Scrubber.stringify(root2)));
          }
          var newRoot = fn({
            children: root2.children
          }, (r22) => {
            var [start, end] = Range.edges(range);
            var nodeEntries = Node$1.nodes(r22, {
              reverse: true,
              pass: (_ref) => {
                var [, path2] = _ref;
                return !Range.includes(range, path2);
              }
            });
            for (var [, path] of nodeEntries) {
              if (!Range.includes(range, path)) {
                var parent2 = Node$1.parent(r22, path);
                var index2 = path[path.length - 1];
                parent2.children.splice(index2, 1);
              }
              if (Path.equals(path, end.path)) {
                var leaf = Node$1.leaf(r22, path);
                leaf.text = leaf.text.slice(0, end.offset);
              }
              if (Path.equals(path, start.path)) {
                var _leaf = Node$1.leaf(r22, path);
                _leaf.text = _leaf.text.slice(start.offset);
              }
            }
            if (Editor$1.isEditor(r22)) {
              r22.selection = null;
            }
          });
          return newRoot.children;
        },
        get(root2, path) {
          var node = root2;
          for (var i22 = 0; i22 < path.length; i22++) {
            var p22 = path[i22];
            if (Text.isText(node) || !node.children[p22]) {
              throw new Error("Cannot find a descendant at path [".concat(path, "] in node: ").concat(Scrubber.stringify(root2)));
            }
            node = node.children[p22];
          }
          return node;
        },
        has(root2, path) {
          var node = root2;
          for (var i22 = 0; i22 < path.length; i22++) {
            var p22 = path[i22];
            if (Text.isText(node) || !node.children[p22]) {
              return false;
            }
            node = node.children[p22];
          }
          return true;
        },
        isNode(value) {
          return Text.isText(value) || Element$1.isElement(value) || Editor$1.isEditor(value);
        },
        isNodeList(value) {
          if (!Array.isArray(value)) {
            return false;
          }
          var cachedResult = IS_NODE_LIST_CACHE.get(value);
          if (cachedResult !== void 0) {
            return cachedResult;
          }
          var isNodeList = value.every((val) => Node$1.isNode(val));
          IS_NODE_LIST_CACHE.set(value, isNodeList);
          return isNodeList;
        },
        last(root2, path) {
          var p22 = path.slice();
          var n22 = Node$1.get(root2, p22);
          while (n22) {
            if (Text.isText(n22) || n22.children.length === 0) {
              break;
            } else {
              var i22 = n22.children.length - 1;
              n22 = n22.children[i22];
              p22.push(i22);
            }
          }
          return [n22, p22];
        },
        leaf(root2, path) {
          var node = Node$1.get(root2, path);
          if (!Text.isText(node)) {
            throw new Error("Cannot get the leaf node at path [".concat(path, "] because it refers to a non-leaf node: ").concat(Scrubber.stringify(node)));
          }
          return node;
        },
        *levels(root2, path) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          for (var p22 of Path.levels(path, options)) {
            var n22 = Node$1.get(root2, p22);
            yield [n22, p22];
          }
        },
        matches(node, props) {
          return Element$1.isElement(node) && Element$1.isElementProps(props) && Element$1.matches(node, props) || Text.isText(node) && Text.isTextProps(props) && Text.matches(node, props);
        },
        *nodes(root2) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            pass,
            reverse = false
          } = options;
          var {
            from: from2 = [],
            to: to22
          } = options;
          var visited = /* @__PURE__ */ new Set();
          var p22 = [];
          var n22 = root2;
          while (true) {
            if (to22 && (reverse ? Path.isBefore(p22, to22) : Path.isAfter(p22, to22))) {
              break;
            }
            if (!visited.has(n22)) {
              yield [n22, p22];
            }
            if (!visited.has(n22) && !Text.isText(n22) && n22.children.length !== 0 && (pass == null || pass([n22, p22]) === false)) {
              visited.add(n22);
              var nextIndex = reverse ? n22.children.length - 1 : 0;
              if (Path.isAncestor(p22, from2)) {
                nextIndex = from2[p22.length];
              }
              p22 = p22.concat(nextIndex);
              n22 = Node$1.get(root2, p22);
              continue;
            }
            if (p22.length === 0) {
              break;
            }
            if (!reverse) {
              var newPath = Path.next(p22);
              if (Node$1.has(root2, newPath)) {
                p22 = newPath;
                n22 = Node$1.get(root2, p22);
                continue;
              }
            }
            if (reverse && p22[p22.length - 1] !== 0) {
              var _newPath = Path.previous(p22);
              p22 = _newPath;
              n22 = Node$1.get(root2, p22);
              continue;
            }
            p22 = Path.parent(p22);
            n22 = Node$1.get(root2, p22);
            visited.add(n22);
          }
        },
        parent(root2, path) {
          var parentPath = Path.parent(path);
          var p22 = Node$1.get(root2, parentPath);
          if (Text.isText(p22)) {
            throw new Error("Cannot get the parent of path [".concat(path, "] because it does not exist in the root."));
          }
          return p22;
        },
        string(node) {
          if (Text.isText(node)) {
            return node.text;
          } else {
            return node.children.map(Node$1.string).join("");
          }
        },
        *texts(root2) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          for (var [node, path] of Node$1.nodes(root2, options)) {
            if (Text.isText(node)) {
              yield [node, path];
            }
          }
        }
      };
      function ownKeys$7(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$7(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$7(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$7(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var Operation = {
        isNodeOperation(value) {
          return Operation.isOperation(value) && value.type.endsWith("_node");
        },
        isOperation(value) {
          if (!isPlainObject$4(value)) {
            return false;
          }
          switch (value.type) {
            case "insert_node":
              return Path.isPath(value.path) && Node$1.isNode(value.node);
            case "insert_text":
              return typeof value.offset === "number" && typeof value.text === "string" && Path.isPath(value.path);
            case "merge_node":
              return typeof value.position === "number" && Path.isPath(value.path) && isPlainObject$4(value.properties);
            case "move_node":
              return Path.isPath(value.path) && Path.isPath(value.newPath);
            case "remove_node":
              return Path.isPath(value.path) && Node$1.isNode(value.node);
            case "remove_text":
              return typeof value.offset === "number" && typeof value.text === "string" && Path.isPath(value.path);
            case "set_node":
              return Path.isPath(value.path) && isPlainObject$4(value.properties) && isPlainObject$4(value.newProperties);
            case "set_selection":
              return value.properties === null && Range.isRange(value.newProperties) || value.newProperties === null && Range.isRange(value.properties) || isPlainObject$4(value.properties) && isPlainObject$4(value.newProperties);
            case "split_node":
              return Path.isPath(value.path) && typeof value.position === "number" && isPlainObject$4(value.properties);
            default:
              return false;
          }
        },
        isOperationList(value) {
          return Array.isArray(value) && value.every((val) => Operation.isOperation(val));
        },
        isSelectionOperation(value) {
          return Operation.isOperation(value) && value.type.endsWith("_selection");
        },
        isTextOperation(value) {
          return Operation.isOperation(value) && value.type.endsWith("_text");
        },
        inverse(op) {
          switch (op.type) {
            case "insert_node": {
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                type: "remove_node"
              });
            }
            case "insert_text": {
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                type: "remove_text"
              });
            }
            case "merge_node": {
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                type: "split_node",
                path: Path.previous(op.path)
              });
            }
            case "move_node": {
              var {
                newPath,
                path
              } = op;
              if (Path.equals(newPath, path)) {
                return op;
              }
              if (Path.isSibling(path, newPath)) {
                return _objectSpread$7(_objectSpread$7({}, op), {}, {
                  path: newPath,
                  newPath: path
                });
              }
              var inversePath = Path.transform(path, op);
              var inverseNewPath = Path.transform(Path.next(path), op);
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                path: inversePath,
                newPath: inverseNewPath
              });
            }
            case "remove_node": {
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                type: "insert_node"
              });
            }
            case "remove_text": {
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                type: "insert_text"
              });
            }
            case "set_node": {
              var {
                properties,
                newProperties
              } = op;
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                properties: newProperties,
                newProperties: properties
              });
            }
            case "set_selection": {
              var {
                properties: _properties,
                newProperties: _newProperties
              } = op;
              if (_properties == null) {
                return _objectSpread$7(_objectSpread$7({}, op), {}, {
                  properties: _newProperties,
                  newProperties: null
                });
              } else if (_newProperties == null) {
                return _objectSpread$7(_objectSpread$7({}, op), {}, {
                  properties: null,
                  newProperties: _properties
                });
              } else {
                return _objectSpread$7(_objectSpread$7({}, op), {}, {
                  properties: _newProperties,
                  newProperties: _properties
                });
              }
            }
            case "split_node": {
              return _objectSpread$7(_objectSpread$7({}, op), {}, {
                type: "merge_node",
                path: Path.next(op.path)
              });
            }
          }
        }
      };
      var Path = {
        ancestors(path) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            reverse = false
          } = options;
          var paths = Path.levels(path, options);
          if (reverse) {
            paths = paths.slice(1);
          } else {
            paths = paths.slice(0, -1);
          }
          return paths;
        },
        common(path, another) {
          var common = [];
          for (var i22 = 0; i22 < path.length && i22 < another.length; i22++) {
            var av = path[i22];
            var bv = another[i22];
            if (av !== bv) {
              break;
            }
            common.push(av);
          }
          return common;
        },
        compare(path, another) {
          var min2 = Math.min(path.length, another.length);
          for (var i22 = 0; i22 < min2; i22++) {
            if (path[i22] < another[i22])
              return -1;
            if (path[i22] > another[i22])
              return 1;
          }
          return 0;
        },
        endsAfter(path, another) {
          var i22 = path.length - 1;
          var as2 = path.slice(0, i22);
          var bs = another.slice(0, i22);
          var av = path[i22];
          var bv = another[i22];
          return Path.equals(as2, bs) && av > bv;
        },
        endsAt(path, another) {
          var i22 = path.length;
          var as2 = path.slice(0, i22);
          var bs = another.slice(0, i22);
          return Path.equals(as2, bs);
        },
        endsBefore(path, another) {
          var i22 = path.length - 1;
          var as2 = path.slice(0, i22);
          var bs = another.slice(0, i22);
          var av = path[i22];
          var bv = another[i22];
          return Path.equals(as2, bs) && av < bv;
        },
        equals(path, another) {
          return path.length === another.length && path.every((n22, i22) => n22 === another[i22]);
        },
        hasPrevious(path) {
          return path[path.length - 1] > 0;
        },
        isAfter(path, another) {
          return Path.compare(path, another) === 1;
        },
        isAncestor(path, another) {
          return path.length < another.length && Path.compare(path, another) === 0;
        },
        isBefore(path, another) {
          return Path.compare(path, another) === -1;
        },
        isChild(path, another) {
          return path.length === another.length + 1 && Path.compare(path, another) === 0;
        },
        isCommon(path, another) {
          return path.length <= another.length && Path.compare(path, another) === 0;
        },
        isDescendant(path, another) {
          return path.length > another.length && Path.compare(path, another) === 0;
        },
        isParent(path, another) {
          return path.length + 1 === another.length && Path.compare(path, another) === 0;
        },
        isPath(value) {
          return Array.isArray(value) && (value.length === 0 || typeof value[0] === "number");
        },
        isSibling(path, another) {
          if (path.length !== another.length) {
            return false;
          }
          var as2 = path.slice(0, -1);
          var bs = another.slice(0, -1);
          var al = path[path.length - 1];
          var bl = another[another.length - 1];
          return al !== bl && Path.equals(as2, bs);
        },
        levels(path) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            reverse = false
          } = options;
          var list2 = [];
          for (var i22 = 0; i22 <= path.length; i22++) {
            list2.push(path.slice(0, i22));
          }
          if (reverse) {
            list2.reverse();
          }
          return list2;
        },
        next(path) {
          if (path.length === 0) {
            throw new Error("Cannot get the next path of a root path [".concat(path, "], because it has no next index."));
          }
          var last2 = path[path.length - 1];
          return path.slice(0, -1).concat(last2 + 1);
        },
        operationCanTransformPath(operation) {
          switch (operation.type) {
            case "insert_node":
            case "remove_node":
            case "merge_node":
            case "split_node":
            case "move_node":
              return true;
            default:
              return false;
          }
        },
        parent(path) {
          if (path.length === 0) {
            throw new Error("Cannot get the parent path of the root path [".concat(path, "]."));
          }
          return path.slice(0, -1);
        },
        previous(path) {
          if (path.length === 0) {
            throw new Error("Cannot get the previous path of a root path [".concat(path, "], because it has no previous index."));
          }
          var last2 = path[path.length - 1];
          if (last2 <= 0) {
            throw new Error("Cannot get the previous path of a first child path [".concat(path, "] because it would result in a negative index."));
          }
          return path.slice(0, -1).concat(last2 - 1);
        },
        relative(path, ancestor) {
          if (!Path.isAncestor(ancestor, path) && !Path.equals(path, ancestor)) {
            throw new Error("Cannot get the relative path of [".concat(path, "] inside ancestor [").concat(ancestor, "], because it is not above or equal to the path."));
          }
          return path.slice(ancestor.length);
        },
        transform(path, operation) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return fn(path, (p22) => {
            var {
              affinity = "forward"
            } = options;
            if (!path || (path === null || path === void 0 ? void 0 : path.length) === 0) {
              return;
            }
            if (p22 === null) {
              return null;
            }
            switch (operation.type) {
              case "insert_node": {
                var {
                  path: op
                } = operation;
                if (Path.equals(op, p22) || Path.endsBefore(op, p22) || Path.isAncestor(op, p22)) {
                  p22[op.length - 1] += 1;
                }
                break;
              }
              case "remove_node": {
                var {
                  path: _op
                } = operation;
                if (Path.equals(_op, p22) || Path.isAncestor(_op, p22)) {
                  return null;
                } else if (Path.endsBefore(_op, p22)) {
                  p22[_op.length - 1] -= 1;
                }
                break;
              }
              case "merge_node": {
                var {
                  path: _op2,
                  position: position2
                } = operation;
                if (Path.equals(_op2, p22) || Path.endsBefore(_op2, p22)) {
                  p22[_op2.length - 1] -= 1;
                } else if (Path.isAncestor(_op2, p22)) {
                  p22[_op2.length - 1] -= 1;
                  p22[_op2.length] += position2;
                }
                break;
              }
              case "split_node": {
                var {
                  path: _op3,
                  position: _position
                } = operation;
                if (Path.equals(_op3, p22)) {
                  if (affinity === "forward") {
                    p22[p22.length - 1] += 1;
                  } else if (affinity === "backward")
                    ;
                  else {
                    return null;
                  }
                } else if (Path.endsBefore(_op3, p22)) {
                  p22[_op3.length - 1] += 1;
                } else if (Path.isAncestor(_op3, p22) && path[_op3.length] >= _position) {
                  p22[_op3.length - 1] += 1;
                  p22[_op3.length] -= _position;
                }
                break;
              }
              case "move_node": {
                var {
                  path: _op4,
                  newPath: onp
                } = operation;
                if (Path.equals(_op4, onp)) {
                  return;
                }
                if (Path.isAncestor(_op4, p22) || Path.equals(_op4, p22)) {
                  var copy = onp.slice();
                  if (Path.endsBefore(_op4, onp) && _op4.length < onp.length) {
                    copy[_op4.length - 1] -= 1;
                  }
                  return copy.concat(p22.slice(_op4.length));
                } else if (Path.isSibling(_op4, onp) && (Path.isAncestor(onp, p22) || Path.equals(onp, p22))) {
                  if (Path.endsBefore(_op4, p22)) {
                    p22[_op4.length - 1] -= 1;
                  } else {
                    p22[_op4.length - 1] += 1;
                  }
                } else if (Path.endsBefore(onp, p22) || Path.equals(onp, p22) || Path.isAncestor(onp, p22)) {
                  if (Path.endsBefore(_op4, p22)) {
                    p22[_op4.length - 1] -= 1;
                  }
                  p22[onp.length - 1] += 1;
                } else if (Path.endsBefore(_op4, p22)) {
                  if (Path.equals(onp, p22)) {
                    p22[onp.length - 1] += 1;
                  }
                  p22[_op4.length - 1] -= 1;
                }
                break;
              }
            }
          });
        }
      };
      var PathRef = {
        transform(ref, op) {
          var {
            current,
            affinity
          } = ref;
          if (current == null) {
            return;
          }
          var path = Path.transform(current, op, {
            affinity
          });
          ref.current = path;
          if (path == null) {
            ref.unref();
          }
        }
      };
      function ownKeys$6(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$6(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$6(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$6(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var Point = {
        compare(point2, another) {
          var result = Path.compare(point2.path, another.path);
          if (result === 0) {
            if (point2.offset < another.offset)
              return -1;
            if (point2.offset > another.offset)
              return 1;
            return 0;
          }
          return result;
        },
        isAfter(point2, another) {
          return Point.compare(point2, another) === 1;
        },
        isBefore(point2, another) {
          return Point.compare(point2, another) === -1;
        },
        equals(point2, another) {
          return point2.offset === another.offset && Path.equals(point2.path, another.path);
        },
        isPoint(value) {
          return isPlainObject$4(value) && typeof value.offset === "number" && Path.isPath(value.path);
        },
        transform(point2, op) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return fn(point2, (p22) => {
            if (p22 === null) {
              return null;
            }
            var {
              affinity = "forward"
            } = options;
            var {
              path,
              offset: offset2
            } = p22;
            switch (op.type) {
              case "insert_node":
              case "move_node": {
                p22.path = Path.transform(path, op, options);
                break;
              }
              case "insert_text": {
                if (Path.equals(op.path, path) && (op.offset < offset2 || op.offset === offset2 && affinity === "forward")) {
                  p22.offset += op.text.length;
                }
                break;
              }
              case "merge_node": {
                if (Path.equals(op.path, path)) {
                  p22.offset += op.position;
                }
                p22.path = Path.transform(path, op, options);
                break;
              }
              case "remove_text": {
                if (Path.equals(op.path, path) && op.offset <= offset2) {
                  p22.offset -= Math.min(offset2 - op.offset, op.text.length);
                }
                break;
              }
              case "remove_node": {
                if (Path.equals(op.path, path) || Path.isAncestor(op.path, path)) {
                  return null;
                }
                p22.path = Path.transform(path, op, options);
                break;
              }
              case "split_node": {
                if (Path.equals(op.path, path)) {
                  if (op.position === offset2 && affinity == null) {
                    return null;
                  } else if (op.position < offset2 || op.position === offset2 && affinity === "forward") {
                    p22.offset -= op.position;
                    p22.path = Path.transform(path, op, _objectSpread$6(_objectSpread$6({}, options), {}, {
                      affinity: "forward"
                    }));
                  }
                } else {
                  p22.path = Path.transform(path, op, options);
                }
                break;
              }
            }
          });
        }
      };
      var PointRef = {
        transform(ref, op) {
          var {
            current,
            affinity
          } = ref;
          if (current == null) {
            return;
          }
          var point2 = Point.transform(current, op, {
            affinity
          });
          ref.current = point2;
          if (point2 == null) {
            ref.unref();
          }
        }
      };
      var _excluded$2 = ["anchor", "focus"];
      function ownKeys$5(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$5(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$5(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$5(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var Range = {
        edges(range) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            reverse = false
          } = options;
          var {
            anchor,
            focus
          } = range;
          return Range.isBackward(range) === reverse ? [anchor, focus] : [focus, anchor];
        },
        end(range) {
          var [, end] = Range.edges(range);
          return end;
        },
        equals(range, another) {
          return Point.equals(range.anchor, another.anchor) && Point.equals(range.focus, another.focus);
        },
        includes(range, target) {
          if (Range.isRange(target)) {
            if (Range.includes(range, target.anchor) || Range.includes(range, target.focus)) {
              return true;
            }
            var [rs, re22] = Range.edges(range);
            var [ts, te22] = Range.edges(target);
            return Point.isBefore(rs, ts) && Point.isAfter(re22, te22);
          }
          var [start, end] = Range.edges(range);
          var isAfterStart = false;
          var isBeforeEnd = false;
          if (Point.isPoint(target)) {
            isAfterStart = Point.compare(target, start) >= 0;
            isBeforeEnd = Point.compare(target, end) <= 0;
          } else {
            isAfterStart = Path.compare(target, start.path) >= 0;
            isBeforeEnd = Path.compare(target, end.path) <= 0;
          }
          return isAfterStart && isBeforeEnd;
        },
        intersection(range, another) {
          var rest = _objectWithoutProperties$4(range, _excluded$2);
          var [s1, e1] = Range.edges(range);
          var [s22, e22] = Range.edges(another);
          var start = Point.isBefore(s1, s22) ? s22 : s1;
          var end = Point.isBefore(e1, e22) ? e1 : e22;
          if (Point.isBefore(end, start)) {
            return null;
          } else {
            return _objectSpread$5({
              anchor: start,
              focus: end
            }, rest);
          }
        },
        isBackward(range) {
          var {
            anchor,
            focus
          } = range;
          return Point.isAfter(anchor, focus);
        },
        isCollapsed(range) {
          var {
            anchor,
            focus
          } = range;
          return Point.equals(anchor, focus);
        },
        isExpanded(range) {
          return !Range.isCollapsed(range);
        },
        isForward(range) {
          return !Range.isBackward(range);
        },
        isRange(value) {
          return isPlainObject$4(value) && Point.isPoint(value.anchor) && Point.isPoint(value.focus);
        },
        *points(range) {
          yield [range.anchor, "anchor"];
          yield [range.focus, "focus"];
        },
        start(range) {
          var [start] = Range.edges(range);
          return start;
        },
        transform(range, op) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return fn(range, (r22) => {
            if (r22 === null) {
              return null;
            }
            var {
              affinity = "inward"
            } = options;
            var affinityAnchor;
            var affinityFocus;
            if (affinity === "inward") {
              var isCollapsed2 = Range.isCollapsed(r22);
              if (Range.isForward(r22)) {
                affinityAnchor = "forward";
                affinityFocus = isCollapsed2 ? affinityAnchor : "backward";
              } else {
                affinityAnchor = "backward";
                affinityFocus = isCollapsed2 ? affinityAnchor : "forward";
              }
            } else if (affinity === "outward") {
              if (Range.isForward(r22)) {
                affinityAnchor = "backward";
                affinityFocus = "forward";
              } else {
                affinityAnchor = "forward";
                affinityFocus = "backward";
              }
            } else {
              affinityAnchor = affinity;
              affinityFocus = affinity;
            }
            var anchor = Point.transform(r22.anchor, op, {
              affinity: affinityAnchor
            });
            var focus = Point.transform(r22.focus, op, {
              affinity: affinityFocus
            });
            if (!anchor || !focus) {
              return null;
            }
            r22.anchor = anchor;
            r22.focus = focus;
          });
        }
      };
      var RangeRef = {
        transform(ref, op) {
          var {
            current,
            affinity
          } = ref;
          if (current == null) {
            return;
          }
          var path = Range.transform(current, op, {
            affinity
          });
          ref.current = path;
          if (path == null) {
            ref.unref();
          }
        }
      };
      var _scrubber = void 0;
      var Scrubber = {
        setScrubber(scrubber) {
          _scrubber = scrubber;
        },
        stringify(value) {
          return JSON.stringify(value, _scrubber);
        }
      };
      var isDeepEqual = (node, another) => {
        for (var key in node) {
          var a22 = node[key];
          var b22 = another[key];
          if (isPlainObject$4(a22) && isPlainObject$4(b22)) {
            if (!isDeepEqual(a22, b22))
              return false;
          } else if (Array.isArray(a22) && Array.isArray(b22)) {
            if (a22.length !== b22.length)
              return false;
            for (var i22 = 0; i22 < a22.length; i22++) {
              if (a22[i22] !== b22[i22])
                return false;
            }
          } else if (a22 !== b22) {
            return false;
          }
        }
        for (var _key in another) {
          if (node[_key] === void 0 && another[_key] !== void 0) {
            return false;
          }
        }
        return true;
      };
      var _excluded$1 = ["text"], _excluded2$1 = ["anchor", "focus"];
      function ownKeys$4$1(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$4(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$4$1(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$4$1(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var Text = {
        equals(text2, another) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            loose = false
          } = options;
          function omitText(obj) {
            var rest = _objectWithoutProperties$4(obj, _excluded$1);
            return rest;
          }
          return isDeepEqual(loose ? omitText(text2) : text2, loose ? omitText(another) : another);
        },
        isText(value) {
          return isPlainObject$4(value) && typeof value.text === "string";
        },
        isTextList(value) {
          return Array.isArray(value) && value.every((val) => Text.isText(val));
        },
        isTextProps(props) {
          return props.text !== void 0;
        },
        matches(text2, props) {
          for (var key in props) {
            if (key === "text") {
              continue;
            }
            if (!text2.hasOwnProperty(key) || text2[key] !== props[key]) {
              return false;
            }
          }
          return true;
        },
        decorations(node, decorations) {
          var leaves = [_objectSpread$4({}, node)];
          for (var dec of decorations) {
            var rest = _objectWithoutProperties$4(dec, _excluded2$1);
            var [start, end] = Range.edges(dec);
            var next = [];
            var o22 = 0;
            for (var leaf of leaves) {
              var {
                length
              } = leaf.text;
              var offset2 = o22;
              o22 += length;
              if (start.offset <= offset2 && end.offset >= o22) {
                Object.assign(leaf, rest);
                next.push(leaf);
                continue;
              }
              if (start.offset !== end.offset && (start.offset === o22 || end.offset === offset2) || start.offset > o22 || end.offset < offset2 || end.offset === offset2 && offset2 !== 0) {
                next.push(leaf);
                continue;
              }
              var middle = leaf;
              var before = void 0;
              var after = void 0;
              if (end.offset < o22) {
                var off = end.offset - offset2;
                after = _objectSpread$4(_objectSpread$4({}, middle), {}, {
                  text: middle.text.slice(off)
                });
                middle = _objectSpread$4(_objectSpread$4({}, middle), {}, {
                  text: middle.text.slice(0, off)
                });
              }
              if (start.offset > offset2) {
                var _off = start.offset - offset2;
                before = _objectSpread$4(_objectSpread$4({}, middle), {}, {
                  text: middle.text.slice(0, _off)
                });
                middle = _objectSpread$4(_objectSpread$4({}, middle), {}, {
                  text: middle.text.slice(_off)
                });
              }
              Object.assign(middle, rest);
              if (before) {
                next.push(before);
              }
              next.push(middle);
              if (after) {
                next.push(after);
              }
            }
            leaves = next;
          }
          return leaves;
        }
      };
      function ownKeys$3$1(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$3(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$3$1(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$3$1(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var applyToDraft = (editor, selection, op) => {
        switch (op.type) {
          case "insert_node": {
            var {
              path,
              node
            } = op;
            var parent2 = Node$1.parent(editor, path);
            var index2 = path[path.length - 1];
            if (index2 > parent2.children.length) {
              throw new Error('Cannot apply an "insert_node" operation at path ['.concat(path, "] because the destination is past the end of the node."));
            }
            parent2.children.splice(index2, 0, node);
            if (selection) {
              for (var [point2, key] of Range.points(selection)) {
                selection[key] = Point.transform(point2, op);
              }
            }
            break;
          }
          case "insert_text": {
            var {
              path: _path,
              offset: offset2,
              text: text2
            } = op;
            if (text2.length === 0)
              break;
            var _node = Node$1.leaf(editor, _path);
            var before = _node.text.slice(0, offset2);
            var after = _node.text.slice(offset2);
            _node.text = before + text2 + after;
            if (selection) {
              for (var [_point, _key] of Range.points(selection)) {
                selection[_key] = Point.transform(_point, op);
              }
            }
            break;
          }
          case "merge_node": {
            var {
              path: _path2
            } = op;
            var _node2 = Node$1.get(editor, _path2);
            var prevPath = Path.previous(_path2);
            var prev = Node$1.get(editor, prevPath);
            var _parent2 = Node$1.parent(editor, _path2);
            var _index = _path2[_path2.length - 1];
            if (Text.isText(_node2) && Text.isText(prev)) {
              prev.text += _node2.text;
            } else if (!Text.isText(_node2) && !Text.isText(prev)) {
              prev.children.push(..._node2.children);
            } else {
              throw new Error('Cannot apply a "merge_node" operation at path ['.concat(_path2, "] to nodes of different interfaces: ").concat(Scrubber.stringify(_node2), " ").concat(Scrubber.stringify(prev)));
            }
            _parent2.children.splice(_index, 1);
            if (selection) {
              for (var [_point2, _key2] of Range.points(selection)) {
                selection[_key2] = Point.transform(_point2, op);
              }
            }
            break;
          }
          case "move_node": {
            var {
              path: _path3,
              newPath
            } = op;
            if (Path.isAncestor(_path3, newPath)) {
              throw new Error("Cannot move a path [".concat(_path3, "] to new path [").concat(newPath, "] because the destination is inside itself."));
            }
            var _node3 = Node$1.get(editor, _path3);
            var _parent22 = Node$1.parent(editor, _path3);
            var _index2 = _path3[_path3.length - 1];
            _parent22.children.splice(_index2, 1);
            var truePath = Path.transform(_path3, op);
            var newParent = Node$1.get(editor, Path.parent(truePath));
            var newIndex = truePath[truePath.length - 1];
            newParent.children.splice(newIndex, 0, _node3);
            if (selection) {
              for (var [_point3, _key3] of Range.points(selection)) {
                selection[_key3] = Point.transform(_point3, op);
              }
            }
            break;
          }
          case "remove_node": {
            var {
              path: _path4
            } = op;
            var _index3 = _path4[_path4.length - 1];
            var _parent3 = Node$1.parent(editor, _path4);
            _parent3.children.splice(_index3, 1);
            if (selection) {
              for (var [_point4, _key4] of Range.points(selection)) {
                var result = Point.transform(_point4, op);
                if (selection != null && result != null) {
                  selection[_key4] = result;
                } else {
                  var _prev = void 0;
                  var next = void 0;
                  for (var [n22, p22] of Node$1.texts(editor)) {
                    if (Path.compare(p22, _path4) === -1) {
                      _prev = [n22, p22];
                    } else {
                      next = [n22, p22];
                      break;
                    }
                  }
                  var preferNext = false;
                  if (_prev && next) {
                    if (Path.equals(next[1], _path4)) {
                      preferNext = !Path.hasPrevious(next[1]);
                    } else {
                      preferNext = Path.common(_prev[1], _path4).length < Path.common(next[1], _path4).length;
                    }
                  }
                  if (_prev && !preferNext) {
                    _point4.path = _prev[1];
                    _point4.offset = _prev[0].text.length;
                  } else if (next) {
                    _point4.path = next[1];
                    _point4.offset = 0;
                  } else {
                    selection = null;
                  }
                }
              }
            }
            break;
          }
          case "remove_text": {
            var {
              path: _path5,
              offset: _offset,
              text: _text
            } = op;
            if (_text.length === 0)
              break;
            var _node4 = Node$1.leaf(editor, _path5);
            var _before = _node4.text.slice(0, _offset);
            var _after = _node4.text.slice(_offset + _text.length);
            _node4.text = _before + _after;
            if (selection) {
              for (var [_point5, _key5] of Range.points(selection)) {
                selection[_key5] = Point.transform(_point5, op);
              }
            }
            break;
          }
          case "set_node": {
            var {
              path: _path6,
              properties,
              newProperties
            } = op;
            if (_path6.length === 0) {
              throw new Error("Cannot set properties on the root node!");
            }
            var _node5 = Node$1.get(editor, _path6);
            for (var _key6 in newProperties) {
              if (_key6 === "children" || _key6 === "text") {
                throw new Error('Cannot set the "'.concat(_key6, '" property of nodes!'));
              }
              var value = newProperties[_key6];
              if (value == null) {
                delete _node5[_key6];
              } else {
                _node5[_key6] = value;
              }
            }
            for (var _key7 in properties) {
              if (!newProperties.hasOwnProperty(_key7)) {
                delete _node5[_key7];
              }
            }
            break;
          }
          case "set_selection": {
            var {
              newProperties: _newProperties
            } = op;
            if (_newProperties == null) {
              selection = _newProperties;
            } else {
              if (selection == null) {
                if (!Range.isRange(_newProperties)) {
                  throw new Error('Cannot apply an incomplete "set_selection" operation properties '.concat(Scrubber.stringify(_newProperties), " when there is no current selection."));
                }
                selection = _objectSpread$3({}, _newProperties);
              }
              for (var _key8 in _newProperties) {
                var _value = _newProperties[_key8];
                if (_value == null) {
                  if (_key8 === "anchor" || _key8 === "focus") {
                    throw new Error('Cannot remove the "'.concat(_key8, '" selection property'));
                  }
                  delete selection[_key8];
                } else {
                  selection[_key8] = _value;
                }
              }
            }
            break;
          }
          case "split_node": {
            var {
              path: _path7,
              position: position2,
              properties: _properties
            } = op;
            if (_path7.length === 0) {
              throw new Error('Cannot apply a "split_node" operation at path ['.concat(_path7, "] because the root node cannot be split."));
            }
            var _node6 = Node$1.get(editor, _path7);
            var _parent4 = Node$1.parent(editor, _path7);
            var _index4 = _path7[_path7.length - 1];
            var newNode;
            if (Text.isText(_node6)) {
              var _before2 = _node6.text.slice(0, position2);
              var _after2 = _node6.text.slice(position2);
              _node6.text = _before2;
              newNode = _objectSpread$3(_objectSpread$3({}, _properties), {}, {
                text: _after2
              });
            } else {
              var _before3 = _node6.children.slice(0, position2);
              var _after3 = _node6.children.slice(position2);
              _node6.children = _before3;
              newNode = _objectSpread$3(_objectSpread$3({}, _properties), {}, {
                children: _after3
              });
            }
            _parent4.children.splice(_index4 + 1, 0, newNode);
            if (selection) {
              for (var [_point6, _key9] of Range.points(selection)) {
                selection[_key9] = Point.transform(_point6, op);
              }
            }
            break;
          }
        }
        return selection;
      };
      var GeneralTransforms = {
        transform(editor, op) {
          editor.children = ln(editor.children);
          var selection = editor.selection && ln(editor.selection);
          try {
            selection = applyToDraft(editor, selection, op);
          } finally {
            editor.children = dn(editor.children);
            if (selection) {
              editor.selection = r$2(selection) ? dn(selection) : selection;
            } else {
              editor.selection = null;
            }
          }
        }
      };
      var _excluded$5 = ["text"], _excluded2$4 = ["children"];
      function ownKeys$2$1(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$2$1(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$2$1(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$2$1(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var NodeTransforms = {
        insertNodes(editor, nodes) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              hanging = false,
              voids = false,
              mode = "lowest"
            } = options;
            var {
              at,
              match: match5,
              select: select2
            } = options;
            if (Node$1.isNode(nodes)) {
              nodes = [nodes];
            }
            if (nodes.length === 0) {
              return;
            }
            var [node] = nodes;
            if (!at) {
              if (editor.selection) {
                at = editor.selection;
              } else if (editor.children.length > 0) {
                at = Editor$1.end(editor, []);
              } else {
                at = [0];
              }
              select2 = true;
            }
            if (select2 == null) {
              select2 = false;
            }
            if (Range.isRange(at)) {
              if (!hanging) {
                at = Editor$1.unhangRange(editor, at);
              }
              if (Range.isCollapsed(at)) {
                at = at.anchor;
              } else {
                var [, end] = Range.edges(at);
                var pointRef = Editor$1.pointRef(editor, end);
                Transforms.delete(editor, {
                  at
                });
                at = pointRef.unref();
              }
            }
            if (Point.isPoint(at)) {
              if (match5 == null) {
                if (Text.isText(node)) {
                  match5 = (n22) => Text.isText(n22);
                } else if (editor.isInline(node)) {
                  match5 = (n22) => Text.isText(n22) || Editor$1.isInline(editor, n22);
                } else {
                  match5 = (n22) => Editor$1.isBlock(editor, n22);
                }
              }
              var [entry] = Editor$1.nodes(editor, {
                at: at.path,
                match: match5,
                mode,
                voids
              });
              if (entry) {
                var [, _matchPath] = entry;
                var pathRef = Editor$1.pathRef(editor, _matchPath);
                var isAtEnd = Editor$1.isEnd(editor, at, _matchPath);
                Transforms.splitNodes(editor, {
                  at,
                  match: match5,
                  mode,
                  voids
                });
                var path = pathRef.unref();
                at = isAtEnd ? Path.next(path) : path;
              } else {
                return;
              }
            }
            var parentPath = Path.parent(at);
            var index2 = at[at.length - 1];
            if (!voids && Editor$1.void(editor, {
              at: parentPath
            })) {
              return;
            }
            for (var _node of nodes) {
              var _path = parentPath.concat(index2);
              index2++;
              editor.apply({
                type: "insert_node",
                path: _path,
                node: _node
              });
              at = Path.next(at);
            }
            at = Path.previous(at);
            if (select2) {
              var point2 = Editor$1.end(editor, at);
              if (point2) {
                Transforms.select(editor, point2);
              }
            }
          });
        },
        liftNodes(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              at = editor.selection,
              mode = "lowest",
              voids = false
            } = options;
            var {
              match: match5
            } = options;
            if (match5 == null) {
              match5 = Path.isPath(at) ? matchPath(editor, at) : (n22) => Editor$1.isBlock(editor, n22);
            }
            if (!at) {
              return;
            }
            var matches = Editor$1.nodes(editor, {
              at,
              match: match5,
              mode,
              voids
            });
            var pathRefs = Array.from(matches, (_ref) => {
              var [, p22] = _ref;
              return Editor$1.pathRef(editor, p22);
            });
            for (var pathRef of pathRefs) {
              var path = pathRef.unref();
              if (path.length < 2) {
                throw new Error("Cannot lift node at a path [".concat(path, "] because it has a depth of less than `2`."));
              }
              var parentNodeEntry = Editor$1.node(editor, Path.parent(path));
              var [parent2, parentPath] = parentNodeEntry;
              var index2 = path[path.length - 1];
              var {
                length
              } = parent2.children;
              if (length === 1) {
                var toPath = Path.next(parentPath);
                Transforms.moveNodes(editor, {
                  at: path,
                  to: toPath,
                  voids
                });
                Transforms.removeNodes(editor, {
                  at: parentPath,
                  voids
                });
              } else if (index2 === 0) {
                Transforms.moveNodes(editor, {
                  at: path,
                  to: parentPath,
                  voids
                });
              } else if (index2 === length - 1) {
                var _toPath = Path.next(parentPath);
                Transforms.moveNodes(editor, {
                  at: path,
                  to: _toPath,
                  voids
                });
              } else {
                var splitPath = Path.next(path);
                var _toPath2 = Path.next(parentPath);
                Transforms.splitNodes(editor, {
                  at: splitPath,
                  voids
                });
                Transforms.moveNodes(editor, {
                  at: path,
                  to: _toPath2,
                  voids
                });
              }
            }
          });
        },
        mergeNodes(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              match: match5,
              at = editor.selection
            } = options;
            var {
              hanging = false,
              voids = false,
              mode = "lowest"
            } = options;
            if (!at) {
              return;
            }
            if (match5 == null) {
              if (Path.isPath(at)) {
                var [parent2] = Editor$1.parent(editor, at);
                match5 = (n22) => parent2.children.includes(n22);
              } else {
                match5 = (n22) => Editor$1.isBlock(editor, n22);
              }
            }
            if (!hanging && Range.isRange(at)) {
              at = Editor$1.unhangRange(editor, at);
            }
            if (Range.isRange(at)) {
              if (Range.isCollapsed(at)) {
                at = at.anchor;
              } else {
                var [, end] = Range.edges(at);
                var pointRef = Editor$1.pointRef(editor, end);
                Transforms.delete(editor, {
                  at
                });
                at = pointRef.unref();
                if (options.at == null) {
                  Transforms.select(editor, at);
                }
              }
            }
            var [current] = Editor$1.nodes(editor, {
              at,
              match: match5,
              voids,
              mode
            });
            var prev = Editor$1.previous(editor, {
              at,
              match: match5,
              voids,
              mode
            });
            if (!current || !prev) {
              return;
            }
            var [node, path] = current;
            var [prevNode, prevPath] = prev;
            if (path.length === 0 || prevPath.length === 0) {
              return;
            }
            var newPath = Path.next(prevPath);
            var commonPath = Path.common(path, prevPath);
            var isPreviousSibling = Path.isSibling(path, prevPath);
            var levels = Array.from(Editor$1.levels(editor, {
              at: path
            }), (_ref2) => {
              var [n22] = _ref2;
              return n22;
            }).slice(commonPath.length).slice(0, -1);
            var emptyAncestor = Editor$1.above(editor, {
              at: path,
              mode: "highest",
              match: (n22) => levels.includes(n22) && hasSingleChildNest(editor, n22)
            });
            var emptyRef = emptyAncestor && Editor$1.pathRef(editor, emptyAncestor[1]);
            var properties;
            var position2;
            if (Text.isText(node) && Text.isText(prevNode)) {
              var rest = _objectWithoutProperties$4(node, _excluded$5);
              position2 = prevNode.text.length;
              properties = rest;
            } else if (Element$1.isElement(node) && Element$1.isElement(prevNode)) {
              var rest = _objectWithoutProperties$4(node, _excluded2$4);
              position2 = prevNode.children.length;
              properties = rest;
            } else {
              throw new Error("Cannot merge the node at path [".concat(path, "] with the previous sibling because it is not the same kind: ").concat(Scrubber.stringify(node), " ").concat(Scrubber.stringify(prevNode)));
            }
            if (!isPreviousSibling) {
              Transforms.moveNodes(editor, {
                at: path,
                to: newPath,
                voids
              });
            }
            if (emptyRef) {
              Transforms.removeNodes(editor, {
                at: emptyRef.current,
                voids
              });
            }
            if (Element$1.isElement(prevNode) && Editor$1.isEmpty(editor, prevNode) || Text.isText(prevNode) && prevNode.text === "" && prevPath[prevPath.length - 1] !== 0) {
              Transforms.removeNodes(editor, {
                at: prevPath,
                voids
              });
            } else {
              editor.apply({
                type: "merge_node",
                path: newPath,
                position: position2,
                properties
              });
            }
            if (emptyRef) {
              emptyRef.unref();
            }
          });
        },
        moveNodes(editor, options) {
          Editor$1.withoutNormalizing(editor, () => {
            var {
              to: to22,
              at = editor.selection,
              mode = "lowest",
              voids = false
            } = options;
            var {
              match: match5
            } = options;
            if (!at) {
              return;
            }
            if (match5 == null) {
              match5 = Path.isPath(at) ? matchPath(editor, at) : (n22) => Editor$1.isBlock(editor, n22);
            }
            var toRef = Editor$1.pathRef(editor, to22);
            var targets = Editor$1.nodes(editor, {
              at,
              match: match5,
              mode,
              voids
            });
            var pathRefs = Array.from(targets, (_ref3) => {
              var [, p22] = _ref3;
              return Editor$1.pathRef(editor, p22);
            });
            for (var pathRef of pathRefs) {
              var path = pathRef.unref();
              var newPath = toRef.current;
              if (path.length !== 0) {
                editor.apply({
                  type: "move_node",
                  path,
                  newPath
                });
              }
              if (toRef.current && Path.isSibling(newPath, path) && Path.isAfter(newPath, path)) {
                toRef.current = Path.next(toRef.current);
              }
            }
            toRef.unref();
          });
        },
        removeNodes(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              hanging = false,
              voids = false,
              mode = "lowest"
            } = options;
            var {
              at = editor.selection,
              match: match5
            } = options;
            if (!at) {
              return;
            }
            if (match5 == null) {
              match5 = Path.isPath(at) ? matchPath(editor, at) : (n22) => Editor$1.isBlock(editor, n22);
            }
            if (!hanging && Range.isRange(at)) {
              at = Editor$1.unhangRange(editor, at);
            }
            var depths = Editor$1.nodes(editor, {
              at,
              match: match5,
              mode,
              voids
            });
            var pathRefs = Array.from(depths, (_ref4) => {
              var [, p22] = _ref4;
              return Editor$1.pathRef(editor, p22);
            });
            for (var pathRef of pathRefs) {
              var path = pathRef.unref();
              if (path) {
                var [node] = Editor$1.node(editor, path);
                editor.apply({
                  type: "remove_node",
                  path,
                  node
                });
              }
            }
          });
        },
        setNodes(editor, props) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              match: match5,
              at = editor.selection,
              compare,
              merge: merge2
            } = options;
            var {
              hanging = false,
              mode = "lowest",
              split = false,
              voids = false
            } = options;
            if (!at) {
              return;
            }
            if (match5 == null) {
              match5 = Path.isPath(at) ? matchPath(editor, at) : (n22) => Editor$1.isBlock(editor, n22);
            }
            if (!hanging && Range.isRange(at)) {
              at = Editor$1.unhangRange(editor, at);
            }
            if (split && Range.isRange(at)) {
              if (Range.isCollapsed(at) && Editor$1.leaf(editor, at.anchor)[0].text.length > 0) {
                return;
              }
              var rangeRef = Editor$1.rangeRef(editor, at, {
                affinity: "inward"
              });
              var [start, end] = Range.edges(at);
              var splitMode = mode === "lowest" ? "lowest" : "highest";
              var endAtEndOfNode = Editor$1.isEnd(editor, end, end.path);
              Transforms.splitNodes(editor, {
                at: end,
                match: match5,
                mode: splitMode,
                voids,
                always: !endAtEndOfNode
              });
              var startAtStartOfNode = Editor$1.isStart(editor, start, start.path);
              Transforms.splitNodes(editor, {
                at: start,
                match: match5,
                mode: splitMode,
                voids,
                always: !startAtStartOfNode
              });
              at = rangeRef.unref();
              if (options.at == null) {
                Transforms.select(editor, at);
              }
            }
            if (!compare) {
              compare = (prop, nodeProp) => prop !== nodeProp;
            }
            for (var [node, path] of Editor$1.nodes(editor, {
              at,
              match: match5,
              mode,
              voids
            })) {
              var properties = {};
              var newProperties = {};
              if (path.length === 0) {
                continue;
              }
              var hasChanges = false;
              for (var k22 in props) {
                if (k22 === "children" || k22 === "text") {
                  continue;
                }
                if (compare(props[k22], node[k22])) {
                  hasChanges = true;
                  if (node.hasOwnProperty(k22))
                    properties[k22] = node[k22];
                  if (merge2) {
                    if (props[k22] != null)
                      newProperties[k22] = merge2(node[k22], props[k22]);
                  } else {
                    if (props[k22] != null)
                      newProperties[k22] = props[k22];
                  }
                }
              }
              if (hasChanges) {
                editor.apply({
                  type: "set_node",
                  path,
                  properties,
                  newProperties
                });
              }
            }
          });
        },
        splitNodes(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              mode = "lowest",
              voids = false
            } = options;
            var {
              match: match5,
              at = editor.selection,
              height = 0,
              always = false
            } = options;
            if (match5 == null) {
              match5 = (n22) => Editor$1.isBlock(editor, n22);
            }
            if (Range.isRange(at)) {
              at = deleteRange(editor, at);
            }
            if (Path.isPath(at)) {
              var path = at;
              var point2 = Editor$1.point(editor, path);
              var [parent2] = Editor$1.parent(editor, path);
              match5 = (n22) => n22 === parent2;
              height = point2.path.length - path.length + 1;
              at = point2;
              always = true;
            }
            if (!at) {
              return;
            }
            var beforeRef = Editor$1.pointRef(editor, at, {
              affinity: "backward"
            });
            var afterRef;
            try {
              var [highest] = Editor$1.nodes(editor, {
                at,
                match: match5,
                mode,
                voids
              });
              if (!highest) {
                return;
              }
              var voidMatch = Editor$1.void(editor, {
                at,
                mode: "highest"
              });
              var nudge = 0;
              if (!voids && voidMatch) {
                var [voidNode, voidPath] = voidMatch;
                if (Element$1.isElement(voidNode) && editor.isInline(voidNode)) {
                  var after = Editor$1.after(editor, voidPath);
                  if (!after) {
                    var text2 = {
                      text: ""
                    };
                    var afterPath = Path.next(voidPath);
                    Transforms.insertNodes(editor, text2, {
                      at: afterPath,
                      voids
                    });
                    after = Editor$1.point(editor, afterPath);
                  }
                  at = after;
                  always = true;
                }
                var siblingHeight = at.path.length - voidPath.length;
                height = siblingHeight + 1;
                always = true;
              }
              afterRef = Editor$1.pointRef(editor, at);
              var depth = at.path.length - height;
              var [, highestPath] = highest;
              var lowestPath = at.path.slice(0, depth);
              var position2 = height === 0 ? at.offset : at.path[depth] + nudge;
              for (var [node, _path2] of Editor$1.levels(editor, {
                at: lowestPath,
                reverse: true,
                voids
              })) {
                var split = false;
                if (_path2.length < highestPath.length || _path2.length === 0 || !voids && Editor$1.isVoid(editor, node)) {
                  break;
                }
                var _point = beforeRef.current;
                var isEnd = Editor$1.isEnd(editor, _point, _path2);
                if (always || !beforeRef || !Editor$1.isEdge(editor, _point, _path2)) {
                  split = true;
                  var properties = Node$1.extractProps(node);
                  editor.apply({
                    type: "split_node",
                    path: _path2,
                    position: position2,
                    properties
                  });
                }
                position2 = _path2[_path2.length - 1] + (split || isEnd ? 1 : 0);
              }
              if (options.at == null) {
                var _point2 = afterRef.current || Editor$1.end(editor, []);
                Transforms.select(editor, _point2);
              }
            } finally {
              var _afterRef;
              beforeRef.unref();
              (_afterRef = afterRef) === null || _afterRef === void 0 ? void 0 : _afterRef.unref();
            }
          });
        },
        unsetNodes(editor, props) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          if (!Array.isArray(props)) {
            props = [props];
          }
          var obj = {};
          for (var key of props) {
            obj[key] = null;
          }
          Transforms.setNodes(editor, obj, options);
        },
        unwrapNodes(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              mode = "lowest",
              split = false,
              voids = false
            } = options;
            var {
              at = editor.selection,
              match: match5
            } = options;
            if (!at) {
              return;
            }
            if (match5 == null) {
              match5 = Path.isPath(at) ? matchPath(editor, at) : (n22) => Editor$1.isBlock(editor, n22);
            }
            if (Path.isPath(at)) {
              at = Editor$1.range(editor, at);
            }
            var rangeRef = Range.isRange(at) ? Editor$1.rangeRef(editor, at) : null;
            var matches = Editor$1.nodes(editor, {
              at,
              match: match5,
              mode,
              voids
            });
            var pathRefs = Array.from(matches, (_ref5) => {
              var [, p22] = _ref5;
              return Editor$1.pathRef(editor, p22);
            }).reverse();
            var _loop = function _loop4(pathRef2) {
              var path = pathRef2.unref();
              var [node] = Editor$1.node(editor, path);
              var range = Editor$1.range(editor, path);
              if (split && rangeRef) {
                range = Range.intersection(rangeRef.current, range);
              }
              Transforms.liftNodes(editor, {
                at: range,
                match: (n22) => Element$1.isAncestor(node) && node.children.includes(n22),
                voids
              });
            };
            for (var pathRef of pathRefs) {
              _loop(pathRef);
            }
            if (rangeRef) {
              rangeRef.unref();
            }
          });
        },
        wrapNodes(editor, element) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              mode = "lowest",
              split = false,
              voids = false
            } = options;
            var {
              match: match5,
              at = editor.selection
            } = options;
            if (!at) {
              return;
            }
            if (match5 == null) {
              if (Path.isPath(at)) {
                match5 = matchPath(editor, at);
              } else if (editor.isInline(element)) {
                match5 = (n22) => Editor$1.isInline(editor, n22) || Text.isText(n22);
              } else {
                match5 = (n22) => Editor$1.isBlock(editor, n22);
              }
            }
            if (split && Range.isRange(at)) {
              var [start, end] = Range.edges(at);
              var rangeRef = Editor$1.rangeRef(editor, at, {
                affinity: "inward"
              });
              Transforms.splitNodes(editor, {
                at: end,
                match: match5,
                voids
              });
              Transforms.splitNodes(editor, {
                at: start,
                match: match5,
                voids
              });
              at = rangeRef.unref();
              if (options.at == null) {
                Transforms.select(editor, at);
              }
            }
            var roots = Array.from(Editor$1.nodes(editor, {
              at,
              match: editor.isInline(element) ? (n22) => Editor$1.isBlock(editor, n22) : (n22) => Editor$1.isEditor(n22),
              mode: "lowest",
              voids
            }));
            for (var [, rootPath] of roots) {
              var a22 = Range.isRange(at) ? Range.intersection(at, Editor$1.range(editor, rootPath)) : at;
              if (!a22) {
                continue;
              }
              var matches = Array.from(Editor$1.nodes(editor, {
                at: a22,
                match: match5,
                mode,
                voids
              }));
              if (matches.length > 0) {
                var _ret = function() {
                  var [first] = matches;
                  var last2 = matches[matches.length - 1];
                  var [, firstPath] = first;
                  var [, lastPath] = last2;
                  if (firstPath.length === 0 && lastPath.length === 0) {
                    return "continue";
                  }
                  var commonPath = Path.equals(firstPath, lastPath) ? Path.parent(firstPath) : Path.common(firstPath, lastPath);
                  var range = Editor$1.range(editor, firstPath, lastPath);
                  var commonNodeEntry = Editor$1.node(editor, commonPath);
                  var [commonNode] = commonNodeEntry;
                  var depth = commonPath.length + 1;
                  var wrapperPath = Path.next(lastPath.slice(0, depth));
                  var wrapper = _objectSpread$2$1(_objectSpread$2$1({}, element), {}, {
                    children: []
                  });
                  Transforms.insertNodes(editor, wrapper, {
                    at: wrapperPath,
                    voids
                  });
                  Transforms.moveNodes(editor, {
                    at: range,
                    match: (n22) => Element$1.isAncestor(commonNode) && commonNode.children.includes(n22),
                    to: wrapperPath.concat(0),
                    voids
                  });
                }();
                if (_ret === "continue")
                  continue;
              }
            }
          });
        }
      };
      var hasSingleChildNest = (editor, node) => {
        if (Element$1.isElement(node)) {
          var element = node;
          if (Editor$1.isVoid(editor, node)) {
            return true;
          } else if (element.children.length === 1) {
            return hasSingleChildNest(editor, element.children[0]);
          } else {
            return false;
          }
        } else if (Editor$1.isEditor(node)) {
          return false;
        } else {
          return true;
        }
      };
      var deleteRange = (editor, range) => {
        if (Range.isCollapsed(range)) {
          return range.anchor;
        } else {
          var [, end] = Range.edges(range);
          var pointRef = Editor$1.pointRef(editor, end);
          Transforms.delete(editor, {
            at: range
          });
          return pointRef.unref();
        }
      };
      var matchPath = (editor, path) => {
        var [node] = Editor$1.node(editor, path);
        return (n22) => n22 === node;
      };
      function ownKeys$1$2(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$1$2(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$1$2(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$1$2(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var SelectionTransforms = {
        collapse(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            edge = "anchor"
          } = options;
          var {
            selection
          } = editor;
          if (!selection) {
            return;
          } else if (edge === "anchor") {
            Transforms.select(editor, selection.anchor);
          } else if (edge === "focus") {
            Transforms.select(editor, selection.focus);
          } else if (edge === "start") {
            var [start] = Range.edges(selection);
            Transforms.select(editor, start);
          } else if (edge === "end") {
            var [, end] = Range.edges(selection);
            Transforms.select(editor, end);
          }
        },
        deselect(editor) {
          var {
            selection
          } = editor;
          if (selection) {
            editor.apply({
              type: "set_selection",
              properties: selection,
              newProperties: null
            });
          }
        },
        move(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          var {
            selection
          } = editor;
          var {
            distance = 1,
            unit = "character",
            reverse = false
          } = options;
          var {
            edge = null
          } = options;
          if (!selection) {
            return;
          }
          if (edge === "start") {
            edge = Range.isBackward(selection) ? "focus" : "anchor";
          }
          if (edge === "end") {
            edge = Range.isBackward(selection) ? "anchor" : "focus";
          }
          var {
            anchor,
            focus
          } = selection;
          var opts = {
            distance,
            unit
          };
          var props = {};
          if (edge == null || edge === "anchor") {
            var point2 = reverse ? Editor$1.before(editor, anchor, opts) : Editor$1.after(editor, anchor, opts);
            if (point2) {
              props.anchor = point2;
            }
          }
          if (edge == null || edge === "focus") {
            var _point = reverse ? Editor$1.before(editor, focus, opts) : Editor$1.after(editor, focus, opts);
            if (_point) {
              props.focus = _point;
            }
          }
          Transforms.setSelection(editor, props);
        },
        select(editor, target) {
          var {
            selection
          } = editor;
          target = Editor$1.range(editor, target);
          if (selection) {
            Transforms.setSelection(editor, target);
            return;
          }
          if (!Range.isRange(target)) {
            throw new Error("When setting the selection and the current selection is `null` you must provide at least an `anchor` and `focus`, but you passed: ".concat(Scrubber.stringify(target)));
          }
          editor.apply({
            type: "set_selection",
            properties: selection,
            newProperties: target
          });
        },
        setPoint(editor, props) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            selection
          } = editor;
          var {
            edge = "both"
          } = options;
          if (!selection) {
            return;
          }
          if (edge === "start") {
            edge = Range.isBackward(selection) ? "focus" : "anchor";
          }
          if (edge === "end") {
            edge = Range.isBackward(selection) ? "anchor" : "focus";
          }
          var {
            anchor,
            focus
          } = selection;
          var point2 = edge === "anchor" ? anchor : focus;
          Transforms.setSelection(editor, {
            [edge === "anchor" ? "anchor" : "focus"]: _objectSpread$1$2(_objectSpread$1$2({}, point2), props)
          });
        },
        setSelection(editor, props) {
          var {
            selection
          } = editor;
          var oldProps = {};
          var newProps = {};
          if (!selection) {
            return;
          }
          for (var k22 in props) {
            if (k22 === "anchor" && props.anchor != null && !Point.equals(props.anchor, selection.anchor) || k22 === "focus" && props.focus != null && !Point.equals(props.focus, selection.focus) || k22 !== "anchor" && k22 !== "focus" && props[k22] !== selection[k22]) {
              oldProps[k22] = selection[k22];
              newProps[k22] = props[k22];
            }
          }
          if (Object.keys(oldProps).length > 0) {
            editor.apply({
              type: "set_selection",
              properties: oldProps,
              newProperties: newProps
            });
          }
        }
      };
      var TextTransforms = {
        delete(editor) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              reverse = false,
              unit = "character",
              distance = 1,
              voids = false
            } = options;
            var {
              at = editor.selection,
              hanging = false
            } = options;
            if (!at) {
              return;
            }
            var isCollapsed2 = false;
            if (Range.isRange(at) && Range.isCollapsed(at)) {
              isCollapsed2 = true;
              at = at.anchor;
            }
            if (Point.isPoint(at)) {
              var furthestVoid = Editor$1.void(editor, {
                at,
                mode: "highest"
              });
              if (!voids && furthestVoid) {
                var [, voidPath] = furthestVoid;
                at = voidPath;
              } else {
                var opts = {
                  unit,
                  distance
                };
                var target = reverse ? Editor$1.before(editor, at, opts) || Editor$1.start(editor, []) : Editor$1.after(editor, at, opts) || Editor$1.end(editor, []);
                at = {
                  anchor: at,
                  focus: target
                };
                hanging = true;
              }
            }
            if (Path.isPath(at)) {
              Transforms.removeNodes(editor, {
                at,
                voids
              });
              return;
            }
            if (Range.isCollapsed(at)) {
              return;
            }
            if (!hanging) {
              var [, _end] = Range.edges(at);
              var endOfDoc = Editor$1.end(editor, []);
              if (!Point.equals(_end, endOfDoc)) {
                at = Editor$1.unhangRange(editor, at, {
                  voids
                });
              }
            }
            var [start, end] = Range.edges(at);
            var startBlock = Editor$1.above(editor, {
              match: (n22) => Editor$1.isBlock(editor, n22),
              at: start,
              voids
            });
            var endBlock = Editor$1.above(editor, {
              match: (n22) => Editor$1.isBlock(editor, n22),
              at: end,
              voids
            });
            var isAcrossBlocks = startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);
            var isSingleText = Path.equals(start.path, end.path);
            var startVoid = voids ? null : Editor$1.void(editor, {
              at: start,
              mode: "highest"
            });
            var endVoid = voids ? null : Editor$1.void(editor, {
              at: end,
              mode: "highest"
            });
            if (startVoid) {
              var before = Editor$1.before(editor, start);
              if (before && startBlock && Path.isAncestor(startBlock[1], before.path)) {
                start = before;
              }
            }
            if (endVoid) {
              var after = Editor$1.after(editor, end);
              if (after && endBlock && Path.isAncestor(endBlock[1], after.path)) {
                end = after;
              }
            }
            var matches = [];
            var lastPath;
            for (var entry of Editor$1.nodes(editor, {
              at,
              voids
            })) {
              var [node, path] = entry;
              if (lastPath && Path.compare(path, lastPath) === 0) {
                continue;
              }
              if (!voids && Editor$1.isVoid(editor, node) || !Path.isCommon(path, start.path) && !Path.isCommon(path, end.path)) {
                matches.push(entry);
                lastPath = path;
              }
            }
            var pathRefs = Array.from(matches, (_ref) => {
              var [, p22] = _ref;
              return Editor$1.pathRef(editor, p22);
            });
            var startRef = Editor$1.pointRef(editor, start);
            var endRef = Editor$1.pointRef(editor, end);
            var removedText = "";
            if (!isSingleText && !startVoid) {
              var _point = startRef.current;
              var [_node] = Editor$1.leaf(editor, _point);
              var {
                path: _path
              } = _point;
              var {
                offset: offset2
              } = start;
              var text2 = _node.text.slice(offset2);
              if (text2.length > 0) {
                editor.apply({
                  type: "remove_text",
                  path: _path,
                  offset: offset2,
                  text: text2
                });
                removedText = text2;
              }
            }
            for (var pathRef of pathRefs) {
              var _path2 = pathRef.unref();
              Transforms.removeNodes(editor, {
                at: _path2,
                voids
              });
            }
            if (!endVoid) {
              var _point2 = endRef.current;
              var [_node2] = Editor$1.leaf(editor, _point2);
              var {
                path: _path3
              } = _point2;
              var _offset = isSingleText ? start.offset : 0;
              var _text = _node2.text.slice(_offset, end.offset);
              if (_text.length > 0) {
                editor.apply({
                  type: "remove_text",
                  path: _path3,
                  offset: _offset,
                  text: _text
                });
                removedText = _text;
              }
            }
            if (!isSingleText && isAcrossBlocks && endRef.current && startRef.current) {
              Transforms.mergeNodes(editor, {
                at: endRef.current,
                hanging: true,
                voids
              });
            }
            if (isCollapsed2 && reverse && unit === "character" && removedText.length > 1 && removedText.match(/[\u0E00-\u0E7F]+/)) {
              Transforms.insertText(editor, removedText.slice(0, removedText.length - distance));
            }
            var startUnref = startRef.unref();
            var endUnref = endRef.unref();
            var point2 = reverse ? startUnref || endUnref : endUnref || startUnref;
            if (options.at == null && point2) {
              Transforms.select(editor, point2);
            }
          });
        },
        insertFragment(editor, fragment) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              hanging = false,
              voids = false
            } = options;
            var {
              at = editor.selection
            } = options;
            if (!fragment.length) {
              return;
            }
            if (!at) {
              return;
            } else if (Range.isRange(at)) {
              if (!hanging) {
                at = Editor$1.unhangRange(editor, at);
              }
              if (Range.isCollapsed(at)) {
                at = at.anchor;
              } else {
                var [, end] = Range.edges(at);
                if (!voids && Editor$1.void(editor, {
                  at: end
                })) {
                  return;
                }
                var pointRef = Editor$1.pointRef(editor, end);
                Transforms.delete(editor, {
                  at
                });
                at = pointRef.unref();
              }
            } else if (Path.isPath(at)) {
              at = Editor$1.start(editor, at);
            }
            if (!voids && Editor$1.void(editor, {
              at
            })) {
              return;
            }
            var inlineElementMatch = Editor$1.above(editor, {
              at,
              match: (n22) => Editor$1.isInline(editor, n22),
              mode: "highest",
              voids
            });
            if (inlineElementMatch) {
              var [, _inlinePath] = inlineElementMatch;
              if (Editor$1.isEnd(editor, at, _inlinePath)) {
                var after = Editor$1.after(editor, _inlinePath);
                at = after;
              } else if (Editor$1.isStart(editor, at, _inlinePath)) {
                var before = Editor$1.before(editor, _inlinePath);
                at = before;
              }
            }
            var blockMatch = Editor$1.above(editor, {
              match: (n22) => Editor$1.isBlock(editor, n22),
              at,
              voids
            });
            var [, blockPath] = blockMatch;
            var isBlockStart = Editor$1.isStart(editor, at, blockPath);
            var isBlockEnd = Editor$1.isEnd(editor, at, blockPath);
            var isBlockEmpty = isBlockStart && isBlockEnd;
            var mergeStart = !isBlockStart || isBlockStart && isBlockEnd;
            var mergeEnd = !isBlockEnd;
            var [, firstPath] = Node$1.first({
              children: fragment
            }, []);
            var [, lastPath] = Node$1.last({
              children: fragment
            }, []);
            var matches = [];
            var matcher = (_ref2) => {
              var [n22, p22] = _ref2;
              var isRoot = p22.length === 0;
              if (isRoot) {
                return false;
              }
              if (isBlockEmpty) {
                return true;
              }
              if (mergeStart && Path.isAncestor(p22, firstPath) && Element$1.isElement(n22) && !editor.isVoid(n22) && !editor.isInline(n22)) {
                return false;
              }
              if (mergeEnd && Path.isAncestor(p22, lastPath) && Element$1.isElement(n22) && !editor.isVoid(n22) && !editor.isInline(n22)) {
                return false;
              }
              return true;
            };
            for (var entry of Node$1.nodes({
              children: fragment
            }, {
              pass: matcher
            })) {
              if (matcher(entry)) {
                matches.push(entry);
              }
            }
            var starts = [];
            var middles = [];
            var ends = [];
            var starting = true;
            var hasBlocks = false;
            for (var [node] of matches) {
              if (Element$1.isElement(node) && !editor.isInline(node)) {
                starting = false;
                hasBlocks = true;
                middles.push(node);
              } else if (starting) {
                starts.push(node);
              } else {
                ends.push(node);
              }
            }
            var [inlineMatch] = Editor$1.nodes(editor, {
              at,
              match: (n22) => Text.isText(n22) || Editor$1.isInline(editor, n22),
              mode: "highest",
              voids
            });
            var [, inlinePath] = inlineMatch;
            var isInlineStart = Editor$1.isStart(editor, at, inlinePath);
            var isInlineEnd = Editor$1.isEnd(editor, at, inlinePath);
            var middleRef = Editor$1.pathRef(editor, isBlockEnd ? Path.next(blockPath) : blockPath);
            var endRef = Editor$1.pathRef(editor, isInlineEnd ? Path.next(inlinePath) : inlinePath);
            var blockPathRef = Editor$1.pathRef(editor, blockPath);
            Transforms.splitNodes(editor, {
              at,
              match: (n22) => hasBlocks ? Editor$1.isBlock(editor, n22) : Text.isText(n22) || Editor$1.isInline(editor, n22),
              mode: hasBlocks ? "lowest" : "highest",
              voids
            });
            var startRef = Editor$1.pathRef(editor, !isInlineStart || isInlineStart && isInlineEnd ? Path.next(inlinePath) : inlinePath);
            Transforms.insertNodes(editor, starts, {
              at: startRef.current,
              match: (n22) => Text.isText(n22) || Editor$1.isInline(editor, n22),
              mode: "highest",
              voids
            });
            if (isBlockEmpty && middles.length) {
              Transforms.delete(editor, {
                at: blockPathRef.unref(),
                voids
              });
            }
            Transforms.insertNodes(editor, middles, {
              at: middleRef.current,
              match: (n22) => Editor$1.isBlock(editor, n22),
              mode: "lowest",
              voids
            });
            Transforms.insertNodes(editor, ends, {
              at: endRef.current,
              match: (n22) => Text.isText(n22) || Editor$1.isInline(editor, n22),
              mode: "highest",
              voids
            });
            if (!options.at) {
              var path;
              if (ends.length > 0) {
                path = Path.previous(endRef.current);
              } else if (middles.length > 0) {
                path = Path.previous(middleRef.current);
              } else {
                path = Path.previous(startRef.current);
              }
              var _end2 = Editor$1.end(editor, path);
              Transforms.select(editor, _end2);
            }
            startRef.unref();
            middleRef.unref();
            endRef.unref();
          });
        },
        insertText(editor, text2) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          Editor$1.withoutNormalizing(editor, () => {
            var {
              voids = false
            } = options;
            var {
              at = editor.selection
            } = options;
            if (!at) {
              return;
            }
            if (Path.isPath(at)) {
              at = Editor$1.range(editor, at);
            }
            if (Range.isRange(at)) {
              if (Range.isCollapsed(at)) {
                at = at.anchor;
              } else {
                var end = Range.end(at);
                if (!voids && Editor$1.void(editor, {
                  at: end
                })) {
                  return;
                }
                var start = Range.start(at);
                var startRef = Editor$1.pointRef(editor, start);
                var endRef = Editor$1.pointRef(editor, end);
                Transforms.delete(editor, {
                  at,
                  voids
                });
                var startPoint = startRef.unref();
                var endPoint = endRef.unref();
                at = startPoint || endPoint;
                Transforms.setSelection(editor, {
                  anchor: at,
                  focus: at
                });
              }
            }
            if (!voids && Editor$1.void(editor, {
              at
            })) {
              return;
            }
            var {
              path,
              offset: offset2
            } = at;
            if (text2.length > 0)
              editor.apply({
                type: "insert_text",
                path,
                offset: offset2,
                text: text2
              });
          });
        }
      };
      function ownKeys$a(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$a(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$a(Object(source), true).forEach(function(key) {
              _defineProperty$8(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$a(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var Transforms = _objectSpread$a(_objectSpread$a(_objectSpread$a(_objectSpread$a({}, GeneralTransforms), NodeTransforms), SelectionTransforms), TextTransforms);
      function isObject$f(value) {
        var type = typeof value;
        return value != null && (type == "object" || type == "function");
      }
      var isObject_1$4 = isObject$f;
      var freeGlobal$7 = typeof commonjsGlobal$4 == "object" && commonjsGlobal$4 && commonjsGlobal$4.Object === Object && commonjsGlobal$4;
      var _freeGlobal$4 = freeGlobal$7;
      var freeGlobal$6 = _freeGlobal$4;
      var freeSelf$5 = typeof self == "object" && self && self.Object === Object && self;
      var root$e = freeGlobal$6 || freeSelf$5 || Function("return this")();
      var _root$4 = root$e;
      var root$d = _root$4;
      var Symbol$a = root$d.Symbol;
      var _Symbol$4 = Symbol$a;
      var Symbol$9 = _Symbol$4;
      var objectProto$w = Object.prototype;
      var hasOwnProperty$s = objectProto$w.hasOwnProperty;
      var nativeObjectToString$7 = objectProto$w.toString;
      var symToStringTag$7 = Symbol$9 ? Symbol$9.toStringTag : void 0;
      function getRawTag$6(value) {
        var isOwn = hasOwnProperty$s.call(value, symToStringTag$7), tag = value[symToStringTag$7];
        try {
          value[symToStringTag$7] = void 0;
          var unmasked = true;
        } catch (e22) {
        }
        var result = nativeObjectToString$7.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag$7] = tag;
          } else {
            delete value[symToStringTag$7];
          }
        }
        return result;
      }
      var _getRawTag$4 = getRawTag$6;
      var objectProto$v = Object.prototype;
      var nativeObjectToString$6 = objectProto$v.toString;
      function objectToString$6(value) {
        return nativeObjectToString$6.call(value);
      }
      var _objectToString$4 = objectToString$6;
      var Symbol$8 = _Symbol$4, getRawTag$5 = _getRawTag$4, objectToString$5 = _objectToString$4;
      var nullTag$5 = "[object Null]", undefinedTag$5 = "[object Undefined]";
      var symToStringTag$6 = Symbol$8 ? Symbol$8.toStringTag : void 0;
      function baseGetTag$c(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag$5 : nullTag$5;
        }
        return symToStringTag$6 && symToStringTag$6 in Object(value) ? getRawTag$5(value) : objectToString$5(value);
      }
      var _baseGetTag$4 = baseGetTag$c;
      function isObjectLike$e(value) {
        return value != null && typeof value == "object";
      }
      var isObjectLike_1$4 = isObjectLike$e;
      var baseGetTag$b = _baseGetTag$4, isObjectLike$d = isObjectLike_1$4;
      var symbolTag$7 = "[object Symbol]";
      function isSymbol$5(value) {
        return typeof value == "symbol" || isObjectLike$d(value) && baseGetTag$b(value) == symbolTag$7;
      }
      var isSymbol_1$1 = isSymbol$5;
      var lib$f = {};
      Object.defineProperty(lib$f, "__esModule", {
        value: true
      });
      var IS_MAC$1 = typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
      var MODIFIERS$1 = {
        alt: "altKey",
        control: "ctrlKey",
        meta: "metaKey",
        shift: "shiftKey"
      };
      var ALIASES$1 = {
        add: "+",
        break: "pause",
        cmd: "meta",
        command: "meta",
        ctl: "control",
        ctrl: "control",
        del: "delete",
        down: "arrowdown",
        esc: "escape",
        ins: "insert",
        left: "arrowleft",
        mod: IS_MAC$1 ? "meta" : "control",
        opt: "alt",
        option: "alt",
        return: "enter",
        right: "arrowright",
        space: " ",
        spacebar: " ",
        up: "arrowup",
        win: "meta",
        windows: "meta"
      };
      var CODES$1 = {
        backspace: 8,
        tab: 9,
        enter: 13,
        shift: 16,
        control: 17,
        alt: 18,
        pause: 19,
        capslock: 20,
        escape: 27,
        " ": 32,
        pageup: 33,
        pagedown: 34,
        end: 35,
        home: 36,
        arrowleft: 37,
        arrowup: 38,
        arrowright: 39,
        arrowdown: 40,
        insert: 45,
        delete: 46,
        meta: 91,
        numlock: 144,
        scrolllock: 145,
        ";": 186,
        "=": 187,
        ",": 188,
        "-": 189,
        ".": 190,
        "/": 191,
        "`": 192,
        "[": 219,
        "\\": 220,
        "]": 221,
        "'": 222
      };
      for (var f$1 = 1; f$1 < 20; f$1++) {
        CODES$1["f" + f$1] = 111 + f$1;
      }
      function isHotkey$7(hotkey, options, event) {
        if (options && !("byKey" in options)) {
          event = options;
          options = null;
        }
        if (!Array.isArray(hotkey)) {
          hotkey = [hotkey];
        }
        var array = hotkey.map(function(string2) {
          return parseHotkey$1(string2, options);
        });
        var check = function check2(e22) {
          return array.some(function(object) {
            return compareHotkey$1(object, e22);
          });
        };
        var ret = event == null ? check : check(event);
        return ret;
      }
      function isCodeHotkey$1(hotkey, event) {
        return isHotkey$7(hotkey, event);
      }
      function isKeyHotkey$1(hotkey, event) {
        return isHotkey$7(hotkey, { byKey: true }, event);
      }
      function parseHotkey$1(hotkey, options) {
        var byKey = options && options.byKey;
        var ret = {};
        hotkey = hotkey.replace("++", "+add");
        var values2 = hotkey.split("+");
        var length = values2.length;
        for (var k22 in MODIFIERS$1) {
          ret[MODIFIERS$1[k22]] = false;
        }
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = void 0;
        try {
          for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var value = _step.value;
            var optional = value.endsWith("?") && value.length > 1;
            if (optional) {
              value = value.slice(0, -1);
            }
            var name2 = toKeyName$1(value);
            var modifier = MODIFIERS$1[name2];
            if (length === 1 || !modifier) {
              if (byKey) {
                ret.key = name2;
              } else {
                ret.which = toKeyCode$1(value);
              }
            }
            if (modifier) {
              ret[modifier] = optional ? null : true;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return ret;
      }
      function compareHotkey$1(object, event) {
        for (var key in object) {
          var expected = object[key];
          var actual = void 0;
          if (expected == null) {
            continue;
          }
          if (key === "key" && event.key != null) {
            actual = event.key.toLowerCase();
          } else if (key === "which") {
            actual = expected === 91 && event.which === 93 ? 91 : event.which;
          } else {
            actual = event[key];
          }
          if (actual == null && expected === false) {
            continue;
          }
          if (actual !== expected) {
            return false;
          }
        }
        return true;
      }
      function toKeyCode$1(name2) {
        name2 = toKeyName$1(name2);
        var code = CODES$1[name2] || name2.toUpperCase().charCodeAt(0);
        return code;
      }
      function toKeyName$1(name2) {
        name2 = name2.toLowerCase();
        name2 = ALIASES$1[name2] || name2;
        return name2;
      }
      lib$f.default = isHotkey$7;
      lib$f.isHotkey = isHotkey$7;
      lib$f.isCodeHotkey = isCodeHotkey$1;
      var isKeyHotkey_1 = lib$f.isKeyHotkey = isKeyHotkey$1;
      lib$f.parseHotkey = parseHotkey$1;
      lib$f.compareHotkey = compareHotkey$1;
      lib$f.toKeyCode = toKeyCode$1;
      lib$f.toKeyName = toKeyName$1;
      parseInt(React__default.version.split(".")[0], 10) >= 17;
      typeof navigator !== "undefined" && typeof window !== "undefined" && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      var IS_APPLE$1 = typeof navigator !== "undefined" && /Mac OS X/.test(navigator.userAgent);
      typeof navigator !== "undefined" && /Android/.test(navigator.userAgent);
      var IS_FIREFOX = typeof navigator !== "undefined" && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);
      typeof navigator !== "undefined" && /Version\/[\d\.]+.*Safari/.test(navigator.userAgent);
      typeof navigator !== "undefined" && /Edge?\/(?:[0-6][0-9]|[0-7][0-8])(?:\.)/i.test(navigator.userAgent);
      var IS_CHROME = typeof navigator !== "undefined" && /Chrome/i.test(navigator.userAgent);
      typeof navigator !== "undefined" && /Chrome?\/(?:[0-7][0-5]|[0-6][0-9])(?:\.)/i.test(navigator.userAgent);
      typeof navigator !== "undefined" && /^(?!.*Seamonkey)(?=.*Firefox\/(?:[0-7][0-9]|[0-8][0-6])(?:\.)).*/i.test(navigator.userAgent);
      typeof navigator !== "undefined" && /.*QQBrowser/.test(navigator.userAgent);
      typeof navigator !== "undefined" && /.*UCBrowser/.test(navigator.userAgent);
      typeof navigator !== "undefined" && /.*Wechat/.test(navigator.userAgent);
      var NODE_TO_INDEX = /* @__PURE__ */ new WeakMap();
      var NODE_TO_PARENT = /* @__PURE__ */ new WeakMap();
      var EDITOR_TO_WINDOW = /* @__PURE__ */ new WeakMap();
      var EDITOR_TO_ELEMENT = /* @__PURE__ */ new WeakMap();
      var ELEMENT_TO_NODE = /* @__PURE__ */ new WeakMap();
      var NODE_TO_KEY = /* @__PURE__ */ new WeakMap();
      var EDITOR_TO_KEY_TO_ELEMENT = /* @__PURE__ */ new WeakMap();
      var IS_READ_ONLY = /* @__PURE__ */ new WeakMap();
      var IS_FOCUSED = /* @__PURE__ */ new WeakMap();
      var IS_COMPOSING = /* @__PURE__ */ new WeakMap();
      var EDITOR_TO_USER_SELECTION = /* @__PURE__ */ new WeakMap();
      var EDITOR_TO_ON_CHANGE = /* @__PURE__ */ new WeakMap();
      var HOTKEYS$1 = {
        bold: "mod+b",
        compose: ["down", "left", "right", "up", "backspace", "enter"],
        moveBackward: "left",
        moveForward: "right",
        moveWordBackward: "ctrl+left",
        moveWordForward: "ctrl+right",
        deleteBackward: "shift?+backspace",
        deleteForward: "shift?+delete",
        extendBackward: "shift+left",
        extendForward: "shift+right",
        italic: "mod+i",
        insertSoftBreak: "shift+enter",
        splitBlock: "enter",
        undo: "mod+z"
      };
      var APPLE_HOTKEYS$1 = {
        moveLineBackward: "opt+up",
        moveLineForward: "opt+down",
        moveWordBackward: "opt+left",
        moveWordForward: "opt+right",
        deleteBackward: ["ctrl+backspace", "ctrl+h"],
        deleteForward: ["ctrl+delete", "ctrl+d"],
        deleteLineBackward: "cmd+shift?+backspace",
        deleteLineForward: ["cmd+shift?+delete", "ctrl+k"],
        deleteWordBackward: "opt+shift?+backspace",
        deleteWordForward: "opt+shift?+delete",
        extendLineBackward: "opt+shift+up",
        extendLineForward: "opt+shift+down",
        redo: "cmd+shift+z",
        transposeCharacter: "ctrl+t"
      };
      var WINDOWS_HOTKEYS$1 = {
        deleteWordBackward: "ctrl+shift?+backspace",
        deleteWordForward: "ctrl+shift?+delete",
        redo: ["ctrl+y", "ctrl+shift+z"]
      };
      var create$3 = (key) => {
        var generic = HOTKEYS$1[key];
        var apple = APPLE_HOTKEYS$1[key];
        var windows = WINDOWS_HOTKEYS$1[key];
        var isGeneric = generic && isKeyHotkey_1(generic);
        var isApple = apple && isKeyHotkey_1(apple);
        var isWindows = windows && isKeyHotkey_1(windows);
        return (event) => {
          if (isGeneric && isGeneric(event))
            return true;
          if (IS_APPLE$1 && isApple && isApple(event))
            return true;
          if (!IS_APPLE$1 && isWindows && isWindows(event))
            return true;
          return false;
        };
      };
      ({
        isBold: create$3("bold"),
        isCompose: create$3("compose"),
        isMoveBackward: create$3("moveBackward"),
        isMoveForward: create$3("moveForward"),
        isDeleteBackward: create$3("deleteBackward"),
        isDeleteForward: create$3("deleteForward"),
        isDeleteLineBackward: create$3("deleteLineBackward"),
        isDeleteLineForward: create$3("deleteLineForward"),
        isDeleteWordBackward: create$3("deleteWordBackward"),
        isDeleteWordForward: create$3("deleteWordForward"),
        isExtendBackward: create$3("extendBackward"),
        isExtendForward: create$3("extendForward"),
        isExtendLineBackward: create$3("extendLineBackward"),
        isExtendLineForward: create$3("extendLineForward"),
        isItalic: create$3("italic"),
        isMoveLineBackward: create$3("moveLineBackward"),
        isMoveLineForward: create$3("moveLineForward"),
        isMoveWordBackward: create$3("moveWordBackward"),
        isMoveWordForward: create$3("moveWordForward"),
        isRedo: create$3("redo"),
        isSoftBreak: create$3("insertSoftBreak"),
        isSplitBlock: create$3("splitBlock"),
        isTransposeCharacter: create$3("transposeCharacter"),
        isUndo: create$3("undo")
      });
      var getDefaultView = (value) => {
        return value && value.ownerDocument && value.ownerDocument.defaultView || null;
      };
      var isDOMComment = (value) => {
        return isDOMNode(value) && value.nodeType === 8;
      };
      var isDOMElement = (value) => {
        return isDOMNode(value) && value.nodeType === 1;
      };
      var isDOMNode = (value) => {
        var window2 = getDefaultView(value);
        return !!window2 && value instanceof window2.Node;
      };
      var isDOMSelection = (value) => {
        var window2 = value && value.anchorNode && getDefaultView(value.anchorNode);
        return !!window2 && value instanceof window2.Selection;
      };
      var isDOMText = (value) => {
        return isDOMNode(value) && value.nodeType === 3;
      };
      var normalizeDOMPoint = (domPoint) => {
        var [node, offset2] = domPoint;
        if (isDOMElement(node) && node.childNodes.length) {
          var isLast = offset2 === node.childNodes.length;
          var index2 = isLast ? offset2 - 1 : offset2;
          [node, index2] = getEditableChildAndIndex(node, index2, isLast ? "backward" : "forward");
          isLast = index2 < offset2;
          while (isDOMElement(node) && node.childNodes.length) {
            var i22 = isLast ? node.childNodes.length - 1 : 0;
            node = getEditableChild(node, i22, isLast ? "backward" : "forward");
          }
          offset2 = isLast && node.textContent != null ? node.textContent.length : 0;
        }
        return [node, offset2];
      };
      var hasShadowRoot = () => {
        return !!(window.document.activeElement && window.document.activeElement.shadowRoot);
      };
      var getEditableChildAndIndex = (parent2, index2, direction) => {
        var {
          childNodes
        } = parent2;
        var child = childNodes[index2];
        var i22 = index2;
        var triedForward = false;
        var triedBackward = false;
        while (isDOMComment(child) || isDOMElement(child) && child.childNodes.length === 0 || isDOMElement(child) && child.getAttribute("contenteditable") === "false") {
          if (triedForward && triedBackward) {
            break;
          }
          if (i22 >= childNodes.length) {
            triedForward = true;
            i22 = index2 - 1;
            direction = "backward";
            continue;
          }
          if (i22 < 0) {
            triedBackward = true;
            i22 = index2 + 1;
            direction = "forward";
            continue;
          }
          child = childNodes[i22];
          index2 = i22;
          i22 += direction === "forward" ? 1 : -1;
        }
        return [child, index2];
      };
      var getEditableChild = (parent2, index2, direction) => {
        var [child] = getEditableChildAndIndex(parent2, index2, direction);
        return child;
      };
      var getPlainText = (domNode) => {
        var text2 = "";
        if (isDOMText(domNode) && domNode.nodeValue) {
          return domNode.nodeValue;
        }
        if (isDOMElement(domNode)) {
          for (var childNode of Array.from(domNode.childNodes)) {
            text2 += getPlainText(childNode);
          }
          var display = getComputedStyle(domNode).getPropertyValue("display");
          if (display === "block" || display === "list" || domNode.tagName === "BR") {
            text2 += "\n";
          }
        }
        return text2;
      };
      var catchSlateFragment = /data-slate-fragment="(.+?)"/m;
      var getSlateFragmentAttribute = (dataTransfer) => {
        var htmlData = dataTransfer.getData("text/html");
        var [, fragment] = htmlData.match(catchSlateFragment) || [];
        return fragment;
      };
      var n$1 = 0;
      class Key {
        constructor() {
          this.id = "".concat(n$1++);
        }
      }
      var ReactEditor = {
        isComposing(editor) {
          return !!IS_COMPOSING.get(editor);
        },
        getWindow(editor) {
          var window2 = EDITOR_TO_WINDOW.get(editor);
          if (!window2) {
            throw new Error("Unable to find a host window element for this editor");
          }
          return window2;
        },
        findKey(editor, node) {
          var key = NODE_TO_KEY.get(node);
          if (!key) {
            key = new Key();
            NODE_TO_KEY.set(node, key);
          }
          return key;
        },
        findPath(editor, node) {
          var path = [];
          var child = node;
          while (true) {
            var parent2 = NODE_TO_PARENT.get(child);
            if (parent2 == null) {
              if (Editor$1.isEditor(child)) {
                return path;
              } else {
                break;
              }
            }
            var i22 = NODE_TO_INDEX.get(child);
            if (i22 == null) {
              break;
            }
            path.unshift(i22);
            child = parent2;
          }
          throw new Error("Unable to find the path for Slate node: ".concat(Scrubber.stringify(node)));
        },
        findDocumentOrShadowRoot(editor) {
          var el2 = ReactEditor.toDOMNode(editor, editor);
          var root2 = el2.getRootNode();
          if ((root2 instanceof Document || root2 instanceof ShadowRoot) && root2.getSelection != null) {
            return root2;
          }
          return el2.ownerDocument;
        },
        isFocused(editor) {
          return !!IS_FOCUSED.get(editor);
        },
        isReadOnly(editor) {
          return !!IS_READ_ONLY.get(editor);
        },
        blur(editor) {
          var el2 = ReactEditor.toDOMNode(editor, editor);
          var root2 = ReactEditor.findDocumentOrShadowRoot(editor);
          IS_FOCUSED.set(editor, false);
          if (root2.activeElement === el2) {
            el2.blur();
          }
        },
        focus(editor) {
          var el2 = ReactEditor.toDOMNode(editor, editor);
          var root2 = ReactEditor.findDocumentOrShadowRoot(editor);
          IS_FOCUSED.set(editor, true);
          if (root2.activeElement !== el2) {
            el2.focus({
              preventScroll: true
            });
          }
        },
        deselect(editor) {
          ReactEditor.toDOMNode(editor, editor);
          var {
            selection
          } = editor;
          var root2 = ReactEditor.findDocumentOrShadowRoot(editor);
          var domSelection = root2.getSelection();
          if (domSelection && domSelection.rangeCount > 0) {
            domSelection.removeAllRanges();
          }
          if (selection) {
            Transforms.deselect(editor);
          }
        },
        hasDOMNode(editor, target) {
          var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var {
            editable = false
          } = options;
          var editorEl = ReactEditor.toDOMNode(editor, editor);
          var targetEl;
          try {
            targetEl = isDOMElement(target) ? target : target.parentElement;
          } catch (err) {
            if (!err.message.includes('Permission denied to access property "nodeType"')) {
              throw err;
            }
          }
          if (!targetEl) {
            return false;
          }
          return targetEl.closest("[data-slate-editor]") === editorEl && (!editable || targetEl.isContentEditable ? true : typeof targetEl.isContentEditable === "boolean" && targetEl.closest('[contenteditable="false"]') === editorEl || !!targetEl.getAttribute("data-slate-zero-width"));
        },
        insertData(editor, data) {
          editor.insertData(data);
        },
        insertFragmentData(editor, data) {
          return editor.insertFragmentData(data);
        },
        insertTextData(editor, data) {
          return editor.insertTextData(data);
        },
        setFragmentData(editor, data, originEvent) {
          editor.setFragmentData(data, originEvent);
        },
        toDOMNode(editor, node) {
          var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);
          var domNode = Editor$1.isEditor(node) ? EDITOR_TO_ELEMENT.get(editor) : KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node));
          if (!domNode) {
            throw new Error("Cannot resolve a DOM node from Slate node: ".concat(Scrubber.stringify(node)));
          }
          return domNode;
        },
        toDOMPoint(editor, point2) {
          var [node] = Editor$1.node(editor, point2.path);
          var el2 = ReactEditor.toDOMNode(editor, node);
          var domPoint;
          if (Editor$1.void(editor, {
            at: point2
          })) {
            point2 = {
              path: point2.path,
              offset: 0
            };
          }
          var selector = "[data-slate-string], [data-slate-zero-width]";
          var texts = Array.from(el2.querySelectorAll(selector));
          var start = 0;
          for (var text2 of texts) {
            var domNode = text2.childNodes[0];
            if (domNode == null || domNode.textContent == null) {
              continue;
            }
            var {
              length
            } = domNode.textContent;
            var attr = text2.getAttribute("data-slate-length");
            var trueLength = attr == null ? length : parseInt(attr, 10);
            var end = start + trueLength;
            if (point2.offset <= end) {
              var offset2 = Math.min(length, Math.max(0, point2.offset - start));
              domPoint = [domNode, offset2];
              break;
            }
            start = end;
          }
          if (!domPoint) {
            throw new Error("Cannot resolve a DOM point from Slate point: ".concat(Scrubber.stringify(point2)));
          }
          return domPoint;
        },
        toDOMRange(editor, range) {
          var {
            anchor,
            focus
          } = range;
          var isBackward = Range.isBackward(range);
          var domAnchor = ReactEditor.toDOMPoint(editor, anchor);
          var domFocus = Range.isCollapsed(range) ? domAnchor : ReactEditor.toDOMPoint(editor, focus);
          var window2 = ReactEditor.getWindow(editor);
          var domRange = window2.document.createRange();
          var [startNode, startOffset] = isBackward ? domFocus : domAnchor;
          var [endNode, endOffset] = isBackward ? domAnchor : domFocus;
          var startEl = isDOMElement(startNode) ? startNode : startNode.parentElement;
          var isStartAtZeroWidth = !!startEl.getAttribute("data-slate-zero-width");
          var endEl = isDOMElement(endNode) ? endNode : endNode.parentElement;
          var isEndAtZeroWidth = !!endEl.getAttribute("data-slate-zero-width");
          domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset);
          domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset);
          return domRange;
        },
        toSlateNode(editor, domNode) {
          var domEl = isDOMElement(domNode) ? domNode : domNode.parentElement;
          if (domEl && !domEl.hasAttribute("data-slate-node")) {
            domEl = domEl.closest("[data-slate-node]");
          }
          var node = domEl ? ELEMENT_TO_NODE.get(domEl) : null;
          if (!node) {
            throw new Error("Cannot resolve a Slate node from DOM node: ".concat(domEl));
          }
          return node;
        },
        findEventRange(editor, event) {
          if ("nativeEvent" in event) {
            event = event.nativeEvent;
          }
          var {
            clientX: x22,
            clientY: y22,
            target
          } = event;
          if (x22 == null || y22 == null) {
            throw new Error("Cannot resolve a Slate range from a DOM event: ".concat(event));
          }
          var node = ReactEditor.toSlateNode(editor, event.target);
          var path = ReactEditor.findPath(editor, node);
          if (Editor$1.isVoid(editor, node)) {
            var rect = target.getBoundingClientRect();
            var isPrev = editor.isInline(node) ? x22 - rect.left < rect.left + rect.width - x22 : y22 - rect.top < rect.top + rect.height - y22;
            var edge = Editor$1.point(editor, path, {
              edge: isPrev ? "start" : "end"
            });
            var point2 = isPrev ? Editor$1.before(editor, edge) : Editor$1.after(editor, edge);
            if (point2) {
              var _range = Editor$1.range(editor, point2);
              return _range;
            }
          }
          var domRange;
          var {
            document: document2
          } = ReactEditor.getWindow(editor);
          if (document2.caretRangeFromPoint) {
            domRange = document2.caretRangeFromPoint(x22, y22);
          } else {
            var position2 = document2.caretPositionFromPoint(x22, y22);
            if (position2) {
              domRange = document2.createRange();
              domRange.setStart(position2.offsetNode, position2.offset);
              domRange.setEnd(position2.offsetNode, position2.offset);
            }
          }
          if (!domRange) {
            throw new Error("Cannot resolve a Slate range from a DOM event: ".concat(event));
          }
          var range = ReactEditor.toSlateRange(editor, domRange, {
            exactMatch: false,
            suppressThrow: false
          });
          return range;
        },
        toSlatePoint(editor, domPoint, options) {
          var {
            exactMatch,
            suppressThrow
          } = options;
          var [nearestNode, nearestOffset] = exactMatch ? domPoint : normalizeDOMPoint(domPoint);
          var parentNode = nearestNode.parentNode;
          var textNode = null;
          var offset2 = 0;
          if (parentNode) {
            var _domNode$textContent;
            var editorEl = ReactEditor.toDOMNode(editor, editor);
            var potentialVoidNode = parentNode.closest('[data-slate-void="true"]');
            var voidNode = potentialVoidNode && editorEl.contains(potentialVoidNode) ? potentialVoidNode : null;
            var leafNode = parentNode.closest("[data-slate-leaf]");
            var domNode = null;
            if (leafNode) {
              textNode = leafNode.closest('[data-slate-node="text"]');
              if (textNode) {
                var window2 = ReactEditor.getWindow(editor);
                var range = window2.document.createRange();
                range.setStart(textNode, 0);
                range.setEnd(nearestNode, nearestOffset);
                var contents = range.cloneContents();
                var removals = [...Array.prototype.slice.call(contents.querySelectorAll("[data-slate-zero-width]")), ...Array.prototype.slice.call(contents.querySelectorAll("[contenteditable=false]"))];
                removals.forEach((el2) => {
                  el2.parentNode.removeChild(el2);
                });
                offset2 = contents.textContent.length;
                domNode = textNode;
              }
            } else if (voidNode) {
              leafNode = voidNode.querySelector("[data-slate-leaf]");
              if (!leafNode) {
                offset2 = 1;
              } else {
                textNode = leafNode.closest('[data-slate-node="text"]');
                domNode = leafNode;
                offset2 = domNode.textContent.length;
                domNode.querySelectorAll("[data-slate-zero-width]").forEach((el2) => {
                  offset2 -= el2.textContent.length;
                });
              }
            }
            if (domNode && offset2 === domNode.textContent.length && (parentNode.hasAttribute("data-slate-zero-width") || IS_FIREFOX && (_domNode$textContent = domNode.textContent) !== null && _domNode$textContent !== void 0 && _domNode$textContent.endsWith("\n\n"))) {
              offset2--;
            }
          }
          if (!textNode) {
            if (suppressThrow) {
              return null;
            }
            throw new Error("Cannot resolve a Slate point from DOM point: ".concat(domPoint));
          }
          var slateNode = ReactEditor.toSlateNode(editor, textNode);
          var path = ReactEditor.findPath(editor, slateNode);
          return {
            path,
            offset: offset2
          };
        },
        toSlateRange(editor, domRange, options) {
          var {
            exactMatch,
            suppressThrow
          } = options;
          var el2 = isDOMSelection(domRange) ? domRange.anchorNode : domRange.startContainer;
          var anchorNode;
          var anchorOffset;
          var focusNode;
          var focusOffset;
          var isCollapsed2;
          if (el2) {
            if (isDOMSelection(domRange)) {
              anchorNode = domRange.anchorNode;
              anchorOffset = domRange.anchorOffset;
              focusNode = domRange.focusNode;
              focusOffset = domRange.focusOffset;
              if (IS_CHROME && hasShadowRoot()) {
                isCollapsed2 = domRange.anchorNode === domRange.focusNode && domRange.anchorOffset === domRange.focusOffset;
              } else {
                isCollapsed2 = domRange.isCollapsed;
              }
            } else {
              anchorNode = domRange.startContainer;
              anchorOffset = domRange.startOffset;
              focusNode = domRange.endContainer;
              focusOffset = domRange.endOffset;
              isCollapsed2 = domRange.collapsed;
            }
          }
          if (anchorNode == null || focusNode == null || anchorOffset == null || focusOffset == null) {
            throw new Error("Cannot resolve a Slate range from DOM range: ".concat(domRange));
          }
          var anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {
            exactMatch,
            suppressThrow
          });
          if (!anchor) {
            return null;
          }
          var focus = isCollapsed2 ? anchor : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {
            exactMatch,
            suppressThrow
          });
          if (!focus) {
            return null;
          }
          var range = {
            anchor,
            focus
          };
          if (Range.isExpanded(range) && Range.isForward(range) && isDOMElement(focusNode) && Editor$1.void(editor, {
            at: range.focus,
            mode: "highest"
          })) {
            range = Editor$1.unhangRange(editor, range, {
              voids: true
            });
          }
          return range;
        },
        hasRange(editor, range) {
          var {
            anchor,
            focus
          } = range;
          return Editor$1.hasPath(editor, anchor.path) && Editor$1.hasPath(editor, focus.path);
        }
      };
      var doRectsIntersect = (rect, compareRect) => {
        var middle = (compareRect.top + compareRect.bottom) / 2;
        return rect.top <= middle && rect.bottom >= middle;
      };
      var areRangesSameLine = (editor, range1, range2) => {
        var rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect();
        var rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect();
        return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1);
      };
      var findCurrentLineRange = (editor, parentRange) => {
        var parentRangeBoundary = Editor$1.range(editor, Range.end(parentRange));
        var positions = Array.from(Editor$1.positions(editor, {
          at: parentRange
        }));
        var left = 0;
        var right = positions.length;
        var middle = Math.floor(right / 2);
        if (areRangesSameLine(editor, Editor$1.range(editor, positions[left]), parentRangeBoundary)) {
          return Editor$1.range(editor, positions[left], parentRangeBoundary);
        }
        if (positions.length < 2) {
          return Editor$1.range(editor, positions[positions.length - 1], parentRangeBoundary);
        }
        while (middle !== positions.length && middle !== left) {
          if (areRangesSameLine(editor, Editor$1.range(editor, positions[middle]), parentRangeBoundary)) {
            right = middle;
          } else {
            left = middle;
          }
          middle = Math.floor((left + right) / 2);
        }
        return Editor$1.range(editor, positions[right], parentRangeBoundary);
      };
      var withReact = (editor) => {
        var e22 = editor;
        var {
          apply: apply2,
          onChange,
          deleteBackward: deleteBackward2
        } = e22;
        EDITOR_TO_KEY_TO_ELEMENT.set(e22, /* @__PURE__ */ new WeakMap());
        e22.deleteBackward = (unit) => {
          if (unit !== "line") {
            return deleteBackward2(unit);
          }
          if (editor.selection && Range.isCollapsed(editor.selection)) {
            var parentBlockEntry = Editor$1.above(editor, {
              match: (n22) => Editor$1.isBlock(editor, n22),
              at: editor.selection
            });
            if (parentBlockEntry) {
              var [, parentBlockPath] = parentBlockEntry;
              var parentElementRange = Editor$1.range(editor, parentBlockPath, editor.selection.anchor);
              var currentLineRange = findCurrentLineRange(e22, parentElementRange);
              if (!Range.isCollapsed(currentLineRange)) {
                Transforms.delete(editor, {
                  at: currentLineRange
                });
              }
            }
          }
        };
        e22.apply = (op) => {
          var matches = [];
          switch (op.type) {
            case "insert_text":
            case "remove_text":
            case "set_node":
            case "split_node": {
              matches.push(...getMatches(e22, op.path));
              break;
            }
            case "set_selection": {
              var _EDITOR_TO_USER_SELEC;
              (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(editor)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();
              EDITOR_TO_USER_SELECTION.delete(editor);
              break;
            }
            case "insert_node":
            case "remove_node": {
              matches.push(...getMatches(e22, Path.parent(op.path)));
              break;
            }
            case "merge_node": {
              var prevPath = Path.previous(op.path);
              matches.push(...getMatches(e22, prevPath));
              break;
            }
            case "move_node": {
              var commonPath = Path.common(Path.parent(op.path), Path.parent(op.newPath));
              matches.push(...getMatches(e22, commonPath));
              break;
            }
          }
          apply2(op);
          for (var [path, key] of matches) {
            var [node] = Editor$1.node(e22, path);
            NODE_TO_KEY.set(node, key);
          }
        };
        e22.setFragmentData = (data) => {
          var {
            selection
          } = e22;
          if (!selection) {
            return;
          }
          var [start, end] = Range.edges(selection);
          var startVoid = Editor$1.void(e22, {
            at: start.path
          });
          var endVoid = Editor$1.void(e22, {
            at: end.path
          });
          if (Range.isCollapsed(selection) && !startVoid) {
            return;
          }
          var domRange = ReactEditor.toDOMRange(e22, selection);
          var contents = domRange.cloneContents();
          var attach = contents.childNodes[0];
          contents.childNodes.forEach((node) => {
            if (node.textContent && node.textContent.trim() !== "") {
              attach = node;
            }
          });
          if (endVoid) {
            var [voidNode] = endVoid;
            var r22 = domRange.cloneRange();
            var domNode = ReactEditor.toDOMNode(e22, voidNode);
            r22.setEndAfter(domNode);
            contents = r22.cloneContents();
          }
          if (startVoid) {
            attach = contents.querySelector("[data-slate-spacer]");
          }
          Array.from(contents.querySelectorAll("[data-slate-zero-width]")).forEach((zw) => {
            var isNewline = zw.getAttribute("data-slate-zero-width") === "n";
            zw.textContent = isNewline ? "\n" : "";
          });
          if (isDOMText(attach)) {
            var span = attach.ownerDocument.createElement("span");
            span.style.whiteSpace = "pre";
            span.appendChild(attach);
            contents.appendChild(span);
            attach = span;
          }
          var fragment = e22.getFragment();
          var string2 = JSON.stringify(fragment);
          var encoded = window.btoa(encodeURIComponent(string2));
          attach.setAttribute("data-slate-fragment", encoded);
          data.setData("application/x-slate-fragment", encoded);
          var div = contents.ownerDocument.createElement("div");
          div.appendChild(contents);
          div.setAttribute("hidden", "true");
          contents.ownerDocument.body.appendChild(div);
          data.setData("text/html", div.innerHTML);
          data.setData("text/plain", getPlainText(div));
          contents.ownerDocument.body.removeChild(div);
          return data;
        };
        e22.insertData = (data) => {
          if (!e22.insertFragmentData(data)) {
            e22.insertTextData(data);
          }
        };
        e22.insertFragmentData = (data) => {
          var fragment = data.getData("application/x-slate-fragment") || getSlateFragmentAttribute(data);
          if (fragment) {
            var decoded = decodeURIComponent(window.atob(fragment));
            var parsed = JSON.parse(decoded);
            e22.insertFragment(parsed);
            return true;
          }
          return false;
        };
        e22.insertTextData = (data) => {
          var text2 = data.getData("text/plain");
          if (text2) {
            var lines = text2.split(/\r\n|\r|\n/);
            var split = false;
            for (var line of lines) {
              if (split) {
                Transforms.splitNodes(e22, {
                  always: true
                });
              }
              e22.insertText(line);
              split = true;
            }
            return true;
          }
          return false;
        };
        e22.onChange = () => {
          ReactDOM2.unstable_batchedUpdates(() => {
            var onContextChange = EDITOR_TO_ON_CHANGE.get(e22);
            if (onContextChange) {
              onContextChange();
            }
            onChange();
          });
        };
        return e22;
      };
      var getMatches = (e22, path) => {
        var matches = [];
        for (var [n22, p22] of Editor$1.levels(e22, {
          at: path
        })) {
          var key = ReactEditor.findKey(e22, n22);
          matches.push([p22, key]);
        }
        return matches;
      };
      const e6 = Symbol(), t15 = Symbol(), r$1 = Symbol(), n6 = Object.getPrototypeOf, o11 = /* @__PURE__ */ new WeakMap(), s17 = (e22) => e22 && (o11.has(e22) ? o11.get(e22) : n6(e22) === Object.prototype || n6(e22) === Array.prototype), c13 = (e22) => typeof e22 == "object" && e22 !== null, i11 = (n22, o22) => {
        let s22 = false;
        const c22 = (t22, r22, o32) => {
          if (!s22) {
            let s32 = t22.a.get(n22);
            s32 || (s32 = /* @__PURE__ */ new Set(), t22.a.set(n22, s32)), o32 && s32.has(e6) || s32.add(r22);
          }
        }, i22 = { f: o22, get(e22, t22) {
          return t22 === r$1 ? n22 : (c22(this, t22), a11(e22[t22], this.a, this.c));
        }, has(e22, r22) {
          return r22 === t15 ? (s22 = true, this.a.delete(n22), true) : (c22(this, r22), r22 in e22);
        }, getOwnPropertyDescriptor(e22, t22) {
          return c22(this, t22, true), Object.getOwnPropertyDescriptor(e22, t22);
        }, ownKeys(t22) {
          return c22(this, e6), Reflect.ownKeys(t22);
        } };
        return o22 && (i22.set = i22.deleteProperty = () => false), i22;
      }, a11 = (e22, t22, o22) => {
        if (!s17(e22))
          return e22;
        const c22 = e22[r$1] || e22, a22 = ((e32) => Object.isFrozen(e32) || Object.values(Object.getOwnPropertyDescriptors(e32)).some((e42) => !e42.writable))(c22);
        let l22 = o22 && o22.get(c22);
        return l22 && l22.f === a22 || (l22 = i11(c22, a22), l22.p = new Proxy(a22 ? ((e32) => {
          if (Array.isArray(e32))
            return Array.from(e32);
          const t32 = Object.getOwnPropertyDescriptors(e32);
          return Object.values(t32).forEach((e42) => {
            e42.configurable = true;
          }), Object.create(n6(e32), t32);
        })(c22) : c22, l22), o22 && o22.set(c22, l22)), l22.a = t22, l22.c = o22, l22.p;
      }, l$1 = (e22, t22) => {
        const r22 = Reflect.ownKeys(e22), n22 = Reflect.ownKeys(t22);
        return r22.length !== n22.length || r22.some((e32, t32) => e32 !== n22[t32]);
      }, u$1 = (t22, r22, n22, o22) => {
        if (Object.is(t22, r22))
          return false;
        if (!c13(t22) || !c13(r22))
          return true;
        const s22 = n22.get(t22);
        if (!s22)
          return true;
        if (o22) {
          const e22 = o22.get(t22);
          if (e22 && e22.n === r22)
            return e22.g;
          o22.set(t22, { n: r22, g: false });
        }
        let i22 = null;
        for (const c22 of s22) {
          const s32 = c22 === e6 ? l$1(t22, r22) : u$1(t22[c22], r22[c22], n22, o22);
          if (s32 !== true && s32 !== false || (i22 = s32), i22)
            break;
        }
        return i22 === null && (i22 = true), o22 && o22.set(t22, { n: r22, g: i22 }), i22;
      }, g4 = (e22, t22) => {
        const r22 = [], n22 = /* @__PURE__ */ new WeakSet(), o22 = (e32, s22) => {
          if (n22.has(e32))
            return;
          c13(e32) && n22.add(e32);
          const i22 = t22.get(e32);
          i22 ? i22.forEach((t32) => {
            o22(e32[t32], s22 ? [...s22, t32] : [t32]);
          }) : s22 && r22.push(s22);
        };
        return o22(e22), r22;
      };
      const useAffectedDebugValue = (state, affected) => {
        const pathList = react.exports.useRef();
        react.exports.useEffect(() => {
          pathList.current = g4(state, affected);
        });
        react.exports.useDebugValue(state);
      };
      const createTrackedSelector = (useSelector) => {
        const useTrackedSelector = () => {
          const [, forceUpdate] = react.exports.useReducer((c22) => c22 + 1, 0);
          const affected = /* @__PURE__ */ new WeakMap();
          const lastAffected = react.exports.useRef();
          const prevState = react.exports.useRef();
          const lastState = react.exports.useRef();
          react.exports.useEffect(() => {
            lastAffected.current = affected;
            if (prevState.current !== lastState.current && u$1(prevState.current, lastState.current, affected, /* @__PURE__ */ new WeakMap())) {
              prevState.current = lastState.current;
              forceUpdate();
            }
          });
          const selector = react.exports.useCallback((nextState) => {
            lastState.current = nextState;
            if (prevState.current && prevState.current !== nextState && lastAffected.current && !u$1(prevState.current, nextState, lastAffected.current, /* @__PURE__ */ new WeakMap())) {
              return prevState.current;
            }
            prevState.current = nextState;
            return nextState;
          }, []);
          const state = useSelector(selector);
          if (typeof process === "object" && false) {
            useAffectedDebugValue(state, affected);
          }
          const proxyCache = react.exports.useMemo(() => /* @__PURE__ */ new WeakMap(), []);
          return a11(state, affected, proxyCache);
        };
        return useTrackedSelector;
      };
      function createStore$2(createState) {
        let state;
        const listeners = /* @__PURE__ */ new Set();
        const setState2 = (partial, replace) => {
          const nextState = typeof partial === "function" ? partial(state) : partial;
          if (nextState !== state) {
            const previousState = state;
            state = replace ? nextState : Object.assign({}, state, nextState);
            listeners.forEach((listener) => listener(state, previousState));
          }
        };
        const getState2 = () => state;
        const subscribeWithSelector = (listener, selector = getState2, equalityFn = Object.is) => {
          console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
          let currentSlice = selector(state);
          function listenerToAdd() {
            const nextSlice = selector(state);
            if (!equalityFn(currentSlice, nextSlice)) {
              const previousSlice = currentSlice;
              listener(currentSlice = nextSlice, previousSlice);
            }
          }
          listeners.add(listenerToAdd);
          return () => listeners.delete(listenerToAdd);
        };
        const subscribe = (listener, selector, equalityFn) => {
          if (selector || equalityFn) {
            return subscribeWithSelector(listener, selector, equalityFn);
          }
          listeners.add(listener);
          return () => listeners.delete(listener);
        };
        const destroy = () => listeners.clear();
        const api = { setState: setState2, getState: getState2, subscribe, destroy };
        state = createState(setState2, getState2, api);
        return api;
      }
      const isSSR$1 = typeof window === "undefined" || !window.navigator || /ServerSideRendering|^Deno\//.test(window.navigator.userAgent);
      const useIsomorphicLayoutEffect = isSSR$1 ? react.exports.useEffect : react.exports.useLayoutEffect;
      function create$2(createState) {
        const api = typeof createState === "function" ? createStore$2(createState) : createState;
        const useStore = (selector = api.getState, equalityFn = Object.is) => {
          const [, forceUpdate] = react.exports.useReducer((c22) => c22 + 1, 0);
          const state = api.getState();
          const stateRef = react.exports.useRef(state);
          const selectorRef = react.exports.useRef(selector);
          const equalityFnRef = react.exports.useRef(equalityFn);
          const erroredRef = react.exports.useRef(false);
          const currentSliceRef = react.exports.useRef();
          if (currentSliceRef.current === void 0) {
            currentSliceRef.current = selector(state);
          }
          let newStateSlice;
          let hasNewStateSlice = false;
          if (stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || erroredRef.current) {
            newStateSlice = selector(state);
            hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);
          }
          useIsomorphicLayoutEffect(() => {
            if (hasNewStateSlice) {
              currentSliceRef.current = newStateSlice;
            }
            stateRef.current = state;
            selectorRef.current = selector;
            equalityFnRef.current = equalityFn;
            erroredRef.current = false;
          });
          const stateBeforeSubscriptionRef = react.exports.useRef(state);
          useIsomorphicLayoutEffect(() => {
            const listener = () => {
              try {
                const nextState = api.getState();
                const nextStateSlice = selectorRef.current(nextState);
                if (!equalityFnRef.current(currentSliceRef.current, nextStateSlice)) {
                  stateRef.current = nextState;
                  currentSliceRef.current = nextStateSlice;
                  forceUpdate();
                }
              } catch (error) {
                erroredRef.current = true;
                forceUpdate();
              }
            };
            const unsubscribe = api.subscribe(listener);
            if (api.getState() !== stateBeforeSubscriptionRef.current) {
              listener();
            }
            return unsubscribe;
          }, []);
          const sliceToReturn = hasNewStateSlice ? newStateSlice : currentSliceRef.current;
          react.exports.useDebugValue(sliceToReturn);
          return sliceToReturn;
        };
        Object.assign(useStore, api);
        useStore[Symbol.iterator] = function() {
          console.warn("[useStore, api] = create() is deprecated and will be removed in v4");
          const items = [useStore, api];
          return {
            next() {
              const done = items.length <= 0;
              return { value: items.shift(), done };
            }
          };
        };
        return useStore;
      }
      function devtools(fn2, options) {
        return (set2, get2, api) => {
          var _a;
          let didWarnAboutNameDeprecation = false;
          if (typeof options === "string" && !didWarnAboutNameDeprecation) {
            console.warn("[zustand devtools middleware]: passing `name` as directly will be not allowed in next majorpass the `name` in an object `{ name: ... }` instead");
            didWarnAboutNameDeprecation = true;
          }
          const devtoolsOptions = options === void 0 ? { name: void 0, anonymousActionType: void 0 } : typeof options === "string" ? { name: options } : options;
          if (typeof ((_a = devtoolsOptions == null ? void 0 : devtoolsOptions.serialize) == null ? void 0 : _a.options) !== "undefined") {
            console.warn("[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`");
          }
          let extensionConnector;
          try {
            extensionConnector = window.__REDUX_DEVTOOLS_EXTENSION__ || window.top.__REDUX_DEVTOOLS_EXTENSION__;
          } catch {
          }
          if (!extensionConnector) {
            if (({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true } && "production") !== "production" && typeof window !== "undefined") {
              console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension");
            }
            return fn2(set2, get2, api);
          }
          let extension = Object.create(extensionConnector.connect(devtoolsOptions));
          let didWarnAboutDevtools = false;
          Object.defineProperty(api, "devtools", {
            get: () => {
              if (!didWarnAboutDevtools) {
                console.warn("[zustand devtools middleware] `devtools` property on the store is deprecated it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly");
                didWarnAboutDevtools = true;
              }
              return extension;
            },
            set: (value) => {
              if (!didWarnAboutDevtools) {
                console.warn("[zustand devtools middleware] `api.devtools` is deprecated, it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly");
                didWarnAboutDevtools = true;
              }
              extension = value;
            }
          });
          let didWarnAboutPrefix = false;
          Object.defineProperty(extension, "prefix", {
            get: () => {
              if (!didWarnAboutPrefix) {
                console.warn("[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\nWe no longer prefix the actions/names" + devtoolsOptions.name === void 0 ? ", pass the `name` option to create a separate instance of devtools for each store." : ", because the `name` option already creates a separate instance of devtools for each store.");
                didWarnAboutPrefix = true;
              }
              return "";
            },
            set: () => {
              if (!didWarnAboutPrefix) {
                console.warn("[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\nWe no longer prefix the actions/names" + devtoolsOptions.name === void 0 ? ", pass the `name` option to create a separate instance of devtools for each store." : ", because the `name` option already creates a separate instance of devtools for each store.");
                didWarnAboutPrefix = true;
              }
            }
          });
          let isRecording = true;
          api.setState = (state, replace, nameOrAction) => {
            set2(state, replace);
            if (!isRecording)
              return;
            extension.send(nameOrAction === void 0 ? { type: devtoolsOptions.anonymousActionType || "anonymous" } : typeof nameOrAction === "string" ? { type: nameOrAction } : nameOrAction, get2());
          };
          const setStateFromDevtools = (...a22) => {
            const originalIsRecording = isRecording;
            isRecording = false;
            set2(...a22);
            isRecording = originalIsRecording;
          };
          const initialState2 = fn2(api.setState, get2, api);
          extension.init(initialState2);
          if (api.dispatchFromDevtools && typeof api.dispatch === "function") {
            let didWarnAboutReservedActionType = false;
            const originalDispatch = api.dispatch;
            api.dispatch = (...a22) => {
              if (a22[0].type === "__setState" && !didWarnAboutReservedActionType) {
                console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.');
                didWarnAboutReservedActionType = true;
              }
              originalDispatch(...a22);
            };
          }
          extension.subscribe((message2) => {
            var _a2;
            switch (message2.type) {
              case "ACTION":
                if (typeof message2.payload !== "string") {
                  console.error("[zustand devtools middleware] Unsupported action format");
                  return;
                }
                return parseJsonThen(message2.payload, (action) => {
                  if (action.type === "__setState") {
                    setStateFromDevtools(action.state);
                    return;
                  }
                  if (!api.dispatchFromDevtools)
                    return;
                  if (typeof api.dispatch !== "function")
                    return;
                  api.dispatch(action);
                });
              case "DISPATCH":
                switch (message2.payload.type) {
                  case "RESET":
                    setStateFromDevtools(initialState2);
                    return extension.init(api.getState());
                  case "COMMIT":
                    return extension.init(api.getState());
                  case "ROLLBACK":
                    return parseJsonThen(message2.state, (state) => {
                      setStateFromDevtools(state);
                      extension.init(api.getState());
                    });
                  case "JUMP_TO_STATE":
                  case "JUMP_TO_ACTION":
                    return parseJsonThen(message2.state, (state) => {
                      setStateFromDevtools(state);
                    });
                  case "IMPORT_STATE": {
                    const { nextLiftedState } = message2.payload;
                    const lastComputedState = (_a2 = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a2.state;
                    if (!lastComputedState)
                      return;
                    setStateFromDevtools(lastComputedState);
                    extension.send(null, nextLiftedState);
                    return;
                  }
                  case "PAUSE_RECORDING":
                    return isRecording = !isRecording;
                }
                return;
            }
          });
          return initialState2;
        };
      }
      const parseJsonThen = (stringified, f22) => {
        let parsed;
        try {
          parsed = JSON.parse(stringified);
        } catch (e22) {
          console.error("[zustand devtools middleware] Could not parse the received json", e22);
        }
        if (parsed !== void 0)
          f22(parsed);
      };
      var __defProp$1 = Object.defineProperty;
      var __getOwnPropSymbols = Object.getOwnPropertySymbols;
      var __hasOwnProp2 = Object.prototype.hasOwnProperty;
      var __propIsEnum = Object.prototype.propertyIsEnumerable;
      var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __spreadValues = (a22, b22) => {
        for (var prop in b22 || (b22 = {}))
          if (__hasOwnProp2.call(b22, prop))
            __defNormalProp$1(a22, prop, b22[prop]);
        if (__getOwnPropSymbols)
          for (var prop of __getOwnPropSymbols(b22)) {
            if (__propIsEnum.call(b22, prop))
              __defNormalProp$1(a22, prop, b22[prop]);
          }
        return a22;
      };
      const toThenable = (fn2) => (input) => {
        try {
          const result = fn2(input);
          if (result instanceof Promise) {
            return result;
          }
          return {
            then(onFulfilled) {
              return toThenable(onFulfilled)(result);
            },
            catch(_onRejected) {
              return this;
            }
          };
        } catch (e22) {
          return {
            then(_onFulfilled) {
              return this;
            },
            catch(onRejected) {
              return toThenable(onRejected)(e22);
            }
          };
        }
      };
      const persist = (config22, baseOptions) => (set2, get2, api) => {
        let options = __spreadValues({
          getStorage: () => localStorage,
          serialize: JSON.stringify,
          deserialize: JSON.parse,
          partialize: (state) => state,
          version: 0,
          merge: (persistedState, currentState) => __spreadValues(__spreadValues({}, currentState), persistedState)
        }, baseOptions);
        if (options.blacklist || options.whitelist) {
          console.warn(`The ${options.blacklist ? "blacklist" : "whitelist"} option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.`);
        }
        let hasHydrated = false;
        const hydrationListeners = /* @__PURE__ */ new Set();
        const finishHydrationListeners = /* @__PURE__ */ new Set();
        let storage;
        try {
          storage = options.getStorage();
        } catch (e22) {
        }
        if (!storage) {
          return config22((...args) => {
            console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);
            set2(...args);
          }, get2, api);
        } else if (!storage.removeItem) {
          console.warn(`[zustand persist middleware] The given storage for item '${options.name}' does not contain a 'removeItem' method, which will be required in v4.`);
        }
        const thenableSerialize = toThenable(options.serialize);
        const setItem = () => {
          const state = options.partialize(__spreadValues({}, get2()));
          if (options.whitelist) {
            Object.keys(state).forEach((key) => {
              var _a;
              !((_a = options.whitelist) == null ? void 0 : _a.includes(key)) && delete state[key];
            });
          }
          if (options.blacklist) {
            options.blacklist.forEach((key) => delete state[key]);
          }
          let errorInSync;
          const thenable = thenableSerialize({ state, version: options.version }).then((serializedValue) => storage.setItem(options.name, serializedValue)).catch((e22) => {
            errorInSync = e22;
          });
          if (errorInSync) {
            throw errorInSync;
          }
          return thenable;
        };
        const savedSetState = api.setState;
        api.setState = (state, replace) => {
          savedSetState(state, replace);
          void setItem();
        };
        const configResult = config22((...args) => {
          set2(...args);
          void setItem();
        }, get2, api);
        let stateFromStorage;
        const hydrate = () => {
          var _a;
          if (!storage)
            return;
          hasHydrated = false;
          hydrationListeners.forEach((cb2) => cb2(get2()));
          const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get2())) || void 0;
          return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {
            if (storageValue) {
              return options.deserialize(storageValue);
            }
          }).then((deserializedStorageValue) => {
            if (deserializedStorageValue) {
              if (typeof deserializedStorageValue.version === "number" && deserializedStorageValue.version !== options.version) {
                if (options.migrate) {
                  return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);
                }
                console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);
              } else {
                return deserializedStorageValue.state;
              }
            }
          }).then((migratedState) => {
            var _a2;
            stateFromStorage = options.merge(migratedState, (_a2 = get2()) != null ? _a2 : configResult);
            set2(stateFromStorage, true);
            return setItem();
          }).then(() => {
            postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);
            hasHydrated = true;
            finishHydrationListeners.forEach((cb2) => cb2(stateFromStorage));
          }).catch((e22) => {
            postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e22);
          });
        };
        api.persist = {
          setOptions: (newOptions) => {
            options = __spreadValues(__spreadValues({}, options), newOptions);
            if (newOptions.getStorage) {
              storage = newOptions.getStorage();
            }
          },
          clearStorage: () => {
            var _a;
            (_a = storage == null ? void 0 : storage.removeItem) == null ? void 0 : _a.call(storage, options.name);
          },
          rehydrate: () => hydrate(),
          hasHydrated: () => hasHydrated,
          onHydrate: (cb2) => {
            hydrationListeners.add(cb2);
            return () => {
              hydrationListeners.delete(cb2);
            };
          },
          onFinishHydration: (cb2) => {
            finishHydrationListeners.add(cb2);
            return () => {
              finishHydrationListeners.delete(cb2);
            };
          }
        };
        hydrate();
        return stateFromStorage || configResult;
      };
      function createStore$1(createState) {
        let state;
        const listeners = /* @__PURE__ */ new Set();
        const setState2 = (partial, replace) => {
          const nextState = typeof partial === "function" ? partial(state) : partial;
          if (nextState !== state) {
            const previousState = state;
            state = replace ? nextState : Object.assign({}, state, nextState);
            listeners.forEach((listener) => listener(state, previousState));
          }
        };
        const getState2 = () => state;
        const subscribeWithSelector = (listener, selector = getState2, equalityFn = Object.is) => {
          console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");
          let currentSlice = selector(state);
          function listenerToAdd() {
            const nextSlice = selector(state);
            if (!equalityFn(currentSlice, nextSlice)) {
              const previousSlice = currentSlice;
              listener(currentSlice = nextSlice, previousSlice);
            }
          }
          listeners.add(listenerToAdd);
          return () => listeners.delete(listenerToAdd);
        };
        const subscribe = (listener, selector, equalityFn) => {
          if (selector || equalityFn) {
            return subscribeWithSelector(listener, selector, equalityFn);
          }
          listeners.add(listener);
          return () => listeners.delete(listener);
        };
        const destroy = () => listeners.clear();
        const api = { setState: setState2, getState: getState2, subscribe, destroy };
        state = createState(setState2, getState2, api);
        return api;
      }
      const generateStateActions = (store, storeName) => {
        const actions = {};
        Object.keys(store.getState()).forEach((key) => {
          actions[key] = (value) => {
            const prevValue = store.getState()[key];
            if (prevValue === value)
              return;
            const actionKey = key.replace(/^\S/, (s22) => s22.toUpperCase());
            store.setState((draft) => {
              draft[key] = value;
            }, `@@${storeName}/set${actionKey}`);
          };
        });
        return actions;
      };
      const extendActions = (builder, api) => {
        const actions = builder(api.set, api.get, api);
        return {
          ...api,
          set: {
            ...api.set,
            ...actions
          }
        };
      };
      const extendSelectors = (builder, api) => {
        const use2 = {
          ...api.use
        };
        const useTracked = {
          ...api.useTracked
        };
        const get2 = {
          ...api.get
        };
        Object.keys(builder(api.store.getState(), api.get, api)).forEach((key) => {
          use2[key] = (...args) => api.useStore((state) => {
            const selectors = builder(state, api.get, api);
            const selector = selectors[key];
            return selector(...args);
          });
          useTracked[key] = (...args) => {
            const trackedState = api.useTrackedStore();
            const selectors = builder(trackedState, api.get, api);
            const selector = selectors[key];
            return selector(...args);
          };
          get2[key] = (...args) => {
            const selectors = builder(api.store.getState(), api.get, api);
            const selector = selectors[key];
            return selector(...args);
          };
        });
        return {
          ...api,
          get: get2,
          use: use2,
          useTracked
        };
      };
      const storeFactory = (api) => {
        return {
          ...api,
          extendSelectors: (builder) => storeFactory(extendSelectors(builder, api)),
          extendActions: (builder) => storeFactory(extendActions(builder, api))
        };
      };
      const generateStateGetSelectors = (store) => {
        const selectors = {};
        Object.keys(store.getState()).forEach((key) => {
          selectors[key] = () => store.getState()[key];
        });
        return selectors;
      };
      const generateStateHookSelectors = (store) => {
        const selectors = {};
        Object.keys(store.getState()).forEach((key) => {
          selectors[key] = (equalityFn) => {
            return store((state) => state[key], equalityFn);
          };
        });
        return selectors;
      };
      const generateStateTrackedHooksSelectors = (store, trackedStore) => {
        const selectors = {};
        Object.keys(store.getState()).forEach((key) => {
          selectors[key] = () => {
            return trackedStore()[key];
          };
        });
        return selectors;
      };
      const immerMiddleware = (config22) => (set2, get2, api) => {
        const setState2 = (fn$1, actionName) => set2(fn(fn$1), true, actionName);
        api.setState = setState2;
        return config22(setState2, get2, api);
      };
      function pipe(x22, ...fns) {
        return fns.reduce((y22, fn2) => fn2(y22), x22);
      }
      const createStore = (name2) => (initialState2, options = {}) => {
        var _immer$enabledAutoFre;
        const {
          middlewares: _middlewares = [],
          devtools: devtools$1,
          persist: persist$1,
          immer
        } = options;
        sn((_immer$enabledAutoFre = immer === null || immer === void 0 ? void 0 : immer.enabledAutoFreeze) !== null && _immer$enabledAutoFre !== void 0 ? _immer$enabledAutoFre : false);
        if (immer !== null && immer !== void 0 && immer.enableMapSet) {
          C4();
        }
        const middlewares = [immerMiddleware, ..._middlewares];
        if (persist$1 !== null && persist$1 !== void 0 && persist$1.enabled) {
          middlewares.push((config22) => persist(config22, {
            ...persist$1,
            name: name2
          }));
        }
        if (devtools$1 !== null && devtools$1 !== void 0 && devtools$1.enabled) {
          middlewares.push((config22) => devtools(config22, {
            ...devtools$1,
            name: name2
          }));
        }
        middlewares.push(createStore$1);
        const createStore2 = (createState) => pipe(createState, ...middlewares);
        const store = createStore2(() => initialState2);
        const useStore = create$2(store);
        const stateActions = generateStateActions(useStore, name2);
        const mergeState = (state, actionName) => {
          store.setState((draft) => {
            Object.assign(draft, state);
          }, actionName || `@@${name2}/mergeState`);
        };
        const setState2 = (fn2, actionName) => {
          store.setState(fn2, actionName || `@@${name2}/setState`);
        };
        const hookSelectors = generateStateHookSelectors(useStore);
        const getterSelectors = generateStateGetSelectors(useStore);
        const useTrackedStore = createTrackedSelector(useStore);
        const trackedHooksSelectors = generateStateTrackedHooksSelectors(useStore, useTrackedStore);
        const api = {
          get: {
            state: store.getState,
            ...getterSelectors
          },
          name: name2,
          set: {
            state: setState2,
            mergeState,
            ...stateActions
          },
          store,
          use: hookSelectors,
          useTracked: trackedHooksSelectors,
          useStore,
          useTrackedStore,
          extendSelectors: () => api,
          extendActions: () => api
        };
        return storeFactory(api);
      };
      var commonjsGlobal$3 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function createCommonjsModule$e(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var freeGlobal$5 = typeof commonjsGlobal$3 == "object" && commonjsGlobal$3 && commonjsGlobal$3.Object === Object && commonjsGlobal$3;
      var _freeGlobal$3 = freeGlobal$5;
      var freeSelf$4 = typeof self == "object" && self && self.Object === Object && self;
      var root$c = _freeGlobal$3 || freeSelf$4 || Function("return this")();
      var _root$3 = root$c;
      var Symbol$7 = _root$3.Symbol;
      var _Symbol$3 = Symbol$7;
      var objectProto$b$4 = Object.prototype;
      var hasOwnProperty$8$4 = objectProto$b$4.hasOwnProperty;
      var nativeObjectToString$1$4 = objectProto$b$4.toString;
      var symToStringTag$1$4 = _Symbol$3 ? _Symbol$3.toStringTag : void 0;
      function getRawTag$4(value) {
        var isOwn = hasOwnProperty$8$4.call(value, symToStringTag$1$4), tag = value[symToStringTag$1$4];
        try {
          value[symToStringTag$1$4] = void 0;
          var unmasked = true;
        } catch (e22) {
        }
        var result = nativeObjectToString$1$4.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag$1$4] = tag;
          } else {
            delete value[symToStringTag$1$4];
          }
        }
        return result;
      }
      var _getRawTag$3 = getRawTag$4;
      var objectProto$a$4 = Object.prototype;
      var nativeObjectToString$5 = objectProto$a$4.toString;
      function objectToString$4(value) {
        return nativeObjectToString$5.call(value);
      }
      var _objectToString$3 = objectToString$4;
      var nullTag$4 = "[object Null]", undefinedTag$4 = "[object Undefined]";
      var symToStringTag$5 = _Symbol$3 ? _Symbol$3.toStringTag : void 0;
      function baseGetTag$a(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag$4 : nullTag$4;
        }
        return symToStringTag$5 && symToStringTag$5 in Object(value) ? _getRawTag$3(value) : _objectToString$3(value);
      }
      var _baseGetTag$3 = baseGetTag$a;
      function isObject$e(value) {
        var type = typeof value;
        return value != null && (type == "object" || type == "function");
      }
      var isObject_1$3 = isObject$e;
      var asyncTag$5 = "[object AsyncFunction]", funcTag$1$3 = "[object Function]", genTag$5 = "[object GeneratorFunction]", proxyTag$5 = "[object Proxy]";
      function isFunction$9(value) {
        if (!isObject_1$3(value)) {
          return false;
        }
        var tag = _baseGetTag$3(value);
        return tag == funcTag$1$3 || tag == genTag$5 || tag == asyncTag$5 || tag == proxyTag$5;
      }
      var isFunction_1$4 = isFunction$9;
      var coreJsData$7 = _root$3["__core-js_shared__"];
      var _coreJsData$4 = coreJsData$7;
      var maskSrcKey$5 = function() {
        var uid2 = /[^.]+$/.exec(_coreJsData$4 && _coreJsData$4.keys && _coreJsData$4.keys.IE_PROTO || "");
        return uid2 ? "Symbol(src)_1." + uid2 : "";
      }();
      function isMasked$6(func) {
        return !!maskSrcKey$5 && maskSrcKey$5 in func;
      }
      var _isMasked$4 = isMasked$6;
      var funcProto$1$4 = Function.prototype;
      var funcToString$1$4 = funcProto$1$4.toString;
      function toSource$7(func) {
        if (func != null) {
          try {
            return funcToString$1$4.call(func);
          } catch (e22) {
          }
          try {
            return func + "";
          } catch (e22) {
          }
        }
        return "";
      }
      var _toSource$4 = toSource$7;
      var reRegExpChar$5 = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor$5 = /^\[object .+?Constructor\]$/;
      var funcProto$9 = Function.prototype, objectProto$9$3 = Object.prototype;
      var funcToString$9 = funcProto$9.toString;
      var hasOwnProperty$7$3 = objectProto$9$3.hasOwnProperty;
      var reIsNative$5 = RegExp("^" + funcToString$9.call(hasOwnProperty$7$3).replace(reRegExpChar$5, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      function baseIsNative$6(value) {
        if (!isObject_1$3(value) || _isMasked$4(value)) {
          return false;
        }
        var pattern = isFunction_1$4(value) ? reIsNative$5 : reIsHostCtor$5;
        return pattern.test(_toSource$4(value));
      }
      var _baseIsNative$4 = baseIsNative$6;
      function getValue$6(object, key) {
        return object == null ? void 0 : object[key];
      }
      var _getValue$4 = getValue$6;
      function getNative$c(object, key) {
        var value = _getValue$4(object, key);
        return _baseIsNative$4(value) ? value : void 0;
      }
      var _getNative$4 = getNative$c;
      (function() {
        try {
          var func = _getNative$4(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e22) {
        }
      })();
      function isObjectLike$c(value) {
        return value != null && typeof value == "object";
      }
      var isObjectLike_1$3 = isObjectLike$c;
      var argsTag$2$4 = "[object Arguments]";
      function baseIsArguments$6(value) {
        return isObjectLike_1$3(value) && _baseGetTag$3(value) == argsTag$2$4;
      }
      var _baseIsArguments$4 = baseIsArguments$6;
      var objectProto$8$3 = Object.prototype;
      var hasOwnProperty$6$3 = objectProto$8$3.hasOwnProperty;
      var propertyIsEnumerable$1$4 = objectProto$8$3.propertyIsEnumerable;
      _baseIsArguments$4(function() {
        return arguments;
      }()) ? _baseIsArguments$4 : function(value) {
        return isObjectLike_1$3(value) && hasOwnProperty$6$3.call(value, "callee") && !propertyIsEnumerable$1$4.call(value, "callee");
      };
      function stubFalse$5() {
        return false;
      }
      var stubFalse_1$4 = stubFalse$5;
      createCommonjsModule$e(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root$3.Buffer : void 0;
        var nativeIsBuffer2 = Buffer22 ? Buffer22.isBuffer : void 0;
        var isBuffer2 = nativeIsBuffer2 || stubFalse_1$4;
        module2.exports = isBuffer2;
      });
      var _nodeUtil$4 = createCommonjsModule$e(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var freeProcess2 = moduleExports2 && _freeGlobal$3.process;
        var nodeUtil2 = function() {
          try {
            var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
            if (types) {
              return types;
            }
            return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
          } catch (e22) {
          }
        }();
        module2.exports = nodeUtil2;
      });
      _nodeUtil$4 && _nodeUtil$4.isTypedArray;
      function listCacheClear$5() {
        this.__data__ = [];
        this.size = 0;
      }
      var _listCacheClear$3 = listCacheClear$5;
      function eq$7(value, other) {
        return value === other || value !== value && other !== other;
      }
      var eq_1$3 = eq$7;
      function assocIndexOf$8(array, key) {
        var length = array.length;
        while (length--) {
          if (eq_1$3(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      var _assocIndexOf$3 = assocIndexOf$8;
      var arrayProto$4 = Array.prototype;
      var splice$6 = arrayProto$4.splice;
      function listCacheDelete$5(key) {
        var data = this.__data__, index2 = _assocIndexOf$3(data, key);
        if (index2 < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index2 == lastIndex) {
          data.pop();
        } else {
          splice$6.call(data, index2, 1);
        }
        --this.size;
        return true;
      }
      var _listCacheDelete$3 = listCacheDelete$5;
      function listCacheGet$5(key) {
        var data = this.__data__, index2 = _assocIndexOf$3(data, key);
        return index2 < 0 ? void 0 : data[index2][1];
      }
      var _listCacheGet$3 = listCacheGet$5;
      function listCacheHas$5(key) {
        return _assocIndexOf$3(this.__data__, key) > -1;
      }
      var _listCacheHas$3 = listCacheHas$5;
      function listCacheSet$5(key, value) {
        var data = this.__data__, index2 = _assocIndexOf$3(data, key);
        if (index2 < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index2][1] = value;
        }
        return this;
      }
      var _listCacheSet$3 = listCacheSet$5;
      function ListCache$8(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      ListCache$8.prototype.clear = _listCacheClear$3;
      ListCache$8.prototype["delete"] = _listCacheDelete$3;
      ListCache$8.prototype.get = _listCacheGet$3;
      ListCache$8.prototype.has = _listCacheHas$3;
      ListCache$8.prototype.set = _listCacheSet$3;
      var _ListCache$3 = ListCache$8;
      var Map$a = _getNative$4(_root$3, "Map");
      var _Map$4 = Map$a;
      var nativeCreate$9 = _getNative$4(Object, "create");
      var _nativeCreate$3 = nativeCreate$9;
      function hashClear$5() {
        this.__data__ = _nativeCreate$3 ? _nativeCreate$3(null) : {};
        this.size = 0;
      }
      var _hashClear$3 = hashClear$5;
      function hashDelete$5(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }
      var _hashDelete$3 = hashDelete$5;
      var HASH_UNDEFINED$2$2 = "__lodash_hash_undefined__";
      var objectProto$4$3 = Object.prototype;
      var hasOwnProperty$3$3 = objectProto$4$3.hasOwnProperty;
      function hashGet$5(key) {
        var data = this.__data__;
        if (_nativeCreate$3) {
          var result = data[key];
          return result === HASH_UNDEFINED$2$2 ? void 0 : result;
        }
        return hasOwnProperty$3$3.call(data, key) ? data[key] : void 0;
      }
      var _hashGet$3 = hashGet$5;
      var objectProto$3$3 = Object.prototype;
      var hasOwnProperty$2$3 = objectProto$3$3.hasOwnProperty;
      function hashHas$5(key) {
        var data = this.__data__;
        return _nativeCreate$3 ? data[key] !== void 0 : hasOwnProperty$2$3.call(data, key);
      }
      var _hashHas$3 = hashHas$5;
      var HASH_UNDEFINED$1$3 = "__lodash_hash_undefined__";
      function hashSet$5(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = _nativeCreate$3 && value === void 0 ? HASH_UNDEFINED$1$3 : value;
        return this;
      }
      var _hashSet$3 = hashSet$5;
      function Hash$5(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      Hash$5.prototype.clear = _hashClear$3;
      Hash$5.prototype["delete"] = _hashDelete$3;
      Hash$5.prototype.get = _hashGet$3;
      Hash$5.prototype.has = _hashHas$3;
      Hash$5.prototype.set = _hashSet$3;
      var _Hash$3 = Hash$5;
      function mapCacheClear$5() {
        this.size = 0;
        this.__data__ = {
          "hash": new _Hash$3(),
          "map": new (_Map$4 || _ListCache$3)(),
          "string": new _Hash$3()
        };
      }
      var _mapCacheClear$3 = mapCacheClear$5;
      function isKeyable$5(value) {
        var type = typeof value;
        return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
      }
      var _isKeyable$3 = isKeyable$5;
      function getMapData$8(map22, key) {
        var data = map22.__data__;
        return _isKeyable$3(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
      }
      var _getMapData$3 = getMapData$8;
      function mapCacheDelete$5(key) {
        var result = _getMapData$3(this, key)["delete"](key);
        this.size -= result ? 1 : 0;
        return result;
      }
      var _mapCacheDelete$3 = mapCacheDelete$5;
      function mapCacheGet$5(key) {
        return _getMapData$3(this, key).get(key);
      }
      var _mapCacheGet$3 = mapCacheGet$5;
      function mapCacheHas$5(key) {
        return _getMapData$3(this, key).has(key);
      }
      var _mapCacheHas$3 = mapCacheHas$5;
      function mapCacheSet$5(key, value) {
        var data = _getMapData$3(this, key), size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }
      var _mapCacheSet$3 = mapCacheSet$5;
      function MapCache$7(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      MapCache$7.prototype.clear = _mapCacheClear$3;
      MapCache$7.prototype["delete"] = _mapCacheDelete$3;
      MapCache$7.prototype.get = _mapCacheGet$3;
      MapCache$7.prototype.has = _mapCacheHas$3;
      MapCache$7.prototype.set = _mapCacheSet$3;
      var _MapCache$3 = MapCache$7;
      _root$3.Uint8Array;
      var symbolProto$1$2 = _Symbol$3 ? _Symbol$3.prototype : void 0;
      symbolProto$1$2 ? symbolProto$1$2.valueOf : void 0;
      var DataView$7 = _getNative$4(_root$3, "DataView");
      var _DataView$4 = DataView$7;
      var Promise$1$4 = _getNative$4(_root$3, "Promise");
      var _Promise$4 = Promise$1$4;
      var Set$8 = _getNative$4(_root$3, "Set");
      var _Set$4 = Set$8;
      var WeakMap$7 = _getNative$4(_root$3, "WeakMap");
      var _WeakMap$4 = WeakMap$7;
      var mapTag$b = "[object Map]", objectTag$1$4 = "[object Object]", promiseTag$5 = "[object Promise]", setTag$b = "[object Set]", weakMapTag$7 = "[object WeakMap]";
      var dataViewTag$a = "[object DataView]";
      var dataViewCtorString$5 = _toSource$4(_DataView$4), mapCtorString$5 = _toSource$4(_Map$4), promiseCtorString$5 = _toSource$4(_Promise$4), setCtorString$5 = _toSource$4(_Set$4), weakMapCtorString$5 = _toSource$4(_WeakMap$4);
      var getTag$a = _baseGetTag$3;
      if (_DataView$4 && getTag$a(new _DataView$4(new ArrayBuffer(1))) != dataViewTag$a || _Map$4 && getTag$a(new _Map$4()) != mapTag$b || _Promise$4 && getTag$a(_Promise$4.resolve()) != promiseTag$5 || _Set$4 && getTag$a(new _Set$4()) != setTag$b || _WeakMap$4 && getTag$a(new _WeakMap$4()) != weakMapTag$7) {
        getTag$a = function(value) {
          var result = _baseGetTag$3(value), Ctor = result == objectTag$1$4 ? value.constructor : void 0, ctorString = Ctor ? _toSource$4(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString$5:
                return dataViewTag$a;
              case mapCtorString$5:
                return mapTag$b;
              case promiseCtorString$5:
                return promiseTag$5;
              case setCtorString$5:
                return setTag$b;
              case weakMapCtorString$5:
                return weakMapTag$7;
            }
          }
          return result;
        };
      }
      var FUNC_ERROR_TEXT$5 = "Expected a function";
      function memoize$4(func, resolver2) {
        if (typeof func != "function" || resolver2 != null && typeof resolver2 != "function") {
          throw new TypeError(FUNC_ERROR_TEXT$5);
        }
        var memoized = function() {
          var args = arguments, key = resolver2 ? resolver2.apply(this, args) : args[0], cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };
        memoized.cache = new (memoize$4.Cache || _MapCache$3)();
        return memoized;
      }
      memoize$4.Cache = _MapCache$3;
      var memoize_1$2 = memoize$4;
      var MAX_MEMOIZE_SIZE$3 = 500;
      function memoizeCapped$4(func) {
        var result = memoize_1$2(func, function(key) {
          if (cache.size === MAX_MEMOIZE_SIZE$3) {
            cache.clear();
          }
          return key;
        });
        var cache = result.cache;
        return result;
      }
      var _memoizeCapped$2 = memoizeCapped$4;
      var rePropName$3 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reEscapeChar$3 = /\\(\\)?/g;
      _memoizeCapped$2(function(string2) {
        var result = [];
        if (string2.charCodeAt(0) === 46) {
          result.push("");
        }
        string2.replace(rePropName$3, function(match5, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar$3, "$1") : number || match5);
        });
        return result;
      });
      var symbolProto$8 = _Symbol$3 ? _Symbol$3.prototype : void 0;
      symbolProto$8 ? symbolProto$8.toString : void 0;
      var History = {
        isHistory(value) {
          return isPlainObject$4(value) && Array.isArray(value.redos) && Array.isArray(value.undos) && (value.redos.length === 0 || Operation.isOperationList(value.redos[0])) && (value.undos.length === 0 || Operation.isOperationList(value.undos[0]));
        }
      };
      var SAVING = /* @__PURE__ */ new WeakMap();
      var MERGING = /* @__PURE__ */ new WeakMap();
      var HistoryEditor = {
        isHistoryEditor(value) {
          return History.isHistory(value.history) && Editor$1.isEditor(value);
        },
        isMerging(editor) {
          return MERGING.get(editor);
        },
        isSaving(editor) {
          return SAVING.get(editor);
        },
        redo(editor) {
          editor.redo();
        },
        undo(editor) {
          editor.undo();
        },
        withoutMerging(editor, fn2) {
          var prev = HistoryEditor.isMerging(editor);
          MERGING.set(editor, false);
          fn2();
          MERGING.set(editor, prev);
        },
        withoutSaving(editor, fn2) {
          var prev = HistoryEditor.isSaving(editor);
          SAVING.set(editor, false);
          fn2();
          SAVING.set(editor, prev);
        }
      };
      var withHistory = (editor) => {
        var e22 = editor;
        var {
          apply: apply2
        } = e22;
        e22.history = {
          undos: [],
          redos: []
        };
        e22.redo = () => {
          var {
            history
          } = e22;
          var {
            redos
          } = history;
          if (redos.length > 0) {
            var batch = redos[redos.length - 1];
            HistoryEditor.withoutSaving(e22, () => {
              Editor$1.withoutNormalizing(e22, () => {
                for (var op of batch) {
                  e22.apply(op);
                }
              });
            });
            history.redos.pop();
            history.undos.push(batch);
          }
        };
        e22.undo = () => {
          var {
            history
          } = e22;
          var {
            undos
          } = history;
          if (undos.length > 0) {
            var batch = undos[undos.length - 1];
            HistoryEditor.withoutSaving(e22, () => {
              Editor$1.withoutNormalizing(e22, () => {
                var inverseOps = batch.map(Operation.inverse).reverse();
                for (var op of inverseOps) {
                  e22.apply(op);
                }
              });
            });
            history.redos.push(batch);
            history.undos.pop();
          }
        };
        e22.apply = (op) => {
          var {
            operations,
            history
          } = e22;
          var {
            undos
          } = history;
          var lastBatch = undos[undos.length - 1];
          var lastOp = lastBatch && lastBatch[lastBatch.length - 1];
          var overwrite = shouldOverwrite(op, lastOp);
          var save = HistoryEditor.isSaving(e22);
          var merge2 = HistoryEditor.isMerging(e22);
          if (save == null) {
            save = shouldSave(op);
          }
          if (save) {
            if (merge2 == null) {
              if (lastBatch == null) {
                merge2 = false;
              } else if (operations.length !== 0) {
                merge2 = true;
              } else {
                merge2 = shouldMerge(op, lastOp) || overwrite;
              }
            }
            if (lastBatch && merge2) {
              if (overwrite) {
                lastBatch.pop();
              }
              lastBatch.push(op);
            } else {
              var batch = [op];
              undos.push(batch);
            }
            while (undos.length > 100) {
              undos.shift();
            }
            if (shouldClear(op)) {
              history.redos = [];
            }
          }
          apply2(op);
        };
        return e22;
      };
      var shouldMerge = (op, prev) => {
        if (op.type === "set_selection") {
          return true;
        }
        if (prev && op.type === "insert_text" && prev.type === "insert_text" && op.offset === prev.offset + prev.text.length && Path.equals(op.path, prev.path)) {
          return true;
        }
        if (prev && op.type === "remove_text" && prev.type === "remove_text" && op.offset + op.text.length === prev.offset && Path.equals(op.path, prev.path)) {
          return true;
        }
        return false;
      };
      var shouldSave = (op, prev) => {
        if (op.type === "set_selection" && (op.properties == null || op.newProperties == null)) {
          return false;
        }
        return true;
      };
      var shouldOverwrite = (op, prev) => {
        if (prev && op.type === "set_selection" && prev.type === "set_selection") {
          return true;
        }
        return false;
      };
      var shouldClear = (op) => {
        if (op.type === "set_selection") {
          return false;
        }
        return true;
      };
      const capitalizeFirstLetter = (str = "") => str.length ? str[0].toUpperCase() + str.slice(1) : "";
      const getStoreIndex = (name2 = "") => name2.length ? `${name2}Store` : "store";
      const getUseStoreIndex = (name2 = "") => `use${capitalizeFirstLetter(name2)}Store`;
      const createAtomStore = (initialState2, {
        scope: storeScope,
        initialStore,
        name: name2 = ""
      } = {}) => {
        const useInitialStoreIndex = getUseStoreIndex(initialStore === null || initialStore === void 0 ? void 0 : initialStore.name);
        const initialStoreIndex = getStoreIndex(initialStore === null || initialStore === void 0 ? void 0 : initialStore.name);
        const useStoreIndex = getUseStoreIndex(name2);
        const storeIndex = getStoreIndex(name2);
        const getAtoms = initialStore ? initialStore[useInitialStoreIndex]().get : {};
        const setAtoms = initialStore ? initialStore[useInitialStoreIndex]().set : {};
        const useAtoms = initialStore ? initialStore[useInitialStoreIndex]().use : {};
        const atoms = initialStore ? initialStore[initialStoreIndex].atom : {};
        Object.keys(initialState2).forEach((key) => {
          const atomConfig = atom(initialState2[key]);
          atoms[key] = atomConfig;
          getAtoms[key] = (scope) => {
            return useAtomValue(atomConfig, scope !== null && scope !== void 0 ? scope : storeScope);
          };
          setAtoms[key] = (scope) => {
            return useSetAtom(atomConfig, scope !== null && scope !== void 0 ? scope : storeScope);
          };
          useAtoms[key] = (scope) => {
            return useAtom(atomConfig, scope !== null && scope !== void 0 ? scope : storeScope);
          };
        });
        const api = {
          [useStoreIndex]: () => ({
            get: getAtoms,
            set: setAtoms,
            use: useAtoms
          }),
          [storeIndex]: {
            atom: atoms
          },
          name: name2
        };
        return {
          ...api,
          [storeIndex]: {
            ...api[storeIndex],
            extend: (extendedState, options) => createAtomStore(extendedState, {
              scope: storeScope,
              initialStore: api,
              ...options
            })
          }
        };
      };
      const IS_APPLE = typeof navigator !== "undefined" && /Mac OS X/.test(navigator.userAgent);
      const findHtmlParentElement = (el2, nodeName) => {
        if (!el2 || el2.nodeName === nodeName) {
          return el2;
        }
        return findHtmlParentElement(el2.parentElement, nodeName);
      };
      var commonjsGlobal$2 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function unwrapExports$c(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$d(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$e = createCommonjsModule$d(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      var isHotkey$6 = unwrapExports$c(lib$e);
      lib$e.isHotkey;
      lib$e.isCodeHotkey;
      var lib_3 = lib$e.isKeyHotkey;
      lib$e.parseHotkey;
      lib$e.compareHotkey;
      lib$e.toKeyCode;
      lib$e.toKeyName;
      const isComposing = (editor) => ReactEditor.isComposing(editor);
      const HOTKEYS = {
        bold: "mod+b",
        compose: ["down", "left", "right", "up", "backspace", "enter"],
        deleteBackward: "shift?+backspace",
        deleteForward: "shift?+delete",
        extendBackward: "shift+left",
        extendForward: "shift+right",
        insertSoftBreak: "shift+enter",
        italic: "mod+i",
        moveBackward: "left",
        moveForward: "right",
        moveWordBackward: "ctrl+left",
        moveWordForward: "ctrl+right",
        splitBlock: "enter",
        tab: "tab",
        untab: "shift+tab",
        undo: "mod+z"
      };
      const APPLE_HOTKEYS = {
        deleteBackward: ["ctrl+backspace", "ctrl+h"],
        deleteForward: ["ctrl+delete", "ctrl+d"],
        deleteLineBackward: "cmd+shift?+backspace",
        deleteLineForward: ["cmd+shift?+delete", "ctrl+k"],
        deleteWordBackward: "opt+shift?+backspace",
        deleteWordForward: "opt+shift?+delete",
        extendLineBackward: "opt+shift+up",
        extendLineForward: "opt+shift+down",
        moveLineBackward: "opt+up",
        moveLineForward: "opt+down",
        moveWordBackward: "opt+left",
        moveWordForward: "opt+right",
        redo: "cmd+shift+z",
        transposeCharacter: "ctrl+t"
      };
      const WINDOWS_HOTKEYS = {
        deleteWordBackward: "ctrl+shift?+backspace",
        deleteWordForward: "ctrl+shift?+delete",
        redo: ["ctrl+y", "ctrl+shift+z"]
      };
      const create$1 = (key) => {
        const generic = HOTKEYS[key];
        const apple = APPLE_HOTKEYS[key];
        const windows = WINDOWS_HOTKEYS[key];
        const isGeneric = generic && lib_3(generic);
        const isApple = apple && lib_3(apple);
        const isWindows = windows && lib_3(windows);
        return (event) => {
          if (isGeneric && isGeneric(event))
            return true;
          if (IS_APPLE && isApple && isApple(event))
            return true;
          if (!IS_APPLE && isWindows && isWindows(event))
            return true;
          return false;
        };
      };
      const createComposing = (key) => (editor, event, {
        composing
      } = {}) => {
        if (!create$1(key)(event))
          return false;
        if (!!composing !== isComposing(editor))
          return false;
        return true;
      };
      const Hotkeys = {
        isBold: create$1("bold"),
        isCompose: create$1("compose"),
        isMoveBackward: create$1("moveBackward"),
        isMoveForward: create$1("moveForward"),
        isDeleteBackward: create$1("deleteBackward"),
        isDeleteForward: create$1("deleteForward"),
        isDeleteLineBackward: create$1("deleteLineBackward"),
        isDeleteLineForward: create$1("deleteLineForward"),
        isDeleteWordBackward: create$1("deleteWordBackward"),
        isDeleteWordForward: create$1("deleteWordForward"),
        isExtendBackward: create$1("extendBackward"),
        isExtendForward: create$1("extendForward"),
        isExtendLineBackward: create$1("extendLineBackward"),
        isExtendLineForward: create$1("extendLineForward"),
        isItalic: create$1("italic"),
        isMoveLineBackward: create$1("moveLineBackward"),
        isMoveLineForward: create$1("moveLineForward"),
        isMoveWordBackward: create$1("moveWordBackward"),
        isMoveWordForward: create$1("moveWordForward"),
        isRedo: create$1("redo"),
        isSoftBreak: create$1("insertSoftBreak"),
        isSplitBlock: create$1("splitBlock"),
        isTab: createComposing("tab"),
        isTransposeCharacter: create$1("transposeCharacter"),
        isUndo: create$1("undo"),
        isUntab: createComposing("untab")
      };
      Provider;
      const isUndefined$3 = (obj) => typeof obj === "undefined";
      const isNull = (obj) => obj === null;
      const isUndefinedOrNull = (obj) => isUndefined$3(obj) || isNull(obj);
      const isDefined$1 = (arg) => !isUndefinedOrNull(arg);
      function apply$1(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      var _apply = apply$1;
      function identity$4(value) {
        return value;
      }
      var identity_1$1 = identity$4;
      var nativeMax$2 = Math.max;
      function overRest$1(func, start, transform) {
        start = nativeMax$2(start === void 0 ? func.length - 1 : start, 0);
        return function() {
          var args = arguments, index2 = -1, length = nativeMax$2(args.length - start, 0), array = Array(length);
          while (++index2 < length) {
            array[index2] = args[start + index2];
          }
          index2 = -1;
          var otherArgs = Array(start + 1);
          while (++index2 < start) {
            otherArgs[index2] = args[index2];
          }
          otherArgs[start] = transform(array);
          return _apply(func, this, otherArgs);
        };
      }
      var _overRest = overRest$1;
      function constant$1(value) {
        return function() {
          return value;
        };
      }
      var constant_1 = constant$1;
      var freeGlobal$4 = typeof commonjsGlobal$2 == "object" && commonjsGlobal$2 && commonjsGlobal$2.Object === Object && commonjsGlobal$2;
      var _freeGlobal$2 = freeGlobal$4;
      var freeSelf$3 = typeof self == "object" && self && self.Object === Object && self;
      var root$b = _freeGlobal$2 || freeSelf$3 || Function("return this")();
      var _root$2 = root$b;
      var Symbol$1$2 = _root$2.Symbol;
      var _Symbol$2 = Symbol$1$2;
      var objectProto$g$1 = Object.prototype;
      var hasOwnProperty$d$1 = objectProto$g$1.hasOwnProperty;
      var nativeObjectToString$1$3 = objectProto$g$1.toString;
      var symToStringTag$1$3 = _Symbol$2 ? _Symbol$2.toStringTag : void 0;
      function getRawTag$3(value) {
        var isOwn = hasOwnProperty$d$1.call(value, symToStringTag$1$3), tag = value[symToStringTag$1$3];
        try {
          value[symToStringTag$1$3] = void 0;
          var unmasked = true;
        } catch (e22) {
        }
        var result = nativeObjectToString$1$3.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag$1$3] = tag;
          } else {
            delete value[symToStringTag$1$3];
          }
        }
        return result;
      }
      var _getRawTag$2 = getRawTag$3;
      var objectProto$f$1 = Object.prototype;
      var nativeObjectToString$4 = objectProto$f$1.toString;
      function objectToString$3(value) {
        return nativeObjectToString$4.call(value);
      }
      var _objectToString$2 = objectToString$3;
      var nullTag$3 = "[object Null]", undefinedTag$3 = "[object Undefined]";
      var symToStringTag$4 = _Symbol$2 ? _Symbol$2.toStringTag : void 0;
      function baseGetTag$9(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag$3 : nullTag$3;
        }
        return symToStringTag$4 && symToStringTag$4 in Object(value) ? _getRawTag$2(value) : _objectToString$2(value);
      }
      var _baseGetTag$2 = baseGetTag$9;
      function isObject$1$1(value) {
        var type = typeof value;
        return value != null && (type == "object" || type == "function");
      }
      var isObject_1$2 = isObject$1$1;
      var asyncTag$4 = "[object AsyncFunction]", funcTag$2$3 = "[object Function]", genTag$1$3 = "[object GeneratorFunction]", proxyTag$4 = "[object Proxy]";
      function isFunction$8(value) {
        if (!isObject_1$2(value)) {
          return false;
        }
        var tag = _baseGetTag$2(value);
        return tag == funcTag$2$3 || tag == genTag$1$3 || tag == asyncTag$4 || tag == proxyTag$4;
      }
      var isFunction_1$3 = isFunction$8;
      var coreJsData$6 = _root$2["__core-js_shared__"];
      var _coreJsData$3 = coreJsData$6;
      var maskSrcKey$4 = function() {
        var uid2 = /[^.]+$/.exec(_coreJsData$3 && _coreJsData$3.keys && _coreJsData$3.keys.IE_PROTO || "");
        return uid2 ? "Symbol(src)_1." + uid2 : "";
      }();
      function isMasked$5(func) {
        return !!maskSrcKey$4 && maskSrcKey$4 in func;
      }
      var _isMasked$3 = isMasked$5;
      var funcProto$2$1 = Function.prototype;
      var funcToString$2$1 = funcProto$2$1.toString;
      function toSource$6(func) {
        if (func != null) {
          try {
            return funcToString$2$1.call(func);
          } catch (e22) {
          }
          try {
            return func + "";
          } catch (e22) {
          }
        }
        return "";
      }
      var _toSource$3 = toSource$6;
      var reRegExpChar$4 = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor$4 = /^\[object .+?Constructor\]$/;
      var funcProto$1$3 = Function.prototype, objectProto$e$1 = Object.prototype;
      var funcToString$1$3 = funcProto$1$3.toString;
      var hasOwnProperty$c$1 = objectProto$e$1.hasOwnProperty;
      var reIsNative$4 = RegExp("^" + funcToString$1$3.call(hasOwnProperty$c$1).replace(reRegExpChar$4, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      function baseIsNative$5(value) {
        if (!isObject_1$2(value) || _isMasked$3(value)) {
          return false;
        }
        var pattern = isFunction_1$3(value) ? reIsNative$4 : reIsHostCtor$4;
        return pattern.test(_toSource$3(value));
      }
      var _baseIsNative$3 = baseIsNative$5;
      function getValue$5(object, key) {
        return object == null ? void 0 : object[key];
      }
      var _getValue$3 = getValue$5;
      function getNative$b(object, key) {
        var value = _getValue$3(object, key);
        return _baseIsNative$3(value) ? value : void 0;
      }
      var _getNative$3 = getNative$b;
      var defineProperty$6 = function() {
        try {
          var func = _getNative$3(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e22) {
        }
      }();
      var _defineProperty$1$1 = defineProperty$6;
      var baseSetToString$2 = !_defineProperty$1$1 ? identity_1$1 : function(func, string2) {
        return _defineProperty$1$1(func, "toString", {
          "configurable": true,
          "enumerable": false,
          "value": constant_1(string2),
          "writable": true
        });
      };
      var _baseSetToString = baseSetToString$2;
      var HOT_COUNT$1 = 800, HOT_SPAN$1 = 16;
      var nativeNow$1 = Date.now;
      function shortOut$1(func) {
        var count = 0, lastCalled = 0;
        return function() {
          var stamp = nativeNow$1(), remaining = HOT_SPAN$1 - (stamp - lastCalled);
          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT$1) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(void 0, arguments);
        };
      }
      var _shortOut = shortOut$1;
      var setToString$2 = _shortOut(_baseSetToString);
      var _setToString = setToString$2;
      function baseRest$1(func, start) {
        return _setToString(_overRest(func, start, identity_1$1), func + "");
      }
      var _baseRest = baseRest$1;
      function listCacheClear$4() {
        this.__data__ = [];
        this.size = 0;
      }
      var _listCacheClear$2 = listCacheClear$4;
      function eq$6(value, other) {
        return value === other || value !== value && other !== other;
      }
      var eq_1$2 = eq$6;
      function assocIndexOf$7(array, key) {
        var length = array.length;
        while (length--) {
          if (eq_1$2(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      var _assocIndexOf$2 = assocIndexOf$7;
      var arrayProto$3 = Array.prototype;
      var splice$5 = arrayProto$3.splice;
      function listCacheDelete$4(key) {
        var data = this.__data__, index2 = _assocIndexOf$2(data, key);
        if (index2 < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index2 == lastIndex) {
          data.pop();
        } else {
          splice$5.call(data, index2, 1);
        }
        --this.size;
        return true;
      }
      var _listCacheDelete$2 = listCacheDelete$4;
      function listCacheGet$4(key) {
        var data = this.__data__, index2 = _assocIndexOf$2(data, key);
        return index2 < 0 ? void 0 : data[index2][1];
      }
      var _listCacheGet$2 = listCacheGet$4;
      function listCacheHas$4(key) {
        return _assocIndexOf$2(this.__data__, key) > -1;
      }
      var _listCacheHas$2 = listCacheHas$4;
      function listCacheSet$4(key, value) {
        var data = this.__data__, index2 = _assocIndexOf$2(data, key);
        if (index2 < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index2][1] = value;
        }
        return this;
      }
      var _listCacheSet$2 = listCacheSet$4;
      function ListCache$7(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      ListCache$7.prototype.clear = _listCacheClear$2;
      ListCache$7.prototype["delete"] = _listCacheDelete$2;
      ListCache$7.prototype.get = _listCacheGet$2;
      ListCache$7.prototype.has = _listCacheHas$2;
      ListCache$7.prototype.set = _listCacheSet$2;
      var _ListCache$2 = ListCache$7;
      function stackClear$4() {
        this.__data__ = new _ListCache$2();
        this.size = 0;
      }
      var _stackClear$2 = stackClear$4;
      function stackDelete$4(key) {
        var data = this.__data__, result = data["delete"](key);
        this.size = data.size;
        return result;
      }
      var _stackDelete$2 = stackDelete$4;
      function stackGet$4(key) {
        return this.__data__.get(key);
      }
      var _stackGet$2 = stackGet$4;
      function stackHas$4(key) {
        return this.__data__.has(key);
      }
      var _stackHas$2 = stackHas$4;
      var Map$9 = _getNative$3(_root$2, "Map");
      var _Map$3 = Map$9;
      var nativeCreate$8 = _getNative$3(Object, "create");
      var _nativeCreate$2 = nativeCreate$8;
      function hashClear$4() {
        this.__data__ = _nativeCreate$2 ? _nativeCreate$2(null) : {};
        this.size = 0;
      }
      var _hashClear$2 = hashClear$4;
      function hashDelete$4(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }
      var _hashDelete$2 = hashDelete$4;
      var HASH_UNDEFINED$2$1 = "__lodash_hash_undefined__";
      var objectProto$d$1 = Object.prototype;
      var hasOwnProperty$b$1 = objectProto$d$1.hasOwnProperty;
      function hashGet$4(key) {
        var data = this.__data__;
        if (_nativeCreate$2) {
          var result = data[key];
          return result === HASH_UNDEFINED$2$1 ? void 0 : result;
        }
        return hasOwnProperty$b$1.call(data, key) ? data[key] : void 0;
      }
      var _hashGet$2 = hashGet$4;
      var objectProto$c$3 = Object.prototype;
      var hasOwnProperty$a$1 = objectProto$c$3.hasOwnProperty;
      function hashHas$4(key) {
        var data = this.__data__;
        return _nativeCreate$2 ? data[key] !== void 0 : hasOwnProperty$a$1.call(data, key);
      }
      var _hashHas$2 = hashHas$4;
      var HASH_UNDEFINED$1$2 = "__lodash_hash_undefined__";
      function hashSet$4(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = _nativeCreate$2 && value === void 0 ? HASH_UNDEFINED$1$2 : value;
        return this;
      }
      var _hashSet$2 = hashSet$4;
      function Hash$4(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      Hash$4.prototype.clear = _hashClear$2;
      Hash$4.prototype["delete"] = _hashDelete$2;
      Hash$4.prototype.get = _hashGet$2;
      Hash$4.prototype.has = _hashHas$2;
      Hash$4.prototype.set = _hashSet$2;
      var _Hash$2 = Hash$4;
      function mapCacheClear$4() {
        this.size = 0;
        this.__data__ = {
          "hash": new _Hash$2(),
          "map": new (_Map$3 || _ListCache$2)(),
          "string": new _Hash$2()
        };
      }
      var _mapCacheClear$2 = mapCacheClear$4;
      function isKeyable$4(value) {
        var type = typeof value;
        return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
      }
      var _isKeyable$2 = isKeyable$4;
      function getMapData$7(map22, key) {
        var data = map22.__data__;
        return _isKeyable$2(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
      }
      var _getMapData$2 = getMapData$7;
      function mapCacheDelete$4(key) {
        var result = _getMapData$2(this, key)["delete"](key);
        this.size -= result ? 1 : 0;
        return result;
      }
      var _mapCacheDelete$2 = mapCacheDelete$4;
      function mapCacheGet$4(key) {
        return _getMapData$2(this, key).get(key);
      }
      var _mapCacheGet$2 = mapCacheGet$4;
      function mapCacheHas$4(key) {
        return _getMapData$2(this, key).has(key);
      }
      var _mapCacheHas$2 = mapCacheHas$4;
      function mapCacheSet$4(key, value) {
        var data = _getMapData$2(this, key), size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }
      var _mapCacheSet$2 = mapCacheSet$4;
      function MapCache$6(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      MapCache$6.prototype.clear = _mapCacheClear$2;
      MapCache$6.prototype["delete"] = _mapCacheDelete$2;
      MapCache$6.prototype.get = _mapCacheGet$2;
      MapCache$6.prototype.has = _mapCacheHas$2;
      MapCache$6.prototype.set = _mapCacheSet$2;
      var _MapCache$2 = MapCache$6;
      var LARGE_ARRAY_SIZE$3 = 200;
      function stackSet$4(key, value) {
        var data = this.__data__;
        if (data instanceof _ListCache$2) {
          var pairs = data.__data__;
          if (!_Map$3 || pairs.length < LARGE_ARRAY_SIZE$3 - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new _MapCache$2(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }
      var _stackSet$2 = stackSet$4;
      function Stack$6(entries) {
        var data = this.__data__ = new _ListCache$2(entries);
        this.size = data.size;
      }
      Stack$6.prototype.clear = _stackClear$2;
      Stack$6.prototype["delete"] = _stackDelete$2;
      Stack$6.prototype.get = _stackGet$2;
      Stack$6.prototype.has = _stackHas$2;
      Stack$6.prototype.set = _stackSet$2;
      var _Stack$2 = Stack$6;
      function baseAssignValue$5(object, key, value) {
        if (key == "__proto__" && _defineProperty$1$1) {
          _defineProperty$1$1(object, key, {
            "configurable": true,
            "enumerable": true,
            "value": value,
            "writable": true
          });
        } else {
          object[key] = value;
        }
      }
      var _baseAssignValue$2 = baseAssignValue$5;
      function assignMergeValue$1(object, key, value) {
        if (value !== void 0 && !eq_1$2(object[key], value) || value === void 0 && !(key in object)) {
          _baseAssignValue$2(object, key, value);
        }
      }
      var _assignMergeValue = assignMergeValue$1;
      function createBaseFor$3(fromRight) {
        return function(object, iteratee, keysFunc) {
          var index2 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
          while (length--) {
            var key = props[fromRight ? length : ++index2];
            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }
      var _createBaseFor$1 = createBaseFor$3;
      var baseFor$4 = _createBaseFor$1();
      var _baseFor$1 = baseFor$4;
      var _cloneBuffer$2 = createCommonjsModule$d(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root$2.Buffer : void 0, allocUnsafe2 = Buffer22 ? Buffer22.allocUnsafe : void 0;
        function cloneBuffer2(buffer2, isDeep) {
          if (isDeep) {
            return buffer2.slice();
          }
          var length = buffer2.length, result = allocUnsafe2 ? allocUnsafe2(length) : new buffer2.constructor(length);
          buffer2.copy(result);
          return result;
        }
        module2.exports = cloneBuffer2;
      });
      var Uint8Array$6 = _root$2.Uint8Array;
      var _Uint8Array$2 = Uint8Array$6;
      function cloneArrayBuffer$6(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new _Uint8Array$2(result).set(new _Uint8Array$2(arrayBuffer));
        return result;
      }
      var _cloneArrayBuffer$2 = cloneArrayBuffer$6;
      function cloneTypedArray$4(typedArray, isDeep) {
        var buffer2 = isDeep ? _cloneArrayBuffer$2(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer2, typedArray.byteOffset, typedArray.length);
      }
      var _cloneTypedArray$2 = cloneTypedArray$4;
      function copyArray$4(source, array) {
        var index2 = -1, length = source.length;
        array || (array = Array(length));
        while (++index2 < length) {
          array[index2] = source[index2];
        }
        return array;
      }
      var _copyArray$2 = copyArray$4;
      var objectCreate$3 = Object.create;
      var baseCreate$5 = function() {
        function object() {
        }
        return function(proto2) {
          if (!isObject_1$2(proto2)) {
            return {};
          }
          if (objectCreate$3) {
            return objectCreate$3(proto2);
          }
          object.prototype = proto2;
          var result = new object();
          object.prototype = void 0;
          return result;
        };
      }();
      var _baseCreate$2 = baseCreate$5;
      function overArg$5(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      var _overArg$2 = overArg$5;
      var getPrototype$7 = _overArg$2(Object.getPrototypeOf, Object);
      var _getPrototype$2 = getPrototype$7;
      var objectProto$b$3 = Object.prototype;
      function isPrototype$6(value) {
        var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$b$3;
        return value === proto2;
      }
      var _isPrototype$2 = isPrototype$6;
      function initCloneObject$4(object) {
        return typeof object.constructor == "function" && !_isPrototype$2(object) ? _baseCreate$2(_getPrototype$2(object)) : {};
      }
      var _initCloneObject$2 = initCloneObject$4;
      function isObjectLike$b(value) {
        return value != null && typeof value == "object";
      }
      var isObjectLike_1$2 = isObjectLike$b;
      var argsTag$3$1 = "[object Arguments]";
      function baseIsArguments$5(value) {
        return isObjectLike_1$2(value) && _baseGetTag$2(value) == argsTag$3$1;
      }
      var _baseIsArguments$3 = baseIsArguments$5;
      var objectProto$a$3 = Object.prototype;
      var hasOwnProperty$9$3 = objectProto$a$3.hasOwnProperty;
      var propertyIsEnumerable$1$3 = objectProto$a$3.propertyIsEnumerable;
      var isArguments$6 = _baseIsArguments$3(function() {
        return arguments;
      }()) ? _baseIsArguments$3 : function(value) {
        return isObjectLike_1$2(value) && hasOwnProperty$9$3.call(value, "callee") && !propertyIsEnumerable$1$3.call(value, "callee");
      };
      var isArguments_1$2 = isArguments$6;
      var isArray$j = Array.isArray;
      var isArray_1$4 = isArray$j;
      var MAX_SAFE_INTEGER$1$2 = 9007199254740991;
      function isLength$6(value) {
        return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1$2;
      }
      var isLength_1$2 = isLength$6;
      function isArrayLike$7(value) {
        return value != null && isLength_1$2(value.length) && !isFunction_1$3(value);
      }
      var isArrayLike_1$2 = isArrayLike$7;
      function isArrayLikeObject$1(value) {
        return isObjectLike_1$2(value) && isArrayLike_1$2(value);
      }
      var isArrayLikeObject_1 = isArrayLikeObject$1;
      function stubFalse$4() {
        return false;
      }
      var stubFalse_1$3 = stubFalse$4;
      var isBuffer_1$1 = createCommonjsModule$d(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root$2.Buffer : void 0;
        var nativeIsBuffer2 = Buffer22 ? Buffer22.isBuffer : void 0;
        var isBuffer2 = nativeIsBuffer2 || stubFalse_1$3;
        module2.exports = isBuffer2;
      });
      var objectTag$4$1 = "[object Object]";
      var funcProto$8 = Function.prototype, objectProto$9$2 = Object.prototype;
      var funcToString$8 = funcProto$8.toString;
      var hasOwnProperty$8$3 = objectProto$9$2.hasOwnProperty;
      var objectCtorString$2 = funcToString$8.call(Object);
      function isPlainObject$1$1(value) {
        if (!isObjectLike_1$2(value) || _baseGetTag$2(value) != objectTag$4$1) {
          return false;
        }
        var proto2 = _getPrototype$2(value);
        if (proto2 === null) {
          return true;
        }
        var Ctor = hasOwnProperty$8$3.call(proto2, "constructor") && proto2.constructor;
        return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString$8.call(Ctor) == objectCtorString$2;
      }
      var isPlainObject_1$1 = isPlainObject$1$1;
      var argsTag$2$3 = "[object Arguments]", arrayTag$2$1 = "[object Array]", boolTag$3$1 = "[object Boolean]", dateTag$3$1 = "[object Date]", errorTag$2$1 = "[object Error]", funcTag$1$2 = "[object Function]", mapTag$5$1 = "[object Map]", numberTag$3$1 = "[object Number]", objectTag$3$1 = "[object Object]", regexpTag$3$1 = "[object RegExp]", setTag$5$1 = "[object Set]", stringTag$3$1 = "[object String]", weakMapTag$2$2 = "[object WeakMap]";
      var arrayBufferTag$3$1 = "[object ArrayBuffer]", dataViewTag$4$1 = "[object DataView]", float32Tag$2$2 = "[object Float32Array]", float64Tag$2$2 = "[object Float64Array]", int8Tag$2$2 = "[object Int8Array]", int16Tag$2$2 = "[object Int16Array]", int32Tag$2$2 = "[object Int32Array]", uint8Tag$2$2 = "[object Uint8Array]", uint8ClampedTag$2$2 = "[object Uint8ClampedArray]", uint16Tag$2$2 = "[object Uint16Array]", uint32Tag$2$2 = "[object Uint32Array]";
      var typedArrayTags$3 = {};
      typedArrayTags$3[float32Tag$2$2] = typedArrayTags$3[float64Tag$2$2] = typedArrayTags$3[int8Tag$2$2] = typedArrayTags$3[int16Tag$2$2] = typedArrayTags$3[int32Tag$2$2] = typedArrayTags$3[uint8Tag$2$2] = typedArrayTags$3[uint8ClampedTag$2$2] = typedArrayTags$3[uint16Tag$2$2] = typedArrayTags$3[uint32Tag$2$2] = true;
      typedArrayTags$3[argsTag$2$3] = typedArrayTags$3[arrayTag$2$1] = typedArrayTags$3[arrayBufferTag$3$1] = typedArrayTags$3[boolTag$3$1] = typedArrayTags$3[dataViewTag$4$1] = typedArrayTags$3[dateTag$3$1] = typedArrayTags$3[errorTag$2$1] = typedArrayTags$3[funcTag$1$2] = typedArrayTags$3[mapTag$5$1] = typedArrayTags$3[numberTag$3$1] = typedArrayTags$3[objectTag$3$1] = typedArrayTags$3[regexpTag$3$1] = typedArrayTags$3[setTag$5$1] = typedArrayTags$3[stringTag$3$1] = typedArrayTags$3[weakMapTag$2$2] = false;
      function baseIsTypedArray$4(value) {
        return isObjectLike_1$2(value) && isLength_1$2(value.length) && !!typedArrayTags$3[_baseGetTag$2(value)];
      }
      var _baseIsTypedArray$2 = baseIsTypedArray$4;
      function baseUnary$6(func) {
        return function(value) {
          return func(value);
        };
      }
      var _baseUnary$2 = baseUnary$6;
      var _nodeUtil$3 = createCommonjsModule$d(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var freeProcess2 = moduleExports2 && _freeGlobal$2.process;
        var nodeUtil2 = function() {
          try {
            var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
            if (types) {
              return types;
            }
            return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
          } catch (e22) {
          }
        }();
        module2.exports = nodeUtil2;
      });
      var nodeIsTypedArray$3 = _nodeUtil$3 && _nodeUtil$3.isTypedArray;
      var isTypedArray$6 = nodeIsTypedArray$3 ? _baseUnary$2(nodeIsTypedArray$3) : _baseIsTypedArray$2;
      var isTypedArray_1$2 = isTypedArray$6;
      function safeGet$1(object, key) {
        if (key === "constructor" && typeof object[key] === "function") {
          return;
        }
        if (key == "__proto__") {
          return;
        }
        return object[key];
      }
      var _safeGet = safeGet$1;
      var objectProto$8$2 = Object.prototype;
      var hasOwnProperty$7$2 = objectProto$8$2.hasOwnProperty;
      function assignValue$5(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty$7$2.call(object, key) && eq_1$2(objValue, value)) || value === void 0 && !(key in object)) {
          _baseAssignValue$2(object, key, value);
        }
      }
      var _assignValue$2 = assignValue$5;
      function copyObject$7(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index2 = -1, length = props.length;
        while (++index2 < length) {
          var key = props[index2];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
          if (newValue === void 0) {
            newValue = source[key];
          }
          if (isNew) {
            _baseAssignValue$2(object, key, newValue);
          } else {
            _assignValue$2(object, key, newValue);
          }
        }
        return object;
      }
      var _copyObject$2 = copyObject$7;
      function baseTimes$4(n22, iteratee) {
        var index2 = -1, result = Array(n22);
        while (++index2 < n22) {
          result[index2] = iteratee(index2);
        }
        return result;
      }
      var _baseTimes$2 = baseTimes$4;
      var MAX_SAFE_INTEGER$5 = 9007199254740991;
      var reIsUint$3 = /^(?:0|[1-9]\d*)$/;
      function isIndex$5(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER$5 : length;
        return !!length && (type == "number" || type != "symbol" && reIsUint$3.test(value)) && (value > -1 && value % 1 == 0 && value < length);
      }
      var _isIndex$2 = isIndex$5;
      var objectProto$7$2 = Object.prototype;
      var hasOwnProperty$6$2 = objectProto$7$2.hasOwnProperty;
      function arrayLikeKeys$5(value, inherited) {
        var isArr = isArray_1$4(value), isArg = !isArr && isArguments_1$2(value), isBuff = !isArr && !isArg && isBuffer_1$1(value), isType2 = !isArr && !isArg && !isBuff && isTypedArray_1$2(value), skipIndexes = isArr || isArg || isBuff || isType2, result = skipIndexes ? _baseTimes$2(value.length, String) : [], length = result.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty$6$2.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType2 && (key == "buffer" || key == "byteLength" || key == "byteOffset") || _isIndex$2(key, length)))) {
            result.push(key);
          }
        }
        return result;
      }
      var _arrayLikeKeys$2 = arrayLikeKeys$5;
      function nativeKeysIn$4(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }
      var _nativeKeysIn$2 = nativeKeysIn$4;
      var objectProto$6$3 = Object.prototype;
      var hasOwnProperty$5$2 = objectProto$6$3.hasOwnProperty;
      function baseKeysIn$4(object) {
        if (!isObject_1$2(object)) {
          return _nativeKeysIn$2(object);
        }
        var isProto = _isPrototype$2(object), result = [];
        for (var key in object) {
          if (!(key == "constructor" && (isProto || !hasOwnProperty$5$2.call(object, key)))) {
            result.push(key);
          }
        }
        return result;
      }
      var _baseKeysIn$2 = baseKeysIn$4;
      function keysIn$6(object) {
        return isArrayLike_1$2(object) ? _arrayLikeKeys$2(object, true) : _baseKeysIn$2(object);
      }
      var keysIn_1$2 = keysIn$6;
      function toPlainObject$1(value) {
        return _copyObject$2(value, keysIn_1$2(value));
      }
      var toPlainObject_1 = toPlainObject$1;
      function baseMergeDeep$1(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = _safeGet(object, key), srcValue = _safeGet(source, key), stacked = stack.get(srcValue);
        if (stacked) {
          _assignMergeValue(object, key, stacked);
          return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
        var isCommon = newValue === void 0;
        if (isCommon) {
          var isArr = isArray_1$4(srcValue), isBuff = !isArr && isBuffer_1$1(srcValue), isTyped = !isArr && !isBuff && isTypedArray_1$2(srcValue);
          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray_1$4(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject_1(objValue)) {
              newValue = _copyArray$2(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = _cloneBuffer$2(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = _cloneTypedArray$2(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject_1$1(srcValue) || isArguments_1$2(srcValue)) {
            newValue = objValue;
            if (isArguments_1$2(objValue)) {
              newValue = toPlainObject_1(objValue);
            } else if (!isObject_1$2(objValue) || isFunction_1$3(objValue)) {
              newValue = _initCloneObject$2(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack["delete"](srcValue);
        }
        _assignMergeValue(object, key, newValue);
      }
      var _baseMergeDeep = baseMergeDeep$1;
      function baseMerge$1(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        _baseFor$1(source, function(srcValue, key) {
          stack || (stack = new _Stack$2());
          if (isObject_1$2(srcValue)) {
            _baseMergeDeep(object, source, key, srcIndex, baseMerge$1, customizer, stack);
          } else {
            var newValue = customizer ? customizer(_safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
            if (newValue === void 0) {
              newValue = srcValue;
            }
            _assignMergeValue(object, key, newValue);
          }
        }, keysIn_1$2);
      }
      var _baseMerge = baseMerge$1;
      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject_1$2(objValue) && isObject_1$2(srcValue)) {
          stack.set(srcValue, objValue);
          _baseMerge(objValue, srcValue, void 0, customDefaultsMerge, stack);
          stack["delete"](srcValue);
        }
        return objValue;
      }
      var _customDefaultsMerge = customDefaultsMerge;
      function isIterateeCall$1(value, index2, object) {
        if (!isObject_1$2(object)) {
          return false;
        }
        var type = typeof index2;
        if (type == "number" ? isArrayLike_1$2(object) && _isIndex$2(index2, object.length) : type == "string" && index2 in object) {
          return eq_1$2(object[index2], value);
        }
        return false;
      }
      var _isIterateeCall = isIterateeCall$1;
      function createAssigner$1(assigner) {
        return _baseRest(function(object, sources) {
          var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
          customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
          if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? void 0 : customizer;
            length = 1;
          }
          object = Object(object);
          while (++index2 < length) {
            var source = sources[index2];
            if (source) {
              assigner(object, source, index2, customizer);
            }
          }
          return object;
        });
      }
      var _createAssigner = createAssigner$1;
      var mergeWith = _createAssigner(function(object, source, srcIndex, customizer) {
        _baseMerge(object, source, srcIndex, customizer);
      });
      var mergeWith_1 = mergeWith;
      var defaultsDeep = _baseRest(function(args) {
        args.push(void 0, _customDefaultsMerge);
        return _apply(mergeWith_1, void 0, args);
      });
      var defaultsDeep_1 = defaultsDeep;
      const overridePluginsByKey = (plugin, overrideByKey = {}, nested) => {
        var _overrideByKey$plugin;
        if (overrideByKey[plugin.key]) {
          const {
            plugins: pluginOverridesPlugins,
            then: pluginOverridesThen,
            ...pluginOverrides
          } = overrideByKey[plugin.key];
          plugin = defaultsDeep_1(pluginOverrides, plugin);
          if (!nested) {
            pluginOverridesPlugins === null || pluginOverridesPlugins === void 0 ? void 0 : pluginOverridesPlugins.forEach((pOverrides) => {
              if (!plugin.plugins)
                plugin.plugins = [];
              const found = plugin.plugins.find((p22) => p22.key === pOverrides.key);
              if (!found)
                plugin.plugins.push(pOverrides);
            });
          }
        }
        if (plugin.plugins) {
          plugin.plugins = plugin.plugins.map((p22) => overridePluginsByKey(p22, overrideByKey, true));
        }
        const {
          then
        } = plugin;
        if (then) {
          plugin.then = (editor, p22) => {
            const pluginThen = {
              key: plugin.key,
              ...then(editor, p22)
            };
            return defaultsDeep_1(overridePluginsByKey(pluginThen, overrideByKey), pluginThen);
          };
        } else if ((_overrideByKey$plugin = overrideByKey[plugin.key]) !== null && _overrideByKey$plugin !== void 0 && _overrideByKey$plugin.then) {
          plugin.then = overrideByKey[plugin.key].then;
        }
        return plugin;
      };
      const createPluginFactory = (defaultPlugin) => (override, overrideByKey = {}) => {
        overrideByKey[defaultPlugin.key] = override;
        return overridePluginsByKey({
          ...defaultPlugin
        }, overrideByKey);
      };
      const KEY_DESERIALIZE_AST = "deserializeAst";
      const createDeserializeAstPlugin = createPluginFactory({
        key: KEY_DESERIALIZE_AST,
        editor: {
          insertData: {
            format: "application/x-slate-fragment",
            getFragment: ({
              data
            }) => {
              const decoded = decodeURIComponent(window.atob(data));
              return JSON.parse(decoded);
            }
          }
        }
      });
      const eventEditorStore = createStore("event-editor")({
        blur: null,
        focus: null,
        last: null
      });
      const eventEditorActions = eventEditorStore.set;
      const eventEditorSelectors = eventEditorStore.get;
      eventEditorStore.use;
      const KEY_EVENT_EDITOR = "event-editor";
      const createEventEditorPlugin = createPluginFactory({
        key: KEY_EVENT_EDITOR,
        handlers: {
          onFocus: (editor) => () => {
            eventEditorActions.focus(editor.id);
          },
          onBlur: (editor) => () => {
            const focus = eventEditorSelectors.focus();
            if (focus === editor.id) {
              eventEditorActions.focus(null);
            }
            eventEditorActions.blur(editor.id);
          }
        }
      });
      const withTHistory = (editor) => withHistory(editor);
      const createHistoryPlugin = createPluginFactory({
        key: "history",
        withOverrides: withTHistory
      });
      const KEY_INLINE_VOID = "inline-void";
      const withInlineVoid = (editor) => {
        const {
          isInline: isInline2
        } = editor;
        const {
          isVoid: isVoid2
        } = editor;
        const inlineTypes = [];
        const voidTypes = [];
        editor.plugins.forEach((plugin) => {
          if (plugin.isInline) {
            inlineTypes.push(plugin.type);
          }
          if (plugin.isVoid) {
            voidTypes.push(plugin.type);
          }
        });
        editor.isInline = (element) => {
          return inlineTypes.includes(element.type) ? true : isInline2(element);
        };
        editor.isVoid = (element) => voidTypes.includes(element.type) ? true : isVoid2(element);
        return editor;
      };
      const createInlineVoidPlugin = createPluginFactory({
        key: KEY_INLINE_VOID,
        withOverrides: withInlineVoid
      });
      const getInjectedPlugins = (editor, plugin) => {
        const injectedPlugins = [];
        [...editor.plugins].reverse().forEach((p22) => {
          var _p$inject$pluginsByKe;
          const injectedPlugin = (_p$inject$pluginsByKe = p22.inject.pluginsByKey) === null || _p$inject$pluginsByKe === void 0 ? void 0 : _p$inject$pluginsByKe[plugin.key];
          if (injectedPlugin)
            injectedPlugins.push(injectedPlugin);
        });
        return [plugin, ...injectedPlugins];
      };
      const pipeInsertDataQuery = (plugins, {
        data,
        dataTransfer
      }) => plugins.every((p22) => {
        var _p$editor, _p$editor$insertData;
        const query = (_p$editor = p22.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : _p$editor$insertData.query;
        return !query || query({
          data,
          dataTransfer
        });
      });
      const withoutNormalizing = (editor, fn2) => {
        let normalized = false;
        Editor$1.withoutNormalizing(editor, () => {
          normalized = !!fn2();
        });
        return normalized;
      };
      const pipeInsertFragment = (editor, injectedPlugins, {
        fragment,
        ...options
      }) => {
        withoutNormalizing(editor, () => {
          injectedPlugins.some((p22) => {
            var _p$editor, _p$editor$insertData, _p$editor$insertData$;
            return ((_p$editor = p22.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : (_p$editor$insertData$ = _p$editor$insertData.preInsert) === null || _p$editor$insertData$ === void 0 ? void 0 : _p$editor$insertData$.call(_p$editor$insertData, fragment, options)) === true;
          });
          editor.insertFragment(fragment);
        });
      };
      const pipeTransformData = (plugins, {
        data,
        dataTransfer
      }) => {
        plugins.forEach((p22) => {
          var _p$editor, _p$editor$insertData;
          const transformData = (_p$editor = p22.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : _p$editor$insertData.transformData;
          if (!transformData)
            return;
          data = transformData(data, {
            dataTransfer
          });
        });
        return data;
      };
      const pipeTransformFragment = (plugins, {
        fragment,
        ...options
      }) => {
        plugins.forEach((p22) => {
          var _p$editor, _p$editor$insertData;
          const transformFragment = (_p$editor = p22.editor) === null || _p$editor === void 0 ? void 0 : (_p$editor$insertData = _p$editor.insertData) === null || _p$editor$insertData === void 0 ? void 0 : _p$editor$insertData.transformFragment;
          if (!transformFragment)
            return;
          fragment = transformFragment(fragment, options);
        });
        return fragment;
      };
      const withInsertData = (editor) => {
        const {
          insertData
        } = editor;
        editor.insertData = (dataTransfer) => {
          const inserted = [...editor.plugins].reverse().some((plugin) => {
            var _fragment;
            const insertDataOptions = plugin.editor.insertData;
            if (!insertDataOptions)
              return false;
            const injectedPlugins = getInjectedPlugins(editor, plugin);
            const {
              format: format2,
              getFragment
            } = insertDataOptions;
            if (!format2)
              return false;
            let data = dataTransfer.getData(format2);
            if (!data)
              return;
            if (!pipeInsertDataQuery(injectedPlugins, {
              data,
              dataTransfer
            })) {
              return false;
            }
            data = pipeTransformData(injectedPlugins, {
              data,
              dataTransfer
            });
            let fragment = getFragment === null || getFragment === void 0 ? void 0 : getFragment({
              data,
              dataTransfer
            });
            if (!((_fragment = fragment) !== null && _fragment !== void 0 && _fragment.length))
              return false;
            fragment = pipeTransformFragment(injectedPlugins, {
              fragment,
              data,
              dataTransfer
            });
            if (!fragment.length)
              return false;
            pipeInsertFragment(editor, injectedPlugins, {
              fragment,
              data,
              dataTransfer
            });
            return true;
          });
          if (inserted)
            return;
          insertData(dataTransfer);
        };
        return editor;
      };
      const KEY_INSERT_DATA = "insertData";
      const createInsertDataPlugin = createPluginFactory({
        key: KEY_INSERT_DATA,
        withOverrides: withInsertData
      });
      const withTReact = (editor) => withReact(editor);
      const createReactPlugin = createPluginFactory({
        key: "react",
        withOverrides: withTReact
      });
      const isElement = (value) => Element$1.isElement(value);
      const isText = (value) => Text.isText(value);
      const ELEMENT_DEFAULT = "p";
      const createTEditor = () => createEditor$1();
      const createPlateStore = (state = {}) => createStore(`plate-${state.id}`)({
        id: "main",
        value: [{
          type: ELEMENT_DEFAULT,
          children: [{
            text: ""
          }]
        }],
        editor: null,
        isReady: false,
        isRendered: false,
        keyEditor: 1,
        keyPlugins: 1,
        keySelection: 1,
        keyDecorate: 1,
        decorate: null,
        enabled: true,
        editableProps: null,
        onChange: null,
        plugins: [],
        renderElement: null,
        renderLeaf: null,
        ...state
      }).extendActions((_set, _get) => ({
        resetEditor: () => {
          var _get$editor;
          _set.editor(withPlate(createTEditor(), {
            id: state.id,
            plugins: (_get$editor = _get.editor()) === null || _get$editor === void 0 ? void 0 : _get$editor.plugins
          }));
        },
        incrementKey: (key) => {
          var _get$key;
          const prev = (_get$key = _get[key]()) !== null && _get$key !== void 0 ? _get$key : 1;
          _set[key](prev + 1);
        }
      })).extendActions((_set) => ({
        redecorate: () => {
          _set.incrementKey("keyDecorate");
        }
      }));
      const getPluginsByKey = (editor) => {
        var _ref;
        return (_ref = editor === null || editor === void 0 ? void 0 : editor.pluginsByKey) !== null && _ref !== void 0 ? _ref : {};
      };
      const getPlugin = (editor, key) => {
        var _getPluginsByKey$key;
        return (_getPluginsByKey$key = getPluginsByKey(editor)[key]) !== null && _getPluginsByKey$key !== void 0 ? _getPluginsByKey$key : {
          key
        };
      };
      const getPluginType = (editor, key) => {
        var _ref, _getPlugin$type;
        return (_ref = (_getPlugin$type = getPlugin(editor, key).type) !== null && _getPlugin$type !== void 0 ? _getPlugin$type : key) !== null && _ref !== void 0 ? _ref : "";
      };
      const isInlineNode = (editor) => (node) => isText(node) || isElement(node) && editor.isInline(node);
      const makeBlockLazy = (type) => () => ({
        type,
        children: []
      });
      const hasDifferentChildNodes = (descendants, isInline2) => {
        return descendants.some((descendant, index2, arr) => {
          const prevDescendant = arr[index2 - 1];
          if (index2 !== 0) {
            return isInline2(descendant) !== isInline2(prevDescendant);
          }
          return false;
        });
      };
      const normalizeDifferentNodeTypes = (descendants, isInline2, makeDefaultBlock) => {
        const hasDifferentNodes = hasDifferentChildNodes(descendants, isInline2);
        const {
          fragment
        } = descendants.reduce((memo, node) => {
          if (hasDifferentNodes && isInline2(node)) {
            let block = memo.precedingBlock;
            if (!block) {
              block = makeDefaultBlock();
              memo.precedingBlock = block;
              memo.fragment.push(block);
            }
            block.children.push(node);
          } else {
            memo.fragment.push(node);
            memo.precedingBlock = null;
          }
          return memo;
        }, {
          fragment: [],
          precedingBlock: null
        });
        return fragment;
      };
      const normalizeEmptyChildren = (descendants) => {
        if (!descendants.length) {
          return [{
            text: ""
          }];
        }
        return descendants;
      };
      const normalize$1 = (descendants, isInline2, makeDefaultBlock) => {
        descendants = normalizeEmptyChildren(descendants);
        descendants = normalizeDifferentNodeTypes(descendants, isInline2, makeDefaultBlock);
        descendants = descendants.map((node) => {
          if (isElement(node)) {
            return {
              ...node,
              children: normalize$1(node.children, isInline2, makeDefaultBlock)
            };
          }
          return node;
        });
        return descendants;
      };
      const normalizeDescendantsToDocumentFragment = (editor, {
        descendants
      }) => {
        const isInline2 = isInlineNode(editor);
        const defaultType = getPluginType(editor, ELEMENT_DEFAULT);
        const makeDefaultBlock = makeBlockLazy(defaultType);
        return normalize$1(descendants, isInline2, makeDefaultBlock);
      };
      function isObject$d(o22) {
        return Object.prototype.toString.call(o22) === "[object Object]";
      }
      function isPlainObject$3(o22) {
        var ctor, prot;
        if (isObject$d(o22) === false)
          return false;
        ctor = o22.constructor;
        if (ctor === void 0)
          return true;
        prot = ctor.prototype;
        if (isObject$d(prot) === false)
          return false;
        if (prot.hasOwnProperty("isPrototypeOf") === false) {
          return false;
        }
        return true;
      }
      function _defineProperty$7(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      var ANCHOR = /* @__PURE__ */ new WeakMap();
      var FOCUS = /* @__PURE__ */ new WeakMap();
      class Token {
      }
      class AnchorToken extends Token {
        constructor() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          super();
          var {
            offset: offset2,
            path
          } = props;
          this.offset = offset2;
          this.path = path;
        }
      }
      class FocusToken extends Token {
        constructor() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          super();
          var {
            offset: offset2,
            path
          } = props;
          this.offset = offset2;
          this.path = path;
        }
      }
      var addAnchorToken = (text2, token2) => {
        var offset2 = text2.text.length;
        ANCHOR.set(text2, [offset2, token2]);
      };
      var getAnchorOffset = (text2) => {
        return ANCHOR.get(text2);
      };
      var addFocusToken = (text2, token2) => {
        var offset2 = text2.text.length;
        FOCUS.set(text2, [offset2, token2]);
      };
      var getFocusOffset = (text2) => {
        return FOCUS.get(text2);
      };
      function ownKeys$1$1(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$1$1(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$1$1(Object(source), true).forEach(function(key) {
              _defineProperty$7(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$1$1(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var STRINGS = /* @__PURE__ */ new WeakSet();
      var resolveDescendants = (children) => {
        var nodes = [];
        var addChild = (child2) => {
          if (child2 == null) {
            return;
          }
          var prev = nodes[nodes.length - 1];
          if (typeof child2 === "string") {
            var text2 = {
              text: child2
            };
            STRINGS.add(text2);
            child2 = text2;
          }
          if (Text.isText(child2)) {
            var c22 = child2;
            if (Text.isText(prev) && STRINGS.has(prev) && STRINGS.has(c22) && Text.equals(prev, c22, {
              loose: true
            })) {
              prev.text += c22.text;
            } else {
              nodes.push(c22);
            }
          } else if (Element$1.isElement(child2)) {
            nodes.push(child2);
          } else if (child2 instanceof Token) {
            var n22 = nodes[nodes.length - 1];
            if (!Text.isText(n22)) {
              addChild("");
              n22 = nodes[nodes.length - 1];
            }
            if (child2 instanceof AnchorToken) {
              addAnchorToken(n22, child2);
            } else if (child2 instanceof FocusToken) {
              addFocusToken(n22, child2);
            }
          } else {
            throw new Error("Unexpected hyperscript child object: ".concat(child2));
          }
        };
        for (var child of children.flat(Infinity)) {
          addChild(child);
        }
        return nodes;
      };
      function createAnchor(tagName, attributes, children) {
        return new AnchorToken(attributes);
      }
      function createCursor(tagName, attributes, children) {
        return [new AnchorToken(attributes), new FocusToken(attributes)];
      }
      function createElement36(tagName, attributes, children) {
        return _objectSpread$1$1(_objectSpread$1$1({}, attributes), {}, {
          children: resolveDescendants(children)
        });
      }
      function createFocus(tagName, attributes, children) {
        return new FocusToken(attributes);
      }
      function createFragment(tagName, attributes, children) {
        return resolveDescendants(children);
      }
      function createSelection(tagName, attributes, children) {
        var anchor = children.find((c22) => c22 instanceof AnchorToken);
        var focus = children.find((c22) => c22 instanceof FocusToken);
        if (!anchor || anchor.offset == null || anchor.path == null) {
          throw new Error("The <selection> hyperscript tag must have an <anchor> tag as a child with `path` and `offset` attributes defined.");
        }
        if (!focus || focus.offset == null || focus.path == null) {
          throw new Error("The <selection> hyperscript tag must have a <focus> tag as a child with `path` and `offset` attributes defined.");
        }
        return _objectSpread$1$1({
          anchor: {
            offset: anchor.offset,
            path: anchor.path
          },
          focus: {
            offset: focus.offset,
            path: focus.path
          }
        }, attributes);
      }
      function createText(tagName, attributes, children) {
        var nodes = resolveDescendants(children);
        if (nodes.length > 1) {
          throw new Error("The <text> hyperscript tag must only contain a single node's worth of children.");
        }
        var [node] = nodes;
        if (node == null) {
          node = {
            text: ""
          };
        }
        if (!Text.isText(node)) {
          throw new Error("\n    The <text> hyperscript tag can only contain text content as children.");
        }
        STRINGS.delete(node);
        Object.assign(node, attributes);
        return node;
      }
      var createEditor = (makeEditor) => (tagName, attributes, children) => {
        var otherChildren = [];
        var selectionChild;
        for (var child of children) {
          if (Range.isRange(child)) {
            selectionChild = child;
          } else {
            otherChildren.push(child);
          }
        }
        var descendants = resolveDescendants(otherChildren);
        var selection = {};
        var editor = makeEditor();
        Object.assign(editor, attributes);
        editor.children = descendants;
        for (var [node, path] of Node$1.texts(editor)) {
          var anchor = getAnchorOffset(node);
          var focus = getFocusOffset(node);
          if (anchor != null) {
            var [offset2] = anchor;
            selection.anchor = {
              path,
              offset: offset2
            };
          }
          if (focus != null) {
            var [_offset] = focus;
            selection.focus = {
              path,
              offset: _offset
            };
          }
        }
        if (selection.anchor && !selection.focus) {
          throw new Error("Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<anchor />`. For collapsed selections, use `<cursor />` instead.");
        }
        if (!selection.anchor && selection.focus) {
          throw new Error("Slate hyperscript ranges must have both `<anchor />` and `<focus />` defined if one is defined, but you only defined `<focus />`. For collapsed selections, use `<cursor />` instead.");
        }
        if (selectionChild != null) {
          editor.selection = selectionChild;
        } else if (Range.isRange(selection)) {
          editor.selection = selection;
        }
        return editor;
      };
      function ownKeys$4(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          }
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$2(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$4(Object(source), true).forEach(function(key) {
              _defineProperty$7(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$4(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      var DEFAULT_CREATORS = {
        anchor: createAnchor,
        cursor: createCursor,
        editor: createEditor(createEditor$1),
        element: createElement36,
        focus: createFocus,
        fragment: createFragment,
        selection: createSelection,
        text: createText
      };
      var createHyperscript = function createHyperscript2() {
        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var {
          elements = {}
        } = options;
        var elementCreators = normalizeElements(elements);
        var creators = _objectSpread$2(_objectSpread$2(_objectSpread$2({}, DEFAULT_CREATORS), elementCreators), options.creators);
        var jsx2 = createFactory(creators);
        return jsx2;
      };
      var createFactory = (creators) => {
        var jsx2 = function jsx3(tagName, attributes) {
          for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            children[_key - 2] = arguments[_key];
          }
          var creator = creators[tagName];
          if (!creator) {
            throw new Error("No hyperscript creator found for tag: <".concat(tagName, ">"));
          }
          if (attributes == null) {
            attributes = {};
          }
          if (!isPlainObject$3(attributes)) {
            children = [attributes].concat(children);
            attributes = {};
          }
          children = children.filter((child) => Boolean(child)).flat();
          var ret = creator(tagName, attributes, children);
          return ret;
        };
        return jsx2;
      };
      var normalizeElements = (elements) => {
        var creators = {};
        var _loop = function _loop4(tagName2) {
          var props = elements[tagName2];
          if (typeof props !== "object") {
            throw new Error("Properties specified for a hyperscript shorthand should be an object, but for the custom element <".concat(tagName2, ">  tag you passed: ").concat(props));
          }
          creators[tagName2] = (tagName3, attributes, children) => {
            return createElement36("element", _objectSpread$2(_objectSpread$2({}, props), attributes), children);
          };
        };
        for (var tagName in elements) {
          _loop(tagName);
        }
        return creators;
      };
      var jsx = createHyperscript();
      const deserializeHtmlNodeChildren = (editor, node) => Array.from(node.childNodes).map(deserializeHtmlNode(editor)).flat();
      const htmlBodyToFragment = (editor, element) => {
        if (element.nodeName === "BODY") {
          return jsx("fragment", {}, deserializeHtmlNodeChildren(editor, element));
        }
      };
      const htmlBrToNewLine = (node) => {
        if (node.nodeName === "BR") {
          return "\n";
        }
      };
      function castArray$2() {
        if (!arguments.length) {
          return [];
        }
        var value = arguments[0];
        return isArray_1$4(value) ? value : [value];
      }
      var castArray_1$2 = castArray$2;
      const pluginDeserializeHtml = (editor, plugin, {
        element: el2,
        deserializeLeaf
      }) => {
        var _getNode;
        const {
          deserializeHtml: deserializeHtml2,
          isElement: isElementRoot,
          isLeaf: isLeafRoot,
          type
        } = plugin;
        if (!deserializeHtml2)
          return;
        const {
          attributeNames,
          query,
          isLeaf: isLeafRule,
          isElement: isElementRule,
          rules
        } = deserializeHtml2;
        let {
          getNode: getNode2
        } = deserializeHtml2;
        const isElement2 = isElementRule || isElementRoot;
        const isLeaf = isLeafRule || isLeafRoot;
        if (!deserializeLeaf && !isElement2) {
          return;
        }
        if (deserializeLeaf && !isLeaf) {
          return;
        }
        if (rules) {
          const isValid2 = rules.some(({
            validNodeName = "*",
            validStyle,
            validClassName,
            validAttribute
          }) => {
            if (validNodeName) {
              const validNodeNames = castArray_1$2(validNodeName);
              if (validNodeNames.length && !validNodeNames.includes(el2.nodeName) && validNodeName !== "*")
                return false;
            }
            if (validClassName && !el2.classList.contains(validClassName))
              return false;
            if (validStyle) {
              for (const [key, value] of Object.entries(validStyle)) {
                var _plugin$inject$props;
                const values2 = castArray_1$2(value);
                if (!values2.includes(el2.style[key]) && value !== "*")
                  return;
                if (value === "*" && !el2.style[key])
                  return;
                const defaultNodeValue = (_plugin$inject$props = plugin.inject.props) === null || _plugin$inject$props === void 0 ? void 0 : _plugin$inject$props.defaultNodeValue;
                if (defaultNodeValue && defaultNodeValue === el2.style[key]) {
                  return false;
                }
              }
            }
            if (validAttribute) {
              if (typeof validAttribute === "string") {
                if (!el2.getAttributeNames().includes(validAttribute))
                  return false;
              } else {
                for (const [attributeName, attributeValue] of Object.entries(validAttribute)) {
                  const attributeValues = castArray_1$2(attributeValue);
                  const elAttribute = el2.getAttribute(attributeName);
                  if (!elAttribute || !attributeValues.includes(elAttribute))
                    return false;
                }
              }
            }
            return true;
          });
          if (!isValid2)
            return;
        }
        if (query && !query(el2)) {
          return;
        }
        if (!getNode2) {
          if (isElement2) {
            getNode2 = () => ({
              type
            });
          } else if (isLeaf) {
            getNode2 = () => ({
              [type]: true
            });
          } else {
            return;
          }
        }
        let node = (_getNode = getNode2(el2, {})) !== null && _getNode !== void 0 ? _getNode : {};
        if (!Object.keys(node).length)
          return;
        const injectedPlugins = getInjectedPlugins(editor, plugin);
        injectedPlugins.forEach((injectedPlugin) => {
          var _injectedPlugin$deser, _injectedPlugin$deser2;
          const res = (_injectedPlugin$deser = injectedPlugin.deserializeHtml) === null || _injectedPlugin$deser === void 0 ? void 0 : (_injectedPlugin$deser2 = _injectedPlugin$deser.getNode) === null || _injectedPlugin$deser2 === void 0 ? void 0 : _injectedPlugin$deser2.call(_injectedPlugin$deser, el2, node);
          if (res) {
            node = {
              ...node,
              ...res
            };
          }
        });
        if (attributeNames) {
          const elementAttributes = {};
          const elementAttributeNames = el2.getAttributeNames();
          for (const elementAttributeName of elementAttributeNames) {
            if (attributeNames.includes(elementAttributeName)) {
              elementAttributes[elementAttributeName] = el2.getAttribute(elementAttributeName);
            }
          }
          if (Object.keys(elementAttributes).length) {
            node.attributes = elementAttributes;
          }
        }
        return {
          ...deserializeHtml2,
          node
        };
      };
      const pipeDeserializeHtmlElement = (editor, element) => {
        let result;
        [...editor.plugins].reverse().some((plugin) => {
          result = pluginDeserializeHtml(editor, plugin, {
            element
          });
          return !!result;
        });
        return result;
      };
      const htmlElementToElement = (editor, element) => {
        const deserialized = pipeDeserializeHtmlElement(editor, element);
        if (deserialized) {
          var _node$children;
          const {
            node,
            withoutChildren
          } = deserialized;
          let descendants = (_node$children = node.children) !== null && _node$children !== void 0 ? _node$children : deserializeHtmlNodeChildren(editor, element);
          if (!descendants.length || withoutChildren) {
            descendants = [{
              text: ""
            }];
          }
          return jsx("element", node, descendants);
        }
      };
      var merge$3 = _createAssigner(function(object, source, srcIndex) {
        _baseMerge(object, source, srcIndex);
      });
      var merge_1$1 = merge$3;
      const getNodeEntry = (editor, at, options) => Editor$1.node(editor, at, options);
      const getPath$1 = (editor, at, options) => Editor$1.path(editor, at, options);
      const isVoid = (editor, value) => {
        return Editor$1.isVoid(editor, value);
      };
      const getNodeDescendants = (root2, options) => Node$1.descendants(root2, options);
      const isBlock = (editor, value) => Editor$1.isBlock(editor, value);
      const match = (obj, path, predicate) => {
        if (!predicate)
          return true;
        if (typeof predicate === "object") {
          return Object.entries(predicate).every(([key, value]) => {
            const values2 = castArray_1$2(value);
            return values2.includes(obj[key]);
          });
        }
        return predicate(obj, path);
      };
      const getQueryOptions = (editor, options = {}) => {
        const {
          match: _match,
          block
        } = options;
        return {
          ...options,
          match: _match || block ? (n22, path) => match(n22, path, _match) && (!block || isBlock(editor, n22)) : void 0
        };
      };
      const findDescendant = (editor, options) => {
        try {
          const {
            match: _match,
            at = editor.selection,
            reverse = false,
            voids = false
          } = options;
          if (!at)
            return;
          let from2;
          let to22;
          if (Span.isSpan(at)) {
            [from2, to22] = at;
          } else if (Range.isRange(at)) {
            const first = getPath$1(editor, at, {
              edge: "start"
            });
            const last2 = getPath$1(editor, at, {
              edge: "end"
            });
            from2 = reverse ? last2 : first;
            to22 = reverse ? first : last2;
          }
          let root2 = [editor, []];
          if (Path.isPath(at)) {
            root2 = getNodeEntry(editor, at);
          }
          const nodeEntries = getNodeDescendants(root2[0], {
            reverse,
            from: from2,
            to: to22,
            pass: ([n22]) => voids ? false : isVoid(editor, n22)
          });
          for (const [node, path] of nodeEntries) {
            if (match(node, path, _match)) {
              return [node, at.concat(path)];
            }
          }
        } catch (error) {
          return void 0;
        }
      };
      const unhangRange = (editor, range, options = {}) => {
        const {
          voids,
          unhang = true
        } = options;
        if (Range.isRange(range) && unhang) {
          return Editor$1.unhangRange(editor, range, {
            voids
          });
        }
      };
      const getNodeEntries = (editor, options) => {
        unhangRange(editor, options === null || options === void 0 ? void 0 : options.at, options);
        return Editor$1.nodes(editor, getQueryOptions(editor, options));
      };
      const findNode = (editor, options = {}) => {
        try {
          const nodeEntries = getNodeEntries(editor, {
            at: editor.selection || [],
            ...getQueryOptions(editor, options)
          });
          for (const [node, path] of nodeEntries) {
            return [node, path];
          }
        } catch (error) {
          return void 0;
        }
      };
      const getAboveNode = (editor, options) => Editor$1.above(editor, getQueryOptions(editor, options));
      const getBlockAbove = (editor, options = {}) => getAboveNode(editor, {
        ...options,
        block: true
      });
      const isAncestor = (value) => Element$1.isAncestor(value);
      const getChildren = (nodeEntry) => {
        const [node, path] = nodeEntry;
        if (isAncestor(node)) {
          const {
            children
          } = node;
          return children.map((child, index2) => {
            const childPath = path.concat([index2]);
            return [child, childPath];
          });
        }
        return [];
      };
      const getLastChild$1 = (nodeEntry) => {
        const [node, path] = nodeEntry;
        if (isText(node))
          return null;
        if (!node.children.length)
          return null;
        const children = node.children;
        return [children[children.length - 1], path.concat([children.length - 1])];
      };
      const getLastChildPath = (nodeEntry) => {
        const lastChild = getLastChild$1(nodeEntry);
        if (!lastChild)
          return nodeEntry[1].concat([-1]);
        return lastChild[1];
      };
      const isLastChild = (parentEntry, childPath) => {
        const lastChildPath = getLastChildPath(parentEntry);
        return Path.equals(lastChildPath, childPath);
      };
      const getLastNode = (editor, at) => Editor$1.last(editor, at);
      const getLastChild = (node, level) => {
        if (!(level + 1) || !isAncestor(node))
          return node;
        const {
          children
        } = node;
        const lastNode = children[children.length - 1];
        return getLastChild(lastNode, level - 1);
      };
      const getLastNodeByLevel = (editor, level) => {
        const {
          children
        } = editor;
        const lastNode = children[children.length - 1];
        if (!lastNode)
          return;
        const [, lastPath] = getLastNode(editor, []);
        return [getLastChild(lastNode, level - 1), lastPath.slice(0, level + 1)];
      };
      const getMarks = (editor) => Editor$1.marks(editor);
      const getMark = (editor, type) => {
        if (!editor)
          return;
        const marks = getMarks(editor);
        return marks === null || marks === void 0 ? void 0 : marks[type];
      };
      const getNextSiblingNodes = (ancestorEntry, path) => {
        const [ancestor, ancestorPath] = ancestorEntry;
        const leafIndex = path[ancestorPath.length];
        const siblings = [];
        const ancestorChildren = ancestor.children;
        if (leafIndex + 1 < ancestor.children.length) {
          for (let i22 = leafIndex + 1; i22 < ancestor.children.length; i22++) {
            siblings.push(ancestorChildren[i22]);
          }
        }
        return siblings;
      };
      function arrayMap$4(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index2 < length) {
          result[index2] = iteratee(array[index2], index2, array);
        }
        return result;
      }
      var _arrayMap$1 = arrayMap$4;
      var HASH_UNDEFINED$7 = "__lodash_hash_undefined__";
      function setCacheAdd$3(value) {
        this.__data__.set(value, HASH_UNDEFINED$7);
        return this;
      }
      var _setCacheAdd$1 = setCacheAdd$3;
      function setCacheHas$3(value) {
        return this.__data__.has(value);
      }
      var _setCacheHas$1 = setCacheHas$3;
      function SetCache$3(values2) {
        var index2 = -1, length = values2 == null ? 0 : values2.length;
        this.__data__ = new _MapCache$2();
        while (++index2 < length) {
          this.add(values2[index2]);
        }
      }
      SetCache$3.prototype.add = SetCache$3.prototype.push = _setCacheAdd$1;
      SetCache$3.prototype.has = _setCacheHas$1;
      var _SetCache$1 = SetCache$3;
      function arraySome$3(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (predicate(array[index2], index2, array)) {
            return true;
          }
        }
        return false;
      }
      var _arraySome$1 = arraySome$3;
      function cacheHas$3(cache, key) {
        return cache.has(key);
      }
      var _cacheHas$1 = cacheHas$3;
      var COMPARE_PARTIAL_FLAG$5$1 = 1, COMPARE_UNORDERED_FLAG$3$1 = 2;
      function equalArrays$4(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5$1, arrLength = array.length, othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$3$1 ? new _SetCache$1() : void 0;
        stack.set(array, other);
        stack.set(other, array);
        while (++index2 < arrLength) {
          var arrValue = array[index2], othValue = other[index2];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
          }
          if (compared !== void 0) {
            if (compared) {
              continue;
            }
            result = false;
            break;
          }
          if (seen) {
            if (!_arraySome$1(other, function(othValue2, othIndex) {
              if (!_cacheHas$1(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }
        stack["delete"](array);
        stack["delete"](other);
        return result;
      }
      var _equalArrays$1 = equalArrays$4;
      function mapToArray$3(map22) {
        var index2 = -1, result = Array(map22.size);
        map22.forEach(function(value, key) {
          result[++index2] = [key, value];
        });
        return result;
      }
      var _mapToArray$1 = mapToArray$3;
      function setToArray$3(set2) {
        var index2 = -1, result = Array(set2.size);
        set2.forEach(function(value) {
          result[++index2] = value;
        });
        return result;
      }
      var _setToArray$1 = setToArray$3;
      var COMPARE_PARTIAL_FLAG$4$1 = 1, COMPARE_UNORDERED_FLAG$2$1 = 2;
      var boolTag$2$2 = "[object Boolean]", dateTag$2$2 = "[object Date]", errorTag$1$2 = "[object Error]", mapTag$4$2 = "[object Map]", numberTag$2$2 = "[object Number]", regexpTag$2$2 = "[object RegExp]", setTag$4$2 = "[object Set]", stringTag$2$2 = "[object String]", symbolTag$3$1 = "[object Symbol]";
      var arrayBufferTag$2$2 = "[object ArrayBuffer]", dataViewTag$3$2 = "[object DataView]";
      var symbolProto$2$1 = _Symbol$2 ? _Symbol$2.prototype : void 0, symbolValueOf$1$1 = symbolProto$2$1 ? symbolProto$2$1.valueOf : void 0;
      function equalByTag$3(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag$3$2:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag$2$2:
            if (object.byteLength != other.byteLength || !equalFunc(new _Uint8Array$2(object), new _Uint8Array$2(other))) {
              return false;
            }
            return true;
          case boolTag$2$2:
          case dateTag$2$2:
          case numberTag$2$2:
            return eq_1$2(+object, +other);
          case errorTag$1$2:
            return object.name == other.name && object.message == other.message;
          case regexpTag$2$2:
          case stringTag$2$2:
            return object == other + "";
          case mapTag$4$2:
            var convert = _mapToArray$1;
          case setTag$4$2:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4$1;
            convert || (convert = _setToArray$1);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG$2$1;
            stack.set(object, other);
            var result = _equalArrays$1(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack["delete"](object);
            return result;
          case symbolTag$3$1:
            if (symbolValueOf$1$1) {
              return symbolValueOf$1$1.call(object) == symbolValueOf$1$1.call(other);
            }
        }
        return false;
      }
      var _equalByTag$1 = equalByTag$3;
      function arrayPush$5(array, values2) {
        var index2 = -1, length = values2.length, offset2 = array.length;
        while (++index2 < length) {
          array[offset2 + index2] = values2[index2];
        }
        return array;
      }
      var _arrayPush$2 = arrayPush$5;
      function baseGetAllKeys$5(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray_1$4(object) ? result : _arrayPush$2(result, symbolsFunc(object));
      }
      var _baseGetAllKeys$2 = baseGetAllKeys$5;
      function arrayFilter$4(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index2 < length) {
          var value = array[index2];
          if (predicate(value, index2, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      var _arrayFilter$2 = arrayFilter$4;
      function stubArray$5() {
        return [];
      }
      var stubArray_1$2 = stubArray$5;
      var objectProto$5$2 = Object.prototype;
      var propertyIsEnumerable$5 = objectProto$5$2.propertyIsEnumerable;
      var nativeGetSymbols$1$2 = Object.getOwnPropertySymbols;
      var getSymbols$7 = !nativeGetSymbols$1$2 ? stubArray_1$2 : function(object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return _arrayFilter$2(nativeGetSymbols$1$2(object), function(symbol) {
          return propertyIsEnumerable$5.call(object, symbol);
        });
      };
      var _getSymbols$2 = getSymbols$7;
      var nativeKeys$5 = _overArg$2(Object.keys, Object);
      var _nativeKeys$2 = nativeKeys$5;
      var objectProto$4$2 = Object.prototype;
      var hasOwnProperty$4$3 = objectProto$4$2.hasOwnProperty;
      function baseKeys$4(object) {
        if (!_isPrototype$2(object)) {
          return _nativeKeys$2(object);
        }
        var result = [];
        for (var key in Object(object)) {
          if (hasOwnProperty$4$3.call(object, key) && key != "constructor") {
            result.push(key);
          }
        }
        return result;
      }
      var _baseKeys$2 = baseKeys$4;
      function keys$a(object) {
        return isArrayLike_1$2(object) ? _arrayLikeKeys$2(object) : _baseKeys$2(object);
      }
      var keys_1$2 = keys$a;
      function getAllKeys$5(object) {
        return _baseGetAllKeys$2(object, keys_1$2, _getSymbols$2);
      }
      var _getAllKeys$2 = getAllKeys$5;
      var COMPARE_PARTIAL_FLAG$3$1 = 1;
      var objectProto$3$2 = Object.prototype;
      var hasOwnProperty$3$2 = objectProto$3$2.hasOwnProperty;
      function equalObjects$3(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3$1, objProps = _getAllKeys$2(object), objLength = objProps.length, othProps = _getAllKeys$2(other), othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index2 = objLength;
        while (index2--) {
          var key = objProps[index2];
          if (!(isPartial ? key in other : hasOwnProperty$3$2.call(other, key))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index2 < objLength) {
          key = objProps[index2];
          var objValue = object[key], othValue = other[key];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }
          if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }
          skipCtor || (skipCtor = key == "constructor");
        }
        if (result && !skipCtor) {
          var objCtor = object.constructor, othCtor = other.constructor;
          if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
            result = false;
          }
        }
        stack["delete"](object);
        stack["delete"](other);
        return result;
      }
      var _equalObjects$1 = equalObjects$3;
      var DataView$6 = _getNative$3(_root$2, "DataView");
      var _DataView$3 = DataView$6;
      var Promise$1$3 = _getNative$3(_root$2, "Promise");
      var _Promise$3 = Promise$1$3;
      var Set$7 = _getNative$3(_root$2, "Set");
      var _Set$3 = Set$7;
      var WeakMap$1$1 = _getNative$3(_root$2, "WeakMap");
      var _WeakMap$3 = WeakMap$1$1;
      var mapTag$3$3 = "[object Map]", objectTag$2$2 = "[object Object]", promiseTag$4 = "[object Promise]", setTag$3$3 = "[object Set]", weakMapTag$1$3 = "[object WeakMap]";
      var dataViewTag$2$3 = "[object DataView]";
      var dataViewCtorString$4 = _toSource$3(_DataView$3), mapCtorString$4 = _toSource$3(_Map$3), promiseCtorString$4 = _toSource$3(_Promise$3), setCtorString$4 = _toSource$3(_Set$3), weakMapCtorString$4 = _toSource$3(_WeakMap$3);
      var getTag$9 = _baseGetTag$2;
      if (_DataView$3 && getTag$9(new _DataView$3(new ArrayBuffer(1))) != dataViewTag$2$3 || _Map$3 && getTag$9(new _Map$3()) != mapTag$3$3 || _Promise$3 && getTag$9(_Promise$3.resolve()) != promiseTag$4 || _Set$3 && getTag$9(new _Set$3()) != setTag$3$3 || _WeakMap$3 && getTag$9(new _WeakMap$3()) != weakMapTag$1$3) {
        getTag$9 = function(value) {
          var result = _baseGetTag$2(value), Ctor = result == objectTag$2$2 ? value.constructor : void 0, ctorString = Ctor ? _toSource$3(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString$4:
                return dataViewTag$2$3;
              case mapCtorString$4:
                return mapTag$3$3;
              case promiseCtorString$4:
                return promiseTag$4;
              case setCtorString$4:
                return setTag$3$3;
              case weakMapCtorString$4:
                return weakMapTag$1$3;
            }
          }
          return result;
        };
      }
      var _getTag$2 = getTag$9;
      var COMPARE_PARTIAL_FLAG$2$1 = 1;
      var argsTag$1$2 = "[object Arguments]", arrayTag$1$2 = "[object Array]", objectTag$1$3 = "[object Object]";
      var objectProto$2$2 = Object.prototype;
      var hasOwnProperty$2$2 = objectProto$2$2.hasOwnProperty;
      function baseIsEqualDeep$3(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray_1$4(object), othIsArr = isArray_1$4(other), objTag = objIsArr ? arrayTag$1$2 : _getTag$2(object), othTag = othIsArr ? arrayTag$1$2 : _getTag$2(other);
        objTag = objTag == argsTag$1$2 ? objectTag$1$3 : objTag;
        othTag = othTag == argsTag$1$2 ? objectTag$1$3 : othTag;
        var objIsObj = objTag == objectTag$1$3, othIsObj = othTag == objectTag$1$3, isSameTag = objTag == othTag;
        if (isSameTag && isBuffer_1$1(object)) {
          if (!isBuffer_1$1(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new _Stack$2());
          return objIsArr || isTypedArray_1$2(object) ? _equalArrays$1(object, other, bitmask, customizer, equalFunc, stack) : _equalByTag$1(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG$2$1)) {
          var objIsWrapped = objIsObj && hasOwnProperty$2$2.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$2$2.call(other, "__wrapped__");
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new _Stack$2());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new _Stack$2());
        return _equalObjects$1(object, other, bitmask, customizer, equalFunc, stack);
      }
      var _baseIsEqualDeep$1 = baseIsEqualDeep$3;
      function baseIsEqual$4(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }
        if (value == null || other == null || !isObjectLike_1$2(value) && !isObjectLike_1$2(other)) {
          return value !== value && other !== other;
        }
        return _baseIsEqualDeep$1(value, other, bitmask, customizer, baseIsEqual$4, stack);
      }
      var _baseIsEqual$1 = baseIsEqual$4;
      var COMPARE_PARTIAL_FLAG$1$1 = 1, COMPARE_UNORDERED_FLAG$1$1 = 2;
      function baseIsMatch$3(object, source, matchData, customizer) {
        var index2 = matchData.length, length = index2, noCustomizer = !customizer;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (index2--) {
          var data = matchData[index2];
          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }
        while (++index2 < length) {
          data = matchData[index2];
          var key = data[0], objValue = object[key], srcValue = data[1];
          if (noCustomizer && data[2]) {
            if (objValue === void 0 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new _Stack$2();
            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }
            if (!(result === void 0 ? _baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$1$1 | COMPARE_UNORDERED_FLAG$1$1, customizer, stack) : result)) {
              return false;
            }
          }
        }
        return true;
      }
      var _baseIsMatch$1 = baseIsMatch$3;
      function isStrictComparable$4(value) {
        return value === value && !isObject_1$2(value);
      }
      var _isStrictComparable$1 = isStrictComparable$4;
      function getMatchData$3(object) {
        var result = keys_1$2(object), length = result.length;
        while (length--) {
          var key = result[length], value = object[key];
          result[length] = [key, value, _isStrictComparable$1(value)];
        }
        return result;
      }
      var _getMatchData$1 = getMatchData$3;
      function matchesStrictComparable$4(key, srcValue) {
        return function(object) {
          if (object == null) {
            return false;
          }
          return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
        };
      }
      var _matchesStrictComparable$1 = matchesStrictComparable$4;
      function baseMatches$3(source) {
        var matchData = _getMatchData$1(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return _matchesStrictComparable$1(matchData[0][0], matchData[0][1]);
        }
        return function(object) {
          return object === source || _baseIsMatch$1(object, source, matchData);
        };
      }
      var _baseMatches$1 = baseMatches$3;
      var symbolTag$2$1 = "[object Symbol]";
      function isSymbol$4(value) {
        return typeof value == "symbol" || isObjectLike_1$2(value) && _baseGetTag$2(value) == symbolTag$2$1;
      }
      var isSymbol_1 = isSymbol$4;
      var reIsDeepProp$2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp$2 = /^\w*$/;
      function isKey$5(value, object) {
        if (isArray_1$4(value)) {
          return false;
        }
        var type = typeof value;
        if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol_1(value)) {
          return true;
        }
        return reIsPlainProp$2.test(value) || !reIsDeepProp$2.test(value) || object != null && value in Object(object);
      }
      var _isKey$1 = isKey$5;
      var FUNC_ERROR_TEXT$4 = "Expected a function";
      function memoize$3(func, resolver2) {
        if (typeof func != "function" || resolver2 != null && typeof resolver2 != "function") {
          throw new TypeError(FUNC_ERROR_TEXT$4);
        }
        var memoized = function() {
          var args = arguments, key = resolver2 ? resolver2.apply(this, args) : args[0], cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };
        memoized.cache = new (memoize$3.Cache || _MapCache$2)();
        return memoized;
      }
      memoize$3.Cache = _MapCache$2;
      var memoize_1$1 = memoize$3;
      var MAX_MEMOIZE_SIZE$2 = 500;
      function memoizeCapped$3(func) {
        var result = memoize_1$1(func, function(key) {
          if (cache.size === MAX_MEMOIZE_SIZE$2) {
            cache.clear();
          }
          return key;
        });
        var cache = result.cache;
        return result;
      }
      var _memoizeCapped$1 = memoizeCapped$3;
      var rePropName$2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reEscapeChar$2 = /\\(\\)?/g;
      var stringToPath$4 = _memoizeCapped$1(function(string2) {
        var result = [];
        if (string2.charCodeAt(0) === 46) {
          result.push("");
        }
        string2.replace(rePropName$2, function(match5, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar$2, "$1") : number || match5);
        });
        return result;
      });
      var _stringToPath$1 = stringToPath$4;
      var INFINITY$1$1 = 1 / 0;
      var symbolProto$1$1 = _Symbol$2 ? _Symbol$2.prototype : void 0, symbolToString$2 = symbolProto$1$1 ? symbolProto$1$1.toString : void 0;
      function baseToString$3(value) {
        if (typeof value == "string") {
          return value;
        }
        if (isArray_1$4(value)) {
          return _arrayMap$1(value, baseToString$3) + "";
        }
        if (isSymbol_1(value)) {
          return symbolToString$2 ? symbolToString$2.call(value) : "";
        }
        var result = value + "";
        return result == "0" && 1 / value == -INFINITY$1$1 ? "-0" : result;
      }
      var _baseToString$1 = baseToString$3;
      function toString$5(value) {
        return value == null ? "" : _baseToString$1(value);
      }
      var toString_1$1 = toString$5;
      function castPath$4(value, object) {
        if (isArray_1$4(value)) {
          return value;
        }
        return _isKey$1(value, object) ? [value] : _stringToPath$1(toString_1$1(value));
      }
      var _castPath$1 = castPath$4;
      var INFINITY$4 = 1 / 0;
      function toKey$6(value) {
        if (typeof value == "string" || isSymbol_1(value)) {
          return value;
        }
        var result = value + "";
        return result == "0" && 1 / value == -INFINITY$4 ? "-0" : result;
      }
      var _toKey$1 = toKey$6;
      function baseGet$4(object, path) {
        path = _castPath$1(path, object);
        var index2 = 0, length = path.length;
        while (object != null && index2 < length) {
          object = object[_toKey$1(path[index2++])];
        }
        return index2 && index2 == length ? object : void 0;
      }
      var _baseGet$1 = baseGet$4;
      function get$7(object, path, defaultValue) {
        var result = object == null ? void 0 : _baseGet$1(object, path);
        return result === void 0 ? defaultValue : result;
      }
      var get_1$1 = get$7;
      function baseHasIn$3(object, key) {
        return object != null && key in Object(object);
      }
      var _baseHasIn$1 = baseHasIn$3;
      function hasPath$3(object, path, hasFunc) {
        path = _castPath$1(path, object);
        var index2 = -1, length = path.length, result = false;
        while (++index2 < length) {
          var key = _toKey$1(path[index2]);
          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }
          object = object[key];
        }
        if (result || ++index2 != length) {
          return result;
        }
        length = object == null ? 0 : object.length;
        return !!length && isLength_1$2(length) && _isIndex$2(key, length) && (isArray_1$4(object) || isArguments_1$2(object));
      }
      var _hasPath$1 = hasPath$3;
      function hasIn$3(object, path) {
        return object != null && _hasPath$1(object, path, _baseHasIn$1);
      }
      var hasIn_1$1 = hasIn$3;
      var COMPARE_PARTIAL_FLAG$c = 1, COMPARE_UNORDERED_FLAG$8 = 2;
      function baseMatchesProperty$3(path, srcValue) {
        if (_isKey$1(path) && _isStrictComparable$1(srcValue)) {
          return _matchesStrictComparable$1(_toKey$1(path), srcValue);
        }
        return function(object) {
          var objValue = get_1$1(object, path);
          return objValue === void 0 && objValue === srcValue ? hasIn_1$1(object, path) : _baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$c | COMPARE_UNORDERED_FLAG$8);
        };
      }
      var _baseMatchesProperty$1 = baseMatchesProperty$3;
      function baseProperty$3(key) {
        return function(object) {
          return object == null ? void 0 : object[key];
        };
      }
      var _baseProperty$1 = baseProperty$3;
      function basePropertyDeep$3(path) {
        return function(object) {
          return _baseGet$1(object, path);
        };
      }
      var _basePropertyDeep$1 = basePropertyDeep$3;
      function property$3(path) {
        return _isKey$1(path) ? _baseProperty$1(_toKey$1(path)) : _basePropertyDeep$1(path);
      }
      var property_1$1 = property$3;
      function baseIteratee$3(value) {
        if (typeof value == "function") {
          return value;
        }
        if (value == null) {
          return identity_1$1;
        }
        if (typeof value == "object") {
          return isArray_1$4(value) ? _baseMatchesProperty$1(value[0], value[1]) : _baseMatches$1(value);
        }
        return property_1$1(value);
      }
      var _baseIteratee$1 = baseIteratee$3;
      function baseForOwn$4(object, iteratee) {
        return object && _baseFor$1(object, iteratee, keys_1$2);
      }
      var _baseForOwn$1 = baseForOwn$4;
      function createBaseEach$3(eachFunc, fromRight) {
        return function(collection, iteratee) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike_1$2(collection)) {
            return eachFunc(collection, iteratee);
          }
          var length = collection.length, index2 = fromRight ? length : -1, iterable = Object(collection);
          while (fromRight ? index2-- : ++index2 < length) {
            if (iteratee(iterable[index2], index2, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }
      var _createBaseEach$1 = createBaseEach$3;
      var baseEach$4 = _createBaseEach$1(_baseForOwn$1);
      var _baseEach$1 = baseEach$4;
      function baseMap$3(collection, iteratee) {
        var index2 = -1, result = isArrayLike_1$2(collection) ? Array(collection.length) : [];
        _baseEach$1(collection, function(value, key, collection2) {
          result[++index2] = iteratee(value, key, collection2);
        });
        return result;
      }
      var _baseMap$1 = baseMap$3;
      function map$3(collection, iteratee) {
        var func = isArray_1$4(collection) ? _arrayMap$1 : _baseMap$1;
        return func(collection, _baseIteratee$1(iteratee));
      }
      var map_1$1 = map$3;
      const getEditorString = (editor, at, options) => at ? Editor$1.string(editor, at, options) : "";
      const getPoint = (editor, at, options) => Editor$1.point(editor, at, options);
      const getPointBefore = (editor, at, options) => Editor$1.before(editor, at, options);
      const isRangeAcrossBlocks = (editor, {
        at,
        ...options
      } = {}) => {
        if (!at)
          at = editor.selection;
        if (!at)
          return false;
        const [start, end] = Range.edges(at);
        const startBlock = getBlockAbove(editor, {
          at: start,
          ...options
        });
        const endBlock = getBlockAbove(editor, {
          at: end,
          ...options
        });
        return startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);
      };
      const getPointBeforeLocation = (editor, at, options) => {
        if (!options || !options.match && !options.matchString) {
          return getPointBefore(editor, at, options);
        }
        const unitOffset = !options.unit || options.unit === "offset";
        const matchStrings = options.matchString ? castArray_1$2(options.matchString) : [""];
        let point2;
        matchStrings.some((matchString) => {
          let beforeAt = at;
          let previousBeforePoint = getPoint(editor, at, {
            edge: "end"
          });
          const stackLength = matchString.length + 1;
          const stack = Array(stackLength);
          let count = 0;
          while (true) {
            var _options$match;
            const beforePoint = getPointBefore(editor, beforeAt, options);
            if (!beforePoint)
              return;
            if (isRangeAcrossBlocks(editor, {
              at: {
                anchor: beforePoint,
                focus: previousBeforePoint
              }
            })) {
              return;
            }
            const beforeString = getEditorString(editor, {
              anchor: beforePoint,
              focus: previousBeforePoint
            });
            let beforeStringToMatch = beforeString;
            if (unitOffset && stackLength) {
              stack.unshift({
                point: beforePoint,
                text: beforeString
              });
              stack.pop();
              beforeStringToMatch = map_1$1(stack.slice(0, -1), "text").join("");
            }
            if (matchString === beforeStringToMatch || (_options$match = options.match) !== null && _options$match !== void 0 && _options$match.call(options, {
              beforeString: beforeStringToMatch,
              beforePoint,
              at
            })) {
              if (options.afterMatch) {
                if (stackLength && unitOffset) {
                  var _stack;
                  point2 = (_stack = stack[stack.length - 1]) === null || _stack === void 0 ? void 0 : _stack.point;
                  return !!point2;
                }
                point2 = previousBeforePoint;
                return true;
              }
              point2 = beforePoint;
              return true;
            }
            previousBeforePoint = beforePoint;
            beforeAt = beforePoint;
            count += 1;
            if (!options.skipInvalid) {
              if (!matchString || count > matchString.length)
                return;
            }
          }
        });
        return point2;
      };
      const getPointFromLocation = (editor, {
        at = editor.selection,
        focus
      } = {}) => {
        let point2;
        if (Range.isRange(at))
          point2 = !focus ? at.anchor : at.focus;
        if (Point.isPoint(at))
          point2 = at;
        if (Path.isPath(at))
          point2 = {
            path: at,
            offset: 0
          };
        return point2;
      };
      const getPointAfter = (editor, at, options) => Editor$1.after(editor, at, options);
      const getVoidNode = (editor, options) => Editor$1.void(editor, options);
      const getPreviousNode = (editor, options) => Editor$1.previous(editor, options);
      const queryNode = (entry, {
        filter,
        allow,
        exclude
      } = {}) => {
        if (!entry)
          return false;
        if (filter && !filter(entry)) {
          return false;
        }
        if (allow) {
          const allows = castArray_1$2(allow);
          if (allows.length && !allows.includes(entry[0].type)) {
            return false;
          }
        }
        if (exclude) {
          const excludes = castArray_1$2(exclude);
          if (excludes.length && excludes.includes(entry[0].type)) {
            return false;
          }
        }
        return true;
      };
      const getPreviousPath = (path) => {
        if (path.length === 0)
          return;
        const last2 = path[path.length - 1];
        if (last2 <= 0)
          return;
        return path.slice(0, -1).concat(last2 - 1);
      };
      const getRangeBefore = (editor, at, options) => {
        const anchor = getPointBeforeLocation(editor, at, options);
        if (!anchor)
          return;
        const focus = getPoint(editor, at, {
          edge: "end"
        });
        return {
          anchor,
          focus
        };
      };
      const getStartPoint = (editor, at) => Editor$1.start(editor, at);
      const getRangeFromBlockStart = (editor, options = {}) => {
        var _getBlockAbove;
        const path = (_getBlockAbove = getBlockAbove(editor, options)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];
        if (!path)
          return;
        const start = getStartPoint(editor, path);
        const focus = getPointFromLocation(editor, options);
        if (!focus)
          return;
        return {
          anchor: start,
          focus
        };
      };
      const hasSingleChild = (node) => {
        if (isText(node)) {
          return true;
        }
        return node.children.length === 1 && hasSingleChild(node.children[0]);
      };
      const isInline = (editor, value) => Editor$1.isInline(editor, value);
      const getNodeString = (node) => Node$1.string(node);
      const isAncestorEmpty = (editor, node) => !getNodeString(node) && !node.children.some((n22) => isInline(editor, n22));
      const isBlockAboveEmpty = (editor) => {
        var _getBlockAbove;
        const block = (_getBlockAbove = getBlockAbove(editor)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[0];
        if (!block)
          return false;
        return isAncestorEmpty(editor, block);
      };
      const getParentNode = (editor, at, options) => {
        try {
          return Editor$1.parent(editor, at, options);
        } catch (err) {
        }
      };
      const isEndPoint = (editor, point2, at) => !!point2 && Editor$1.isEnd(editor, point2, at);
      const isBlockTextEmptyAfterSelection = (editor) => {
        if (!editor.selection)
          return false;
        const blockAbove = getBlockAbove(editor);
        if (!blockAbove)
          return false;
        const cursor = editor.selection.focus;
        const selectionParentEntry = getParentNode(editor, editor.selection);
        if (!selectionParentEntry)
          return false;
        const [, selectionParentPath] = selectionParentEntry;
        if (!isEndPoint(editor, cursor, selectionParentPath))
          return false;
        const siblingNodes = getNextSiblingNodes(blockAbove, cursor.path);
        if (siblingNodes.length) {
          for (const siblingNode of siblingNodes) {
            if (isText(siblingNode) && siblingNode.text) {
              return false;
            }
          }
        } else {
          return isEndPoint(editor, cursor, blockAbove[1]);
        }
        return true;
      };
      const isFirstChild = (path) => path[path.length - 1] === 0;
      const isMarkActive = (editor, type) => {
        return isDefined$1(getMark(editor, type));
      };
      const getRange = (editor, at, to22) => Editor$1.range(editor, at, to22);
      const isSelectionAtBlockEnd = (editor) => {
        var _getBlockAbove, _editor$selection;
        const path = (_getBlockAbove = getBlockAbove(editor)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];
        return !!path && isEndPoint(editor, (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.focus, path);
      };
      const isStartPoint = (editor, point2, at) => !!point2 && Editor$1.isStart(editor, point2, at);
      const isSelectionAtBlockStart = (editor, options) => {
        var _getBlockAbove, _editor$selection;
        const path = (_getBlockAbove = getBlockAbove(editor, options)) === null || _getBlockAbove === void 0 ? void 0 : _getBlockAbove[1];
        return !!path && isStartPoint(editor, (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.focus, path);
      };
      const isExpanded = (range) => !!range && Range.isExpanded(range);
      const getNode = (root2, path) => {
        try {
          return Node$1.get(root2, path);
        } catch (err) {
          return null;
        }
      };
      const isType = (editor, node, key) => {
        const keys2 = castArray_1$2(key);
        const types = [];
        keys2.forEach((_key) => types.push(getPluginType(editor, _key)));
        return types.includes(node === null || node === void 0 ? void 0 : node.type);
      };
      const someNode = (editor, options) => {
        return !!findNode(editor, options);
      };
      const applyDeepToNodes = ({
        node,
        source,
        apply: apply2,
        query
      }) => {
        const entry = [node, []];
        if (queryNode(entry, query)) {
          if (source instanceof Function) {
            apply2(node, source());
          } else {
            apply2(node, source);
          }
        }
        if (!isAncestor(node))
          return;
        node.children.forEach((child) => {
          applyDeepToNodes({
            node: child,
            source,
            apply: apply2,
            query
          });
        });
      };
      const mergeDeepToNodes = (options) => {
        applyDeepToNodes({
          ...options,
          apply: merge_1$1
        });
      };
      const pipeDeserializeHtmlLeaf = (editor, element) => {
        let node = {};
        [...editor.plugins].reverse().forEach((plugin) => {
          const deserialized = pluginDeserializeHtml(editor, plugin, {
            element,
            deserializeLeaf: true
          });
          if (!deserialized)
            return;
          node = {
            ...node,
            ...deserialized.node
          };
        });
        return node;
      };
      const htmlElementToLeaf = (editor, element) => {
        const node = pipeDeserializeHtmlLeaf(editor, element);
        return deserializeHtmlNodeChildren(editor, element).reduce((arr, child) => {
          if (!child)
            return arr;
          if (isElement(child)) {
            if (Object.keys(node).length) {
              mergeDeepToNodes({
                node: child,
                source: node,
                query: {
                  filter: ([n22]) => isText(n22)
                }
              });
            }
            arr.push(child);
          } else {
            const attributes = {
              ...node
            };
            if (isText(child) && child.text) {
              Object.keys(attributes).forEach((key) => {
                if (attributes[key] && child[key]) {
                  attributes[key] = child[key];
                }
              });
            }
            arr.push(jsx("text", attributes, child));
          }
          return arr;
        }, []);
      };
      const isHtmlText = (node) => node.nodeType === Node.TEXT_NODE;
      const htmlTextNodeToString = (node) => {
        if (isHtmlText(node)) {
          return node.nodeValue === "\n" ? null : node.textContent;
        }
      };
      const isHtmlElement = (node) => node.nodeType === Node.ELEMENT_NODE;
      const deserializeHtmlNode = (editor) => (node) => {
        const textNode = htmlTextNodeToString(node);
        if (textNode)
          return textNode;
        if (!isHtmlElement(node))
          return null;
        const breakLine = htmlBrToNewLine(node);
        if (breakLine)
          return breakLine;
        const fragment = htmlBodyToFragment(editor, node);
        if (fragment)
          return fragment;
        const element = htmlElementToElement(editor, node);
        if (element)
          return element;
        return htmlElementToLeaf(editor, node);
      };
      const deserializeHtmlElement = (editor, element) => {
        return deserializeHtmlNode(editor)(element);
      };
      const htmlStringToDOMNode = (rawHtml, stripWhitespace = true) => {
        const node = document.createElement("body");
        node.innerHTML = rawHtml;
        if (stripWhitespace) {
          node.innerHTML = node.innerHTML.replace(/(\r\n|\n|\r|\t)/gm, "");
        }
        return node;
      };
      const deserializeHtml = (editor, {
        element,
        stripWhitespace = true
      }) => {
        if (typeof element === "string") {
          element = htmlStringToDOMNode(element, stripWhitespace);
        }
        const fragment = deserializeHtmlElement(editor, element);
        return normalizeDescendantsToDocumentFragment(editor, {
          descendants: fragment
        });
      };
      const parseHtmlDocument = (html) => {
        return new DOMParser().parseFromString(html, "text/html");
      };
      const KEY_DESERIALIZE_HTML = "deserializeHtml";
      const createDeserializeHtmlPlugin = createPluginFactory({
        key: KEY_DESERIALIZE_HTML,
        then: (editor) => ({
          editor: {
            insertData: {
              format: "text/html",
              getFragment: ({
                data
              }) => {
                const document2 = parseHtmlDocument(data);
                return deserializeHtml(editor, {
                  element: document2.body
                });
              }
            }
          }
        })
      });
      atom(null);
      const getEventEditorId = (id2) => {
        var _eventEditorSelectors;
        if (id2)
          return id2;
        const focus = eventEditorSelectors.focus();
        if (focus)
          return focus;
        const blur = eventEditorSelectors.blur();
        if (blur)
          return blur;
        return (_eventEditorSelectors = eventEditorSelectors.last()) !== null && _eventEditorSelectors !== void 0 ? _eventEditorSelectors : "main";
      };
      const loadingStore = createPlateStore({
        id: "loading"
      });
      const getPlateStore = (id2) => {
        id2 = getEventEditorId(id2);
        const store = platesStore.get.get(id2);
        return store || loadingStore;
      };
      const setPlateState = (draft, state) => {
        if (!isUndefined$3(state.onChange))
          draft.onChange = state.onChange;
        if (!isUndefined$3(state.plugins))
          draft.plugins = state.plugins;
        if (!isUndefined$3(state.editableProps))
          draft.editableProps = state.editableProps;
        if (!isUndefined$3(state.renderElement))
          draft.renderElement = state.renderElement;
        if (!isUndefined$3(state.renderLeaf))
          draft.renderLeaf = state.renderLeaf;
        if (!isUndefined$3(state.decorate))
          draft.decorate = state.decorate;
        if (!isUndefined$3(state.enabled))
          draft.enabled = state.enabled;
        if (!isUndefined$3(state.editor)) {
          draft.editor = state.editor;
          if (state.editor) {
            draft.value = state.editor.children;
          }
        }
        if (!isUndefined$3(state.initialValue))
          draft.value = state.initialValue;
        if (!isUndefined$3(state.value))
          draft.value = state.value;
        return draft;
      };
      const createPlatesStore = (initialState2 = {}) => createStore("plate")(initialState2).extendActions((set2) => ({
        set: (id2, state) => {
          set2.state((draft) => {
            if (!id2)
              return;
            let store = draft[id2];
            if (!store) {
              store = createPlateStore({
                id: id2,
                ...setPlateState({}, state !== null && state !== void 0 ? state : {})
              });
              draft[id2] = store;
              eventEditorActions.last(id2);
            }
          });
        },
        unset: (id2) => {
          set2.state((draft) => {
            delete draft[id2];
          });
        }
      })).extendSelectors((state) => ({
        get(id2) {
          return state[id2];
        },
        has(id2) {
          const ids = castArray_1$2(id2);
          return ids.every((_id) => !!state[_id]);
        }
      }));
      const platesStore = createPlatesStore({});
      platesStore.set;
      platesStore.get;
      platesStore.use;
      const getPlateActions = (id2) => getPlateStore(id2).set;
      function arrayAggregator(array, setter, iteratee, accumulator) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          var value = array[index2];
          setter(accumulator, value, iteratee(value), array);
        }
        return accumulator;
      }
      var _arrayAggregator = arrayAggregator;
      function baseAggregator(collection, setter, iteratee, accumulator) {
        _baseEach$1(collection, function(value, key, collection2) {
          setter(accumulator, value, iteratee(value), collection2);
        });
        return accumulator;
      }
      var _baseAggregator = baseAggregator;
      function createAggregator(setter, initializer) {
        return function(collection, iteratee) {
          var func = isArray_1$4(collection) ? _arrayAggregator : _baseAggregator, accumulator = initializer ? initializer() : {};
          return func(collection, setter, _baseIteratee$1(iteratee), accumulator);
        };
      }
      var _createAggregator = createAggregator;
      var keyBy = _createAggregator(function(result, value, key) {
        _baseAssignValue$2(result, key, value);
      });
      var keyBy_1 = keyBy;
      function baseValues(object, props) {
        return _arrayMap$1(props, function(key) {
          return object[key];
        });
      }
      var _baseValues = baseValues;
      function values(object) {
        return object == null ? [] : _baseValues(object, keys_1$2(object));
      }
      var values_1 = values;
      const mergeDeepPlugins = (editor, _plugin) => {
        const plugin = {
          ..._plugin
        };
        const {
          then
        } = plugin;
        if (then) {
          delete plugin.then;
          const {
            plugins: pluginPlugins
          } = plugin;
          const pluginThen = mergeDeepPlugins(editor, defaultsDeep_1(then(editor, plugin), plugin));
          if (pluginPlugins && pluginThen.plugins) {
            const merged = merge_1$1(keyBy_1(pluginPlugins, "key"), keyBy_1(pluginThen.plugins, "key"));
            pluginThen.plugins = values_1(merged);
          }
          return pluginThen;
        }
        return plugin;
      };
      const setDefaultPlugin = (plugin) => {
        if (plugin.type === void 0)
          plugin.type = plugin.key;
        if (!plugin.options)
          plugin.options = {};
        if (!plugin.inject)
          plugin.inject = {};
        if (!plugin.editor)
          plugin.editor = {};
        return plugin;
      };
      const flattenDeepPlugins = (editor, plugins) => {
        if (!plugins)
          return;
        plugins.forEach((plugin) => {
          let p22 = setDefaultPlugin(plugin);
          p22 = mergeDeepPlugins(editor, p22);
          if (!editor.pluginsByKey[p22.key]) {
            editor.plugins.push(p22);
            editor.pluginsByKey[p22.key] = p22;
          } else {
            const index2 = editor.plugins.indexOf(editor.pluginsByKey[p22.key]);
            const mergedPlugin = defaultsDeep_1(p22, editor.pluginsByKey[p22.key]);
            if (index2 >= 0) {
              editor.plugins[index2] = mergedPlugin;
            }
            editor.pluginsByKey[p22.key] = mergedPlugin;
          }
          flattenDeepPlugins(editor, p22.plugins);
        });
      };
      const setPlatePlugins = (editor, {
        disableCorePlugins,
        plugins: _plugins = []
      }) => {
        let plugins = [];
        if (disableCorePlugins !== true) {
          const dcp = disableCorePlugins;
          if (typeof dcp !== "object" || !dcp.react) {
            var _ref, _editor$pluginsByKey;
            plugins.push((_ref = (_editor$pluginsByKey = editor.pluginsByKey) === null || _editor$pluginsByKey === void 0 ? void 0 : _editor$pluginsByKey.react) !== null && _ref !== void 0 ? _ref : createReactPlugin());
          }
          if (typeof dcp !== "object" || !dcp.history) {
            var _ref2, _editor$pluginsByKey2;
            plugins.push((_ref2 = (_editor$pluginsByKey2 = editor.pluginsByKey) === null || _editor$pluginsByKey2 === void 0 ? void 0 : _editor$pluginsByKey2.history) !== null && _ref2 !== void 0 ? _ref2 : createHistoryPlugin());
          }
          if (typeof dcp !== "object" || !dcp.eventEditor) {
            var _ref3, _editor$pluginsByKey3;
            plugins.push((_ref3 = (_editor$pluginsByKey3 = editor.pluginsByKey) === null || _editor$pluginsByKey3 === void 0 ? void 0 : _editor$pluginsByKey3[KEY_EVENT_EDITOR]) !== null && _ref3 !== void 0 ? _ref3 : createEventEditorPlugin());
          }
          if (typeof dcp !== "object" || !dcp.inlineVoid) {
            var _ref4, _editor$pluginsByKey4;
            plugins.push((_ref4 = (_editor$pluginsByKey4 = editor.pluginsByKey) === null || _editor$pluginsByKey4 === void 0 ? void 0 : _editor$pluginsByKey4[KEY_INLINE_VOID]) !== null && _ref4 !== void 0 ? _ref4 : createInlineVoidPlugin());
          }
          if (typeof dcp !== "object" || !dcp.insertData) {
            var _ref5, _editor$pluginsByKey5;
            plugins.push((_ref5 = (_editor$pluginsByKey5 = editor.pluginsByKey) === null || _editor$pluginsByKey5 === void 0 ? void 0 : _editor$pluginsByKey5[KEY_INSERT_DATA]) !== null && _ref5 !== void 0 ? _ref5 : createInsertDataPlugin());
          }
          if (typeof dcp !== "object" || !dcp.deserializeHtml) {
            var _ref6, _editor$pluginsByKey6;
            plugins.push((_ref6 = (_editor$pluginsByKey6 = editor.pluginsByKey) === null || _editor$pluginsByKey6 === void 0 ? void 0 : _editor$pluginsByKey6[KEY_DESERIALIZE_HTML]) !== null && _ref6 !== void 0 ? _ref6 : createDeserializeHtmlPlugin());
          }
          if (typeof dcp !== "object" || !dcp.deserializeAst) {
            var _ref7, _editor$pluginsByKey7;
            plugins.push((_ref7 = (_editor$pluginsByKey7 = editor.pluginsByKey) === null || _editor$pluginsByKey7 === void 0 ? void 0 : _editor$pluginsByKey7[KEY_DESERIALIZE_AST]) !== null && _ref7 !== void 0 ? _ref7 : createDeserializeAstPlugin());
          }
        }
        plugins = [...plugins, ..._plugins];
        editor.plugins = [];
        editor.pluginsByKey = {};
        flattenDeepPlugins(editor, plugins);
        editor.plugins.forEach((plugin) => {
          if (plugin.overrideByKey) {
            const newPlugins = editor.plugins.map((p22) => {
              return overridePluginsByKey(p22, plugin.overrideByKey);
            });
            editor.plugins = [];
            editor.pluginsByKey = {};
            flattenDeepPlugins(editor, newPlugins);
          }
        });
        getPlateActions(editor.id).incrementKey("keyPlugins");
      };
      const withPlate = (e22, {
        id: id2 = "main",
        plugins = [],
        disableCorePlugins
      } = {}) => {
        let editor = e22;
        editor.id = id2;
        if (!editor.key) {
          editor.key = Math.random();
        }
        setPlatePlugins(editor, {
          plugins,
          disableCorePlugins
        });
        editor.plugins.forEach((plugin) => {
          if (plugin.withOverrides) {
            editor = plugin.withOverrides(editor, plugin);
          }
        });
        return editor;
      };
      function arrayEach$4(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (iteratee(array[index2], index2, array) === false) {
            break;
          }
        }
        return array;
      }
      var _arrayEach$2 = arrayEach$4;
      function baseAssign$3(object, source) {
        return object && _copyObject$2(source, keys_1$2(source), object);
      }
      var _baseAssign$2 = baseAssign$3;
      function baseAssignIn$3(object, source) {
        return object && _copyObject$2(source, keysIn_1$2(source), object);
      }
      var _baseAssignIn$2 = baseAssignIn$3;
      function copySymbols$3(source, object) {
        return _copyObject$2(source, _getSymbols$2(source), object);
      }
      var _copySymbols$2 = copySymbols$3;
      var nativeGetSymbols$4 = Object.getOwnPropertySymbols;
      var getSymbolsIn$4 = !nativeGetSymbols$4 ? stubArray_1$2 : function(object) {
        var result = [];
        while (object) {
          _arrayPush$2(result, _getSymbols$2(object));
          object = _getPrototype$2(object);
        }
        return result;
      };
      var _getSymbolsIn$2 = getSymbolsIn$4;
      function copySymbolsIn$3(source, object) {
        return _copyObject$2(source, _getSymbolsIn$2(source), object);
      }
      var _copySymbolsIn$2 = copySymbolsIn$3;
      function getAllKeysIn$3(object) {
        return _baseGetAllKeys$2(object, keysIn_1$2, _getSymbolsIn$2);
      }
      var _getAllKeysIn$2 = getAllKeysIn$3;
      var objectProto$1$2 = Object.prototype;
      var hasOwnProperty$1$2 = objectProto$1$2.hasOwnProperty;
      function initCloneArray$3(array) {
        var length = array.length, result = new array.constructor(length);
        if (length && typeof array[0] == "string" && hasOwnProperty$1$2.call(array, "index")) {
          result.index = array.index;
          result.input = array.input;
        }
        return result;
      }
      var _initCloneArray$2 = initCloneArray$3;
      function cloneDataView$3(dataView, isDeep) {
        var buffer2 = isDeep ? _cloneArrayBuffer$2(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer2, dataView.byteOffset, dataView.byteLength);
      }
      var _cloneDataView$2 = cloneDataView$3;
      var reFlags$2 = /\w*$/;
      function cloneRegExp$3(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags$2.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }
      var _cloneRegExp$2 = cloneRegExp$3;
      var symbolProto$7 = _Symbol$2 ? _Symbol$2.prototype : void 0, symbolValueOf$4 = symbolProto$7 ? symbolProto$7.valueOf : void 0;
      function cloneSymbol$3(symbol) {
        return symbolValueOf$4 ? Object(symbolValueOf$4.call(symbol)) : {};
      }
      var _cloneSymbol$2 = cloneSymbol$3;
      var boolTag$1$2 = "[object Boolean]", dateTag$1$2 = "[object Date]", mapTag$2$2 = "[object Map]", numberTag$1$2 = "[object Number]", regexpTag$1$2 = "[object RegExp]", setTag$2$2 = "[object Set]", stringTag$1$2 = "[object String]", symbolTag$1$2 = "[object Symbol]";
      var arrayBufferTag$1$2 = "[object ArrayBuffer]", dataViewTag$1$2 = "[object DataView]", float32Tag$1$2 = "[object Float32Array]", float64Tag$1$2 = "[object Float64Array]", int8Tag$1$2 = "[object Int8Array]", int16Tag$1$2 = "[object Int16Array]", int32Tag$1$2 = "[object Int32Array]", uint8Tag$1$2 = "[object Uint8Array]", uint8ClampedTag$1$2 = "[object Uint8ClampedArray]", uint16Tag$1$2 = "[object Uint16Array]", uint32Tag$1$2 = "[object Uint32Array]";
      function initCloneByTag$3(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag$1$2:
            return _cloneArrayBuffer$2(object);
          case boolTag$1$2:
          case dateTag$1$2:
            return new Ctor(+object);
          case dataViewTag$1$2:
            return _cloneDataView$2(object, isDeep);
          case float32Tag$1$2:
          case float64Tag$1$2:
          case int8Tag$1$2:
          case int16Tag$1$2:
          case int32Tag$1$2:
          case uint8Tag$1$2:
          case uint8ClampedTag$1$2:
          case uint16Tag$1$2:
          case uint32Tag$1$2:
            return _cloneTypedArray$2(object, isDeep);
          case mapTag$2$2:
            return new Ctor();
          case numberTag$1$2:
          case stringTag$1$2:
            return new Ctor(object);
          case regexpTag$1$2:
            return _cloneRegExp$2(object);
          case setTag$2$2:
            return new Ctor();
          case symbolTag$1$2:
            return _cloneSymbol$2(object);
        }
      }
      var _initCloneByTag$2 = initCloneByTag$3;
      var mapTag$1$2 = "[object Map]";
      function baseIsMap$3(value) {
        return isObjectLike_1$2(value) && _getTag$2(value) == mapTag$1$2;
      }
      var _baseIsMap$2 = baseIsMap$3;
      var nodeIsMap$2 = _nodeUtil$3 && _nodeUtil$3.isMap;
      var isMap$3 = nodeIsMap$2 ? _baseUnary$2(nodeIsMap$2) : _baseIsMap$2;
      var isMap_1$2 = isMap$3;
      var setTag$1$2 = "[object Set]";
      function baseIsSet$3(value) {
        return isObjectLike_1$2(value) && _getTag$2(value) == setTag$1$2;
      }
      var _baseIsSet$2 = baseIsSet$3;
      var nodeIsSet$2 = _nodeUtil$3 && _nodeUtil$3.isSet;
      var isSet$3 = nodeIsSet$2 ? _baseUnary$2(nodeIsSet$2) : _baseIsSet$2;
      var isSet_1$2 = isSet$3;
      var CLONE_DEEP_FLAG$2$1 = 1, CLONE_FLAT_FLAG$1$1 = 2, CLONE_SYMBOLS_FLAG$2$1 = 4;
      var argsTag$8 = "[object Arguments]", arrayTag$6 = "[object Array]", boolTag$7 = "[object Boolean]", dateTag$7 = "[object Date]", errorTag$6 = "[object Error]", funcTag$6 = "[object Function]", genTag$4 = "[object GeneratorFunction]", mapTag$a = "[object Map]", numberTag$7 = "[object Number]", objectTag$a = "[object Object]", regexpTag$7 = "[object RegExp]", setTag$a = "[object Set]", stringTag$8 = "[object String]", symbolTag$6 = "[object Symbol]", weakMapTag$6 = "[object WeakMap]";
      var arrayBufferTag$7 = "[object ArrayBuffer]", dataViewTag$9 = "[object DataView]", float32Tag$5 = "[object Float32Array]", float64Tag$5 = "[object Float64Array]", int8Tag$5 = "[object Int8Array]", int16Tag$5 = "[object Int16Array]", int32Tag$5 = "[object Int32Array]", uint8Tag$5 = "[object Uint8Array]", uint8ClampedTag$5 = "[object Uint8ClampedArray]", uint16Tag$5 = "[object Uint16Array]", uint32Tag$5 = "[object Uint32Array]";
      var cloneableTags$2 = {};
      cloneableTags$2[argsTag$8] = cloneableTags$2[arrayTag$6] = cloneableTags$2[arrayBufferTag$7] = cloneableTags$2[dataViewTag$9] = cloneableTags$2[boolTag$7] = cloneableTags$2[dateTag$7] = cloneableTags$2[float32Tag$5] = cloneableTags$2[float64Tag$5] = cloneableTags$2[int8Tag$5] = cloneableTags$2[int16Tag$5] = cloneableTags$2[int32Tag$5] = cloneableTags$2[mapTag$a] = cloneableTags$2[numberTag$7] = cloneableTags$2[objectTag$a] = cloneableTags$2[regexpTag$7] = cloneableTags$2[setTag$a] = cloneableTags$2[stringTag$8] = cloneableTags$2[symbolTag$6] = cloneableTags$2[uint8Tag$5] = cloneableTags$2[uint8ClampedTag$5] = cloneableTags$2[uint16Tag$5] = cloneableTags$2[uint32Tag$5] = true;
      cloneableTags$2[errorTag$6] = cloneableTags$2[funcTag$6] = cloneableTags$2[weakMapTag$6] = false;
      function baseClone$3(value, bitmask, customizer, key, object, stack) {
        var result, isDeep = bitmask & CLONE_DEEP_FLAG$2$1, isFlat = bitmask & CLONE_FLAT_FLAG$1$1, isFull = bitmask & CLONE_SYMBOLS_FLAG$2$1;
        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }
        if (result !== void 0) {
          return result;
        }
        if (!isObject_1$2(value)) {
          return value;
        }
        var isArr = isArray_1$4(value);
        if (isArr) {
          result = _initCloneArray$2(value);
          if (!isDeep) {
            return _copyArray$2(value, result);
          }
        } else {
          var tag = _getTag$2(value), isFunc = tag == funcTag$6 || tag == genTag$4;
          if (isBuffer_1$1(value)) {
            return _cloneBuffer$2(value, isDeep);
          }
          if (tag == objectTag$a || tag == argsTag$8 || isFunc && !object) {
            result = isFlat || isFunc ? {} : _initCloneObject$2(value);
            if (!isDeep) {
              return isFlat ? _copySymbolsIn$2(value, _baseAssignIn$2(result, value)) : _copySymbols$2(value, _baseAssign$2(result, value));
            }
          } else {
            if (!cloneableTags$2[tag]) {
              return object ? value : {};
            }
            result = _initCloneByTag$2(value, tag, isDeep);
          }
        }
        stack || (stack = new _Stack$2());
        var stacked = stack.get(value);
        if (stacked) {
          return stacked;
        }
        stack.set(value, result);
        if (isSet_1$2(value)) {
          value.forEach(function(subValue) {
            result.add(baseClone$3(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap_1$2(value)) {
          value.forEach(function(subValue, key2) {
            result.set(key2, baseClone$3(subValue, bitmask, customizer, key2, value, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? _getAllKeysIn$2 : _getAllKeys$2 : isFlat ? keysIn_1$2 : keys_1$2;
        var props = isArr ? void 0 : keysFunc(value);
        _arrayEach$2(props || value, function(subValue, key2) {
          if (props) {
            key2 = subValue;
            subValue = value[key2];
          }
          _assignValue$2(result, key2, baseClone$3(subValue, bitmask, customizer, key2, value, stack));
        });
        return result;
      }
      var _baseClone$2 = baseClone$3;
      const mockPlugin = (plugin) => ({
        key: "",
        type: "",
        editor: {},
        inject: {},
        options: {},
        ...plugin
      });
      createAtomStore({
        element: null
      }, {
        name: "element"
      });
      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : void 0;
      }
      var last_1 = last;
      function baseSlice(array, start, end) {
        var index2 = -1, length = array.length;
        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }
        end = end > length ? length : end;
        if (end < 0) {
          end += length;
        }
        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result = Array(length);
        while (++index2 < length) {
          result[index2] = array[index2 + start];
        }
        return result;
      }
      var _baseSlice = baseSlice;
      function parent(object, path) {
        return path.length < 2 ? object : _baseGet$1(object, _baseSlice(path, 0, -1));
      }
      var _parent = parent;
      function baseUnset(object, path) {
        path = _castPath$1(path, object);
        object = _parent(object, path);
        return object == null || delete object[_toKey$1(last_1(path))];
      }
      var _baseUnset = baseUnset;
      function customOmitClone(value) {
        return isPlainObject_1$1(value) ? void 0 : value;
      }
      var _customOmitClone = customOmitClone;
      var spreadableSymbol = _Symbol$2 ? _Symbol$2.isConcatSpreadable : void 0;
      function isFlattenable(value) {
        return isArray_1$4(value) || isArguments_1$2(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }
      var _isFlattenable = isFlattenable;
      function baseFlatten(array, depth, predicate, isStrict, result) {
        var index2 = -1, length = array.length;
        predicate || (predicate = _isFlattenable);
        result || (result = []);
        while (++index2 < length) {
          var value = array[index2];
          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
              _arrayPush$2(result, value);
            }
          } else if (!isStrict) {
            result[result.length] = value;
          }
        }
        return result;
      }
      var _baseFlatten = baseFlatten;
      function flatten$1(array) {
        var length = array == null ? 0 : array.length;
        return length ? _baseFlatten(array, 1) : [];
      }
      var flatten_1 = flatten$1;
      function flatRest(func) {
        return _setToString(_overRest(func, void 0, flatten_1), func + "");
      }
      var _flatRest = flatRest;
      var CLONE_DEEP_FLAG$3 = 1, CLONE_FLAT_FLAG$2 = 2, CLONE_SYMBOLS_FLAG$3 = 4;
      _flatRest(function(object, paths) {
        var result = {};
        if (object == null) {
          return result;
        }
        var isDeep = false;
        paths = _arrayMap$1(paths, function(path) {
          path = _castPath$1(path, object);
          isDeep || (isDeep = path.length > 1);
          return path;
        });
        _copyObject$2(object, _getAllKeysIn$2(object), result);
        if (isDeep) {
          result = _baseClone$2(result, CLONE_DEEP_FLAG$3 | CLONE_FLAT_FLAG$2 | CLONE_SYMBOLS_FLAG$3, _customOmitClone);
        }
        var length = paths.length;
        while (length--) {
          _baseUnset(result, paths[length]);
        }
        return result;
      });
      const setNodes = (editor, props, options) => Transforms.setNodes(editor, props, options);
      const setElements = (editor, props, options) => setNodes(editor, props, options);
      const toggleNodeType = (editor, options, editorNodesOptions) => {
        const {
          activeType,
          inactiveType = getPluginType(editor, ELEMENT_DEFAULT)
        } = options;
        if (!activeType || !editor.selection)
          return;
        const isActive = someNode(editor, {
          ...editorNodesOptions,
          match: {
            type: activeType
          }
        });
        if (isActive && activeType === inactiveType)
          return;
        setElements(editor, {
          type: isActive ? inactiveType : activeType
        });
      };
      const onKeyDownToggleElement = (editor, {
        type,
        options: {
          hotkey
        }
      }) => (e22) => {
        const defaultType = getPluginType(editor, ELEMENT_DEFAULT);
        if (!hotkey)
          return;
        const hotkeys = castArray_1$2(hotkey);
        for (const _hotkey of hotkeys) {
          if (isHotkey$6(_hotkey, e22)) {
            e22.preventDefault();
            toggleNodeType(editor, {
              activeType: type,
              inactiveType: defaultType
            });
            return;
          }
        }
      };
      const unsetNodes = (editor, props, options) => {
        return Transforms.unsetNodes(editor, props, options);
      };
      const removeMark = (editor, {
        key,
        at,
        shouldChange = true,
        ...rest
      }) => {
        const selection = at !== null && at !== void 0 ? at : editor.selection;
        key = castArray_1$2(key);
        if (selection) {
          if (Range.isRange(selection) && Range.isExpanded(selection)) {
            unsetNodes(editor, key, {
              at: selection,
              match: isText,
              split: true,
              ...rest
            });
          } else if (editor.selection) {
            const marks = {
              ...getMarks(editor) || {}
            };
            key.forEach((k22) => {
              delete marks[k22];
            });
            editor.marks = marks;
            shouldChange && editor.onChange();
          }
        }
      };
      const toggleMark = (editor, {
        key,
        clear
      }) => {
        if (!editor.selection)
          return;
        withoutNormalizing(editor, () => {
          const isActive = isMarkActive(editor, key);
          if (isActive) {
            removeMark(editor, {
              key
            });
            return;
          }
          if (clear) {
            const clears = castArray_1$2(clear);
            removeMark(editor, {
              key: clears
            });
          }
          editor.addMark(key, true);
        });
      };
      const onKeyDownToggleMark = (editor, {
        type,
        options: {
          hotkey,
          clear
        }
      }) => (e22) => {
        if (!hotkey)
          return;
        if (isHotkey$6(hotkey, e22)) {
          e22.preventDefault();
          toggleMark(editor, {
            key: type,
            clear
          });
        }
      };
      const traverseHtmlNode = (node, callback) => {
        const keepTraversing = callback(node);
        if (!keepTraversing) {
          return;
        }
        let child = node.firstChild;
        while (child) {
          const currentChild = child;
          const previousChild = child.previousSibling;
          child = child.nextSibling;
          traverseHtmlNode(currentChild, callback);
          if (!currentChild.previousSibling && !currentChild.nextSibling && !currentChild.parentNode && child && previousChild !== child.previousSibling && child.parentNode) {
            if (previousChild) {
              child = previousChild.nextSibling;
            } else {
              child = node.firstChild;
            }
          } else if (!currentChild.previousSibling && !currentChild.nextSibling && !currentChild.parentNode && child && !child.previousSibling && !child.nextSibling && !child.parentNode) {
            if (previousChild) {
              if (previousChild.nextSibling) {
                child = previousChild.nextSibling.nextSibling;
              } else {
                child = null;
              }
            } else if (node.firstChild) {
              child = node.firstChild.nextSibling;
            }
          }
        }
      };
      const traverseHtmlElements = (rootNode, callback) => {
        traverseHtmlNode(rootNode, (node) => {
          if (!isHtmlElement(node)) {
            return true;
          }
          return callback(node);
        });
      };
      const findHtmlElement = (rootNode, predicate) => {
        let res = null;
        traverseHtmlElements(rootNode, (node) => {
          if (predicate(node)) {
            res = node;
            return false;
          }
          return true;
        });
        return res;
      };
      const someHtmlElement = (rootNode, predicate) => {
        return !!findHtmlElement(rootNode, predicate);
      };
      const createPathRef = (editor, at, options) => Editor$1.pathRef(editor, at, options);
      const createPointRef = (editor, point2, options) => Editor$1.pointRef(editor, point2, options);
      const deleteBackward = (editor, options) => Editor$1.deleteBackward(editor, options);
      const isElementEmpty = (editor, element) => Editor$1.isEmpty(editor, element);
      const deleteText = (editor, options) => {
        Transforms.delete(editor, options);
      };
      const moveNodes = (editor, options) => Transforms.moveNodes(editor, options);
      const removeNodes = (editor, options) => Transforms.removeNodes(editor, options);
      const select = (editor, target) => {
        Transforms.select(editor, target);
      };
      const mergeNodes = (editor, options = {}) => {
        withoutNormalizing(editor, () => {
          let {
            match: match5,
            at = editor.selection
          } = options;
          const {
            mergeNode,
            removeEmptyAncestor,
            hanging = false,
            voids = false,
            mode = "lowest"
          } = options;
          if (!at) {
            return;
          }
          if (match5 == null) {
            if (Path.isPath(at)) {
              const [parent2] = getParentNode(editor, at);
              match5 = (n22) => parent2.children.includes(n22);
            } else {
              match5 = (n22) => isBlock(editor, n22);
            }
          }
          if (!hanging && Range.isRange(at)) {
            at = Editor$1.unhangRange(editor, at);
          }
          if (Range.isRange(at)) {
            if (Range.isCollapsed(at)) {
              at = at.anchor;
            } else {
              const [, end] = Range.edges(at);
              const pointRef = createPointRef(editor, end);
              deleteText(editor, {
                at
              });
              at = pointRef.unref();
              if (options.at == null) {
                select(editor, at);
              }
            }
          }
          const _nodes = getNodeEntries(editor, {
            at,
            match: match5,
            voids,
            mode
          });
          const [current] = Array.from(_nodes);
          const prev = getPreviousNode(editor, {
            at,
            match: match5,
            voids,
            mode
          });
          if (!current || !prev) {
            return;
          }
          const [node, path] = current;
          const [prevNode, prevPath] = prev;
          if (path.length === 0 || prevPath.length === 0) {
            return;
          }
          const newPath = Path.next(prevPath);
          const commonPath = Path.common(path, prevPath);
          const isPreviousSibling = Path.isSibling(path, prevPath);
          const _levels = Editor$1.levels(editor, {
            at: path
          });
          const levels = Array.from(_levels, ([n22]) => n22).slice(commonPath.length).slice(0, -1);
          const emptyAncestor = getAboveNode(editor, {
            at: path,
            mode: "highest",
            match: (n22) => levels.includes(n22) && isElement(n22) && hasSingleChild(n22)
          });
          const emptyRef = emptyAncestor && createPathRef(editor, emptyAncestor[1]);
          let properties;
          let position2;
          if (isText(node) && isText(prevNode)) {
            const {
              text: text2,
              ...rest
            } = node;
            position2 = prevNode.text.length;
            properties = rest;
          } else if (isElement(node) && isElement(prevNode)) {
            const {
              children,
              ...rest
            } = node;
            position2 = prevNode.children.length;
            properties = rest;
          } else {
            throw new Error(`Cannot merge the node at path [${path}] with the previous sibling because it is not the same kind: ${JSON.stringify(node)} ${JSON.stringify(prevNode)}`);
          }
          if (!isPreviousSibling) {
            if (!mergeNode) {
              moveNodes(editor, {
                at: path,
                to: newPath,
                voids
              });
            }
          }
          if (emptyRef) {
            if (!removeEmptyAncestor) {
              removeNodes(editor, {
                at: emptyRef.current,
                voids
              });
            } else {
              const emptyPath = emptyRef.current;
              emptyPath && removeEmptyAncestor(editor, {
                at: emptyPath
              });
            }
          }
          if (mergeNode) {
            mergeNode(editor, {
              at: path,
              to: newPath
            });
          } else if (isElement(prevNode) && isElementEmpty(editor, prevNode) || isText(prevNode) && prevNode.text === "") {
            removeNodes(editor, {
              at: prevPath,
              voids
            });
          } else {
            editor.apply({
              type: "merge_node",
              path: newPath,
              position: position2,
              properties
            });
          }
          if (emptyRef) {
            emptyRef.unref();
          }
        });
      };
      const getEndPoint = (editor, at) => Editor$1.end(editor, at);
      const getLeafNode = (editor, at, options) => Editor$1.leaf(editor, at, options);
      const deleteMerge = (editor, options = {}) => {
        withoutNormalizing(editor, () => {
          const {
            reverse = false,
            unit = "character",
            distance = 1,
            voids = false
          } = options;
          let {
            at = editor.selection,
            hanging = false
          } = options;
          if (!at) {
            return;
          }
          if (Range.isRange(at) && Range.isCollapsed(at)) {
            at = at.anchor;
          }
          if (Point.isPoint(at)) {
            const furthestVoid = getVoidNode(editor, {
              at,
              mode: "highest"
            });
            if (!voids && furthestVoid) {
              const [, voidPath] = furthestVoid;
              at = voidPath;
            } else {
              const opts = {
                unit,
                distance
              };
              const target = reverse ? getPointBefore(editor, at, opts) || getStartPoint(editor, []) : getPointAfter(editor, at, opts) || getEndPoint(editor, []);
              at = {
                anchor: at,
                focus: target
              };
              hanging = true;
            }
          }
          if (Path.isPath(at)) {
            removeNodes(editor, {
              at,
              voids
            });
            return;
          }
          if (Range.isCollapsed(at)) {
            return;
          }
          if (!hanging) {
            at = Editor$1.unhangRange(editor, at, {
              voids
            });
          }
          let [start, end] = Range.edges(at);
          const startBlock = getAboveNode(editor, {
            match: (n22) => isBlock(editor, n22),
            at: start,
            voids
          });
          const endBlock = getAboveNode(editor, {
            match: (n22) => isBlock(editor, n22),
            at: end,
            voids
          });
          const isAcrossBlocks = startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);
          const isSingleText = Path.equals(start.path, end.path);
          const startVoid = voids ? null : getVoidNode(editor, {
            at: start,
            mode: "highest"
          });
          const endVoid = voids ? null : getVoidNode(editor, {
            at: end,
            mode: "highest"
          });
          if (startVoid) {
            const before = getPointBefore(editor, start);
            if (before && startBlock && Path.isAncestor(startBlock[1], before.path)) {
              start = before;
            }
          }
          if (endVoid) {
            const after = getPointAfter(editor, end);
            if (after && endBlock && Path.isAncestor(endBlock[1], after.path)) {
              end = after;
            }
          }
          const matches = [];
          let lastPath;
          const _nodes = getNodeEntries(editor, {
            at,
            voids
          });
          for (const entry of _nodes) {
            const [node, path] = entry;
            if (lastPath && Path.compare(path, lastPath) === 0) {
              continue;
            }
            if (!voids && isVoid(editor, node) || !Path.isCommon(path, start.path) && !Path.isCommon(path, end.path)) {
              matches.push(entry);
              lastPath = path;
            }
          }
          const pathRefs = Array.from(matches, ([, p22]) => createPathRef(editor, p22));
          const startRef = createPointRef(editor, start);
          const endRef = createPointRef(editor, end);
          if (!isSingleText && !startVoid) {
            const point3 = startRef.current;
            const [node] = getLeafNode(editor, point3);
            const {
              path
            } = point3;
            const {
              offset: offset2
            } = start;
            const text2 = node.text.slice(offset2);
            editor.apply({
              type: "remove_text",
              path,
              offset: offset2,
              text: text2
            });
          }
          for (const pathRef of pathRefs) {
            const path = pathRef.unref();
            removeNodes(editor, {
              at: path,
              voids
            });
          }
          if (!endVoid) {
            const point3 = endRef.current;
            const [node] = getLeafNode(editor, point3);
            const {
              path
            } = point3;
            const offset2 = isSingleText ? start.offset : 0;
            const text2 = node.text.slice(offset2, end.offset);
            editor.apply({
              type: "remove_text",
              path,
              offset: offset2,
              text: text2
            });
          }
          if (!isSingleText && isAcrossBlocks && endRef.current && startRef.current) {
            mergeNodes(editor, {
              at: endRef.current,
              hanging: true,
              voids
            });
          }
          const point2 = endRef.unref() || startRef.unref();
          if (options.at == null && point2) {
            select(editor, point2);
          }
        });
      };
      const insertNode = (editor, node) => Editor$1.insertNode(editor, node);
      const getCommonNode = (root2, path, another) => Node$1.common(root2, path, another);
      const getNodeTexts = (root2, options) => Node$1.texts(root2, options);
      const getNodes = (root2, options) => Node$1.nodes(root2, options);
      const isCollapsed = (range) => !!range && Range.isCollapsed(range);
      const collapseSelection = (editor, options) => {
        Transforms.collapse(editor, options);
      };
      const insertFragment = (editor, fragment, options) => {
        Transforms.insertFragment(editor, fragment, options);
      };
      const insertNodes = (editor, nodes, options) => Transforms.insertNodes(editor, nodes, options);
      const insertText = (editor, text2, options) => {
        Transforms.insertText(editor, text2, options);
      };
      const splitNodes = (editor, options) => Transforms.splitNodes(editor, options);
      const unwrapNodes = (editor, options) => {
        Transforms.unwrapNodes(editor, getQueryOptions(editor, options));
      };
      const wrapNodes = (editor, element, options) => {
        unhangRange(editor, options === null || options === void 0 ? void 0 : options.at, options);
        Transforms.wrapNodes(editor, element, options);
      };
      var objectProto$u = Object.prototype;
      var hasOwnProperty$r = objectProto$u.hasOwnProperty;
      var defaults$1 = _baseRest(function(object, sources) {
        object = Object(object);
        var index2 = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : void 0;
        if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }
        while (++index2 < length) {
          var source = sources[index2];
          var props = keysIn_1$2(source);
          var propsIndex = -1;
          var propsLength = props.length;
          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];
            if (value === void 0 || eq_1$2(value, objectProto$u[key]) && !hasOwnProperty$r.call(object, key)) {
              object[key] = source[key];
            }
          }
        }
        return object;
      });
      var defaults_1 = defaults$1;
      const defaultsDeepToNodes = (options) => {
        applyDeepToNodes({
          ...options,
          apply: defaults_1
        });
      };
      const insertElements = (editor, nodes, options) => insertNodes(editor, nodes, options);
      const insertEmptyElement = (editor, type, options) => {
        insertElements(editor, {
          type,
          children: [{
            text: ""
          }]
        }, getQueryOptions(editor, options));
      };
      const moveChildren = (editor, {
        at,
        to: to22,
        match: match5,
        fromStartIndex = 0
      }) => {
        let moved = 0;
        const parentPath = Path.isPath(at) ? at : at[1];
        const parentNode = Path.isPath(at) ? getNode(editor, parentPath) : at[0];
        if (!isBlock(editor, parentNode))
          return moved;
        for (let i22 = parentNode.children.length - 1; i22 >= fromStartIndex; i22--) {
          const childPath = [...parentPath, i22];
          const childNode = getNode(editor, childPath);
          if (!match5 || childNode && match5([childNode, childPath])) {
            moveNodes(editor, {
              at: childPath,
              to: to22
            });
            moved++;
          }
        }
        return moved;
      };
      function unwrapExports$b(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$c(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$d = createCommonjsModule$c(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      var isHotkey$5 = unwrapExports$b(lib$d);
      lib$d.isHotkey;
      lib$d.isCodeHotkey;
      lib$d.isKeyHotkey;
      lib$d.parseHotkey;
      lib$d.compareHotkey;
      lib$d.toKeyCode;
      lib$d.toKeyName;
      const onKeyDownAutoformat = (editor, {
        options: {
          rules,
          enableUndoOnDelete
        }
      }) => (e22) => {
        if (!isHotkey$5("backspace", {
          byKey: true
        }, e22))
          return false;
        if (!rules)
          return false;
        if (!enableUndoOnDelete)
          return false;
        const {
          selection
        } = editor;
        if (!selection || !Range.isCollapsed(selection))
          return;
        const [start, end] = Range.edges(selection);
        const before = getPointBefore(editor, end, {
          unit: "character",
          distance: 1
        });
        if (!start)
          return false;
        if (!before)
          return false;
        const charRange = {
          anchor: before,
          focus: start
        };
        if (!charRange)
          return false;
        const char = getEditorString(editor, charRange);
        if (!char)
          return false;
        const matchers = [...rules].filter((rule2) => {
          const textRule = rule2;
          if (textRule) {
            return textRule.mode === "text" && textRule.format === char;
          }
          return false;
        });
        if (!matchers || matchers.length === 0)
          return false;
        e22.preventDefault();
        deleteBackward(editor, {
          unit: "character"
        });
        const rule = matchers[0];
        if (rule && typeof rule.match === "string") {
          insertText(editor, rule.match);
        } else {
          const matchArray = rule.match;
          if (matchArray && matchArray.length > 0) {
            insertText(editor, matchArray[0]);
          }
        }
        return true;
      };
      var isArray$i = Array.isArray;
      var isArray_1$3 = isArray$i;
      function castArray$1() {
        if (!arguments.length) {
          return [];
        }
        var value = arguments[0];
        return isArray_1$3(value) ? value : [value];
      }
      var castArray_1$1 = castArray$1;
      const getMatchRange = ({
        match: match5,
        trigger
      }) => {
        let start;
        let end;
        if (typeof match5 === "object") {
          start = match5.start;
          end = match5.end;
        } else {
          start = match5;
          end = start.split("").reverse().join("");
        }
        const triggers = trigger ? castArray_1$1(trigger) : [end.slice(-1)];
        end = trigger ? end : end.slice(0, -1);
        return {
          start,
          end,
          triggers
        };
      };
      const autoformatBlock = (editor, {
        text: text2,
        trigger,
        match: _match,
        type = ELEMENT_DEFAULT,
        allowSameTypeAbove = false,
        preFormat: preFormat2,
        format: format2,
        triggerAtBlockStart = true
      }) => {
        const matches = castArray_1$1(_match);
        for (const match5 of matches) {
          const {
            end,
            triggers
          } = getMatchRange({
            match: {
              start: "",
              end: match5
            },
            trigger
          });
          if (!triggers.includes(text2))
            continue;
          let matchRange;
          if (triggerAtBlockStart) {
            matchRange = getRangeFromBlockStart(editor);
            const hasVoidNode = someNode(editor, {
              at: matchRange,
              match: (n22) => isVoid(editor, n22)
            });
            if (hasVoidNode)
              continue;
            const textFromBlockStart = getEditorString(editor, matchRange);
            if (end !== textFromBlockStart)
              continue;
          } else {
            matchRange = getRangeBefore(editor, editor.selection, {
              matchString: end
            });
            if (!matchRange)
              continue;
          }
          if (!allowSameTypeAbove) {
            const isBelowSameBlockType = someNode(editor, {
              match: {
                type
              }
            });
            if (isBelowSameBlockType)
              continue;
          }
          if (match5.length > 1) {
            deleteText(editor, {
              at: matchRange
            });
          }
          if (preFormat2) {
            preFormat2(editor);
          }
          if (!format2) {
            setElements(editor, {
              type
            }, {
              match: (n22) => isBlock(editor, n22)
            });
          } else {
            format2(editor);
          }
          return true;
        }
        return false;
      };
      const isPreviousCharacterEmpty = (editor, at) => {
        const range = getRangeBefore(editor, at);
        if (range) {
          const text2 = getEditorString(editor, range);
          if (text2) {
            const noWhiteSpaceRegex = new RegExp(`\\S+`);
            return !text2.match(noWhiteSpaceRegex);
          }
        }
        return true;
      };
      const getMatchPoints = (editor, {
        start,
        end
      }) => {
        const selection = editor.selection;
        let beforeEndMatchPoint = selection.anchor;
        if (end) {
          beforeEndMatchPoint = getPointBeforeLocation(editor, selection, {
            matchString: end
          });
          if (!beforeEndMatchPoint)
            return;
        }
        let afterStartMatchPoint;
        let beforeStartMatchPoint;
        if (start) {
          afterStartMatchPoint = getPointBeforeLocation(editor, beforeEndMatchPoint, {
            matchString: start,
            skipInvalid: true,
            afterMatch: true
          });
          if (!afterStartMatchPoint)
            return;
          beforeStartMatchPoint = getPointBeforeLocation(editor, beforeEndMatchPoint, {
            matchString: start,
            skipInvalid: true
          });
          if (!isPreviousCharacterEmpty(editor, beforeStartMatchPoint))
            return;
        }
        return {
          afterStartMatchPoint,
          beforeStartMatchPoint,
          beforeEndMatchPoint
        };
      };
      const autoformatMark = (editor, {
        type,
        text: text2,
        trigger,
        match: _match,
        ignoreTrim
      }) => {
        if (!type)
          return false;
        const selection = editor.selection;
        const matches = castArray_1$1(_match);
        for (const match5 of matches) {
          const {
            start,
            end,
            triggers
          } = getMatchRange({
            match: match5,
            trigger
          });
          if (!triggers.includes(text2))
            continue;
          const matched = getMatchPoints(editor, {
            start,
            end
          });
          if (!matched)
            continue;
          const {
            afterStartMatchPoint,
            beforeEndMatchPoint,
            beforeStartMatchPoint
          } = matched;
          const matchRange = {
            anchor: afterStartMatchPoint,
            focus: beforeEndMatchPoint
          };
          if (!ignoreTrim) {
            const matchText = getEditorString(editor, matchRange);
            if (matchText.trim() !== matchText)
              continue;
          }
          if (end) {
            deleteText(editor, {
              at: {
                anchor: beforeEndMatchPoint,
                focus: selection.anchor
              }
            });
          }
          const marks = castArray_1$1(type);
          select(editor, matchRange);
          marks.forEach((mark) => {
            editor.addMark(mark, true);
          });
          collapseSelection(editor, {
            edge: "end"
          });
          removeMark(editor, {
            key: marks,
            shouldChange: false
          });
          deleteText(editor, {
            at: {
              anchor: beforeStartMatchPoint,
              focus: afterStartMatchPoint
            }
          });
          return true;
        }
        return false;
      };
      const autoformatText = (editor, {
        text: text2,
        match: _match,
        trigger,
        format: format2
      }) => {
        const selection = editor.selection;
        const matches = castArray_1$1(_match);
        for (const match5 of matches) {
          const {
            start,
            end,
            triggers
          } = getMatchRange({
            match: Array.isArray(format2) ? match5 : {
              start: "",
              end: match5
            },
            trigger
          });
          if (!triggers.includes(text2))
            continue;
          const matched = getMatchPoints(editor, {
            start,
            end
          });
          if (!matched)
            continue;
          const {
            afterStartMatchPoint,
            beforeEndMatchPoint,
            beforeStartMatchPoint
          } = matched;
          if (end) {
            deleteText(editor, {
              at: {
                anchor: beforeEndMatchPoint,
                focus: selection.anchor
              }
            });
          }
          if (typeof format2 === "function") {
            format2(editor, matched);
          } else {
            const formatEnd = Array.isArray(format2) ? format2[1] : format2;
            editor.insertText(formatEnd);
            if (beforeStartMatchPoint) {
              const formatStart = Array.isArray(format2) ? format2[0] : format2;
              deleteText(editor, {
                at: {
                  anchor: beforeStartMatchPoint,
                  focus: afterStartMatchPoint
                }
              });
              insertText(editor, formatStart, {
                at: beforeStartMatchPoint
              });
            }
          }
          return true;
        }
        return false;
      };
      const withAutoformat = (editor, {
        options: {
          rules
        }
      }) => {
        const {
          insertText: insertText2
        } = editor;
        editor.insertText = (text2) => {
          if (!isCollapsed(editor.selection))
            return insertText2(text2);
          for (const rule of rules) {
            var _autoformatter$mode;
            const {
              mode = "text",
              insertTrigger,
              query
            } = rule;
            if (query && !query(editor, {
              ...rule,
              text: text2
            }))
              continue;
            const autoformatter = {
              block: autoformatBlock,
              mark: autoformatMark,
              text: autoformatText
            };
            if ((_autoformatter$mode = autoformatter[mode]) !== null && _autoformatter$mode !== void 0 && _autoformatter$mode.call(autoformatter, editor, {
              ...rule,
              text: text2
            })) {
              return insertTrigger && insertText2(text2);
            }
          }
          insertText2(text2);
        };
        return editor;
      };
      const KEY_AUTOFORMAT = "autoformat";
      const createAutoformatPlugin = createPluginFactory({
        key: KEY_AUTOFORMAT,
        withOverrides: withAutoformat,
        handlers: {
          onKeyDown: onKeyDownAutoformat
        },
        options: {
          rules: []
        }
      });
      const ELEMENT_BLOCKQUOTE = "blockquote";
      const createBlockquotePlugin = createPluginFactory({
        key: ELEMENT_BLOCKQUOTE,
        isElement: true,
        deserializeHtml: {
          rules: [{
            validNodeName: "BLOCKQUOTE"
          }]
        },
        handlers: {
          onKeyDown: onKeyDownToggleElement
        },
        options: {
          hotkey: "mod+shift+."
        }
      });
      var prism = { exports: {} };
      (function(module2) {
        var _self = typeof window !== "undefined" ? window : typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope ? self : {};
        var Prism2 = function(_self2) {
          var lang2 = /(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i;
          var uniqueId = 0;
          var plainTextGrammar = {};
          var _22 = {
            manual: _self2.Prism && _self2.Prism.manual,
            disableWorkerMessageHandler: _self2.Prism && _self2.Prism.disableWorkerMessageHandler,
            util: {
              encode: function encode(tokens2) {
                if (tokens2 instanceof Token2) {
                  return new Token2(tokens2.type, encode(tokens2.content), tokens2.alias);
                } else if (Array.isArray(tokens2)) {
                  return tokens2.map(encode);
                } else {
                  return tokens2.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
                }
              },
              type: function(o22) {
                return Object.prototype.toString.call(o22).slice(8, -1);
              },
              objId: function(obj) {
                if (!obj["__id"]) {
                  Object.defineProperty(obj, "__id", { value: ++uniqueId });
                }
                return obj["__id"];
              },
              clone: function deepClone(o22, visited) {
                visited = visited || {};
                var clone2;
                var id2;
                switch (_22.util.type(o22)) {
                  case "Object":
                    id2 = _22.util.objId(o22);
                    if (visited[id2]) {
                      return visited[id2];
                    }
                    clone2 = {};
                    visited[id2] = clone2;
                    for (var key in o22) {
                      if (o22.hasOwnProperty(key)) {
                        clone2[key] = deepClone(o22[key], visited);
                      }
                    }
                    return clone2;
                  case "Array":
                    id2 = _22.util.objId(o22);
                    if (visited[id2]) {
                      return visited[id2];
                    }
                    clone2 = [];
                    visited[id2] = clone2;
                    o22.forEach(function(v22, i22) {
                      clone2[i22] = deepClone(v22, visited);
                    });
                    return clone2;
                  default:
                    return o22;
                }
              },
              getLanguage: function(element) {
                while (element) {
                  var m22 = lang2.exec(element.className);
                  if (m22) {
                    return m22[1].toLowerCase();
                  }
                  element = element.parentElement;
                }
                return "none";
              },
              setLanguage: function(element, language) {
                element.className = element.className.replace(RegExp(lang2, "gi"), "");
                element.classList.add("language-" + language);
              },
              currentScript: function() {
                if (typeof document === "undefined") {
                  return null;
                }
                if ("currentScript" in document && 1 < 2) {
                  return document.currentScript;
                }
                try {
                  throw new Error();
                } catch (err) {
                  var src = (/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(err.stack) || [])[1];
                  if (src) {
                    var scripts = document.getElementsByTagName("script");
                    for (var i22 in scripts) {
                      if (scripts[i22].src == src) {
                        return scripts[i22];
                      }
                    }
                  }
                  return null;
                }
              },
              isActive: function(element, className, defaultActivation) {
                var no2 = "no-" + className;
                while (element) {
                  var classList = element.classList;
                  if (classList.contains(className)) {
                    return true;
                  }
                  if (classList.contains(no2)) {
                    return false;
                  }
                  element = element.parentElement;
                }
                return !!defaultActivation;
              }
            },
            languages: {
              plain: plainTextGrammar,
              plaintext: plainTextGrammar,
              text: plainTextGrammar,
              txt: plainTextGrammar,
              extend: function(id2, redef) {
                var lang3 = _22.util.clone(_22.languages[id2]);
                for (var key in redef) {
                  lang3[key] = redef[key];
                }
                return lang3;
              },
              insertBefore: function(inside, before, insert, root2) {
                root2 = root2 || _22.languages;
                var grammar = root2[inside];
                var ret = {};
                for (var token2 in grammar) {
                  if (grammar.hasOwnProperty(token2)) {
                    if (token2 == before) {
                      for (var newToken in insert) {
                        if (insert.hasOwnProperty(newToken)) {
                          ret[newToken] = insert[newToken];
                        }
                      }
                    }
                    if (!insert.hasOwnProperty(token2)) {
                      ret[token2] = grammar[token2];
                    }
                  }
                }
                var old = root2[inside];
                root2[inside] = ret;
                _22.languages.DFS(_22.languages, function(key, value) {
                  if (value === old && key != inside) {
                    this[key] = ret;
                  }
                });
                return ret;
              },
              DFS: function DFS(o22, callback, type, visited) {
                visited = visited || {};
                var objId = _22.util.objId;
                for (var i22 in o22) {
                  if (o22.hasOwnProperty(i22)) {
                    callback.call(o22, i22, o22[i22], type || i22);
                    var property2 = o22[i22];
                    var propertyType = _22.util.type(property2);
                    if (propertyType === "Object" && !visited[objId(property2)]) {
                      visited[objId(property2)] = true;
                      DFS(property2, callback, null, visited);
                    } else if (propertyType === "Array" && !visited[objId(property2)]) {
                      visited[objId(property2)] = true;
                      DFS(property2, callback, i22, visited);
                    }
                  }
                }
              }
            },
            plugins: {},
            highlightAll: function(async, callback) {
              _22.highlightAllUnder(document, async, callback);
            },
            highlightAllUnder: function(container, async, callback) {
              var env = {
                callback,
                container,
                selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
              };
              _22.hooks.run("before-highlightall", env);
              env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));
              _22.hooks.run("before-all-elements-highlight", env);
              for (var i22 = 0, element; element = env.elements[i22++]; ) {
                _22.highlightElement(element, async === true, env.callback);
              }
            },
            highlightElement: function(element, async, callback) {
              var language = _22.util.getLanguage(element);
              var grammar = _22.languages[language];
              _22.util.setLanguage(element, language);
              var parent2 = element.parentElement;
              if (parent2 && parent2.nodeName.toLowerCase() === "pre") {
                _22.util.setLanguage(parent2, language);
              }
              var code = element.textContent;
              var env = {
                element,
                language,
                grammar,
                code
              };
              function insertHighlightedCode(highlightedCode) {
                env.highlightedCode = highlightedCode;
                _22.hooks.run("before-insert", env);
                env.element.innerHTML = env.highlightedCode;
                _22.hooks.run("after-highlight", env);
                _22.hooks.run("complete", env);
                callback && callback.call(env.element);
              }
              _22.hooks.run("before-sanity-check", env);
              parent2 = env.element.parentElement;
              if (parent2 && parent2.nodeName.toLowerCase() === "pre" && !parent2.hasAttribute("tabindex")) {
                parent2.setAttribute("tabindex", "0");
              }
              if (!env.code) {
                _22.hooks.run("complete", env);
                callback && callback.call(env.element);
                return;
              }
              _22.hooks.run("before-highlight", env);
              if (!env.grammar) {
                insertHighlightedCode(_22.util.encode(env.code));
                return;
              }
              if (async && _self2.Worker) {
                var worker = new Worker(_22.filename);
                worker.onmessage = function(evt) {
                  insertHighlightedCode(evt.data);
                };
                worker.postMessage(JSON.stringify({
                  language: env.language,
                  code: env.code,
                  immediateClose: true
                }));
              } else {
                insertHighlightedCode(_22.highlight(env.code, env.grammar, env.language));
              }
            },
            highlight: function(text2, grammar, language) {
              var env = {
                code: text2,
                grammar,
                language
              };
              _22.hooks.run("before-tokenize", env);
              if (!env.grammar) {
                throw new Error('The language "' + env.language + '" has no grammar.');
              }
              env.tokens = _22.tokenize(env.code, env.grammar);
              _22.hooks.run("after-tokenize", env);
              return Token2.stringify(_22.util.encode(env.tokens), env.language);
            },
            tokenize: function(text2, grammar) {
              var rest = grammar.rest;
              if (rest) {
                for (var token2 in rest) {
                  grammar[token2] = rest[token2];
                }
                delete grammar.rest;
              }
              var tokenList = new LinkedList();
              addAfter(tokenList, tokenList.head, text2);
              matchGrammar(text2, tokenList, grammar, tokenList.head, 0);
              return toArray2(tokenList);
            },
            hooks: {
              all: {},
              add: function(name2, callback) {
                var hooks2 = _22.hooks.all;
                hooks2[name2] = hooks2[name2] || [];
                hooks2[name2].push(callback);
              },
              run: function(name2, env) {
                var callbacks = _22.hooks.all[name2];
                if (!callbacks || !callbacks.length) {
                  return;
                }
                for (var i22 = 0, callback; callback = callbacks[i22++]; ) {
                  callback(env);
                }
              }
            },
            Token: Token2
          };
          _self2.Prism = _22;
          function Token2(type, content2, alias, matchedStr) {
            this.type = type;
            this.content = content2;
            this.alias = alias;
            this.length = (matchedStr || "").length | 0;
          }
          Token2.stringify = function stringify2(o22, language) {
            if (typeof o22 == "string") {
              return o22;
            }
            if (Array.isArray(o22)) {
              var s22 = "";
              o22.forEach(function(e22) {
                s22 += stringify2(e22, language);
              });
              return s22;
            }
            var env = {
              type: o22.type,
              content: stringify2(o22.content, language),
              tag: "span",
              classes: ["token", o22.type],
              attributes: {},
              language
            };
            var aliases2 = o22.alias;
            if (aliases2) {
              if (Array.isArray(aliases2)) {
                Array.prototype.push.apply(env.classes, aliases2);
              } else {
                env.classes.push(aliases2);
              }
            }
            _22.hooks.run("wrap", env);
            var attributes = "";
            for (var name2 in env.attributes) {
              attributes += " " + name2 + '="' + (env.attributes[name2] || "").replace(/"/g, "&quot;") + '"';
            }
            return "<" + env.tag + ' class="' + env.classes.join(" ") + '"' + attributes + ">" + env.content + "</" + env.tag + ">";
          };
          function matchPattern(pattern, pos, text2, lookbehind) {
            pattern.lastIndex = pos;
            var match5 = pattern.exec(text2);
            if (match5 && lookbehind && match5[1]) {
              var lookbehindLength = match5[1].length;
              match5.index += lookbehindLength;
              match5[0] = match5[0].slice(lookbehindLength);
            }
            return match5;
          }
          function matchGrammar(text2, tokenList, grammar, startNode, startPos, rematch) {
            for (var token2 in grammar) {
              if (!grammar.hasOwnProperty(token2) || !grammar[token2]) {
                continue;
              }
              var patterns = grammar[token2];
              patterns = Array.isArray(patterns) ? patterns : [patterns];
              for (var j22 = 0; j22 < patterns.length; ++j22) {
                if (rematch && rematch.cause == token2 + "," + j22) {
                  return;
                }
                var patternObj = patterns[j22];
                var inside = patternObj.inside;
                var lookbehind = !!patternObj.lookbehind;
                var greedy = !!patternObj.greedy;
                var alias = patternObj.alias;
                if (greedy && !patternObj.pattern.global) {
                  var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];
                  patternObj.pattern = RegExp(patternObj.pattern.source, flags + "g");
                }
                var pattern = patternObj.pattern || patternObj;
                for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {
                  if (rematch && pos >= rematch.reach) {
                    break;
                  }
                  var str = currentNode.value;
                  if (tokenList.length > text2.length) {
                    return;
                  }
                  if (str instanceof Token2) {
                    continue;
                  }
                  var removeCount = 1;
                  var match5;
                  if (greedy) {
                    match5 = matchPattern(pattern, pos, text2, lookbehind);
                    if (!match5 || match5.index >= text2.length) {
                      break;
                    }
                    var from2 = match5.index;
                    var to22 = match5.index + match5[0].length;
                    var p22 = pos;
                    p22 += currentNode.value.length;
                    while (from2 >= p22) {
                      currentNode = currentNode.next;
                      p22 += currentNode.value.length;
                    }
                    p22 -= currentNode.value.length;
                    pos = p22;
                    if (currentNode.value instanceof Token2) {
                      continue;
                    }
                    for (var k22 = currentNode; k22 !== tokenList.tail && (p22 < to22 || typeof k22.value === "string"); k22 = k22.next) {
                      removeCount++;
                      p22 += k22.value.length;
                    }
                    removeCount--;
                    str = text2.slice(pos, p22);
                    match5.index -= pos;
                  } else {
                    match5 = matchPattern(pattern, 0, str, lookbehind);
                    if (!match5) {
                      continue;
                    }
                  }
                  var from2 = match5.index;
                  var matchStr = match5[0];
                  var before = str.slice(0, from2);
                  var after = str.slice(from2 + matchStr.length);
                  var reach = pos + str.length;
                  if (rematch && reach > rematch.reach) {
                    rematch.reach = reach;
                  }
                  var removeFrom = currentNode.prev;
                  if (before) {
                    removeFrom = addAfter(tokenList, removeFrom, before);
                    pos += before.length;
                  }
                  removeRange(tokenList, removeFrom, removeCount);
                  var wrapped = new Token2(token2, inside ? _22.tokenize(matchStr, inside) : matchStr, alias, matchStr);
                  currentNode = addAfter(tokenList, removeFrom, wrapped);
                  if (after) {
                    addAfter(tokenList, currentNode, after);
                  }
                  if (removeCount > 1) {
                    var nestedRematch = {
                      cause: token2 + "," + j22,
                      reach
                    };
                    matchGrammar(text2, tokenList, grammar, currentNode.prev, pos, nestedRematch);
                    if (rematch && nestedRematch.reach > rematch.reach) {
                      rematch.reach = nestedRematch.reach;
                    }
                  }
                }
              }
            }
          }
          function LinkedList() {
            var head = { value: null, prev: null, next: null };
            var tail = { value: null, prev: head, next: null };
            head.next = tail;
            this.head = head;
            this.tail = tail;
            this.length = 0;
          }
          function addAfter(list2, node, value) {
            var next = node.next;
            var newNode = { value, prev: node, next };
            node.next = newNode;
            next.prev = newNode;
            list2.length++;
            return newNode;
          }
          function removeRange(list2, node, count) {
            var next = node.next;
            for (var i22 = 0; i22 < count && next !== list2.tail; i22++) {
              next = next.next;
            }
            node.next = next;
            next.prev = node;
            list2.length -= i22;
          }
          function toArray2(list2) {
            var array = [];
            var node = list2.head.next;
            while (node !== list2.tail) {
              array.push(node.value);
              node = node.next;
            }
            return array;
          }
          if (!_self2.document) {
            if (!_self2.addEventListener) {
              return _22;
            }
            if (!_22.disableWorkerMessageHandler) {
              _self2.addEventListener("message", function(evt) {
                var message2 = JSON.parse(evt.data);
                var lang3 = message2.language;
                var code = message2.code;
                var immediateClose = message2.immediateClose;
                _self2.postMessage(_22.highlight(code, _22.languages[lang3], lang3));
                if (immediateClose) {
                  _self2.close();
                }
              }, false);
            }
            return _22;
          }
          var script = _22.util.currentScript();
          if (script) {
            _22.filename = script.src;
            if (script.hasAttribute("data-manual")) {
              _22.manual = true;
            }
          }
          function highlightAutomaticallyCallback() {
            if (!_22.manual) {
              _22.highlightAll();
            }
          }
          if (!_22.manual) {
            var readyState = document.readyState;
            if (readyState === "loading" || readyState === "interactive" && script && script.defer) {
              document.addEventListener("DOMContentLoaded", highlightAutomaticallyCallback);
            } else {
              if (window.requestAnimationFrame) {
                window.requestAnimationFrame(highlightAutomaticallyCallback);
              } else {
                window.setTimeout(highlightAutomaticallyCallback, 16);
              }
            }
          }
          return _22;
        }(_self);
        if (module2.exports) {
          module2.exports = Prism2;
        }
        if (typeof commonjsGlobal$4 !== "undefined") {
          commonjsGlobal$4.Prism = Prism2;
        }
        Prism2.languages.markup = {
          "comment": {
            pattern: /<!--(?:(?!<!--)[\s\S])*?-->/,
            greedy: true
          },
          "prolog": {
            pattern: /<\?[\s\S]+?\?>/,
            greedy: true
          },
          "doctype": {
            pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
            greedy: true,
            inside: {
              "internal-subset": {
                pattern: /(^[^\[]*\[)[\s\S]+(?=\]>$)/,
                lookbehind: true,
                greedy: true,
                inside: null
              },
              "string": {
                pattern: /"[^"]*"|'[^']*'/,
                greedy: true
              },
              "punctuation": /^<!|>$|[[\]]/,
              "doctype-tag": /^DOCTYPE/i,
              "name": /[^\s<>'"]+/
            }
          },
          "cdata": {
            pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
            greedy: true
          },
          "tag": {
            pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
            greedy: true,
            inside: {
              "tag": {
                pattern: /^<\/?[^\s>\/]+/,
                inside: {
                  "punctuation": /^<\/?/,
                  "namespace": /^[^\s>\/:]+:/
                }
              },
              "special-attr": [],
              "attr-value": {
                pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
                inside: {
                  "punctuation": [
                    {
                      pattern: /^=/,
                      alias: "attr-equals"
                    },
                    /"|'/
                  ]
                }
              },
              "punctuation": /\/?>/,
              "attr-name": {
                pattern: /[^\s>\/]+/,
                inside: {
                  "namespace": /^[^\s>\/:]+:/
                }
              }
            }
          },
          "entity": [
            {
              pattern: /&[\da-z]{1,8};/i,
              alias: "named-entity"
            },
            /&#x?[\da-f]{1,8};/i
          ]
        };
        Prism2.languages.markup["tag"].inside["attr-value"].inside["entity"] = Prism2.languages.markup["entity"];
        Prism2.languages.markup["doctype"].inside["internal-subset"].inside = Prism2.languages.markup;
        Prism2.hooks.add("wrap", function(env) {
          if (env.type === "entity") {
            env.attributes["title"] = env.content.replace(/&amp;/, "&");
          }
        });
        Object.defineProperty(Prism2.languages.markup.tag, "addInlined", {
          value: function addInlined(tagName, lang2) {
            var includedCdataInside = {};
            includedCdataInside["language-" + lang2] = {
              pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
              lookbehind: true,
              inside: Prism2.languages[lang2]
            };
            includedCdataInside["cdata"] = /^<!\[CDATA\[|\]\]>$/i;
            var inside = {
              "included-cdata": {
                pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
                inside: includedCdataInside
              }
            };
            inside["language-" + lang2] = {
              pattern: /[\s\S]+/,
              inside: Prism2.languages[lang2]
            };
            var def = {};
            def[tagName] = {
              pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function() {
                return tagName;
              }), "i"),
              lookbehind: true,
              greedy: true,
              inside
            };
            Prism2.languages.insertBefore("markup", "cdata", def);
          }
        });
        Object.defineProperty(Prism2.languages.markup.tag, "addAttribute", {
          value: function(attrName, lang2) {
            Prism2.languages.markup.tag.inside["special-attr"].push({
              pattern: RegExp(/(^|["'\s])/.source + "(?:" + attrName + ")" + /\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source, "i"),
              lookbehind: true,
              inside: {
                "attr-name": /^[^\s=]+/,
                "attr-value": {
                  pattern: /=[\s\S]+/,
                  inside: {
                    "value": {
                      pattern: /(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,
                      lookbehind: true,
                      alias: [lang2, "language-" + lang2],
                      inside: Prism2.languages[lang2]
                    },
                    "punctuation": [
                      {
                        pattern: /^=/,
                        alias: "attr-equals"
                      },
                      /"|'/
                    ]
                  }
                }
              }
            });
          }
        });
        Prism2.languages.html = Prism2.languages.markup;
        Prism2.languages.mathml = Prism2.languages.markup;
        Prism2.languages.svg = Prism2.languages.markup;
        Prism2.languages.xml = Prism2.languages.extend("markup", {});
        Prism2.languages.ssml = Prism2.languages.xml;
        Prism2.languages.atom = Prism2.languages.xml;
        Prism2.languages.rss = Prism2.languages.xml;
        (function(Prism3) {
          var string2 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
          Prism3.languages.css = {
            "comment": /\/\*[\s\S]*?\*\//,
            "atrule": {
              pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
              inside: {
                "rule": /^@[\w-]+/,
                "selector-function-argument": {
                  pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
                  lookbehind: true,
                  alias: "selector"
                },
                "keyword": {
                  pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
                  lookbehind: true
                }
              }
            },
            "url": {
              pattern: RegExp("\\burl\\((?:" + string2.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
              greedy: true,
              inside: {
                "function": /^url/i,
                "punctuation": /^\(|\)$/,
                "string": {
                  pattern: RegExp("^" + string2.source + "$"),
                  alias: "url"
                }
              }
            },
            "selector": {
              pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string2.source + ")*(?=\\s*\\{)"),
              lookbehind: true
            },
            "string": {
              pattern: string2,
              greedy: true
            },
            "property": {
              pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
              lookbehind: true
            },
            "important": /!important\b/i,
            "function": {
              pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
              lookbehind: true
            },
            "punctuation": /[(){};:,]/
          };
          Prism3.languages.css["atrule"].inside.rest = Prism3.languages.css;
          var markup = Prism3.languages.markup;
          if (markup) {
            markup.tag.addInlined("style", "css");
            markup.tag.addAttribute("style", "css");
          }
        })(Prism2);
        Prism2.languages.clike = {
          "comment": [
            {
              pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
              lookbehind: true,
              greedy: true
            },
            {
              pattern: /(^|[^\\:])\/\/.*/,
              lookbehind: true,
              greedy: true
            }
          ],
          "string": {
            pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
            greedy: true
          },
          "class-name": {
            pattern: /(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,
            lookbehind: true,
            inside: {
              "punctuation": /[.\\]/
            }
          },
          "keyword": /\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,
          "boolean": /\b(?:false|true)\b/,
          "function": /\b\w+(?=\()/,
          "number": /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,
          "operator": /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
          "punctuation": /[{}[\];(),.:]/
        };
        Prism2.languages.javascript = Prism2.languages.extend("clike", {
          "class-name": [
            Prism2.languages.clike["class-name"],
            {
              pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
              lookbehind: true
            }
          ],
          "keyword": [
            {
              pattern: /((?:^|\})\s*)catch\b/,
              lookbehind: true
            },
            {
              pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
              lookbehind: true
            }
          ],
          "function": /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
          "number": {
            pattern: RegExp(/(^|[^\w$])/.source + "(?:" + (/NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source),
            lookbehind: true
          },
          "operator": /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
        });
        Prism2.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
        Prism2.languages.insertBefore("javascript", "keyword", {
          "regex": {
            pattern: RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source + /\//.source + "(?:" + /(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source + "|" + /(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ")" + /(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              "regex-source": {
                pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
                lookbehind: true,
                alias: "language-regex",
                inside: Prism2.languages.regex
              },
              "regex-delimiter": /^\/|\/$/,
              "regex-flags": /^[a-z]+$/
            }
          },
          "function-variable": {
            pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
            alias: "function"
          },
          "parameter": [
            {
              pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
              lookbehind: true,
              inside: Prism2.languages.javascript
            },
            {
              pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
              lookbehind: true,
              inside: Prism2.languages.javascript
            },
            {
              pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
              lookbehind: true,
              inside: Prism2.languages.javascript
            },
            {
              pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
              lookbehind: true,
              inside: Prism2.languages.javascript
            }
          ],
          "constant": /\b[A-Z](?:[A-Z_]|\dx?)*\b/
        });
        Prism2.languages.insertBefore("javascript", "string", {
          "hashbang": {
            pattern: /^#!.*/,
            greedy: true,
            alias: "comment"
          },
          "template-string": {
            pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
            greedy: true,
            inside: {
              "template-punctuation": {
                pattern: /^`|`$/,
                alias: "string"
              },
              "interpolation": {
                pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
                lookbehind: true,
                inside: {
                  "interpolation-punctuation": {
                    pattern: /^\$\{|\}$/,
                    alias: "punctuation"
                  },
                  rest: Prism2.languages.javascript
                }
              },
              "string": /[\s\S]+/
            }
          },
          "string-property": {
            pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
            lookbehind: true,
            greedy: true,
            alias: "property"
          }
        });
        Prism2.languages.insertBefore("javascript", "operator", {
          "literal-property": {
            pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
            lookbehind: true,
            alias: "property"
          }
        });
        if (Prism2.languages.markup) {
          Prism2.languages.markup.tag.addInlined("script", "javascript");
          Prism2.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript");
        }
        Prism2.languages.js = Prism2.languages.javascript;
        (function() {
          if (typeof Prism2 === "undefined" || typeof document === "undefined") {
            return;
          }
          if (!Element.prototype.matches) {
            Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
          }
          var LOADING_MESSAGE = "Loading\u2026";
          var FAILURE_MESSAGE = function(status, message2) {
            return "\u2716 Error " + status + " while fetching file: " + message2;
          };
          var FAILURE_EMPTY_MESSAGE = "\u2716 Error: File does not exist or is empty";
          var EXTENSIONS = {
            "js": "javascript",
            "py": "python",
            "rb": "ruby",
            "ps1": "powershell",
            "psm1": "powershell",
            "sh": "bash",
            "bat": "batch",
            "h": "c",
            "tex": "latex"
          };
          var STATUS_ATTR = "data-src-status";
          var STATUS_LOADING = "loading";
          var STATUS_LOADED = "loaded";
          var STATUS_FAILED = "failed";
          var SELECTOR = "pre[data-src]:not([" + STATUS_ATTR + '="' + STATUS_LOADED + '"]):not([' + STATUS_ATTR + '="' + STATUS_LOADING + '"])';
          function loadFile(src, success, error) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", src, true);
            xhr.onreadystatechange = function() {
              if (xhr.readyState == 4) {
                if (xhr.status < 400 && xhr.responseText) {
                  success(xhr.responseText);
                } else {
                  if (xhr.status >= 400) {
                    error(FAILURE_MESSAGE(xhr.status, xhr.statusText));
                  } else {
                    error(FAILURE_EMPTY_MESSAGE);
                  }
                }
              }
            };
            xhr.send(null);
          }
          function parseRange(range) {
            var m22 = /^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(range || "");
            if (m22) {
              var start = Number(m22[1]);
              var comma = m22[2];
              var end = m22[3];
              if (!comma) {
                return [start, start];
              }
              if (!end) {
                return [start, void 0];
              }
              return [start, Number(end)];
            }
            return void 0;
          }
          Prism2.hooks.add("before-highlightall", function(env) {
            env.selector += ", " + SELECTOR;
          });
          Prism2.hooks.add("before-sanity-check", function(env) {
            var pre = env.element;
            if (pre.matches(SELECTOR)) {
              env.code = "";
              pre.setAttribute(STATUS_ATTR, STATUS_LOADING);
              var code = pre.appendChild(document.createElement("CODE"));
              code.textContent = LOADING_MESSAGE;
              var src = pre.getAttribute("data-src");
              var language = env.language;
              if (language === "none") {
                var extension = (/\.(\w+)$/.exec(src) || [, "none"])[1];
                language = EXTENSIONS[extension] || extension;
              }
              Prism2.util.setLanguage(code, language);
              Prism2.util.setLanguage(pre, language);
              var autoloader = Prism2.plugins.autoloader;
              if (autoloader) {
                autoloader.loadLanguages(language);
              }
              loadFile(src, function(text2) {
                pre.setAttribute(STATUS_ATTR, STATUS_LOADED);
                var range = parseRange(pre.getAttribute("data-range"));
                if (range) {
                  var lines = text2.split(/\r\n?|\n/g);
                  var start = range[0];
                  var end = range[1] == null ? lines.length : range[1];
                  if (start < 0) {
                    start += lines.length;
                  }
                  start = Math.max(0, Math.min(start - 1, lines.length));
                  if (end < 0) {
                    end += lines.length;
                  }
                  end = Math.max(0, Math.min(end, lines.length));
                  text2 = lines.slice(start, end).join("\n");
                  if (!pre.hasAttribute("data-start")) {
                    pre.setAttribute("data-start", String(start + 1));
                  }
                }
                code.textContent = text2;
                Prism2.highlightElement(code);
              }, function(error) {
                pre.setAttribute(STATUS_ATTR, STATUS_FAILED);
                code.textContent = error;
              });
            }
          });
          Prism2.plugins.fileHighlight = {
            highlight: function highlight(container) {
              var elements = (container || document).querySelectorAll(SELECTOR);
              for (var i22 = 0, element; element = elements[i22++]; ) {
                Prism2.highlightElement(element);
              }
            }
          };
          var logged = false;
          Prism2.fileHighlight = function() {
            if (!logged) {
              console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.");
              logged = true;
            }
            Prism2.plugins.fileHighlight.highlight.apply(this, arguments);
          };
        })();
      })(prism);
      const ELEMENT_CODE_BLOCK = "code_block";
      const ELEMENT_CODE_LINE = "code_line";
      const ELEMENT_CODE_SYNTAX = "code_syntax";
      Prism.languages.antlr4 = {
        "comment": /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
        "string": {
          pattern: /'(?:\\.|[^\\'\r\n])*'/,
          greedy: true
        },
        "character-class": {
          pattern: /\[(?:\\.|[^\\\]\r\n])*\]/,
          greedy: true,
          alias: "regex",
          inside: {
            "range": {
              pattern: /([^[]|(?:^|[^\\])(?:\\\\)*\\\[)-(?!\])/,
              lookbehind: true,
              alias: "punctuation"
            },
            "escape": /\\(?:u(?:[a-fA-F\d]{4}|\{[a-fA-F\d]+\})|[pP]\{[=\w-]+\}|[^\r\nupP])/,
            "punctuation": /[\[\]]/
          }
        },
        "action": {
          pattern: /\{(?:[^{}]|\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})*\})*\}/,
          greedy: true,
          inside: {
            "content": {
              pattern: /(\{)[\s\S]+(?=\})/,
              lookbehind: true
            },
            "punctuation": /[{}]/
          }
        },
        "command": {
          pattern: /(->\s*(?!\s))(?:\s*(?:,\s*)?\b[a-z]\w*(?:\s*\([^()\r\n]*\))?)+(?=\s*;)/i,
          lookbehind: true,
          inside: {
            "function": /\b\w+(?=\s*(?:[,(]|$))/,
            "punctuation": /[,()]/
          }
        },
        "annotation": {
          pattern: /@\w+(?:::\w+)*/,
          alias: "keyword"
        },
        "label": {
          pattern: /#[ \t]*\w+/,
          alias: "punctuation"
        },
        "keyword": /\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\b/,
        "definition": [
          {
            pattern: /\b[a-z]\w*(?=\s*:)/,
            alias: ["rule", "class-name"]
          },
          {
            pattern: /\b[A-Z]\w*(?=\s*:)/,
            alias: ["token", "constant"]
          }
        ],
        "constant": /\b[A-Z][A-Z_]*\b/,
        "operator": /\.\.|->|[|~]|[*+?]\??/,
        "punctuation": /[;:()=]/
      };
      Prism.languages.g4 = Prism.languages.antlr4;
      (function(Prism2) {
        var envVars = "\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b";
        var commandAfterHeredoc = {
          pattern: /(^(["']?)\w+\2)[ \t]+\S.*/,
          lookbehind: true,
          alias: "punctuation",
          inside: null
        };
        var insideString = {
          "bash": commandAfterHeredoc,
          "environment": {
            pattern: RegExp("\\$" + envVars),
            alias: "constant"
          },
          "variable": [
            {
              pattern: /\$?\(\([\s\S]+?\)\)/,
              greedy: true,
              inside: {
                "variable": [
                  {
                    pattern: /(^\$\(\([\s\S]+)\)\)/,
                    lookbehind: true
                  },
                  /^\$\(\(/
                ],
                "number": /\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,
                "operator": /--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,
                "punctuation": /\(\(?|\)\)?|,|;/
              }
            },
            {
              pattern: /\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,
              greedy: true,
              inside: {
                "variable": /^\$\(|^`|\)$|`$/
              }
            },
            {
              pattern: /\$\{[^}]+\}/,
              greedy: true,
              inside: {
                "operator": /:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,
                "punctuation": /[\[\]]/,
                "environment": {
                  pattern: RegExp("(\\{)" + envVars),
                  lookbehind: true,
                  alias: "constant"
                }
              }
            },
            /\$(?:\w+|[#?*!@$])/
          ],
          "entity": /\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/
        };
        Prism2.languages.bash = {
          "shebang": {
            pattern: /^#!\s*\/.*/,
            alias: "important"
          },
          "comment": {
            pattern: /(^|[^"{\\$])#.*/,
            lookbehind: true
          },
          "function-name": [
            {
              pattern: /(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,
              lookbehind: true,
              alias: "function"
            },
            {
              pattern: /\b[\w-]+(?=\s*\(\s*\)\s*\{)/,
              alias: "function"
            }
          ],
          "for-or-select": {
            pattern: /(\b(?:for|select)\s+)\w+(?=\s+in\s)/,
            alias: "variable",
            lookbehind: true
          },
          "assign-left": {
            pattern: /(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,
            inside: {
              "environment": {
                pattern: RegExp("(^|[\\s;|&]|[<>]\\()" + envVars),
                lookbehind: true,
                alias: "constant"
              }
            },
            alias: "variable",
            lookbehind: true
          },
          "string": [
            {
              pattern: /((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,
              lookbehind: true,
              greedy: true,
              inside: insideString
            },
            {
              pattern: /((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,
              lookbehind: true,
              greedy: true,
              inside: {
                "bash": commandAfterHeredoc
              }
            },
            {
              pattern: /(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,
              lookbehind: true,
              greedy: true,
              inside: insideString
            },
            {
              pattern: /(^|[^$\\])'[^']*'/,
              lookbehind: true,
              greedy: true
            },
            {
              pattern: /\$'(?:[^'\\]|\\[\s\S])*'/,
              greedy: true,
              inside: {
                "entity": insideString.entity
              }
            }
          ],
          "environment": {
            pattern: RegExp("\\$?" + envVars),
            alias: "constant"
          },
          "variable": insideString.variable,
          "function": {
            pattern: /(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,
            lookbehind: true
          },
          "keyword": {
            pattern: /(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,
            lookbehind: true
          },
          "builtin": {
            pattern: /(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,
            lookbehind: true,
            alias: "class-name"
          },
          "boolean": {
            pattern: /(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,
            lookbehind: true
          },
          "file-descriptor": {
            pattern: /\B&\d\b/,
            alias: "important"
          },
          "operator": {
            pattern: /\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,
            inside: {
              "file-descriptor": {
                pattern: /^\d/,
                alias: "important"
              }
            }
          },
          "punctuation": /\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,
          "number": {
            pattern: /(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,
            lookbehind: true
          }
        };
        commandAfterHeredoc.inside = Prism2.languages.bash;
        var toBeCopied = [
          "comment",
          "function-name",
          "for-or-select",
          "assign-left",
          "string",
          "environment",
          "function",
          "keyword",
          "builtin",
          "boolean",
          "file-descriptor",
          "operator",
          "punctuation",
          "number"
        ];
        var inside = insideString.variable[1].inside;
        for (var i22 = 0; i22 < toBeCopied.length; i22++) {
          inside[toBeCopied[i22]] = Prism2.languages.bash[toBeCopied[i22]];
        }
        Prism2.languages.shell = Prism2.languages.bash;
      })(Prism);
      Prism.languages.c = Prism.languages.extend("clike", {
        "comment": {
          pattern: /\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,
          greedy: true
        },
        "string": {
          pattern: /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
          greedy: true
        },
        "class-name": {
          pattern: /(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,
          lookbehind: true
        },
        "keyword": /\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,
        "function": /\b[a-z_]\w*(?=\s*\()/i,
        "number": /(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,
        "operator": />>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/
      });
      Prism.languages.insertBefore("c", "string", {
        "char": {
          pattern: /'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,
          greedy: true
        }
      });
      Prism.languages.insertBefore("c", "string", {
        "macro": {
          pattern: /(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,
          lookbehind: true,
          greedy: true,
          alias: "property",
          inside: {
            "string": [
              {
                pattern: /^(#\s*include\s*)<[^>]+>/,
                lookbehind: true
              },
              Prism.languages.c["string"]
            ],
            "char": Prism.languages.c["char"],
            "comment": Prism.languages.c["comment"],
            "macro-name": [
              {
                pattern: /(^#\s*define\s+)\w+\b(?!\()/i,
                lookbehind: true
              },
              {
                pattern: /(^#\s*define\s+)\w+\b(?=\()/i,
                lookbehind: true,
                alias: "function"
              }
            ],
            "directive": {
              pattern: /^(#\s*)[a-z]+/,
              lookbehind: true,
              alias: "keyword"
            },
            "directive-hash": /^#/,
            "punctuation": /##|\\(?=[\r\n])/,
            "expression": {
              pattern: /\S[\s\S]*/,
              inside: Prism.languages.c
            }
          }
        }
      });
      Prism.languages.insertBefore("c", "function", {
        "constant": /\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/
      });
      delete Prism.languages.c["boolean"];
      Prism.languages.cmake = {
        "comment": /#.*/,
        "string": {
          pattern: /"(?:[^\\"]|\\.)*"/,
          greedy: true,
          inside: {
            "interpolation": {
              pattern: /\$\{(?:[^{}$]|\$\{[^{}$]*\})*\}/,
              inside: {
                "punctuation": /\$\{|\}/,
                "variable": /\w+/
              }
            }
          }
        },
        "variable": /\b(?:CMAKE_\w+|\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\b/,
        "property": /\b(?:cxx_\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\w+|\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\b/,
        "keyword": /\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\s*\()\b/,
        "boolean": /\b(?:FALSE|OFF|ON|TRUE)\b/,
        "namespace": /\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\b/,
        "operator": /\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\b/,
        "inserted": {
          pattern: /\b\w+::\w+\b/,
          alias: "class-name"
        },
        "number": /\b\d+(?:\.\d+)*\b/,
        "function": /\b[a-z_]\w*(?=\s*\()\b/i,
        "punctuation": /[()>}]|\$[<{]/
      };
      (function(Prism2) {
        var comment = /#(?!\{).+/;
        var interpolation = {
          pattern: /#\{[^}]+\}/,
          alias: "variable"
        };
        Prism2.languages.coffeescript = Prism2.languages.extend("javascript", {
          "comment": comment,
          "string": [
            {
              pattern: /'(?:\\[\s\S]|[^\\'])*'/,
              greedy: true
            },
            {
              pattern: /"(?:\\[\s\S]|[^\\"])*"/,
              greedy: true,
              inside: {
                "interpolation": interpolation
              }
            }
          ],
          "keyword": /\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,
          "class-member": {
            pattern: /@(?!\d)\w+/,
            alias: "variable"
          }
        });
        Prism2.languages.insertBefore("coffeescript", "comment", {
          "multiline-comment": {
            pattern: /###[\s\S]+?###/,
            alias: "comment"
          },
          "block-regex": {
            pattern: /\/{3}[\s\S]*?\/{3}/,
            alias: "regex",
            inside: {
              "comment": comment,
              "interpolation": interpolation
            }
          }
        });
        Prism2.languages.insertBefore("coffeescript", "string", {
          "inline-javascript": {
            pattern: /`(?:\\[\s\S]|[^\\`])*`/,
            inside: {
              "delimiter": {
                pattern: /^`|`$/,
                alias: "punctuation"
              },
              "script": {
                pattern: /[\s\S]+/,
                alias: "language-javascript",
                inside: Prism2.languages.javascript
              }
            }
          },
          "multiline-string": [
            {
              pattern: /'''[\s\S]*?'''/,
              greedy: true,
              alias: "string"
            },
            {
              pattern: /"""[\s\S]*?"""/,
              greedy: true,
              alias: "string",
              inside: {
                interpolation
              }
            }
          ]
        });
        Prism2.languages.insertBefore("coffeescript", "keyword", {
          "property": /(?!\d)\w+(?=\s*:(?!:))/
        });
        delete Prism2.languages.coffeescript["template-string"];
        Prism2.languages.coffee = Prism2.languages.coffeescript;
      })(Prism);
      (function(Prism2) {
        var keyword = /\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/;
        var modName = /\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g, function() {
          return keyword.source;
        });
        Prism2.languages.cpp = Prism2.languages.extend("c", {
          "class-name": [
            {
              pattern: RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g, function() {
                return keyword.source;
              })),
              lookbehind: true
            },
            /\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,
            /\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,
            /\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/
          ],
          "keyword": keyword,
          "number": {
            pattern: /(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,
            greedy: true
          },
          "operator": />>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,
          "boolean": /\b(?:false|true)\b/
        });
        Prism2.languages.insertBefore("cpp", "string", {
          "module": {
            pattern: RegExp(/(\b(?:import|module)\s+)/.source + "(?:" + /"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source + "|" + /<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g, function() {
              return modName;
            }) + ")"),
            lookbehind: true,
            greedy: true,
            inside: {
              "string": /^[<"][\s\S]+/,
              "operator": /:/,
              "punctuation": /\./
            }
          },
          "raw-string": {
            pattern: /R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,
            alias: "string",
            greedy: true
          }
        });
        Prism2.languages.insertBefore("cpp", "keyword", {
          "generic-function": {
            pattern: /\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,
            inside: {
              "function": /^\w+/,
              "generic": {
                pattern: /<[\s\S]+/,
                alias: "class-name",
                inside: Prism2.languages.cpp
              }
            }
          }
        });
        Prism2.languages.insertBefore("cpp", "operator", {
          "double-colon": {
            pattern: /::/,
            alias: "punctuation"
          }
        });
        Prism2.languages.insertBefore("cpp", "class-name", {
          "base-clause": {
            pattern: /(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,
            lookbehind: true,
            greedy: true,
            inside: Prism2.languages.extend("cpp", {})
          }
        });
        Prism2.languages.insertBefore("inside", "double-colon", {
          "class-name": /\b[a-z_]\w*\b(?!\s*::)/i
        }, Prism2.languages.cpp["base-clause"]);
      })(Prism);
      (function(Prism2) {
        function replace(pattern, replacements) {
          return pattern.replace(/<<(\d+)>>/g, function(m22, index2) {
            return "(?:" + replacements[+index2] + ")";
          });
        }
        function re22(pattern, replacements, flags) {
          return RegExp(replace(pattern, replacements), flags || "");
        }
        function nested(pattern, depthLog2) {
          for (var i22 = 0; i22 < depthLog2; i22++) {
            pattern = pattern.replace(/<<self>>/g, function() {
              return "(?:" + pattern + ")";
            });
          }
          return pattern.replace(/<<self>>/g, "[^\\s\\S]");
        }
        var keywordKinds = {
          type: "bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",
          typeDeclaration: "class enum interface record struct",
          contextual: "add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",
          other: "abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield"
        };
        function keywordsToPattern(words) {
          return "\\b(?:" + words.trim().replace(/ /g, "|") + ")\\b";
        }
        var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);
        var keywords = RegExp(keywordsToPattern(keywordKinds.type + " " + keywordKinds.typeDeclaration + " " + keywordKinds.contextual + " " + keywordKinds.other));
        var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + " " + keywordKinds.contextual + " " + keywordKinds.other);
        var nonContextualKeywords = keywordsToPattern(keywordKinds.type + " " + keywordKinds.typeDeclaration + " " + keywordKinds.other);
        var generic = nested(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source, 2);
        var nestedRound = nested(/\((?:[^()]|<<self>>)*\)/.source, 2);
        var name2 = /@?\b[A-Za-z_]\w*\b/.source;
        var genericName = replace(/<<0>>(?:\s*<<1>>)?/.source, [name2, generic]);
        var identifier = replace(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source, [nonTypeKeywords, genericName]);
        var array = /\[\s*(?:,\s*)*\]/.source;
        var typeExpressionWithoutTuple = replace(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source, [identifier, array]);
        var tupleElement = replace(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [generic, nestedRound, array]);
        var tuple = replace(/\(<<0>>+(?:,<<0>>+)+\)/.source, [tupleElement]);
        var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source, [tuple, identifier, array]);
        var typeInside = {
          "keyword": keywords,
          "punctuation": /[<>()?,.:[\]]/
        };
        var character = /'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source;
        var regularString = /"(?:\\.|[^\\"\r\n])*"/.source;
        var verbatimString = /@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;
        Prism2.languages.csharp = Prism2.languages.extend("clike", {
          "string": [
            {
              pattern: re22(/(^|[^$\\])<<0>>/.source, [verbatimString]),
              lookbehind: true,
              greedy: true
            },
            {
              pattern: re22(/(^|[^@$\\])<<0>>/.source, [regularString]),
              lookbehind: true,
              greedy: true
            }
          ],
          "class-name": [
            {
              pattern: re22(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source, [identifier]),
              lookbehind: true,
              inside: typeInside
            },
            {
              pattern: re22(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source, [name2, typeExpression]),
              lookbehind: true,
              inside: typeInside
            },
            {
              pattern: re22(/(\busing\s+)<<0>>(?=\s*=)/.source, [name2]),
              lookbehind: true
            },
            {
              pattern: re22(/(\b<<0>>\s+)<<1>>/.source, [typeDeclarationKeywords, genericName]),
              lookbehind: true,
              inside: typeInside
            },
            {
              pattern: re22(/(\bcatch\s*\(\s*)<<0>>/.source, [identifier]),
              lookbehind: true,
              inside: typeInside
            },
            {
              pattern: re22(/(\bwhere\s+)<<0>>/.source, [name2]),
              lookbehind: true
            },
            {
              pattern: re22(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source, [typeExpressionWithoutTuple]),
              lookbehind: true,
              inside: typeInside
            },
            {
              pattern: re22(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source, [typeExpression, nonContextualKeywords, name2]),
              inside: typeInside
            }
          ],
          "keyword": keywords,
          "number": /(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:[dflmu]|lu|ul)?\b/i,
          "operator": />>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,
          "punctuation": /\?\.?|::|[{}[\];(),.:]/
        });
        Prism2.languages.insertBefore("csharp", "number", {
          "range": {
            pattern: /\.\./,
            alias: "operator"
          }
        });
        Prism2.languages.insertBefore("csharp", "punctuation", {
          "named-parameter": {
            pattern: re22(/([(,]\s*)<<0>>(?=\s*:)/.source, [name2]),
            lookbehind: true,
            alias: "punctuation"
          }
        });
        Prism2.languages.insertBefore("csharp", "class-name", {
          "namespace": {
            pattern: re22(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source, [name2]),
            lookbehind: true,
            inside: {
              "punctuation": /\./
            }
          },
          "type-expression": {
            pattern: re22(/(\b(?:default|sizeof|typeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source, [nestedRound]),
            lookbehind: true,
            alias: "class-name",
            inside: typeInside
          },
          "return-type": {
            pattern: re22(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source, [typeExpression, identifier]),
            inside: typeInside,
            alias: "class-name"
          },
          "constructor-invocation": {
            pattern: re22(/(\bnew\s+)<<0>>(?=\s*[[({])/.source, [typeExpression]),
            lookbehind: true,
            inside: typeInside,
            alias: "class-name"
          },
          "generic-method": {
            pattern: re22(/<<0>>\s*<<1>>(?=\s*\()/.source, [name2, generic]),
            inside: {
              "function": re22(/^<<0>>/.source, [name2]),
              "generic": {
                pattern: RegExp(generic),
                alias: "class-name",
                inside: typeInside
              }
            }
          },
          "type-list": {
            pattern: re22(/\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source, [typeDeclarationKeywords, genericName, name2, typeExpression, keywords.source, nestedRound, /\bnew\s*\(\s*\)/.source]),
            lookbehind: true,
            inside: {
              "record-arguments": {
                pattern: re22(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source, [genericName, nestedRound]),
                lookbehind: true,
                greedy: true,
                inside: Prism2.languages.csharp
              },
              "keyword": keywords,
              "class-name": {
                pattern: RegExp(typeExpression),
                greedy: true,
                inside: typeInside
              },
              "punctuation": /[,()]/
            }
          },
          "preprocessor": {
            pattern: /(^[\t ]*)#.*/m,
            lookbehind: true,
            alias: "property",
            inside: {
              "directive": {
                pattern: /(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,
                lookbehind: true,
                alias: "keyword"
              }
            }
          }
        });
        var regularStringOrCharacter = regularString + "|" + character;
        var regularStringCharacterOrComment = replace(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source, [regularStringOrCharacter]);
        var roundExpression = nested(replace(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [regularStringCharacterOrComment]), 2);
        var attrTarget = /\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source;
        var attr = replace(/<<0>>(?:\s*\(<<1>>*\))?/.source, [identifier, roundExpression]);
        Prism2.languages.insertBefore("csharp", "class-name", {
          "attribute": {
            pattern: re22(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source, [attrTarget, attr]),
            lookbehind: true,
            greedy: true,
            inside: {
              "target": {
                pattern: re22(/^<<0>>(?=\s*:)/.source, [attrTarget]),
                alias: "keyword"
              },
              "attribute-arguments": {
                pattern: re22(/\(<<0>>*\)/.source, [roundExpression]),
                inside: Prism2.languages.csharp
              },
              "class-name": {
                pattern: RegExp(identifier),
                inside: {
                  "punctuation": /\./
                }
              },
              "punctuation": /[:,]/
            }
          }
        });
        var formatString = /:[^}\r\n]+/.source;
        var mInterpolationRound = nested(replace(/[^"'/()]|<<0>>|\(<<self>>*\)/.source, [regularStringCharacterOrComment]), 2);
        var mInterpolation = replace(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [mInterpolationRound, formatString]);
        var sInterpolationRound = nested(replace(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source, [regularStringOrCharacter]), 2);
        var sInterpolation = replace(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source, [sInterpolationRound, formatString]);
        function createInterpolationInside(interpolation, interpolationRound) {
          return {
            "interpolation": {
              pattern: re22(/((?:^|[^{])(?:\{\{)*)<<0>>/.source, [interpolation]),
              lookbehind: true,
              inside: {
                "format-string": {
                  pattern: re22(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source, [interpolationRound, formatString]),
                  lookbehind: true,
                  inside: {
                    "punctuation": /^:/
                  }
                },
                "punctuation": /^\{|\}$/,
                "expression": {
                  pattern: /[\s\S]+/,
                  alias: "language-csharp",
                  inside: Prism2.languages.csharp
                }
              }
            },
            "string": /[\s\S]+/
          };
        }
        Prism2.languages.insertBefore("csharp", "string", {
          "interpolation-string": [
            {
              pattern: re22(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source, [mInterpolation]),
              lookbehind: true,
              greedy: true,
              inside: createInterpolationInside(mInterpolation, mInterpolationRound)
            },
            {
              pattern: re22(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source, [sInterpolation]),
              lookbehind: true,
              greedy: true,
              inside: createInterpolationInside(sInterpolation, sInterpolationRound)
            }
          ],
          "char": {
            pattern: RegExp(character),
            greedy: true
          }
        });
        Prism2.languages.dotnet = Prism2.languages.cs = Prism2.languages.csharp;
      })(Prism);
      (function(Prism2) {
        var string2 = /(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;
        Prism2.languages.css = {
          "comment": /\/\*[\s\S]*?\*\//,
          "atrule": {
            pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,
            inside: {
              "rule": /^@[\w-]+/,
              "selector-function-argument": {
                pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,
                lookbehind: true,
                alias: "selector"
              },
              "keyword": {
                pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
                lookbehind: true
              }
            }
          },
          "url": {
            pattern: RegExp("\\burl\\((?:" + string2.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"),
            greedy: true,
            inside: {
              "function": /^url/i,
              "punctuation": /^\(|\)$/,
              "string": {
                pattern: RegExp("^" + string2.source + "$"),
                alias: "url"
              }
            }
          },
          "selector": {
            pattern: RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|` + string2.source + ")*(?=\\s*\\{)"),
            lookbehind: true
          },
          "string": {
            pattern: string2,
            greedy: true
          },
          "property": {
            pattern: /(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,
            lookbehind: true
          },
          "important": /!important\b/i,
          "function": {
            pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,
            lookbehind: true
          },
          "punctuation": /[(){};:,]/
        };
        Prism2.languages.css["atrule"].inside.rest = Prism2.languages.css;
        var markup = Prism2.languages.markup;
        if (markup) {
          markup.tag.addInlined("style", "css");
          markup.tag.addAttribute("style", "css");
        }
      })(Prism);
      (function(Prism2) {
        var keywords = [
          /\b(?:async|sync|yield)\*/,
          /\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/
        ];
        var packagePrefix = /(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source;
        var className = {
          pattern: RegExp(packagePrefix + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
          lookbehind: true,
          inside: {
            "namespace": {
              pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
              inside: {
                "punctuation": /\./
              }
            }
          }
        };
        Prism2.languages.dart = Prism2.languages.extend("clike", {
          "class-name": [
            className,
            {
              pattern: RegExp(packagePrefix + /[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),
              lookbehind: true,
              inside: className.inside
            }
          ],
          "keyword": keywords,
          "operator": /\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/
        });
        Prism2.languages.insertBefore("dart", "string", {
          "string-literal": {
            pattern: /r?(?:("""|''')[\s\S]*?\1|(["'])(?:\\.|(?!\2)[^\\\r\n])*\2(?!\2))/,
            greedy: true,
            inside: {
              "interpolation": {
                pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
                lookbehind: true,
                inside: {
                  "punctuation": /^\$\{?|\}$/,
                  "expression": {
                    pattern: /[\s\S]+/,
                    inside: Prism2.languages.dart
                  }
                }
              },
              "string": /[\s\S]+/
            }
          },
          "string": void 0
        });
        Prism2.languages.insertBefore("dart", "class-name", {
          "metadata": {
            pattern: /@\w+/,
            alias: "function"
          }
        });
        Prism2.languages.insertBefore("dart", "class-name", {
          "generics": {
            pattern: /<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<(?:[\w\s,.&?]|<[\w\s,.&?]*>)*>)*>)*>/,
            inside: {
              "class-name": className,
              "keyword": keywords,
              "punctuation": /[<>(),.:]/,
              "operator": /[?&|]/
            }
          }
        });
      })(Prism);
      (function(Prism2) {
        Prism2.languages.django = {
          "comment": /^\{#[\s\S]*?#\}$/,
          "tag": {
            pattern: /(^\{%[+-]?\s*)\w+/,
            lookbehind: true,
            alias: "keyword"
          },
          "delimiter": {
            pattern: /^\{[{%][+-]?|[+-]?[}%]\}$/,
            alias: "punctuation"
          },
          "string": {
            pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
            greedy: true
          },
          "filter": {
            pattern: /(\|)\w+/,
            lookbehind: true,
            alias: "function"
          },
          "test": {
            pattern: /(\bis\s+(?:not\s+)?)(?!not\b)\w+/,
            lookbehind: true,
            alias: "function"
          },
          "function": /\b[a-z_]\w+(?=\s*\()/i,
          "keyword": /\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\b/,
          "operator": /[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
          "number": /\b\d+(?:\.\d+)?\b/,
          "boolean": /[Ff]alse|[Nn]one|[Tt]rue/,
          "variable": /\b\w+\b/,
          "punctuation": /[{}[\](),.:;]/
        };
        var pattern = /\{\{[\s\S]*?\}\}|\{%[\s\S]*?%\}|\{#[\s\S]*?#\}/g;
        var markupTemplating = Prism2.languages["markup-templating"];
        Prism2.hooks.add("before-tokenize", function(env) {
          markupTemplating.buildPlaceholders(env, "django", pattern);
        });
        Prism2.hooks.add("after-tokenize", function(env) {
          markupTemplating.tokenizePlaceholders(env, "django");
        });
        Prism2.languages.jinja2 = Prism2.languages.django;
        Prism2.hooks.add("before-tokenize", function(env) {
          markupTemplating.buildPlaceholders(env, "jinja2", pattern);
        });
        Prism2.hooks.add("after-tokenize", function(env) {
          markupTemplating.tokenizePlaceholders(env, "jinja2");
        });
      })(Prism);
      (function(Prism2) {
        var spaceAfterBackSlash = /\\[\r\n](?:\s|\\[\r\n]|#.*(?!.))*(?![\s#]|\\[\r\n])/.source;
        var space = /(?:[ \t]+(?![ \t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function() {
          return spaceAfterBackSlash;
        });
        var string2 = /"(?:[^"\\\r\n]|\\(?:\r\n|[\s\S]))*"|'(?:[^'\\\r\n]|\\(?:\r\n|[\s\S]))*'/.source;
        var option = /--[\w-]+=(?:<STR>|(?!["'])(?:[^\s\\]|\\.)+)/.source.replace(/<STR>/g, function() {
          return string2;
        });
        var stringRule = {
          pattern: RegExp(string2),
          greedy: true
        };
        var commentRule = {
          pattern: /(^[ \t]*)#.*/m,
          lookbehind: true,
          greedy: true
        };
        function re22(source, flags) {
          source = source.replace(/<OPT>/g, function() {
            return option;
          }).replace(/<SP>/g, function() {
            return space;
          });
          return RegExp(source, flags);
        }
        Prism2.languages.docker = {
          "instruction": {
            pattern: /(^[ \t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\s)(?:\\.|[^\r\n\\])*(?:\\$(?:\s|#.*$)*(?![\s#])(?:\\.|[^\r\n\\])*)*/im,
            lookbehind: true,
            greedy: true,
            inside: {
              "options": {
                pattern: re22(/(^(?:ONBUILD<SP>)?\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, "i"),
                lookbehind: true,
                greedy: true,
                inside: {
                  "property": {
                    pattern: /(^|\s)--[\w-]+/,
                    lookbehind: true
                  },
                  "string": [
                    stringRule,
                    {
                      pattern: /(=)(?!["'])(?:[^\s\\]|\\.)+/,
                      lookbehind: true
                    }
                  ],
                  "operator": /\\$/m,
                  "punctuation": /=/
                }
              },
              "keyword": [
                {
                  pattern: re22(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\b/.source, "i"),
                  lookbehind: true,
                  greedy: true
                },
                {
                  pattern: re22(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \t\\]+<SP>)AS/.source, "i"),
                  lookbehind: true,
                  greedy: true
                },
                {
                  pattern: re22(/(^ONBUILD<SP>)\w+/.source, "i"),
                  lookbehind: true,
                  greedy: true
                },
                {
                  pattern: /^\w+/,
                  greedy: true
                }
              ],
              "comment": commentRule,
              "string": stringRule,
              "variable": /\$(?:\w+|\{[^{}"'\\]*\})/,
              "operator": /\\$/m
            }
          },
          "comment": commentRule
        };
        Prism2.languages.dockerfile = Prism2.languages.docker;
      })(Prism);
      (function(Prism2) {
        Prism2.languages.ejs = {
          "delimiter": {
            pattern: /^<%[-_=]?|[-_]?%>$/,
            alias: "punctuation"
          },
          "comment": /^#[\s\S]*/,
          "language-javascript": {
            pattern: /[\s\S]+/,
            inside: Prism2.languages.javascript
          }
        };
        Prism2.hooks.add("before-tokenize", function(env) {
          var ejsPattern = /<%(?!%)[\s\S]+?%>/g;
          Prism2.languages["markup-templating"].buildPlaceholders(env, "ejs", ejsPattern);
        });
        Prism2.hooks.add("after-tokenize", function(env) {
          Prism2.languages["markup-templating"].tokenizePlaceholders(env, "ejs");
        });
        Prism2.languages.eta = Prism2.languages.ejs;
      })(Prism);
      Prism.languages.erlang = {
        "comment": /%.+/,
        "string": {
          pattern: /"(?:\\.|[^\\"\r\n])*"/,
          greedy: true
        },
        "quoted-function": {
          pattern: /'(?:\\.|[^\\'\r\n])+'(?=\()/,
          alias: "function"
        },
        "quoted-atom": {
          pattern: /'(?:\\.|[^\\'\r\n])+'/,
          alias: "atom"
        },
        "boolean": /\b(?:false|true)\b/,
        "keyword": /\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\b/,
        "number": [
          /\$\\?./,
          /\b\d+#[a-z0-9]+/i,
          /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i
        ],
        "function": /\b[a-z][\w@]*(?=\()/,
        "variable": {
          pattern: /(^|[^@])(?:\b|\?)[A-Z_][\w@]*/,
          lookbehind: true
        },
        "operator": [
          /[=\/<>:]=|=[:\/]=|\+\+?|--?|[=*\/!]|\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\b/,
          {
            pattern: /(^|[^<])<(?!<)/,
            lookbehind: true
          },
          {
            pattern: /(^|[^>])>(?!>)/,
            lookbehind: true
          }
        ],
        "atom": /\b[a-z][\w@]*/,
        "punctuation": /[()[\]{}:;,.#|]|<<|>>/
      };
      Prism.languages.git = {
        "comment": /^#.*/m,
        "deleted": /^[-–].*/m,
        "inserted": /^\+.*/m,
        "string": /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
        "command": {
          pattern: /^.*\$ git .*$/m,
          inside: {
            "parameter": /\s--?\w+/
          }
        },
        "coord": /^@@.*@@$/m,
        "commit-sha1": /^commit \w{40}$/m
      };
      Prism.languages.go = Prism.languages.extend("clike", {
        "string": {
          pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,
          lookbehind: true,
          greedy: true
        },
        "keyword": /\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,
        "boolean": /\b(?:_|false|iota|nil|true)\b/,
        "number": [
          /\b0(?:b[01_]+|o[0-7_]+)i?\b/i,
          /\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,
          /(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i
        ],
        "operator": /[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,
        "builtin": /\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/
      });
      Prism.languages.insertBefore("go", "string", {
        "char": {
          pattern: /'(?:\\.|[^'\\\r\n]){0,10}'/,
          greedy: true
        }
      });
      delete Prism.languages.go["class-name"];
      Prism.languages.graphql = {
        "comment": /#.*/,
        "description": {
          pattern: /(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,
          greedy: true,
          alias: "string",
          inside: {
            "language-markdown": {
              pattern: /(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,
              lookbehind: true,
              inside: Prism.languages.markdown
            }
          }
        },
        "string": {
          pattern: /"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,
          greedy: true
        },
        "number": /(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
        "boolean": /\b(?:false|true)\b/,
        "variable": /\$[a-z_]\w*/i,
        "directive": {
          pattern: /@[a-z_]\w*/i,
          alias: "function"
        },
        "attr-name": {
          pattern: /\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,
          greedy: true
        },
        "atom-input": {
          pattern: /\b[A-Z]\w*Input\b/,
          alias: "class-name"
        },
        "scalar": /\b(?:Boolean|Float|ID|Int|String)\b/,
        "constant": /\b[A-Z][A-Z_\d]*\b/,
        "class-name": {
          pattern: /(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,
          lookbehind: true
        },
        "fragment": {
          pattern: /(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,
          lookbehind: true,
          alias: "function"
        },
        "definition-mutation": {
          pattern: /(\bmutation\s+)[a-zA-Z_]\w*/,
          lookbehind: true,
          alias: "function"
        },
        "definition-query": {
          pattern: /(\bquery\s+)[a-zA-Z_]\w*/,
          lookbehind: true,
          alias: "function"
        },
        "keyword": /\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,
        "operator": /[!=|&]|\.{3}/,
        "property-query": /\w+(?=\s*\()/,
        "object": /\w+(?=\s*\{)/,
        "punctuation": /[!(){}\[\]:=,]/,
        "property": /\w+/
      };
      Prism.hooks.add("after-tokenize", function afterTokenizeGraphql(env) {
        if (env.language !== "graphql") {
          return;
        }
        var validTokens = env.tokens.filter(function(token2) {
          return typeof token2 !== "string" && token2.type !== "comment" && token2.type !== "scalar";
        });
        var currentIndex = 0;
        function getToken(offset2) {
          return validTokens[currentIndex + offset2];
        }
        function isTokenType(types, offset2) {
          offset2 = offset2 || 0;
          for (var i32 = 0; i32 < types.length; i32++) {
            var token2 = getToken(i32 + offset2);
            if (!token2 || token2.type !== types[i32]) {
              return false;
            }
          }
          return true;
        }
        function findClosingBracket(open, close) {
          var stackHeight = 1;
          for (var i32 = currentIndex; i32 < validTokens.length; i32++) {
            var token2 = validTokens[i32];
            var content2 = token2.content;
            if (token2.type === "punctuation" && typeof content2 === "string") {
              if (open.test(content2)) {
                stackHeight++;
              } else if (close.test(content2)) {
                stackHeight--;
                if (stackHeight === 0) {
                  return i32;
                }
              }
            }
          }
          return -1;
        }
        function addAlias(token2, alias) {
          var aliases2 = token2.alias;
          if (!aliases2) {
            token2.alias = aliases2 = [];
          } else if (!Array.isArray(aliases2)) {
            token2.alias = aliases2 = [aliases2];
          }
          aliases2.push(alias);
        }
        for (; currentIndex < validTokens.length; ) {
          var startToken = validTokens[currentIndex++];
          if (startToken.type === "keyword" && startToken.content === "mutation") {
            var inputVariables = [];
            if (isTokenType(["definition-mutation", "punctuation"]) && getToken(1).content === "(") {
              currentIndex += 2;
              var definitionEnd = findClosingBracket(/^\($/, /^\)$/);
              if (definitionEnd === -1) {
                continue;
              }
              for (; currentIndex < definitionEnd; currentIndex++) {
                var t22 = getToken(0);
                if (t22.type === "variable") {
                  addAlias(t22, "variable-input");
                  inputVariables.push(t22.content);
                }
              }
              currentIndex = definitionEnd + 1;
            }
            if (isTokenType(["punctuation", "property-query"]) && getToken(0).content === "{") {
              currentIndex++;
              addAlias(getToken(0), "property-mutation");
              if (inputVariables.length > 0) {
                var mutationEnd = findClosingBracket(/^\{$/, /^\}$/);
                if (mutationEnd === -1) {
                  continue;
                }
                for (var i22 = currentIndex; i22 < mutationEnd; i22++) {
                  var varToken = validTokens[i22];
                  if (varToken.type === "variable" && inputVariables.indexOf(varToken.content) >= 0) {
                    addAlias(varToken, "variable-input");
                  }
                }
              }
            }
          }
        }
      });
      (function(Prism2) {
        var interpolation = {
          pattern: /((?:^|[^\\$])(?:\\{2})*)\$(?:\w+|\{[^{}]*\})/,
          lookbehind: true,
          inside: {
            "interpolation-punctuation": {
              pattern: /^\$\{?|\}$/,
              alias: "punctuation"
            },
            "expression": {
              pattern: /[\s\S]+/,
              inside: null
            }
          }
        };
        Prism2.languages.groovy = Prism2.languages.extend("clike", {
          "string": {
            pattern: /'''(?:[^\\]|\\[\s\S])*?'''|'(?:\\.|[^\\'\r\n])*'/,
            greedy: true
          },
          "keyword": /\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,
          "number": /\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,
          "operator": {
            pattern: /(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,
            lookbehind: true
          },
          "punctuation": /\.+|[{}[\];(),:$]/
        });
        Prism2.languages.insertBefore("groovy", "string", {
          "shebang": {
            pattern: /#!.+/,
            alias: "comment",
            greedy: true
          },
          "interpolation-string": {
            pattern: /"""(?:[^\\]|\\[\s\S])*?"""|(["/])(?:\\.|(?!\1)[^\\\r\n])*\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,
            greedy: true,
            inside: {
              "interpolation": interpolation,
              "string": /[\s\S]+/
            }
          }
        });
        Prism2.languages.insertBefore("groovy", "punctuation", {
          "spock-block": /\b(?:and|cleanup|expect|given|setup|then|when|where):/
        });
        Prism2.languages.insertBefore("groovy", "function", {
          "annotation": {
            pattern: /(^|[^.])@\w+/,
            lookbehind: true,
            alias: "punctuation"
          }
        });
        interpolation.inside.expression.inside = Prism2.languages.groovy;
      })(Prism);
      (function(Prism2) {
        var keywords = /\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\s*[(){}[\]<>=%~.:,;?+\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/;
        var classNamePrefix = /(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source;
        var className = {
          pattern: RegExp(/(^|[^\w.])/.source + classNamePrefix + /[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),
          lookbehind: true,
          inside: {
            "namespace": {
              pattern: /^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,
              inside: {
                "punctuation": /\./
              }
            },
            "punctuation": /\./
          }
        };
        Prism2.languages.java = Prism2.languages.extend("clike", {
          "string": {
            pattern: /(^|[^\\])"(?:\\.|[^"\\\r\n])*"/,
            lookbehind: true,
            greedy: true
          },
          "class-name": [
            className,
            {
              pattern: RegExp(/(^|[^\w.])/.source + classNamePrefix + /[A-Z]\w*(?=\s+\w+\s*[;,=()]|\s*(?:\[[\s,]*\]\s*)?::\s*new\b)/.source),
              lookbehind: true,
              inside: className.inside
            },
            {
              pattern: RegExp(/(\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\s+)/.source + classNamePrefix + /[A-Z]\w*\b/.source),
              lookbehind: true,
              inside: className.inside
            }
          ],
          "keyword": keywords,
          "function": [
            Prism2.languages.clike.function,
            {
              pattern: /(::\s*)[a-z_]\w*/,
              lookbehind: true
            }
          ],
          "number": /\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,
          "operator": {
            pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,
            lookbehind: true
          }
        });
        Prism2.languages.insertBefore("java", "string", {
          "triple-quoted-string": {
            pattern: /"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,
            greedy: true,
            alias: "string"
          },
          "char": {
            pattern: /'(?:\\.|[^'\\\r\n]){1,6}'/,
            greedy: true
          }
        });
        Prism2.languages.insertBefore("java", "class-name", {
          "annotation": {
            pattern: /(^|[^.])@\w+(?:\s*\.\s*\w+)*/,
            lookbehind: true,
            alias: "punctuation"
          },
          "generics": {
            pattern: /<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,
            inside: {
              "class-name": className,
              "keyword": keywords,
              "punctuation": /[<>(),.:]/,
              "operator": /[?&|]/
            }
          },
          "import": [
            {
              pattern: RegExp(/(\bimport\s+)/.source + classNamePrefix + /(?:[A-Z]\w*|\*)(?=\s*;)/.source),
              lookbehind: true,
              inside: {
                "namespace": className.inside.namespace,
                "punctuation": /\./,
                "operator": /\*/,
                "class-name": /\w+/
              }
            },
            {
              pattern: RegExp(/(\bimport\s+static\s+)/.source + classNamePrefix + /(?:\w+|\*)(?=\s*;)/.source),
              lookbehind: true,
              alias: "static",
              inside: {
                "namespace": className.inside.namespace,
                "static": /\b\w+$/,
                "punctuation": /\./,
                "operator": /\*/,
                "class-name": /\w+/
              }
            }
          ],
          "namespace": {
            pattern: RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g, function() {
              return keywords.source;
            })),
            lookbehind: true,
            inside: {
              "punctuation": /\./
            }
          }
        });
      })(Prism);
      Prism.languages.javascript = Prism.languages.extend("clike", {
        "class-name": [
          Prism.languages.clike["class-name"],
          {
            pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,
            lookbehind: true
          }
        ],
        "keyword": [
          {
            pattern: /((?:^|\})\s*)catch\b/,
            lookbehind: true
          },
          {
            pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
            lookbehind: true
          }
        ],
        "function": /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
        "number": {
          pattern: RegExp(/(^|[^\w$])/.source + "(?:" + (/NaN|Infinity/.source + "|" + /0[bB][01]+(?:_[01]+)*n?/.source + "|" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + "|" + /0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source + "|" + /\d+(?:_\d+)*n/.source + "|" + /(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source) + ")" + /(?![\w$])/.source),
          lookbehind: true
        },
        "operator": /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
      });
      Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/;
      Prism.languages.insertBefore("javascript", "keyword", {
        "regex": {
          pattern: RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source + /\//.source + "(?:" + /(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source + "|" + /(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ")" + /(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),
          lookbehind: true,
          greedy: true,
          inside: {
            "regex-source": {
              pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
              lookbehind: true,
              alias: "language-regex",
              inside: Prism.languages.regex
            },
            "regex-delimiter": /^\/|\/$/,
            "regex-flags": /^[a-z]+$/
          }
        },
        "function-variable": {
          pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,
          alias: "function"
        },
        "parameter": [
          {
            pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,
            lookbehind: true,
            inside: Prism.languages.javascript
          },
          {
            pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,
            lookbehind: true,
            inside: Prism.languages.javascript
          },
          {
            pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,
            lookbehind: true,
            inside: Prism.languages.javascript
          },
          {
            pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,
            lookbehind: true,
            inside: Prism.languages.javascript
          }
        ],
        "constant": /\b[A-Z](?:[A-Z_]|\dx?)*\b/
      });
      Prism.languages.insertBefore("javascript", "string", {
        "hashbang": {
          pattern: /^#!.*/,
          greedy: true,
          alias: "comment"
        },
        "template-string": {
          pattern: /`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,
          greedy: true,
          inside: {
            "template-punctuation": {
              pattern: /^`|`$/,
              alias: "string"
            },
            "interpolation": {
              pattern: /((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,
              lookbehind: true,
              inside: {
                "interpolation-punctuation": {
                  pattern: /^\$\{|\}$/,
                  alias: "punctuation"
                },
                rest: Prism.languages.javascript
              }
            },
            "string": /[\s\S]+/
          }
        },
        "string-property": {
          pattern: /((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,
          lookbehind: true,
          greedy: true,
          alias: "property"
        }
      });
      Prism.languages.insertBefore("javascript", "operator", {
        "literal-property": {
          pattern: /((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,
          lookbehind: true,
          alias: "property"
        }
      });
      if (Prism.languages.markup) {
        Prism.languages.markup.tag.addInlined("script", "javascript");
        Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, "javascript");
      }
      Prism.languages.js = Prism.languages.javascript;
      Prism.languages.json = {
        "property": {
          pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,
          lookbehind: true,
          greedy: true
        },
        "string": {
          pattern: /(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,
          lookbehind: true,
          greedy: true
        },
        "comment": {
          pattern: /\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,
          greedy: true
        },
        "number": /-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,
        "punctuation": /[{}[\],]/,
        "operator": /:/,
        "boolean": /\b(?:false|true)\b/,
        "null": {
          pattern: /\bnull\b/,
          alias: "keyword"
        }
      };
      Prism.languages.webmanifest = Prism.languages.json;
      (function(Prism2) {
        var javascript = Prism2.util.clone(Prism2.languages.javascript);
        var space = /(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source;
        var braces = /(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source;
        var spread = /(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;
        function re22(source, flags) {
          source = source.replace(/<S>/g, function() {
            return space;
          }).replace(/<BRACES>/g, function() {
            return braces;
          }).replace(/<SPREAD>/g, function() {
            return spread;
          });
          return RegExp(source, flags);
        }
        spread = re22(spread).source;
        Prism2.languages.jsx = Prism2.languages.extend("markup", javascript);
        Prism2.languages.jsx.tag.pattern = re22(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source);
        Prism2.languages.jsx.tag.inside["tag"].pattern = /^<\/?[^\s>\/]*/;
        Prism2.languages.jsx.tag.inside["attr-value"].pattern = /=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/;
        Prism2.languages.jsx.tag.inside["tag"].inside["class-name"] = /^[A-Z]\w*(?:\.[A-Z]\w*)*$/;
        Prism2.languages.jsx.tag.inside["comment"] = javascript["comment"];
        Prism2.languages.insertBefore("inside", "attr-name", {
          "spread": {
            pattern: re22(/<SPREAD>/.source),
            inside: Prism2.languages.jsx
          }
        }, Prism2.languages.jsx.tag);
        Prism2.languages.insertBefore("inside", "special-attr", {
          "script": {
            pattern: re22(/=<BRACES>/.source),
            alias: "language-javascript",
            inside: {
              "script-punctuation": {
                pattern: /^=(?=\{)/,
                alias: "punctuation"
              },
              rest: Prism2.languages.jsx
            }
          }
        }, Prism2.languages.jsx.tag);
        var stringifyToken = function(token2) {
          if (!token2) {
            return "";
          }
          if (typeof token2 === "string") {
            return token2;
          }
          if (typeof token2.content === "string") {
            return token2.content;
          }
          return token2.content.map(stringifyToken).join("");
        };
        var walkTokens = function(tokens2) {
          var openedTags = [];
          for (var i22 = 0; i22 < tokens2.length; i22++) {
            var token2 = tokens2[i22];
            var notTagNorBrace = false;
            if (typeof token2 !== "string") {
              if (token2.type === "tag" && token2.content[0] && token2.content[0].type === "tag") {
                if (token2.content[0].content[0].content === "</") {
                  if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token2.content[0].content[1])) {
                    openedTags.pop();
                  }
                } else {
                  if (token2.content[token2.content.length - 1].content === "/>")
                    ;
                  else {
                    openedTags.push({
                      tagName: stringifyToken(token2.content[0].content[1]),
                      openedBraces: 0
                    });
                  }
                }
              } else if (openedTags.length > 0 && token2.type === "punctuation" && token2.content === "{") {
                openedTags[openedTags.length - 1].openedBraces++;
              } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token2.type === "punctuation" && token2.content === "}") {
                openedTags[openedTags.length - 1].openedBraces--;
              } else {
                notTagNorBrace = true;
              }
            }
            if (notTagNorBrace || typeof token2 === "string") {
              if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {
                var plainText = stringifyToken(token2);
                if (i22 < tokens2.length - 1 && (typeof tokens2[i22 + 1] === "string" || tokens2[i22 + 1].type === "plain-text")) {
                  plainText += stringifyToken(tokens2[i22 + 1]);
                  tokens2.splice(i22 + 1, 1);
                }
                if (i22 > 0 && (typeof tokens2[i22 - 1] === "string" || tokens2[i22 - 1].type === "plain-text")) {
                  plainText = stringifyToken(tokens2[i22 - 1]) + plainText;
                  tokens2.splice(i22 - 1, 1);
                  i22--;
                }
                tokens2[i22] = new Prism2.Token("plain-text", plainText, null, plainText);
              }
            }
            if (token2.content && typeof token2.content !== "string") {
              walkTokens(token2.content);
            }
          }
        };
        Prism2.hooks.add("after-tokenize", function(env) {
          if (env.language !== "jsx" && env.language !== "tsx") {
            return;
          }
          walkTokens(env.tokens);
        });
      })(Prism);
      (function(Prism2) {
        Prism2.languages.kotlin = Prism2.languages.extend("clike", {
          "keyword": {
            pattern: /(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,
            lookbehind: true
          },
          "function": [
            {
              pattern: /(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,
              greedy: true
            },
            {
              pattern: /(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,
              lookbehind: true,
              greedy: true
            }
          ],
          "number": /\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,
          "operator": /\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/
        });
        delete Prism2.languages.kotlin["class-name"];
        var interpolationInside = {
          "interpolation-punctuation": {
            pattern: /^\$\{?|\}$/,
            alias: "punctuation"
          },
          "expression": {
            pattern: /[\s\S]+/,
            inside: Prism2.languages.kotlin
          }
        };
        Prism2.languages.insertBefore("kotlin", "string", {
          "string-literal": [
            {
              pattern: /"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,
              alias: "multiline",
              inside: {
                "interpolation": {
                  pattern: /\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                  inside: interpolationInside
                },
                "string": /[\s\S]+/
              }
            },
            {
              pattern: /"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,
              alias: "singleline",
              inside: {
                "interpolation": {
                  pattern: /((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,
                  lookbehind: true,
                  inside: interpolationInside
                },
                "string": /[\s\S]+/
              }
            }
          ],
          "char": {
            pattern: /'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,
            greedy: true
          }
        });
        delete Prism2.languages.kotlin["string"];
        Prism2.languages.insertBefore("kotlin", "keyword", {
          "annotation": {
            pattern: /\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,
            alias: "builtin"
          }
        });
        Prism2.languages.insertBefore("kotlin", "function", {
          "label": {
            pattern: /\b\w+@|@\w+\b/,
            alias: "symbol"
          }
        });
        Prism2.languages.kt = Prism2.languages.kotlin;
        Prism2.languages.kts = Prism2.languages.kotlin;
      })(Prism);
      (function(Prism2) {
        var funcPattern = /\\(?:[^a-z()[\]]|[a-z*]+)/i;
        var insideEqu = {
          "equation-command": {
            pattern: funcPattern,
            alias: "regex"
          }
        };
        Prism2.languages.latex = {
          "comment": /%.*/,
          "cdata": {
            pattern: /(\\begin\{((?:lstlisting|verbatim)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
            lookbehind: true
          },
          "equation": [
            {
              pattern: /\$\$(?:\\[\s\S]|[^\\$])+\$\$|\$(?:\\[\s\S]|[^\\$])+\$|\\\([\s\S]*?\\\)|\\\[[\s\S]*?\\\]/,
              inside: insideEqu,
              alias: "string"
            },
            {
              pattern: /(\\begin\{((?:align|eqnarray|equation|gather|math|multline)\*?)\})[\s\S]*?(?=\\end\{\2\})/,
              lookbehind: true,
              inside: insideEqu,
              alias: "string"
            }
          ],
          "keyword": {
            pattern: /(\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
            lookbehind: true
          },
          "url": {
            pattern: /(\\url\{)[^}]+(?=\})/,
            lookbehind: true
          },
          "headline": {
            pattern: /(\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\*?(?:\[[^\]]+\])?\{)[^}]+(?=\})/,
            lookbehind: true,
            alias: "class-name"
          },
          "function": {
            pattern: funcPattern,
            alias: "selector"
          },
          "punctuation": /[[\]{}&]/
        };
        Prism2.languages.tex = Prism2.languages.latex;
        Prism2.languages.context = Prism2.languages.latex;
      })(Prism);
      Prism.languages.less = Prism.languages.extend("css", {
        "comment": [
          /\/\*[\s\S]*?\*\//,
          {
            pattern: /(^|[^\\])\/\/.*/,
            lookbehind: true
          }
        ],
        "atrule": {
          pattern: /@[\w-](?:\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};\s]|\s+(?!\s))*?(?=\s*\{)/,
          inside: {
            "punctuation": /[:()]/
          }
        },
        "selector": {
          pattern: /(?:@\{[\w-]+\}|[^{};\s@])(?:@\{[\w-]+\}|\((?:[^(){}]|\([^(){}]*\))*\)|[^(){};@\s]|\s+(?!\s))*?(?=\s*\{)/,
          inside: {
            "variable": /@+[\w-]+/
          }
        },
        "property": /(?:@\{[\w-]+\}|[\w-])+(?:\+_?)?(?=\s*:)/,
        "operator": /[+\-*\/]/
      });
      Prism.languages.insertBefore("less", "property", {
        "variable": [
          {
            pattern: /@[\w-]+\s*:/,
            inside: {
              "punctuation": /:/
            }
          },
          /@@?[\w-]+/
        ],
        "mixin-usage": {
          pattern: /([{;]\s*)[.#](?!\d)[\w-].*?(?=[(;])/,
          lookbehind: true,
          alias: "function"
        }
      });
      Prism.languages.lua = {
        "comment": /^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,
        "string": {
          pattern: /(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,
          greedy: true
        },
        "number": /\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,
        "keyword": /\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,
        "function": /(?!\d)\w+(?=\s*(?:[({]))/,
        "operator": [
          /[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,
          {
            pattern: /(^|[^.])\.\.(?!\.)/,
            lookbehind: true
          }
        ],
        "punctuation": /[\[\](){},;]|\.+|:+/
      };
      Prism.languages.makefile = {
        "comment": {
          pattern: /(^|[^\\])#(?:\\(?:\r\n|[\s\S])|[^\\\r\n])*/,
          lookbehind: true
        },
        "string": {
          pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
          greedy: true
        },
        "builtin-target": {
          pattern: /\.[A-Z][^:#=\s]+(?=\s*:(?!=))/,
          alias: "builtin"
        },
        "target": {
          pattern: /^(?:[^:=\s]|[ \t]+(?![\s:]))+(?=\s*:(?!=))/m,
          alias: "symbol",
          inside: {
            "variable": /\$+(?:(?!\$)[^(){}:#=\s]+|(?=[({]))/
          }
        },
        "variable": /\$+(?:(?!\$)[^(){}:#=\s]+|\([@*%<^+?][DF]\)|(?=[({]))/,
        "keyword": /-include\b|\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\b/,
        "function": {
          pattern: /(\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \t])/,
          lookbehind: true
        },
        "operator": /(?:::|[?:+!])?=|[|@]/,
        "punctuation": /[:;(){}]/
      };
      (function(Prism2) {
        var inner = /(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;
        function createInline(pattern) {
          pattern = pattern.replace(/<inner>/g, function() {
            return inner;
          });
          return RegExp(/((?:^|[^\\])(?:\\{2})*)/.source + "(?:" + pattern + ")");
        }
        var tableCell = /(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source;
        var tableRow = /\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g, function() {
          return tableCell;
        });
        var tableLine = /\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;
        Prism2.languages.markdown = Prism2.languages.extend("markup", {});
        Prism2.languages.insertBefore("markdown", "prolog", {
          "front-matter-block": {
            pattern: /(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,
            lookbehind: true,
            greedy: true,
            inside: {
              "punctuation": /^---|---$/,
              "front-matter": {
                pattern: /\S+(?:\s+\S+)*/,
                alias: ["yaml", "language-yaml"],
                inside: Prism2.languages.yaml
              }
            }
          },
          "blockquote": {
            pattern: /^>(?:[\t ]*>)*/m,
            alias: "punctuation"
          },
          "table": {
            pattern: RegExp("^" + tableRow + tableLine + "(?:" + tableRow + ")*", "m"),
            inside: {
              "table-data-rows": {
                pattern: RegExp("^(" + tableRow + tableLine + ")(?:" + tableRow + ")*$"),
                lookbehind: true,
                inside: {
                  "table-data": {
                    pattern: RegExp(tableCell),
                    inside: Prism2.languages.markdown
                  },
                  "punctuation": /\|/
                }
              },
              "table-line": {
                pattern: RegExp("^(" + tableRow + ")" + tableLine + "$"),
                lookbehind: true,
                inside: {
                  "punctuation": /\||:?-{3,}:?/
                }
              },
              "table-header-row": {
                pattern: RegExp("^" + tableRow + "$"),
                inside: {
                  "table-header": {
                    pattern: RegExp(tableCell),
                    alias: "important",
                    inside: Prism2.languages.markdown
                  },
                  "punctuation": /\|/
                }
              }
            }
          },
          "code": [
            {
              pattern: /((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,
              lookbehind: true,
              alias: "keyword"
            },
            {
              pattern: /^```[\s\S]*?^```$/m,
              greedy: true,
              inside: {
                "code-block": {
                  pattern: /^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,
                  lookbehind: true
                },
                "code-language": {
                  pattern: /^(```).+/,
                  lookbehind: true
                },
                "punctuation": /```/
              }
            }
          ],
          "title": [
            {
              pattern: /\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,
              alias: "important",
              inside: {
                punctuation: /==+$|--+$/
              }
            },
            {
              pattern: /(^\s*)#.+/m,
              lookbehind: true,
              alias: "important",
              inside: {
                punctuation: /^#+|#+$/
              }
            }
          ],
          "hr": {
            pattern: /(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,
            lookbehind: true,
            alias: "punctuation"
          },
          "list": {
            pattern: /(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,
            lookbehind: true,
            alias: "punctuation"
          },
          "url-reference": {
            pattern: /!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,
            inside: {
              "variable": {
                pattern: /^(!?\[)[^\]]+/,
                lookbehind: true
              },
              "string": /(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,
              "punctuation": /^[\[\]!:]|[<>]/
            },
            alias: "url"
          },
          "bold": {
            pattern: createInline(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              "content": {
                pattern: /(^..)[\s\S]+(?=..$)/,
                lookbehind: true,
                inside: {}
              },
              "punctuation": /\*\*|__/
            }
          },
          "italic": {
            pattern: createInline(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              "content": {
                pattern: /(^.)[\s\S]+(?=.$)/,
                lookbehind: true,
                inside: {}
              },
              "punctuation": /[*_]/
            }
          },
          "strike": {
            pattern: createInline(/(~~?)(?:(?!~)<inner>)+\2/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              "content": {
                pattern: /(^~~?)[\s\S]+(?=\1$)/,
                lookbehind: true,
                inside: {}
              },
              "punctuation": /~~?/
            }
          },
          "code-snippet": {
            pattern: /(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,
            lookbehind: true,
            greedy: true,
            alias: ["code", "keyword"]
          },
          "url": {
            pattern: createInline(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              "operator": /^!/,
              "content": {
                pattern: /(^\[)[^\]]+(?=\])/,
                lookbehind: true,
                inside: {}
              },
              "variable": {
                pattern: /(^\][ \t]?\[)[^\]]+(?=\]$)/,
                lookbehind: true
              },
              "url": {
                pattern: /(^\]\()[^\s)]+/,
                lookbehind: true
              },
              "string": {
                pattern: /(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,
                lookbehind: true
              }
            }
          }
        });
        ["url", "bold", "italic", "strike"].forEach(function(token2) {
          ["url", "bold", "italic", "strike", "code-snippet"].forEach(function(inside) {
            if (token2 !== inside) {
              Prism2.languages.markdown[token2].inside.content.inside[inside] = Prism2.languages.markdown[inside];
            }
          });
        });
        Prism2.hooks.add("after-tokenize", function(env) {
          if (env.language !== "markdown" && env.language !== "md") {
            return;
          }
          function walkTokens(tokens2) {
            if (!tokens2 || typeof tokens2 === "string") {
              return;
            }
            for (var i22 = 0, l22 = tokens2.length; i22 < l22; i22++) {
              var token2 = tokens2[i22];
              if (token2.type !== "code") {
                walkTokens(token2.content);
                continue;
              }
              var codeLang = token2.content[1];
              var codeBlock = token2.content[3];
              if (codeLang && codeBlock && codeLang.type === "code-language" && codeBlock.type === "code-block" && typeof codeLang.content === "string") {
                var lang2 = codeLang.content.replace(/\b#/g, "sharp").replace(/\b\+\+/g, "pp");
                lang2 = (/[a-z][\w-]*/i.exec(lang2) || [""])[0].toLowerCase();
                var alias = "language-" + lang2;
                if (!codeBlock.alias) {
                  codeBlock.alias = [alias];
                } else if (typeof codeBlock.alias === "string") {
                  codeBlock.alias = [codeBlock.alias, alias];
                } else {
                  codeBlock.alias.push(alias);
                }
              }
            }
          }
          walkTokens(env.tokens);
        });
        Prism2.hooks.add("wrap", function(env) {
          if (env.type !== "code-block") {
            return;
          }
          var codeLang = "";
          for (var i22 = 0, l22 = env.classes.length; i22 < l22; i22++) {
            var cls = env.classes[i22];
            var match5 = /language-(.+)/.exec(cls);
            if (match5) {
              codeLang = match5[1];
              break;
            }
          }
          var grammar = Prism2.languages[codeLang];
          if (!grammar) {
            if (codeLang && codeLang !== "none" && Prism2.plugins.autoloader) {
              var id2 = "md-" + new Date().valueOf() + "-" + Math.floor(Math.random() * 1e16);
              env.attributes["id"] = id2;
              Prism2.plugins.autoloader.loadLanguages(codeLang, function() {
                var ele = document.getElementById(id2);
                if (ele) {
                  ele.innerHTML = Prism2.highlight(ele.textContent, Prism2.languages[codeLang], codeLang);
                }
              });
            }
          } else {
            env.content = Prism2.highlight(textContent(env.content), grammar, codeLang);
          }
        });
        var tagPattern = RegExp(Prism2.languages.markup.tag.pattern.source, "gi");
        var KNOWN_ENTITY_NAMES = {
          "amp": "&",
          "lt": "<",
          "gt": ">",
          "quot": '"'
        };
        var fromCodePoint = String.fromCodePoint || String.fromCharCode;
        function textContent(html) {
          var text2 = html.replace(tagPattern, "");
          text2 = text2.replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi, function(m22, code) {
            code = code.toLowerCase();
            if (code[0] === "#") {
              var value;
              if (code[1] === "x") {
                value = parseInt(code.slice(2), 16);
              } else {
                value = Number(code.slice(1));
              }
              return fromCodePoint(value);
            } else {
              var known = KNOWN_ENTITY_NAMES[code];
              if (known) {
                return known;
              }
              return m22;
            }
          });
          return text2;
        }
        Prism2.languages.md = Prism2.languages.markdown;
      })(Prism);
      Prism.languages.matlab = {
        "comment": [
          /%\{[\s\S]*?\}%/,
          /%.+/
        ],
        "string": {
          pattern: /\B'(?:''|[^'\r\n])*'/,
          greedy: true
        },
        "number": /(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[eE][+-]?\d+)?(?:[ij])?|\b[ij]\b/,
        "keyword": /\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\b/,
        "function": /\b(?!\d)\w+(?=\s*\()/,
        "operator": /\.?[*^\/\\']|[+\-:@]|[<>=~]=?|&&?|\|\|?/,
        "punctuation": /\.{3}|[.,;\[\](){}!]/
      };
      Prism.languages.objectivec = Prism.languages.extend("c", {
        "string": {
          pattern: /@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,
          greedy: true
        },
        "keyword": /\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,
        "operator": /-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/
      });
      delete Prism.languages.objectivec["class-name"];
      Prism.languages.objc = Prism.languages.objectivec;
      (function(Prism2) {
        var brackets = /(?:\((?:[^()\\]|\\[\s\S])*\)|\{(?:[^{}\\]|\\[\s\S])*\}|\[(?:[^[\]\\]|\\[\s\S])*\]|<(?:[^<>\\]|\\[\s\S])*>)/.source;
        Prism2.languages.perl = {
          "comment": [
            {
              pattern: /(^\s*)=\w[\s\S]*?=cut.*/m,
              lookbehind: true,
              greedy: true
            },
            {
              pattern: /(^|[^\\$])#.*/,
              lookbehind: true,
              greedy: true
            }
          ],
          "string": [
            {
              pattern: RegExp(/\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                brackets
              ].join("|") + ")"),
              greedy: true
            },
            {
              pattern: /("|`)(?:(?!\1)[^\\]|\\[\s\S])*\1/,
              greedy: true
            },
            {
              pattern: /'(?:[^'\\\r\n]|\\.)*'/,
              greedy: true
            }
          ],
          "regex": [
            {
              pattern: RegExp(/\b(?:m|qr)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
                /([a-zA-Z0-9])(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                brackets
              ].join("|") + ")" + /[msixpodualngc]*/.source),
              greedy: true
            },
            {
              pattern: RegExp(/(^|[^-])\b(?:s|tr|y)(?![a-zA-Z0-9])\s*/.source + "(?:" + [
                /([^a-zA-Z0-9\s{(\[<])(?:(?!\2)[^\\]|\\[\s\S])*\2(?:(?!\2)[^\\]|\\[\s\S])*\2/.source,
                /([a-zA-Z0-9])(?:(?!\3)[^\\]|\\[\s\S])*\3(?:(?!\3)[^\\]|\\[\s\S])*\3/.source,
                brackets + /\s*/.source + brackets
              ].join("|") + ")" + /[msixpodualngcer]*/.source),
              lookbehind: true,
              greedy: true
            },
            {
              pattern: /\/(?:[^\/\\\r\n]|\\.)*\/[msixpodualngc]*(?=\s*(?:$|[\r\n,.;})&|\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\b))/,
              greedy: true
            }
          ],
          "variable": [
            /[&*$@%]\{\^[A-Z]+\}/,
            /[&*$@%]\^[A-Z_]/,
            /[&*$@%]#?(?=\{)/,
            /[&*$@%]#?(?:(?:::)*'?(?!\d)[\w$]+(?![\w$]))+(?:::)*/,
            /[&*$@%]\d+/,
            /(?!%=)[$@%][!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~]/
          ],
          "filehandle": {
            pattern: /<(?![<=])\S*?>|\b_\b/,
            alias: "symbol"
          },
          "v-string": {
            pattern: /v\d+(?:\.\d+)*|\d+(?:\.\d+){2,}/,
            alias: "string"
          },
          "function": {
            pattern: /(\bsub[ \t]+)\w+/,
            lookbehind: true
          },
          "keyword": /\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\b/,
          "number": /\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)\b/,
          "operator": /-[rwxoRWXOezsfdlpSbctugkTBMAC]\b|\+[+=]?|-[-=>]?|\*\*?=?|\/\/?=?|=[=~>]?|~[~=]?|\|\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\.(?:=|\.\.?)?|[\\?]|\bx(?:=|\b)|\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\b/,
          "punctuation": /[{}[\];(),:]/
        };
      })(Prism);
      (function(Prism2) {
        var comment = /\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/;
        var constant2 = [
          {
            pattern: /\b(?:false|true)\b/i,
            alias: "boolean"
          },
          {
            pattern: /(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,
            greedy: true,
            lookbehind: true
          },
          {
            pattern: /(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,
            greedy: true,
            lookbehind: true
          },
          /\b(?:null)\b/i,
          /\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/
        ];
        var number = /\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i;
        var operator = /<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;
        var punctuation = /[{}\[\](),:;]/;
        Prism2.languages.php = {
          "delimiter": {
            pattern: /\?>$|^<\?(?:php(?=\s)|=)?/i,
            alias: "important"
          },
          "comment": comment,
          "variable": /\$+(?:\w+\b|(?=\{))/,
          "package": {
            pattern: /(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
            lookbehind: true,
            inside: {
              "punctuation": /\\/
            }
          },
          "class-name-definition": {
            pattern: /(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,
            lookbehind: true,
            alias: "class-name"
          },
          "function-definition": {
            pattern: /(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,
            lookbehind: true,
            alias: "function"
          },
          "keyword": [
            {
              pattern: /(\(\s*)\b(?:array|bool|boolean|float|int|integer|object|string)\b(?=\s*\))/i,
              alias: "type-casting",
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /([(,?]\s*)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|object|self|static|string)\b(?=\s*\$)/i,
              alias: "type-hint",
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /(\)\s*:\s*(?:\?\s*)?)\b(?:array(?!\s*\()|bool|callable|(?:false|null)(?=\s*\|)|float|int|iterable|mixed|never|object|self|static|string|void)\b/i,
              alias: "return-type",
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /\b(?:array(?!\s*\()|bool|float|int|iterable|mixed|object|string|void)\b/i,
              alias: "type-declaration",
              greedy: true
            },
            {
              pattern: /(\|\s*)(?:false|null)\b|\b(?:false|null)(?=\s*\|)/i,
              alias: "type-declaration",
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /\b(?:parent|self|static)(?=\s*::)/i,
              alias: "static-context",
              greedy: true
            },
            {
              pattern: /(\byield\s+)from\b/i,
              lookbehind: true
            },
            /\bclass\b/i,
            {
              pattern: /((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\b/i,
              lookbehind: true
            }
          ],
          "argument-name": {
            pattern: /([(,]\s*)\b[a-z_]\w*(?=\s*:(?!:))/i,
            lookbehind: true
          },
          "class-name": [
            {
              pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /(\|\s*)\b[a-z_]\w*(?!\\)\b/i,
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,
              greedy: true
            },
            {
              pattern: /(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,
              alias: "class-name-fully-qualified",
              greedy: true,
              lookbehind: true,
              inside: {
                "punctuation": /\\/
              }
            },
            {
              pattern: /(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,
              alias: "class-name-fully-qualified",
              greedy: true,
              inside: {
                "punctuation": /\\/
              }
            },
            {
              pattern: /(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
              alias: "class-name-fully-qualified",
              greedy: true,
              lookbehind: true,
              inside: {
                "punctuation": /\\/
              }
            },
            {
              pattern: /\b[a-z_]\w*(?=\s*\$)/i,
              alias: "type-declaration",
              greedy: true
            },
            {
              pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
              alias: ["class-name-fully-qualified", "type-declaration"],
              greedy: true,
              inside: {
                "punctuation": /\\/
              }
            },
            {
              pattern: /\b[a-z_]\w*(?=\s*::)/i,
              alias: "static-context",
              greedy: true
            },
            {
              pattern: /(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,
              alias: ["class-name-fully-qualified", "static-context"],
              greedy: true,
              inside: {
                "punctuation": /\\/
              }
            },
            {
              pattern: /([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,
              alias: "type-hint",
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,
              alias: ["class-name-fully-qualified", "type-hint"],
              greedy: true,
              lookbehind: true,
              inside: {
                "punctuation": /\\/
              }
            },
            {
              pattern: /(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,
              alias: "return-type",
              greedy: true,
              lookbehind: true
            },
            {
              pattern: /(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,
              alias: ["class-name-fully-qualified", "return-type"],
              greedy: true,
              lookbehind: true,
              inside: {
                "punctuation": /\\/
              }
            }
          ],
          "constant": constant2,
          "function": {
            pattern: /(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,
            lookbehind: true,
            inside: {
              "punctuation": /\\/
            }
          },
          "property": {
            pattern: /(->\s*)\w+/,
            lookbehind: true
          },
          "number": number,
          "operator": operator,
          "punctuation": punctuation
        };
        var string_interpolation = {
          pattern: /\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,
          lookbehind: true,
          inside: Prism2.languages.php
        };
        var string2 = [
          {
            pattern: /<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,
            alias: "nowdoc-string",
            greedy: true,
            inside: {
              "delimiter": {
                pattern: /^<<<'[^']+'|[a-z_]\w*;$/i,
                alias: "symbol",
                inside: {
                  "punctuation": /^<<<'?|[';]$/
                }
              }
            }
          },
          {
            pattern: /<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,
            alias: "heredoc-string",
            greedy: true,
            inside: {
              "delimiter": {
                pattern: /^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,
                alias: "symbol",
                inside: {
                  "punctuation": /^<<<"?|[";]$/
                }
              },
              "interpolation": string_interpolation
            }
          },
          {
            pattern: /`(?:\\[\s\S]|[^\\`])*`/,
            alias: "backtick-quoted-string",
            greedy: true
          },
          {
            pattern: /'(?:\\[\s\S]|[^\\'])*'/,
            alias: "single-quoted-string",
            greedy: true
          },
          {
            pattern: /"(?:\\[\s\S]|[^\\"])*"/,
            alias: "double-quoted-string",
            greedy: true,
            inside: {
              "interpolation": string_interpolation
            }
          }
        ];
        Prism2.languages.insertBefore("php", "variable", {
          "string": string2,
          "attribute": {
            pattern: /#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,
            greedy: true,
            inside: {
              "attribute-content": {
                pattern: /^(#\[)[\s\S]+(?=\]$)/,
                lookbehind: true,
                inside: {
                  "comment": comment,
                  "string": string2,
                  "attribute-class-name": [
                    {
                      pattern: /([^:]|^)\b[a-z_]\w*(?!\\)\b/i,
                      alias: "class-name",
                      greedy: true,
                      lookbehind: true
                    },
                    {
                      pattern: /([^:]|^)(?:\\?\b[a-z_]\w*)+/i,
                      alias: [
                        "class-name",
                        "class-name-fully-qualified"
                      ],
                      greedy: true,
                      lookbehind: true,
                      inside: {
                        "punctuation": /\\/
                      }
                    }
                  ],
                  "constant": constant2,
                  "number": number,
                  "operator": operator,
                  "punctuation": punctuation
                }
              },
              "delimiter": {
                pattern: /^#\[|\]$/,
                alias: "punctuation"
              }
            }
          }
        });
        Prism2.hooks.add("before-tokenize", function(env) {
          if (!/<\?/.test(env.code)) {
            return;
          }
          var phpPattern = /<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/g;
          Prism2.languages["markup-templating"].buildPlaceholders(env, "php", phpPattern);
        });
        Prism2.hooks.add("after-tokenize", function(env) {
          Prism2.languages["markup-templating"].tokenizePlaceholders(env, "php");
        });
      })(Prism);
      (function(Prism2) {
        var powershell = Prism2.languages.powershell = {
          "comment": [
            {
              pattern: /(^|[^`])<#[\s\S]*?#>/,
              lookbehind: true
            },
            {
              pattern: /(^|[^`])#.*/,
              lookbehind: true
            }
          ],
          "string": [
            {
              pattern: /"(?:`[\s\S]|[^`"])*"/,
              greedy: true,
              inside: null
            },
            {
              pattern: /'(?:[^']|'')*'/,
              greedy: true
            }
          ],
          "namespace": /\[[a-z](?:\[(?:\[[^\]]*\]|[^\[\]])*\]|[^\[\]])*\]/i,
          "boolean": /\$(?:false|true)\b/i,
          "variable": /\$\w+\b/,
          "function": [
            /\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\b/i,
            /\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\b/i
          ],
          "keyword": /\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\b/i,
          "operator": {
            pattern: /(^|\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\b|-[-=]?|\+[+=]?|[*\/%]=?)/i,
            lookbehind: true
          },
          "punctuation": /[|{}[\];(),.]/
        };
        powershell.string[0].inside = {
          "function": {
            pattern: /(^|[^`])\$\((?:\$\([^\r\n()]*\)|(?!\$\()[^\r\n)])*\)/,
            lookbehind: true,
            inside: powershell
          },
          "boolean": powershell.boolean,
          "variable": powershell.variable
        };
      })(Prism);
      Prism.languages.properties = {
        "comment": /^[ \t]*[#!].*$/m,
        "value": {
          pattern: /(^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?: *[=:] *(?! )| ))(?:\\(?:\r\n|[\s\S])|[^\\\r\n])+/m,
          lookbehind: true,
          alias: "attr-value"
        },
        "key": {
          pattern: /^[ \t]*(?:\\(?:\r\n|[\s\S])|[^\\\s:=])+(?= *[=:]| )/m,
          alias: "attr-name"
        },
        "punctuation": /[=:]/
      };
      (function(Prism2) {
        var builtinTypes = /\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\b/;
        Prism2.languages.protobuf = Prism2.languages.extend("clike", {
          "class-name": [
            {
              pattern: /(\b(?:enum|extend|message|service)\s+)[A-Za-z_]\w*(?=\s*\{)/,
              lookbehind: true
            },
            {
              pattern: /(\b(?:rpc\s+\w+|returns)\s*\(\s*(?:stream\s+)?)\.?[A-Za-z_]\w*(?:\.[A-Za-z_]\w*)*(?=\s*\))/,
              lookbehind: true
            }
          ],
          "keyword": /\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\s+\w)|service|stream|syntax|to)\b(?!\s*=\s*\d)/,
          "function": /\b[a-z_]\w*(?=\s*\()/i
        });
        Prism2.languages.insertBefore("protobuf", "operator", {
          "map": {
            pattern: /\bmap<\s*[\w.]+\s*,\s*[\w.]+\s*>(?=\s+[a-z_]\w*\s*[=;])/i,
            alias: "class-name",
            inside: {
              "punctuation": /[<>.,]/,
              "builtin": builtinTypes
            }
          },
          "builtin": builtinTypes,
          "positional-class-name": {
            pattern: /(?:\b|\B\.)[a-z_]\w*(?:\.[a-z_]\w*)*(?=\s+[a-z_]\w*\s*[=;])/i,
            alias: "class-name",
            inside: {
              "punctuation": /\./
            }
          },
          "annotation": {
            pattern: /(\[\s*)[a-z_]\w*(?=\s*=)/i,
            lookbehind: true
          }
        });
      })(Prism);
      Prism.languages.python = {
        "comment": {
          pattern: /(^|[^\\])#.*/,
          lookbehind: true,
          greedy: true
        },
        "string-interpolation": {
          pattern: /(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,
          greedy: true,
          inside: {
            "interpolation": {
              pattern: /((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,
              lookbehind: true,
              inside: {
                "format-spec": {
                  pattern: /(:)[^:(){}]+(?=\}$)/,
                  lookbehind: true
                },
                "conversion-option": {
                  pattern: /![sra](?=[:}]$)/,
                  alias: "punctuation"
                },
                rest: null
              }
            },
            "string": /[\s\S]+/
          }
        },
        "triple-quoted-string": {
          pattern: /(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,
          greedy: true,
          alias: "string"
        },
        "string": {
          pattern: /(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,
          greedy: true
        },
        "function": {
          pattern: /((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,
          lookbehind: true
        },
        "class-name": {
          pattern: /(\bclass\s+)\w+/i,
          lookbehind: true
        },
        "decorator": {
          pattern: /(^[\t ]*)@\w+(?:\.\w+)*/m,
          lookbehind: true,
          alias: ["annotation", "punctuation"],
          inside: {
            "punctuation": /\./
          }
        },
        "keyword": /\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,
        "builtin": /\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,
        "boolean": /\b(?:False|None|True)\b/,
        "number": /\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,
        "operator": /[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,
        "punctuation": /[{}[\];(),.:]/
      };
      Prism.languages.python["string-interpolation"].inside["interpolation"].inside.rest = Prism.languages.python;
      Prism.languages.py = Prism.languages.python;
      Prism.languages.r = {
        "comment": /#.*/,
        "string": {
          pattern: /(['"])(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: true
        },
        "percent-operator": {
          pattern: /%[^%\s]*%/,
          alias: "operator"
        },
        "boolean": /\b(?:FALSE|TRUE)\b/,
        "ellipsis": /\.\.(?:\.|\d+)/,
        "number": [
          /\b(?:Inf|NaN)\b/,
          /(?:\b0x[\dA-Fa-f]+(?:\.\d*)?|\b\d+(?:\.\d*)?|\B\.\d+)(?:[EePp][+-]?\d+)?[iL]?/
        ],
        "keyword": /\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\b/,
        "operator": /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\|\|?|[+*\/^$@~]/,
        "punctuation": /[(){}\[\],;]/
      };
      (function(Prism2) {
        Prism2.languages.ruby = Prism2.languages.extend("clike", {
          "comment": {
            pattern: /#.*|^=begin\s[\s\S]*?^=end/m,
            greedy: true
          },
          "class-name": {
            pattern: /(\b(?:class|module)\s+|\bcatch\s+\()[\w.\\]+|\b[A-Z_]\w*(?=\s*\.\s*new\b)/,
            lookbehind: true,
            inside: {
              "punctuation": /[.\\]/
            }
          },
          "keyword": /\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/,
          "operator": /\.{2,3}|&\.|===|<?=>|[!=]?~|(?:&&|\|\||<<|>>|\*\*|[+\-*/%<>!^&|=])=?|[?:]/,
          "punctuation": /[(){}[\].,;]/
        });
        Prism2.languages.insertBefore("ruby", "operator", {
          "double-colon": {
            pattern: /::/,
            alias: "punctuation"
          }
        });
        var interpolation = {
          pattern: /((?:^|[^\\])(?:\\{2})*)#\{(?:[^{}]|\{[^{}]*\})*\}/,
          lookbehind: true,
          inside: {
            "content": {
              pattern: /^(#\{)[\s\S]+(?=\}$)/,
              lookbehind: true,
              inside: Prism2.languages.ruby
            },
            "delimiter": {
              pattern: /^#\{|\}$/,
              alias: "punctuation"
            }
          }
        };
        delete Prism2.languages.ruby.function;
        var percentExpression = "(?:" + [
          /([^a-zA-Z0-9\s{(\[<=])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,
          /\((?:[^()\\]|\\[\s\S]|\((?:[^()\\]|\\[\s\S])*\))*\)/.source,
          /\{(?:[^{}\\]|\\[\s\S]|\{(?:[^{}\\]|\\[\s\S])*\})*\}/.source,
          /\[(?:[^\[\]\\]|\\[\s\S]|\[(?:[^\[\]\\]|\\[\s\S])*\])*\]/.source,
          /<(?:[^<>\\]|\\[\s\S]|<(?:[^<>\\]|\\[\s\S])*>)*>/.source
        ].join("|") + ")";
        var symbolName = /(?:"(?:\\.|[^"\\\r\n])*"|(?:\b[a-zA-Z_]\w*|[^\s\0-\x7F]+)[?!]?|\$.)/.source;
        Prism2.languages.insertBefore("ruby", "keyword", {
          "regex-literal": [
            {
              pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),
              greedy: true,
              inside: {
                "interpolation": interpolation,
                "regex": /[\s\S]+/
              }
            },
            {
              pattern: /(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,
              lookbehind: true,
              greedy: true,
              inside: {
                "interpolation": interpolation,
                "regex": /[\s\S]+/
              }
            }
          ],
          "variable": /[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,
          "symbol": [
            {
              pattern: RegExp(/(^|[^:]):/.source + symbolName),
              lookbehind: true,
              greedy: true
            },
            {
              pattern: RegExp(/([\r\n{(,][ \t]*)/.source + symbolName + /(?=:(?!:))/.source),
              lookbehind: true,
              greedy: true
            }
          ],
          "method-definition": {
            pattern: /(\bdef\s+)\w+(?:\s*\.\s*\w+)?/,
            lookbehind: true,
            inside: {
              "function": /\b\w+$/,
              "keyword": /^self\b/,
              "class-name": /^\w+/,
              "punctuation": /\./
            }
          }
        });
        Prism2.languages.insertBefore("ruby", "string", {
          "string-literal": [
            {
              pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),
              greedy: true,
              inside: {
                "interpolation": interpolation,
                "string": /[\s\S]+/
              }
            },
            {
              pattern: /("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,
              greedy: true,
              inside: {
                "interpolation": interpolation,
                "string": /[\s\S]+/
              }
            },
            {
              pattern: /<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
              alias: "heredoc-string",
              greedy: true,
              inside: {
                "delimiter": {
                  pattern: /^<<[-~]?[a-z_]\w*|\b[a-z_]\w*$/i,
                  inside: {
                    "symbol": /\b\w+/,
                    "punctuation": /^<<[-~]?/
                  }
                },
                "interpolation": interpolation,
                "string": /[\s\S]+/
              }
            },
            {
              pattern: /<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,
              alias: "heredoc-string",
              greedy: true,
              inside: {
                "delimiter": {
                  pattern: /^<<[-~]?'[a-z_]\w*'|\b[a-z_]\w*$/i,
                  inside: {
                    "symbol": /\b\w+/,
                    "punctuation": /^<<[-~]?'|'$/
                  }
                },
                "string": /[\s\S]+/
              }
            }
          ],
          "command-literal": [
            {
              pattern: RegExp(/%x/.source + percentExpression),
              greedy: true,
              inside: {
                "interpolation": interpolation,
                "command": {
                  pattern: /[\s\S]+/,
                  alias: "string"
                }
              }
            },
            {
              pattern: /`(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|[^\\`#\r\n])*`/,
              greedy: true,
              inside: {
                "interpolation": interpolation,
                "command": {
                  pattern: /[\s\S]+/,
                  alias: "string"
                }
              }
            }
          ]
        });
        delete Prism2.languages.ruby.string;
        Prism2.languages.insertBefore("ruby", "number", {
          "builtin": /\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\b/,
          "constant": /\b[A-Z][A-Z0-9_]*(?:[?!]|\b)/
        });
        Prism2.languages.rb = Prism2.languages.ruby;
      })(Prism);
      (function(Prism2) {
        Prism2.languages.sass = Prism2.languages.extend("css", {
          "comment": {
            pattern: /^([ \t]*)\/[\/*].*(?:(?:\r?\n|\r)\1[ \t].+)*/m,
            lookbehind: true,
            greedy: true
          }
        });
        Prism2.languages.insertBefore("sass", "atrule", {
          "atrule-line": {
            pattern: /^(?:[ \t]*)[@+=].+/m,
            greedy: true,
            inside: {
              "atrule": /(?:@[\w-]+|[+=])/
            }
          }
        });
        delete Prism2.languages.sass.atrule;
        var variable = /\$[-\w]+|#\{\$[-\w]+\}/;
        var operator = [
          /[+*\/%]|[=!]=|<=?|>=?|\b(?:and|not|or)\b/,
          {
            pattern: /(\s)-(?=\s)/,
            lookbehind: true
          }
        ];
        Prism2.languages.insertBefore("sass", "property", {
          "variable-line": {
            pattern: /^[ \t]*\$.+/m,
            greedy: true,
            inside: {
              "punctuation": /:/,
              "variable": variable,
              "operator": operator
            }
          },
          "property-line": {
            pattern: /^[ \t]*(?:[^:\s]+ *:.*|:[^:\s].*)/m,
            greedy: true,
            inside: {
              "property": [
                /[^:\s]+(?=\s*:)/,
                {
                  pattern: /(:)[^:\s]+/,
                  lookbehind: true
                }
              ],
              "punctuation": /:/,
              "variable": variable,
              "operator": operator,
              "important": Prism2.languages.sass.important
            }
          }
        });
        delete Prism2.languages.sass.property;
        delete Prism2.languages.sass.important;
        Prism2.languages.insertBefore("sass", "punctuation", {
          "selector": {
            pattern: /^([ \t]*)\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*(?:,(?:\r?\n|\r)\1[ \t]+\S(?:,[^,\r\n]+|[^,\r\n]*)(?:,[^,\r\n]+)*)*/m,
            lookbehind: true,
            greedy: true
          }
        });
      })(Prism);
      Prism.languages.scala = Prism.languages.extend("java", {
        "triple-quoted-string": {
          pattern: /"""[\s\S]*?"""/,
          greedy: true,
          alias: "string"
        },
        "string": {
          pattern: /("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,
          greedy: true
        },
        "keyword": /<-|=>|\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\b/,
        "number": /\b0x(?:[\da-f]*\.)?[\da-f]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e\d+)?[dfl]?/i,
        "builtin": /\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\b/,
        "symbol": /'[^\d\s\\]\w*/
      });
      Prism.languages.insertBefore("scala", "triple-quoted-string", {
        "string-interpolation": {
          pattern: /\b[a-z]\w*(?:"""(?:[^$]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*?"""|"(?:[^$"\r\n]|\$(?:[^{]|\{(?:[^{}]|\{[^{}]*\})*\}))*")/i,
          greedy: true,
          inside: {
            "id": {
              pattern: /^\w+/,
              greedy: true,
              alias: "function"
            },
            "escape": {
              pattern: /\\\$"|\$[$"]/,
              greedy: true,
              alias: "symbol"
            },
            "interpolation": {
              pattern: /\$(?:\w+|\{(?:[^{}]|\{[^{}]*\})*\})/,
              greedy: true,
              inside: {
                "punctuation": /^\$\{?|\}$/,
                "expression": {
                  pattern: /[\s\S]+/,
                  inside: Prism.languages.scala
                }
              }
            },
            "string": /[\s\S]+/
          }
        }
      });
      delete Prism.languages.scala["class-name"];
      delete Prism.languages.scala["function"];
      (function(Prism2) {
        Prism2.languages.scheme = {
          "comment": /;.*|#;\s*(?:\((?:[^()]|\([^()]*\))*\)|\[(?:[^\[\]]|\[[^\[\]]*\])*\])|#\|(?:[^#|]|#(?!\|)|\|(?!#)|#\|(?:[^#|]|#(?!\|)|\|(?!#))*\|#)*\|#/,
          "string": {
            pattern: /"(?:[^"\\]|\\.)*"/,
            greedy: true
          },
          "symbol": {
            pattern: /'[^()\[\]#'\s]+/,
            greedy: true
          },
          "char": {
            pattern: /#\\(?:[ux][a-fA-F\d]+\b|[-a-zA-Z]+\b|[\uD800-\uDBFF][\uDC00-\uDFFF]|\S)/,
            greedy: true
          },
          "lambda-parameter": [
            {
              pattern: /((?:^|[^'`#])[(\[]lambda\s+)(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)/,
              lookbehind: true
            },
            {
              pattern: /((?:^|[^'`#])[(\[]lambda\s+[(\[])[^()\[\]']+/,
              lookbehind: true
            }
          ],
          "keyword": {
            pattern: /((?:^|[^'`#])[(\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\*)?|let\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\[\]\s]|$)/,
            lookbehind: true
          },
          "builtin": {
            pattern: /((?:^|[^'`#])[(\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\?|boolean=?\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\?|\?|<\?|<=\?|=\?|>\?|>=\?)|close-(?:input-port|output-port|port)|complex\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\??|eq\?|equal\?|eqv\?|error|error-object(?:-irritants|-message|\?)|eval|even\?|exact(?:-integer-sqrt|-integer\?|\?)?|expt|features|file-error\?|floor(?:-quotient|-remainder|\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\??|input-port(?:-open\?|\?)|integer(?:->char|\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\?|newline|not|null\?|number(?:->string|\?)|numerator|odd\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\?|\?)|pair\?|peek-char|peek-u8|port\?|positive\?|procedure\?|quotient|raise|raise-continuable|rational\?|rationalize|read-(?:bytevector|bytevector!|char|error\?|line|string|u8)|real\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?|<\?|<=\?|=\?|>\?|>=\?)?|substring|symbol(?:->string|\?|=\?)|syntax-error|textual-port\?|truncate(?:-quotient|-remainder|\/)?|u8-ready\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\?)(?=[()\[\]\s]|$)/,
            lookbehind: true
          },
          "operator": {
            pattern: /((?:^|[^'`#])[(\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\[\]\s]|$)/,
            lookbehind: true
          },
          "number": {
            pattern: RegExp(SortedBNF({
              "<ureal dec>": /\d+(?:\/\d+)|(?:\d+(?:\.\d*)?|\.\d+)(?:[esfdl][+-]?\d+)?/.source,
              "<real dec>": /[+-]?<ureal dec>|[+-](?:inf|nan)\.0/.source,
              "<imaginary dec>": /[+-](?:<ureal dec>|(?:inf|nan)\.0)?i/.source,
              "<complex dec>": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,
              "<num dec>": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,
              "<ureal box>": /[0-9a-f]+(?:\/[0-9a-f]+)?/.source,
              "<real box>": /[+-]?<ureal box>|[+-](?:inf|nan)\.0/.source,
              "<imaginary box>": /[+-](?:<ureal box>|(?:inf|nan)\.0)?i/.source,
              "<complex box>": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,
              "<num box>": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,
              "<number>": /(^|[()\[\]\s])(?:<num dec>|<num box>)(?=[()\[\]\s]|$)/.source
            }), "i"),
            lookbehind: true
          },
          "boolean": {
            pattern: /(^|[()\[\]\s])#(?:[ft]|false|true)(?=[()\[\]\s]|$)/,
            lookbehind: true
          },
          "function": {
            pattern: /((?:^|[^'`#])[(\[])(?:[^|()\[\]'\s]+|\|(?:[^\\|]|\\.)*\|)(?=[()\[\]\s]|$)/,
            lookbehind: true
          },
          "identifier": {
            pattern: /(^|[()\[\]\s])\|(?:[^\\|]|\\.)*\|(?=[()\[\]\s]|$)/,
            lookbehind: true,
            greedy: true
          },
          "punctuation": /[()\[\]']/
        };
        function SortedBNF(grammar) {
          for (var key in grammar) {
            grammar[key] = grammar[key].replace(/<[\w\s]+>/g, function(key2) {
              return "(?:" + grammar[key2].trim() + ")";
            });
          }
          return grammar[key];
        }
      })(Prism);
      Prism.languages.scss = Prism.languages.extend("css", {
        "comment": {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|\/\/.*)/,
          lookbehind: true
        },
        "atrule": {
          pattern: /@[\w-](?:\([^()]+\)|[^()\s]|\s+(?!\s))*?(?=\s+[{;])/,
          inside: {
            "rule": /@[\w-]+/
          }
        },
        "url": /(?:[-a-z]+-)?url(?=\()/i,
        "selector": {
          pattern: /(?=\S)[^@;{}()]?(?:[^@;{}()\s]|\s+(?!\s)|#\{\$[-\w]+\})+(?=\s*\{(?:\}|\s|[^}][^:{}]*[:{][^}]))/,
          inside: {
            "parent": {
              pattern: /&/,
              alias: "important"
            },
            "placeholder": /%[-\w]+/,
            "variable": /\$[-\w]+|#\{\$[-\w]+\}/
          }
        },
        "property": {
          pattern: /(?:[-\w]|\$[-\w]|#\{\$[-\w]+\})+(?=\s*:)/,
          inside: {
            "variable": /\$[-\w]+|#\{\$[-\w]+\}/
          }
        }
      });
      Prism.languages.insertBefore("scss", "atrule", {
        "keyword": [
          /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\b/i,
          {
            pattern: /( )(?:from|through)(?= )/,
            lookbehind: true
          }
        ]
      });
      Prism.languages.insertBefore("scss", "important", {
        "variable": /\$[-\w]+|#\{\$[-\w]+\}/
      });
      Prism.languages.insertBefore("scss", "function", {
        "module-modifier": {
          pattern: /\b(?:as|hide|show|with)\b/i,
          alias: "keyword"
        },
        "placeholder": {
          pattern: /%[-\w]+/,
          alias: "selector"
        },
        "statement": {
          pattern: /\B!(?:default|optional)\b/i,
          alias: "keyword"
        },
        "boolean": /\b(?:false|true)\b/,
        "null": {
          pattern: /\bnull\b/,
          alias: "keyword"
        },
        "operator": {
          pattern: /(\s)(?:[-+*\/%]|[=!]=|<=?|>=?|and|not|or)(?=\s)/,
          lookbehind: true
        }
      });
      Prism.languages.scss["atrule"].inside.rest = Prism.languages.scss;
      Prism.languages.sql = {
        "comment": {
          pattern: /(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,
          lookbehind: true
        },
        "variable": [
          {
            pattern: /@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,
            greedy: true
          },
          /@[\w.$]+/
        ],
        "string": {
          pattern: /(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,
          greedy: true,
          lookbehind: true
        },
        "identifier": {
          pattern: /(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,
          greedy: true,
          lookbehind: true,
          inside: {
            "punctuation": /^`|`$/
          }
        },
        "function": /\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,
        "keyword": /\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,
        "boolean": /\b(?:FALSE|NULL|TRUE)\b/i,
        "number": /\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,
        "operator": /[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,
        "punctuation": /[;[\]()`,.]/
      };
      Prism.languages.swift = {
        "comment": {
          pattern: /(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,
          lookbehind: true,
          greedy: true
        },
        "string-literal": [
          {
            pattern: RegExp(/(^|[^"#])/.source + "(?:" + /"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source + "|" + /"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source + ")" + /(?!["#])/.source),
            lookbehind: true,
            greedy: true,
            inside: {
              "interpolation": {
                pattern: /(\\\()(?:[^()]|\([^()]*\))*(?=\))/,
                lookbehind: true,
                inside: null
              },
              "interpolation-punctuation": {
                pattern: /^\)|\\\($/,
                alias: "punctuation"
              },
              "punctuation": /\\(?=[\r\n])/,
              "string": /[\s\S]+/
            }
          },
          {
            pattern: RegExp(/(^|[^"#])(#+)/.source + "(?:" + /"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source + "|" + /"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source + ")\\2"),
            lookbehind: true,
            greedy: true,
            inside: {
              "interpolation": {
                pattern: /(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,
                lookbehind: true,
                inside: null
              },
              "interpolation-punctuation": {
                pattern: /^\)|\\#+\($/,
                alias: "punctuation"
              },
              "string": /[\s\S]+/
            }
          }
        ],
        "directive": {
          pattern: RegExp(/#/.source + "(?:" + (/(?:elseif|if)\b/.source + "(?:[ 	]*" + /(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source + ")+") + "|" + /(?:else|endif)\b/.source + ")"),
          alias: "property",
          inside: {
            "directive-name": /^#\w+/,
            "boolean": /\b(?:false|true)\b/,
            "number": /\b\d+(?:\.\d+)*\b/,
            "operator": /!|&&|\|\||[<>]=?/,
            "punctuation": /[(),]/
          }
        },
        "literal": {
          pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,
          alias: "constant"
        },
        "other-directive": {
          pattern: /#\w+\b/,
          alias: "property"
        },
        "attribute": {
          pattern: /@\w+/,
          alias: "atrule"
        },
        "function-definition": {
          pattern: /(\bfunc\s+)\w+/,
          lookbehind: true,
          alias: "function"
        },
        "label": {
          pattern: /\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,
          lookbehind: true,
          alias: "important"
        },
        "keyword": /\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,
        "boolean": /\b(?:false|true)\b/,
        "nil": {
          pattern: /\bnil\b/,
          alias: "constant"
        },
        "short-argument": /\$\d+\b/,
        "omit": {
          pattern: /\b_\b/,
          alias: "keyword"
        },
        "number": /\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,
        "class-name": /\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,
        "function": /\b[a-z_]\w*(?=\s*\()/i,
        "constant": /\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,
        "operator": /[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,
        "punctuation": /[{}[\]();,.:\\]/
      };
      Prism.languages.swift["string-literal"].forEach(function(rule) {
        rule.inside["interpolation"].inside = Prism.languages.swift;
      });
      (function(Prism2) {
        var typescript = Prism2.util.clone(Prism2.languages.typescript);
        Prism2.languages.tsx = Prism2.languages.extend("jsx", typescript);
        delete Prism2.languages.tsx["parameter"];
        delete Prism2.languages.tsx["literal-property"];
        var tag = Prism2.languages.tsx.tag;
        tag.pattern = RegExp(/(^|[^\w$]|(?=<\/))/.source + "(?:" + tag.pattern.source + ")", tag.pattern.flags);
        tag.lookbehind = true;
      })(Prism);
      (function(Prism2) {
        Prism2.languages.typescript = Prism2.languages.extend("javascript", {
          "class-name": {
            pattern: /(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,
            lookbehind: true,
            greedy: true,
            inside: null
          },
          "builtin": /\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/
        });
        Prism2.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/, /\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/, /\btype\b(?=\s*(?:[\{*]|$))/);
        delete Prism2.languages.typescript["parameter"];
        delete Prism2.languages.typescript["literal-property"];
        var typeInside = Prism2.languages.extend("typescript", {});
        delete typeInside["class-name"];
        Prism2.languages.typescript["class-name"].inside = typeInside;
        Prism2.languages.insertBefore("typescript", "function", {
          "decorator": {
            pattern: /@[$\w\xA0-\uFFFF]+/,
            inside: {
              "at": {
                pattern: /^@/,
                alias: "operator"
              },
              "function": /^[\s\S]+/
            }
          },
          "generic-function": {
            pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,
            greedy: true,
            inside: {
              "function": /^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,
              "generic": {
                pattern: /<[\s\S]+/,
                alias: "class-name",
                inside: typeInside
              }
            }
          }
        });
        Prism2.languages.ts = Prism2.languages.typescript;
      })(Prism);
      Prism.languages.wasm = {
        "comment": [
          /\(;[\s\S]*?;\)/,
          {
            pattern: /;;.*/,
            greedy: true
          }
        ],
        "string": {
          pattern: /"(?:\\[\s\S]|[^"\\])*"/,
          greedy: true
        },
        "keyword": [
          {
            pattern: /\b(?:align|offset)=/,
            inside: {
              "operator": /=/
            }
          },
          {
            pattern: /\b(?:(?:f32|f64|i32|i64)(?:\.(?:abs|add|and|ceil|clz|const|convert_[su]\/i(?:32|64)|copysign|ctz|demote\/f64|div(?:_[su])?|eqz?|extend_[su]\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\/f32|reinterpret\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\/f(?:32|64))?|wrap\/i64|xor))?|memory\.(?:grow|size))\b/,
            inside: {
              "punctuation": /\./
            }
          },
          /\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\b/
        ],
        "variable": /\$[\w!#$%&'*+\-./:<=>?@\\^`|~]+/,
        "number": /[+-]?\b(?:\d(?:_?\d)*(?:\.\d(?:_?\d)*)?(?:[eE][+-]?\d(?:_?\d)*)?|0x[\da-fA-F](?:_?[\da-fA-F])*(?:\.[\da-fA-F](?:_?[\da-fA-D])*)?(?:[pP][+-]?\d(?:_?\d)*)?)\b|\binf\b|\bnan(?::0x[\da-fA-F](?:_?[\da-fA-D])*)?\b/,
        "punctuation": /[()]/
      };
      (function(Prism2) {
        var anchorOrAlias = /[*&][^\s[\]{},]+/;
        var tag = /!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/;
        var properties = "(?:" + tag.source + "(?:[ 	]+" + anchorOrAlias.source + ")?|" + anchorOrAlias.source + "(?:[ 	]+" + tag.source + ")?)";
        var plainKey = /(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {
          return /[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source;
        });
        var string2 = /"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;
        function createValuePattern(value, flags) {
          flags = (flags || "").replace(/m/g, "") + "m";
          var pattern = /([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g, function() {
            return properties;
          }).replace(/<<value>>/g, function() {
            return value;
          });
          return RegExp(pattern, flags);
        }
        Prism2.languages.yaml = {
          "scalar": {
            pattern: RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g, function() {
              return properties;
            })),
            lookbehind: true,
            alias: "string"
          },
          "comment": /#.*/,
          "key": {
            pattern: RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g, function() {
              return properties;
            }).replace(/<<key>>/g, function() {
              return "(?:" + plainKey + "|" + string2 + ")";
            })),
            lookbehind: true,
            greedy: true,
            alias: "atrule"
          },
          "directive": {
            pattern: /(^[ \t]*)%.+/m,
            lookbehind: true,
            alias: "important"
          },
          "datetime": {
            pattern: createValuePattern(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),
            lookbehind: true,
            alias: "number"
          },
          "boolean": {
            pattern: createValuePattern(/false|true/.source, "i"),
            lookbehind: true,
            alias: "important"
          },
          "null": {
            pattern: createValuePattern(/null|~/.source, "i"),
            lookbehind: true,
            alias: "important"
          },
          "string": {
            pattern: createValuePattern(string2),
            lookbehind: true,
            greedy: true
          },
          "number": {
            pattern: createValuePattern(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source, "i"),
            lookbehind: true
          },
          "tag": tag,
          "important": anchorOrAlias,
          "punctuation": /---|[:[\]{}\-,|>?]|\.\.\./
        };
        Prism2.languages.yml = Prism2.languages.yaml;
      })(Prism);
      const decorateCodeLine = (editor) => {
        const code_block = getPlugin(editor, ELEMENT_CODE_BLOCK);
        const code_line = getPlugin(editor, ELEMENT_CODE_LINE);
        return ([node, path]) => {
          var _codeBlock$0$lang;
          const ranges = [];
          if (!code_block.options.syntax || node.type !== code_line.type) {
            return ranges;
          }
          const codeBlock = getParentNode(editor, path);
          if (!codeBlock) {
            return ranges;
          }
          let langName = (_codeBlock$0$lang = codeBlock[0].lang) !== null && _codeBlock$0$lang !== void 0 ? _codeBlock$0$lang : "";
          if (langName === "plain") {
            langName = "";
          }
          const lang2 = prism.exports.languages[langName];
          if (!lang2) {
            return ranges;
          }
          const text2 = getNodeString(node);
          const tokens2 = prism.exports.tokenize(text2, lang2);
          let offset2 = 0;
          for (const element of tokens2) {
            if (element instanceof prism.exports.Token) {
              ranges.push({
                anchor: {
                  path,
                  offset: offset2
                },
                focus: {
                  path,
                  offset: offset2 + element.length
                },
                tokenType: element.type,
                [ELEMENT_CODE_SYNTAX]: true
              });
            }
            offset2 += element.length;
          }
          return ranges;
        };
      };
      const deserializeHtmlCodeBlock = {
        rules: [{
          validNodeName: "PRE"
        }, {
          validNodeName: "P",
          validStyle: {
            fontFamily: "Consolas"
          }
        }],
        getNode: (el2) => {
          var _find, _el$textContent, _lines;
          const languageSelectorText = ((_find = [...el2.childNodes].find((node) => node.nodeName === "SELECT")) === null || _find === void 0 ? void 0 : _find.textContent) || "";
          const textContent = ((_el$textContent = el2.textContent) === null || _el$textContent === void 0 ? void 0 : _el$textContent.replace(languageSelectorText, "")) || "";
          let lines = textContent.split("\n");
          if (!((_lines = lines) !== null && _lines !== void 0 && _lines.length)) {
            lines = [textContent];
          }
          const codeLines = lines.map((line) => ({
            type: ELEMENT_CODE_LINE,
            children: [{
              text: line
            }]
          }));
          return {
            type: ELEMENT_CODE_BLOCK,
            children: codeLines
          };
        }
      };
      function unwrapExports$a(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$b(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$c = createCommonjsModule$b(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      var isHotkey$4 = unwrapExports$a(lib$c);
      lib$c.isHotkey;
      lib$c.isCodeHotkey;
      lib$c.isKeyHotkey;
      lib$c.parseHotkey;
      lib$c.compareHotkey;
      lib$c.toKeyCode;
      lib$c.toKeyName;
      const getCodeLineType = (editor) => getPluginType(editor, ELEMENT_CODE_LINE);
      const getCodeLineEntry = (editor, {
        at = editor.selection
      } = {}) => {
        if (at && someNode(editor, {
          at,
          match: {
            type: getCodeLineType(editor)
          }
        })) {
          const selectionParent = getParentNode(editor, at);
          if (!selectionParent)
            return;
          const [, parentPath] = selectionParent;
          const codeLine = getAboveNode(editor, {
            at,
            match: {
              type: getCodeLineType(editor)
            }
          }) || getParentNode(editor, parentPath);
          if (!codeLine)
            return;
          const [codeLineNode, codeLinePath] = codeLine;
          if (isElement(codeLineNode) && codeLineNode.type !== getCodeLineType(editor))
            return;
          const codeBlock = getParentNode(editor, codeLinePath);
          if (!codeBlock)
            return;
          return {
            codeBlock,
            codeLine
          };
        }
      };
      const indentCodeLine = (editor, {
        codeLine
      }) => {
        const [, codeLinePath] = codeLine;
        const codeLineStart = getStartPoint(editor, codeLinePath);
        if (!isExpanded(editor.selection)) {
          var _editor$selection;
          const cursor = (_editor$selection = editor.selection) === null || _editor$selection === void 0 ? void 0 : _editor$selection.anchor;
          const range = getRange(editor, codeLineStart, cursor);
          const text2 = getEditorString(editor, range);
          if (/\S/.test(text2)) {
            insertText(editor, "  ", {
              at: editor.selection
            });
            return;
          }
        }
        insertText(editor, "  ", {
          at: codeLineStart
        });
      };
      const deleteStartSpace = (editor, {
        codeLine
      }) => {
        const [, codeLinePath] = codeLine;
        const codeLineStart = getStartPoint(editor, codeLinePath);
        const codeLineEnd = codeLineStart && getPointAfter(editor, codeLineStart);
        const spaceRange = codeLineEnd && getRange(editor, codeLineStart, codeLineEnd);
        const spaceText = getEditorString(editor, spaceRange);
        if (/\s/.test(spaceText)) {
          deleteText(editor, {
            at: spaceRange
          });
          return true;
        }
        return false;
      };
      const outdentCodeLine = (editor, {
        codeBlock,
        codeLine
      }) => {
        const deleted = deleteStartSpace(editor, {
          codeBlock,
          codeLine
        });
        deleted && deleteStartSpace(editor, {
          codeBlock,
          codeLine
        });
      };
      const onKeyDownCodeBlock = (editor) => (e22) => {
        const isTab = Hotkeys.isTab(editor, e22);
        const isUntab = Hotkeys.isUntab(editor, e22);
        if (isTab || isUntab) {
          const _codeLines = getNodeEntries(editor, {
            match: {
              type: getCodeLineType(editor)
            }
          });
          const codeLines = Array.from(_codeLines);
          if (codeLines.length) {
            e22.preventDefault();
            const [, firstLinePath] = codeLines[0];
            const codeBlock = getParentNode(editor, firstLinePath);
            if (!codeBlock)
              return;
            withoutNormalizing(editor, () => {
              for (const codeLine of codeLines) {
                if (isUntab) {
                  outdentCodeLine(editor, {
                    codeBlock,
                    codeLine
                  });
                }
                if (isTab) {
                  indentCodeLine(editor, {
                    codeBlock,
                    codeLine
                  });
                }
              }
            });
          }
        }
        if (isHotkey$4("mod+a", e22)) {
          const res = getCodeLineEntry(editor, {});
          if (!res)
            return;
          const {
            codeBlock
          } = res;
          const [, codeBlockPath] = codeBlock;
          select(editor, codeBlockPath);
          e22.preventDefault();
          e22.stopPropagation();
        }
      };
      const insertFragmentCodeBlock = (editor) => {
        const {
          insertFragment: _insertFragment
        } = editor;
        const codeBlockType = getPluginType(editor, ELEMENT_CODE_BLOCK);
        const codeLineType = getPluginType(editor, ELEMENT_CODE_LINE);
        function convertNodeToCodeLine(node) {
          return {
            type: codeLineType,
            children: [{
              text: getNodeString(node)
            }]
          };
        }
        function extractCodeLinesFromCodeBlock(node) {
          return node.children;
        }
        return (fragment) => {
          const inCodeLine = findNode(editor, {
            match: {
              type: codeLineType
            }
          });
          if (!inCodeLine) {
            return _insertFragment(fragment);
          }
          return insertFragment(editor, fragment.flatMap((node) => {
            const element = node;
            return element.type === codeBlockType ? extractCodeLinesFromCodeBlock(element) : convertNodeToCodeLine(element);
          }));
        };
      };
      const getIndentDepth = (editor, {
        codeLine
      }) => {
        const [, codeLinePath] = codeLine;
        const text2 = getEditorString(editor, codeLinePath);
        return text2.search(/\S|$/);
      };
      const insertCodeLine = (editor, indentDepth = 0) => {
        if (editor.selection) {
          const indent = " ".repeat(indentDepth);
          insertElements(editor, {
            type: getCodeLineType(editor),
            children: [{
              text: indent
            }]
          });
        }
      };
      const withCodeBlock = (editor) => {
        const {
          insertBreak
        } = editor;
        const insertBreakCodeBlock = () => {
          if (!editor.selection)
            return;
          const res = getCodeLineEntry(editor, {});
          if (!res)
            return;
          const {
            codeBlock,
            codeLine
          } = res;
          const indentDepth = getIndentDepth(editor, {
            codeBlock,
            codeLine
          });
          insertCodeLine(editor, indentDepth);
          return true;
        };
        editor.insertBreak = () => {
          if (insertBreakCodeBlock())
            return;
          insertBreak();
        };
        editor.insertFragment = insertFragmentCodeBlock(editor);
        return editor;
      };
      const createCodeBlockPlugin$1 = createPluginFactory({
        key: ELEMENT_CODE_BLOCK,
        isElement: true,
        deserializeHtml: deserializeHtmlCodeBlock,
        handlers: {
          onKeyDown: onKeyDownCodeBlock
        },
        withOverrides: withCodeBlock,
        options: {
          hotkey: ["mod+opt+8", "mod+shift+8"],
          syntax: true,
          syntaxPopularFirst: false
        },
        then: (editor) => ({
          inject: {
            pluginsByKey: {
              [KEY_DESERIALIZE_HTML]: {
                editor: {
                  insertData: {
                    query: () => {
                      const code_line = getPlugin(editor, ELEMENT_CODE_LINE);
                      return !someNode(editor, {
                        match: {
                          type: code_line.type
                        }
                      });
                    }
                  }
                }
              }
            }
          }
        }),
        plugins: [{
          key: ELEMENT_CODE_LINE,
          isElement: true
        }, {
          key: ELEMENT_CODE_SYNTAX,
          isLeaf: true,
          decorate: decorateCodeLine
        }]
      });
      const ELEMENT_H1 = "h1";
      const ELEMENT_H2 = "h2";
      const ELEMENT_H3 = "h3";
      const ELEMENT_H4 = "h4";
      const ELEMENT_H5 = "h5";
      const ELEMENT_H6 = "h6";
      const KEYS_HEADING = [ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6];
      const createHeadingPlugin = createPluginFactory({
        key: "heading",
        options: {
          levels: 6
        },
        then: (editor, {
          options: {
            levels
          } = {}
        }) => {
          const plugins = [];
          for (let level = 1; level <= levels; level++) {
            const key = KEYS_HEADING[level - 1];
            const plugin = {
              key,
              isElement: true,
              deserializeHtml: {
                rules: [{
                  validNodeName: `H${level}`
                }]
              },
              handlers: {
                onKeyDown: onKeyDownToggleElement
              },
              options: {}
            };
            if (level < 4) {
              plugin.options.hotkey = [`mod+opt+${level}`, `mod+shift+${level}`];
            }
            plugins.push(plugin);
          }
          return {
            plugins
          };
        }
      });
      const ELEMENT_PARAGRAPH = "p";
      const createParagraphPlugin = createPluginFactory({
        key: ELEMENT_PARAGRAPH,
        isElement: true,
        handlers: {
          onKeyDown: onKeyDownToggleElement
        },
        options: {
          hotkey: ["mod+opt+0", "mod+shift+0"]
        },
        deserializeHtml: {
          rules: [{
            validNodeName: "P"
          }],
          query: (el2) => el2.style.fontFamily !== "Consolas"
        }
      });
      createPluginFactory({
        key: "basicElements",
        plugins: [createBlockquotePlugin(), createCodeBlockPlugin$1(), createHeadingPlugin(), createParagraphPlugin()]
      });
      const MARK_BOLD$1 = "bold";
      const createBoldPlugin$1 = createPluginFactory({
        key: MARK_BOLD$1,
        isLeaf: true,
        deserializeHtml: {
          rules: [{
            validNodeName: ["STRONG", "B"]
          }, {
            validStyle: {
              fontWeight: ["600", "700", "bold"]
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.fontWeight === "normal")
        },
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+b"
        }
      });
      const MARK_CODE$1 = "code";
      const createCodePlugin$1 = createPluginFactory({
        key: MARK_CODE$1,
        isLeaf: true,
        deserializeHtml: {
          rules: [{
            validNodeName: ["CODE"]
          }, {
            validStyle: {
              wordWrap: "break-word"
            }
          }, {
            validStyle: {
              fontFamily: "Consolas"
            }
          }],
          query(el2) {
            const blockAbove = findHtmlParentElement(el2, "P");
            if ((blockAbove === null || blockAbove === void 0 ? void 0 : blockAbove.style.fontFamily) === "Consolas")
              return false;
            return !findHtmlParentElement(el2, "PRE");
          }
        },
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+e"
        }
      });
      const MARK_ITALIC$1 = "italic";
      const createItalicPlugin$1 = createPluginFactory({
        key: MARK_ITALIC$1,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+i"
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["EM", "I"]
          }, {
            validStyle: {
              fontStyle: "italic"
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.fontStyle === "normal")
        }
      });
      const MARK_STRIKETHROUGH$1 = "strikethrough";
      const createStrikethroughPlugin$1 = createPluginFactory({
        key: MARK_STRIKETHROUGH$1,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+shift+x"
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["S", "DEL", "STRIKE"]
          }, {
            validStyle: {
              textDecoration: "line-through"
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.textDecoration === "none")
        }
      });
      const MARK_SUBSCRIPT$1$1 = "subscript";
      const MARK_SUPERSCRIPT$1$1 = "superscript";
      const createSubscriptPlugin$1 = createPluginFactory({
        key: MARK_SUBSCRIPT$1$1,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+,",
          clear: MARK_SUPERSCRIPT$1$1
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["SUB"]
          }, {
            validStyle: {
              verticalAlign: "sub"
            }
          }]
        }
      });
      const MARK_SUPERSCRIPT$2 = "superscript";
      const MARK_SUBSCRIPT$2 = "subscript";
      const createSuperscriptPlugin$1 = createPluginFactory({
        key: MARK_SUPERSCRIPT$2,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+.",
          clear: MARK_SUBSCRIPT$2
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["SUP"]
          }, {
            validStyle: {
              verticalAlign: "super"
            }
          }]
        }
      });
      const MARK_UNDERLINE$1 = "underline";
      const createUnderlinePlugin$1 = createPluginFactory({
        key: MARK_UNDERLINE$1,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+u"
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["U"]
          }, {
            validStyle: {
              textDecoration: ["underline"]
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.textDecoration === "none")
        }
      });
      createPluginFactory({
        key: "basicMarks",
        plugins: [createBoldPlugin$1(), createCodePlugin$1(), createItalicPlugin$1(), createStrikethroughPlugin$1(), createSubscriptPlugin$1(), createSuperscriptPlugin$1(), createUnderlinePlugin$1()]
      });
      function unwrapExports$9(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$a(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$b = createCommonjsModule$a(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      var isHotkey$3 = unwrapExports$9(lib$b);
      lib$b.isHotkey;
      lib$b.isCodeHotkey;
      lib$b.isKeyHotkey;
      lib$b.parseHotkey;
      lib$b.compareHotkey;
      lib$b.toKeyCode;
      lib$b.toKeyName;
      const exitBreakAtEdges = (editor, {
        start,
        end
      }) => {
        let queryEdge = false;
        let isEdge2 = false;
        let isStart = false;
        if (start || end) {
          queryEdge = true;
          if (start && isSelectionAtBlockStart(editor)) {
            isEdge2 = true;
            isStart = true;
          }
          if (end && isSelectionAtBlockEnd(editor)) {
            isEdge2 = true;
          }
          if (isEdge2 && isExpanded(editor.selection)) {
            editor.deleteFragment();
          }
        }
        return {
          queryEdge,
          isEdge: isEdge2,
          isStart
        };
      };
      const exitBreak = (editor, {
        level = 0,
        defaultType = getPluginType(editor, ELEMENT_DEFAULT),
        query = {},
        before
      }) => {
        if (!editor.selection)
          return;
        const {
          queryEdge,
          isEdge: isEdge2,
          isStart
        } = exitBreakAtEdges(editor, query);
        if (isStart)
          before = true;
        if (queryEdge && !isEdge2)
          return;
        const selectionPath = getPath$1(editor, editor.selection);
        let insertPath;
        if (before) {
          insertPath = selectionPath.slice(0, level + 1);
        } else {
          insertPath = Path.next(selectionPath.slice(0, level + 1));
        }
        insertElements(editor, {
          type: defaultType,
          children: [{
            text: ""
          }]
        }, {
          at: insertPath,
          select: !isStart
        });
        return true;
      };
      const onKeyDownExitBreak = (editor, {
        options: {
          rules = []
        }
      }) => (event) => {
        const entry = getBlockAbove(editor);
        if (!entry)
          return;
        rules.forEach(({
          hotkey,
          ...rule
        }) => {
          if (isHotkey$3(hotkey, event) && queryNode(entry, rule.query)) {
            if (exitBreak(editor, rule)) {
              event.preventDefault();
              event.stopPropagation();
            }
          }
        });
      };
      const KEY_EXIT_BREAK = "exitBreak";
      const createExitBreakPlugin = createPluginFactory({
        key: KEY_EXIT_BREAK,
        handlers: {
          onKeyDown: onKeyDownExitBreak
        },
        options: {
          rules: [{
            hotkey: "mod+enter"
          }, {
            hotkey: "mod+shift+enter",
            before: true
          }]
        }
      });
      var propTypes$1 = { exports: {} };
      var ReactPropTypesSecret$3 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      var ReactPropTypesSecret_1$1 = ReactPropTypesSecret$3;
      var ReactPropTypesSecret$2 = ReactPropTypesSecret_1$1;
      function emptyFunction$1() {
      }
      function emptyFunctionWithReset$1() {
      }
      emptyFunctionWithReset$1.resetWarningCache = emptyFunction$1;
      var factoryWithThrowingShims$1 = function() {
        function shim(props, propName, componentName, location, propFullName, secret) {
          if (secret === ReactPropTypesSecret$2) {
            return;
          }
          var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
          err.name = "Invariant Violation";
          throw err;
        }
        shim.isRequired = shim;
        function getShim() {
          return shim;
        }
        var ReactPropTypes = {
          array: shim,
          bigint: shim,
          bool: shim,
          func: shim,
          number: shim,
          object: shim,
          string: shim,
          symbol: shim,
          any: shim,
          arrayOf: getShim,
          element: shim,
          elementType: shim,
          instanceOf: getShim,
          node: shim,
          objectOf: getShim,
          oneOf: getShim,
          oneOfType: getShim,
          shape: getShim,
          exact: getShim,
          checkPropTypes: emptyFunctionWithReset$1,
          resetWarningCache: emptyFunction$1
        };
        ReactPropTypes.PropTypes = ReactPropTypes;
        return ReactPropTypes;
      };
      {
        propTypes$1.exports = factoryWithThrowingShims$1();
      }
      var PropTypes$1 = propTypes$1.exports;
      function __awaiter(thisArg, _arguments, P22, generator) {
        function adopt(value) {
          return value instanceof P22 ? value : new P22(function(resolve) {
            resolve(value);
          });
        }
        return new (P22 || (P22 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e22) {
              reject(e22);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e22) {
              reject(e22);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }
      function __generator(thisArg, body) {
        var _22 = { label: 0, sent: function() {
          if (t22[0] & 1)
            throw t22[1];
          return t22[1];
        }, trys: [], ops: [] }, f22, y22, t22, g22;
        return g22 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g22[Symbol.iterator] = function() {
          return this;
        }), g22;
        function verb(n22) {
          return function(v22) {
            return step([n22, v22]);
          };
        }
        function step(op) {
          if (f22)
            throw new TypeError("Generator is already executing.");
          while (g22 && (g22 = 0, op[0] && (_22 = 0)), _22)
            try {
              if (f22 = 1, y22 && (t22 = op[0] & 2 ? y22["return"] : op[0] ? y22["throw"] || ((t22 = y22["return"]) && t22.call(y22), 0) : y22.next) && !(t22 = t22.call(y22, op[1])).done)
                return t22;
              if (y22 = 0, t22)
                op = [op[0] & 2, t22.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t22 = op;
                  break;
                case 4:
                  _22.label++;
                  return { value: op[1], done: false };
                case 5:
                  _22.label++;
                  y22 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _22.ops.pop();
                  _22.trys.pop();
                  continue;
                default:
                  if (!(t22 = _22.trys, t22 = t22.length > 0 && t22[t22.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _22 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t22 || op[1] > t22[0] && op[1] < t22[3])) {
                    _22.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _22.label < t22[1]) {
                    _22.label = t22[1];
                    t22 = op;
                    break;
                  }
                  if (t22 && _22.label < t22[2]) {
                    _22.label = t22[2];
                    _22.ops.push(op);
                    break;
                  }
                  if (t22[2])
                    _22.ops.pop();
                  _22.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _22);
            } catch (e22) {
              op = [6, e22];
              y22 = 0;
            } finally {
              f22 = t22 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      }
      function __read(o22, n22) {
        var m22 = typeof Symbol === "function" && o22[Symbol.iterator];
        if (!m22)
          return o22;
        var i22 = m22.call(o22), r22, ar = [], e22;
        try {
          while ((n22 === void 0 || n22-- > 0) && !(r22 = i22.next()).done)
            ar.push(r22.value);
        } catch (error) {
          e22 = { error };
        } finally {
          try {
            if (r22 && !r22.done && (m22 = i22["return"]))
              m22.call(i22);
          } finally {
            if (e22)
              throw e22.error;
          }
        }
        return ar;
      }
      function __spreadArray(to22, from2, pack) {
        if (pack || arguments.length === 2)
          for (var i22 = 0, l22 = from2.length, ar; i22 < l22; i22++) {
            if (ar || !(i22 in from2)) {
              if (!ar)
                ar = Array.prototype.slice.call(from2, 0, i22);
              ar[i22] = from2[i22];
            }
          }
        return to22.concat(ar || Array.prototype.slice.call(from2));
      }
      const createComboboxStore = (state) => createStore(`combobox-${state.id}`)(state);
      const comboboxStore = createStore("combobox")({
        activeId: null,
        byId: {},
        highlightedIndex: 0,
        items: [],
        filteredItems: [],
        targetRange: null,
        text: null
      }).extendActions((set2, get2) => ({
        setComboboxById: (state) => {
          if (get2.byId()[state.id])
            return;
          set2.state((draft) => {
            draft.byId[state.id] = createComboboxStore(state);
          });
        },
        open: (state) => {
          set2.mergeState(state);
        },
        reset: () => {
          set2.state((draft) => {
            draft.activeId = null;
            draft.highlightedIndex = 0;
            draft.items = [];
            draft.text = null;
            draft.targetRange = null;
          });
        }
      })).extendSelectors((state) => ({
        isOpen: () => !!state.activeId
      }));
      comboboxStore.use;
      comboboxStore.get;
      comboboxStore.set;
      function unwrapExports$8(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$9(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$a = createCommonjsModule$9(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      unwrapExports$8(lib$a);
      lib$a.isHotkey;
      lib$a.isCodeHotkey;
      lib$a.isKeyHotkey;
      lib$a.parseHotkey;
      lib$a.compareHotkey;
      lib$a.toKeyCode;
      lib$a.toKeyName;
      const ELEMENT_HR = "hr";
      const createHorizontalRulePlugin = createPluginFactory({
        key: ELEMENT_HR,
        isElement: true,
        isVoid: true,
        deserializeHtml: {
          rules: [{
            validNodeName: "HR"
          }]
        }
      });
      var __extends$3 = globalThis && globalThis.__extends || function() {
        var extendStatics = function(d22, b22) {
          extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d32, b32) {
            d32.__proto__ = b32;
          } || function(d32, b32) {
            for (var p22 in b32)
              if (Object.prototype.hasOwnProperty.call(b32, p22))
                d32[p22] = b32[p22];
          };
          return extendStatics(d22, b22);
        };
        return function(d22, b22) {
          extendStatics(d22, b22);
          function __() {
            this.constructor = d22;
          }
          d22.prototype = b22 === null ? Object.create(b22) : (__.prototype = b22.prototype, new __());
        };
      }();
      var __assign$4 = globalThis && globalThis.__assign || function() {
        __assign$4 = Object.assign || function(t22) {
          for (var s22, i22 = 1, n22 = arguments.length; i22 < n22; i22++) {
            s22 = arguments[i22];
            for (var p22 in s22)
              if (Object.prototype.hasOwnProperty.call(s22, p22))
                t22[p22] = s22[p22];
          }
          return t22;
        };
        return __assign$4.apply(this, arguments);
      };
      var rowSizeBase$1 = {
        width: "100%",
        height: "10px",
        top: "0px",
        left: "0px",
        cursor: "row-resize"
      };
      var colSizeBase$1 = {
        width: "10px",
        height: "100%",
        top: "0px",
        left: "0px",
        cursor: "col-resize"
      };
      var edgeBase$1 = {
        width: "20px",
        height: "20px",
        position: "absolute"
      };
      var styles$2 = {
        top: __assign$4(__assign$4({}, rowSizeBase$1), { top: "-5px" }),
        right: __assign$4(__assign$4({}, colSizeBase$1), { left: void 0, right: "-5px" }),
        bottom: __assign$4(__assign$4({}, rowSizeBase$1), { top: void 0, bottom: "-5px" }),
        left: __assign$4(__assign$4({}, colSizeBase$1), { left: "-5px" }),
        topRight: __assign$4(__assign$4({}, edgeBase$1), { right: "-10px", top: "-10px", cursor: "ne-resize" }),
        bottomRight: __assign$4(__assign$4({}, edgeBase$1), { right: "-10px", bottom: "-10px", cursor: "se-resize" }),
        bottomLeft: __assign$4(__assign$4({}, edgeBase$1), { left: "-10px", bottom: "-10px", cursor: "sw-resize" }),
        topLeft: __assign$4(__assign$4({}, edgeBase$1), { left: "-10px", top: "-10px", cursor: "nw-resize" })
      };
      var Resizer$1 = function(_super) {
        __extends$3(Resizer2, _super);
        function Resizer2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.onMouseDown = function(e22) {
            _this.props.onResizeStart(e22, _this.props.direction);
          };
          _this.onTouchStart = function(e22) {
            _this.props.onResizeStart(e22, _this.props.direction);
          };
          return _this;
        }
        Resizer2.prototype.render = function() {
          return react.exports.createElement("div", { className: this.props.className || "", style: __assign$4(__assign$4({ position: "absolute", userSelect: "none" }, styles$2[this.props.direction]), this.props.replaceStyles || {}), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children);
        };
        return Resizer2;
      }(react.exports.PureComponent);
      var __extends$2 = globalThis && globalThis.__extends || function() {
        var extendStatics = function(d22, b22) {
          extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d32, b32) {
            d32.__proto__ = b32;
          } || function(d32, b32) {
            for (var p22 in b32)
              if (Object.prototype.hasOwnProperty.call(b32, p22))
                d32[p22] = b32[p22];
          };
          return extendStatics(d22, b22);
        };
        return function(d22, b22) {
          extendStatics(d22, b22);
          function __() {
            this.constructor = d22;
          }
          d22.prototype = b22 === null ? Object.create(b22) : (__.prototype = b22.prototype, new __());
        };
      }();
      var __assign$3 = globalThis && globalThis.__assign || function() {
        __assign$3 = Object.assign || function(t22) {
          for (var s22, i22 = 1, n22 = arguments.length; i22 < n22; i22++) {
            s22 = arguments[i22];
            for (var p22 in s22)
              if (Object.prototype.hasOwnProperty.call(s22, p22))
                t22[p22] = s22[p22];
          }
          return t22;
        };
        return __assign$3.apply(this, arguments);
      };
      var DEFAULT_SIZE$3 = {
        width: "auto",
        height: "auto"
      };
      var clamp$2 = function(n22, min2, max2) {
        return Math.max(Math.min(n22, max2), min2);
      };
      var snap$1 = function(n22, size) {
        return Math.round(n22 / size) * size;
      };
      var hasDirection$1 = function(dir, target) {
        return new RegExp(dir, "i").test(target);
      };
      var isTouchEvent$1 = function(event) {
        return Boolean(event.touches && event.touches.length);
      };
      var isMouseEvent$1 = function(event) {
        return Boolean((event.clientX || event.clientX === 0) && (event.clientY || event.clientY === 0));
      };
      var findClosestSnap$1 = function(n22, snapArray, snapGap) {
        if (snapGap === void 0) {
          snapGap = 0;
        }
        var closestGapIndex = snapArray.reduce(function(prev, curr, index2) {
          return Math.abs(curr - n22) < Math.abs(snapArray[prev] - n22) ? index2 : prev;
        }, 0);
        var gap = Math.abs(snapArray[closestGapIndex] - n22);
        return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n22;
      };
      var getStringSize$1 = function(n22) {
        n22 = n22.toString();
        if (n22 === "auto") {
          return n22;
        }
        if (n22.endsWith("px")) {
          return n22;
        }
        if (n22.endsWith("%")) {
          return n22;
        }
        if (n22.endsWith("vh")) {
          return n22;
        }
        if (n22.endsWith("vw")) {
          return n22;
        }
        if (n22.endsWith("vmax")) {
          return n22;
        }
        if (n22.endsWith("vmin")) {
          return n22;
        }
        return n22 + "px";
      };
      var getPixelSize$1 = function(size, parentSize, innerWidth, innerHeight) {
        if (size && typeof size === "string") {
          if (size.endsWith("px")) {
            return Number(size.replace("px", ""));
          }
          if (size.endsWith("%")) {
            var ratio = Number(size.replace("%", "")) / 100;
            return parentSize * ratio;
          }
          if (size.endsWith("vw")) {
            var ratio = Number(size.replace("vw", "")) / 100;
            return innerWidth * ratio;
          }
          if (size.endsWith("vh")) {
            var ratio = Number(size.replace("vh", "")) / 100;
            return innerHeight * ratio;
          }
        }
        return size;
      };
      var calculateNewMax$1 = function(parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {
        maxWidth = getPixelSize$1(maxWidth, parentSize.width, innerWidth, innerHeight);
        maxHeight = getPixelSize$1(maxHeight, parentSize.height, innerWidth, innerHeight);
        minWidth = getPixelSize$1(minWidth, parentSize.width, innerWidth, innerHeight);
        minHeight = getPixelSize$1(minHeight, parentSize.height, innerWidth, innerHeight);
        return {
          maxWidth: typeof maxWidth === "undefined" ? void 0 : Number(maxWidth),
          maxHeight: typeof maxHeight === "undefined" ? void 0 : Number(maxHeight),
          minWidth: typeof minWidth === "undefined" ? void 0 : Number(minWidth),
          minHeight: typeof minHeight === "undefined" ? void 0 : Number(minHeight)
        };
      };
      var definedProps$1 = [
        "as",
        "style",
        "className",
        "grid",
        "snap",
        "bounds",
        "boundsByDirection",
        "size",
        "defaultSize",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "lockAspectRatio",
        "lockAspectRatioExtraWidth",
        "lockAspectRatioExtraHeight",
        "enable",
        "handleStyles",
        "handleClasses",
        "handleWrapperStyle",
        "handleWrapperClass",
        "children",
        "onResizeStart",
        "onResize",
        "onResizeStop",
        "handleComponent",
        "scale",
        "resizeRatio",
        "snapGap"
      ];
      var baseClassName$1 = "__resizable_base__";
      (function(_super) {
        __extends$2(Resizable, _super);
        function Resizable(props) {
          var _this = _super.call(this, props) || this;
          _this.ratio = 1;
          _this.resizable = null;
          _this.parentLeft = 0;
          _this.parentTop = 0;
          _this.resizableLeft = 0;
          _this.resizableRight = 0;
          _this.resizableTop = 0;
          _this.resizableBottom = 0;
          _this.targetLeft = 0;
          _this.targetTop = 0;
          _this.appendBase = function() {
            if (!_this.resizable || !_this.window) {
              return null;
            }
            var parent2 = _this.parentNode;
            if (!parent2) {
              return null;
            }
            var element = _this.window.document.createElement("div");
            element.style.width = "100%";
            element.style.height = "100%";
            element.style.position = "absolute";
            element.style.transform = "scale(0, 0)";
            element.style.left = "0";
            element.style.flex = "0 0 100%";
            if (element.classList) {
              element.classList.add(baseClassName$1);
            } else {
              element.className += baseClassName$1;
            }
            parent2.appendChild(element);
            return element;
          };
          _this.removeBase = function(base) {
            var parent2 = _this.parentNode;
            if (!parent2) {
              return;
            }
            parent2.removeChild(base);
          };
          _this.ref = function(c22) {
            if (c22) {
              _this.resizable = c22;
            }
          };
          _this.state = {
            isResizing: false,
            width: typeof (_this.propsSize && _this.propsSize.width) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.width,
            height: typeof (_this.propsSize && _this.propsSize.height) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.height,
            direction: "right",
            original: {
              x: 0,
              y: 0,
              width: 0,
              height: 0
            },
            backgroundStyle: {
              height: "100%",
              width: "100%",
              backgroundColor: "rgba(0,0,0,0)",
              cursor: "auto",
              opacity: 0,
              position: "fixed",
              zIndex: 9999,
              top: "0",
              left: "0",
              bottom: "0",
              right: "0"
            },
            flexBasis: void 0
          };
          _this.onResizeStart = _this.onResizeStart.bind(_this);
          _this.onMouseMove = _this.onMouseMove.bind(_this);
          _this.onMouseUp = _this.onMouseUp.bind(_this);
          return _this;
        }
        Object.defineProperty(Resizable.prototype, "parentNode", {
          get: function() {
            if (!this.resizable) {
              return null;
            }
            return this.resizable.parentNode;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "window", {
          get: function() {
            if (!this.resizable) {
              return null;
            }
            if (!this.resizable.ownerDocument) {
              return null;
            }
            return this.resizable.ownerDocument.defaultView;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "propsSize", {
          get: function() {
            return this.props.size || this.props.defaultSize || DEFAULT_SIZE$3;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "size", {
          get: function() {
            var width = 0;
            var height = 0;
            if (this.resizable && this.window) {
              var orgWidth = this.resizable.offsetWidth;
              var orgHeight = this.resizable.offsetHeight;
              var orgPosition = this.resizable.style.position;
              if (orgPosition !== "relative") {
                this.resizable.style.position = "relative";
              }
              width = this.resizable.style.width !== "auto" ? this.resizable.offsetWidth : orgWidth;
              height = this.resizable.style.height !== "auto" ? this.resizable.offsetHeight : orgHeight;
              this.resizable.style.position = orgPosition;
            }
            return { width, height };
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "sizeStyle", {
          get: function() {
            var _this = this;
            var size = this.props.size;
            var getSize = function(key) {
              if (typeof _this.state[key] === "undefined" || _this.state[key] === "auto") {
                return "auto";
              }
              if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith("%")) {
                if (_this.state[key].toString().endsWith("%")) {
                  return _this.state[key].toString();
                }
                var parentSize = _this.getParentSize();
                var value = Number(_this.state[key].toString().replace("px", ""));
                var percent = value / parentSize[key] * 100;
                return percent + "%";
              }
              return getStringSize$1(_this.state[key]);
            };
            var width = size && typeof size.width !== "undefined" && !this.state.isResizing ? getStringSize$1(size.width) : getSize("width");
            var height = size && typeof size.height !== "undefined" && !this.state.isResizing ? getStringSize$1(size.height) : getSize("height");
            return { width, height };
          },
          enumerable: false,
          configurable: true
        });
        Resizable.prototype.getParentSize = function() {
          if (!this.parentNode) {
            if (!this.window) {
              return { width: 0, height: 0 };
            }
            return { width: this.window.innerWidth, height: this.window.innerHeight };
          }
          var base = this.appendBase();
          if (!base) {
            return { width: 0, height: 0 };
          }
          var wrapChanged = false;
          var wrap2 = this.parentNode.style.flexWrap;
          if (wrap2 !== "wrap") {
            wrapChanged = true;
            this.parentNode.style.flexWrap = "wrap";
          }
          base.style.position = "relative";
          base.style.minWidth = "100%";
          base.style.minHeight = "100%";
          var size = {
            width: base.offsetWidth,
            height: base.offsetHeight
          };
          if (wrapChanged) {
            this.parentNode.style.flexWrap = wrap2;
          }
          this.removeBase(base);
          return size;
        };
        Resizable.prototype.bindEvents = function() {
          if (this.window) {
            this.window.addEventListener("mouseup", this.onMouseUp);
            this.window.addEventListener("mousemove", this.onMouseMove);
            this.window.addEventListener("mouseleave", this.onMouseUp);
            this.window.addEventListener("touchmove", this.onMouseMove, {
              capture: true,
              passive: false
            });
            this.window.addEventListener("touchend", this.onMouseUp);
          }
        };
        Resizable.prototype.unbindEvents = function() {
          if (this.window) {
            this.window.removeEventListener("mouseup", this.onMouseUp);
            this.window.removeEventListener("mousemove", this.onMouseMove);
            this.window.removeEventListener("mouseleave", this.onMouseUp);
            this.window.removeEventListener("touchmove", this.onMouseMove, true);
            this.window.removeEventListener("touchend", this.onMouseUp);
          }
        };
        Resizable.prototype.componentDidMount = function() {
          if (!this.resizable || !this.window) {
            return;
          }
          var computedStyle = this.window.getComputedStyle(this.resizable);
          this.setState({
            width: this.state.width || this.size.width,
            height: this.state.height || this.size.height,
            flexBasis: computedStyle.flexBasis !== "auto" ? computedStyle.flexBasis : void 0
          });
        };
        Resizable.prototype.componentWillUnmount = function() {
          if (this.window) {
            this.unbindEvents();
          }
        };
        Resizable.prototype.createSizeForCssProperty = function(newSize, kind) {
          var propsSize = this.propsSize && this.propsSize[kind];
          return this.state[kind] === "auto" && this.state.original[kind] === newSize && (typeof propsSize === "undefined" || propsSize === "auto") ? "auto" : newSize;
        };
        Resizable.prototype.calculateNewMaxFromBoundary = function(maxWidth, maxHeight) {
          var boundsByDirection = this.props.boundsByDirection;
          var direction = this.state.direction;
          var widthByDirection = boundsByDirection && hasDirection$1("left", direction);
          var heightByDirection = boundsByDirection && hasDirection$1("top", direction);
          var boundWidth;
          var boundHeight;
          if (this.props.bounds === "parent") {
            var parent_1 = this.parentNode;
            if (parent_1) {
              boundWidth = widthByDirection ? this.resizableRight - this.parentLeft : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);
              boundHeight = heightByDirection ? this.resizableBottom - this.parentTop : parent_1.offsetHeight + (this.parentTop - this.resizableTop);
            }
          } else if (this.props.bounds === "window") {
            if (this.window) {
              boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;
              boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;
            }
          } else if (this.props.bounds) {
            boundWidth = widthByDirection ? this.resizableRight - this.targetLeft : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);
            boundHeight = heightByDirection ? this.resizableBottom - this.targetTop : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);
          }
          if (boundWidth && Number.isFinite(boundWidth)) {
            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;
          }
          if (boundHeight && Number.isFinite(boundHeight)) {
            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;
          }
          return { maxWidth, maxHeight };
        };
        Resizable.prototype.calculateNewSizeFromDirection = function(clientX, clientY) {
          var scale = this.props.scale || 1;
          var resizeRatio = this.props.resizeRatio || 1;
          var _a = this.state, direction = _a.direction, original = _a.original;
          var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;
          var newWidth = original.width;
          var newHeight = original.height;
          var extraHeight = lockAspectRatioExtraHeight || 0;
          var extraWidth = lockAspectRatioExtraWidth || 0;
          if (hasDirection$1("right", direction)) {
            newWidth = original.width + (clientX - original.x) * resizeRatio / scale;
            if (lockAspectRatio) {
              newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
            }
          }
          if (hasDirection$1("left", direction)) {
            newWidth = original.width - (clientX - original.x) * resizeRatio / scale;
            if (lockAspectRatio) {
              newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
            }
          }
          if (hasDirection$1("bottom", direction)) {
            newHeight = original.height + (clientY - original.y) * resizeRatio / scale;
            if (lockAspectRatio) {
              newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
            }
          }
          if (hasDirection$1("top", direction)) {
            newHeight = original.height - (clientY - original.y) * resizeRatio / scale;
            if (lockAspectRatio) {
              newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
            }
          }
          return { newWidth, newHeight };
        };
        Resizable.prototype.calculateNewSizeFromAspectRatio = function(newWidth, newHeight, max2, min2) {
          var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;
          var computedMinWidth = typeof min2.width === "undefined" ? 10 : min2.width;
          var computedMaxWidth = typeof max2.width === "undefined" || max2.width < 0 ? newWidth : max2.width;
          var computedMinHeight = typeof min2.height === "undefined" ? 10 : min2.height;
          var computedMaxHeight = typeof max2.height === "undefined" || max2.height < 0 ? newHeight : max2.height;
          var extraHeight = lockAspectRatioExtraHeight || 0;
          var extraWidth = lockAspectRatioExtraWidth || 0;
          if (lockAspectRatio) {
            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;
            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;
            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;
            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;
            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);
            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);
            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);
            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);
            newWidth = clamp$2(newWidth, lockedMinWidth, lockedMaxWidth);
            newHeight = clamp$2(newHeight, lockedMinHeight, lockedMaxHeight);
          } else {
            newWidth = clamp$2(newWidth, computedMinWidth, computedMaxWidth);
            newHeight = clamp$2(newHeight, computedMinHeight, computedMaxHeight);
          }
          return { newWidth, newHeight };
        };
        Resizable.prototype.setBoundingClientRect = function() {
          if (this.props.bounds === "parent") {
            var parent_2 = this.parentNode;
            if (parent_2) {
              var parentRect = parent_2.getBoundingClientRect();
              this.parentLeft = parentRect.left;
              this.parentTop = parentRect.top;
            }
          }
          if (this.props.bounds && typeof this.props.bounds !== "string") {
            var targetRect = this.props.bounds.getBoundingClientRect();
            this.targetLeft = targetRect.left;
            this.targetTop = targetRect.top;
          }
          if (this.resizable) {
            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;
            this.resizableLeft = left;
            this.resizableRight = right;
            this.resizableTop = top_1;
            this.resizableBottom = bottom;
          }
        };
        Resizable.prototype.onResizeStart = function(event, direction) {
          if (!this.resizable || !this.window) {
            return;
          }
          var clientX = 0;
          var clientY = 0;
          if (event.nativeEvent && isMouseEvent$1(event.nativeEvent)) {
            clientX = event.nativeEvent.clientX;
            clientY = event.nativeEvent.clientY;
          } else if (event.nativeEvent && isTouchEvent$1(event.nativeEvent)) {
            clientX = event.nativeEvent.touches[0].clientX;
            clientY = event.nativeEvent.touches[0].clientY;
          }
          if (this.props.onResizeStart) {
            if (this.resizable) {
              var startResize = this.props.onResizeStart(event, direction, this.resizable);
              if (startResize === false) {
                return;
              }
            }
          }
          if (this.props.size) {
            if (typeof this.props.size.height !== "undefined" && this.props.size.height !== this.state.height) {
              this.setState({ height: this.props.size.height });
            }
            if (typeof this.props.size.width !== "undefined" && this.props.size.width !== this.state.width) {
              this.setState({ width: this.props.size.width });
            }
          }
          this.ratio = typeof this.props.lockAspectRatio === "number" ? this.props.lockAspectRatio : this.size.width / this.size.height;
          var flexBasis;
          var computedStyle = this.window.getComputedStyle(this.resizable);
          if (computedStyle.flexBasis !== "auto") {
            var parent_3 = this.parentNode;
            if (parent_3) {
              var dir = this.window.getComputedStyle(parent_3).flexDirection;
              this.flexDir = dir.startsWith("row") ? "row" : "column";
              flexBasis = computedStyle.flexBasis;
            }
          }
          this.setBoundingClientRect();
          this.bindEvents();
          var state = {
            original: {
              x: clientX,
              y: clientY,
              width: this.size.width,
              height: this.size.height
            },
            isResizing: true,
            backgroundStyle: __assign$3(__assign$3({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || "auto" }),
            direction,
            flexBasis
          };
          this.setState(state);
        };
        Resizable.prototype.onMouseMove = function(event) {
          var _this = this;
          if (!this.state.isResizing || !this.resizable || !this.window) {
            return;
          }
          if (this.window.TouchEvent && isTouchEvent$1(event)) {
            try {
              event.preventDefault();
              event.stopPropagation();
            } catch (e22) {
            }
          }
          var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;
          var clientX = isTouchEvent$1(event) ? event.touches[0].clientX : event.clientX;
          var clientY = isTouchEvent$1(event) ? event.touches[0].clientY : event.clientY;
          var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;
          var parentSize = this.getParentSize();
          var max2 = calculateNewMax$1(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);
          maxWidth = max2.maxWidth;
          maxHeight = max2.maxHeight;
          minWidth = max2.minWidth;
          minHeight = max2.minHeight;
          var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;
          var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);
          if (this.props.snap && this.props.snap.x) {
            newWidth = findClosestSnap$1(newWidth, this.props.snap.x, this.props.snapGap);
          }
          if (this.props.snap && this.props.snap.y) {
            newHeight = findClosestSnap$1(newHeight, this.props.snap.y, this.props.snapGap);
          }
          var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });
          newWidth = newSize.newWidth;
          newHeight = newSize.newHeight;
          if (this.props.grid) {
            var newGridWidth = snap$1(newWidth, this.props.grid[0]);
            var newGridHeight = snap$1(newHeight, this.props.grid[1]);
            var gap = this.props.snapGap || 0;
            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;
            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;
          }
          var delta = {
            width: newWidth - original.width,
            height: newHeight - original.height
          };
          if (width && typeof width === "string") {
            if (width.endsWith("%")) {
              var percent = newWidth / parentSize.width * 100;
              newWidth = percent + "%";
            } else if (width.endsWith("vw")) {
              var vw = newWidth / this.window.innerWidth * 100;
              newWidth = vw + "vw";
            } else if (width.endsWith("vh")) {
              var vh2 = newWidth / this.window.innerHeight * 100;
              newWidth = vh2 + "vh";
            }
          }
          if (height && typeof height === "string") {
            if (height.endsWith("%")) {
              var percent = newHeight / parentSize.height * 100;
              newHeight = percent + "%";
            } else if (height.endsWith("vw")) {
              var vw = newHeight / this.window.innerWidth * 100;
              newHeight = vw + "vw";
            } else if (height.endsWith("vh")) {
              var vh2 = newHeight / this.window.innerHeight * 100;
              newHeight = vh2 + "vh";
            }
          }
          var newState = {
            width: this.createSizeForCssProperty(newWidth, "width"),
            height: this.createSizeForCssProperty(newHeight, "height")
          };
          if (this.flexDir === "row") {
            newState.flexBasis = newState.width;
          } else if (this.flexDir === "column") {
            newState.flexBasis = newState.height;
          }
          reactDom.exports.flushSync(function() {
            _this.setState(newState);
          });
          if (this.props.onResize) {
            this.props.onResize(event, direction, this.resizable, delta);
          }
        };
        Resizable.prototype.onMouseUp = function(event) {
          var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;
          if (!isResizing || !this.resizable) {
            return;
          }
          var delta = {
            width: this.size.width - original.width,
            height: this.size.height - original.height
          };
          if (this.props.onResizeStop) {
            this.props.onResizeStop(event, direction, this.resizable, delta);
          }
          if (this.props.size) {
            this.setState(this.props.size);
          }
          this.unbindEvents();
          this.setState({
            isResizing: false,
            backgroundStyle: __assign$3(__assign$3({}, this.state.backgroundStyle), { cursor: "auto" })
          });
        };
        Resizable.prototype.updateSize = function(size) {
          this.setState({ width: size.width, height: size.height });
        };
        Resizable.prototype.renderResizer = function() {
          var _this = this;
          var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;
          if (!enable) {
            return null;
          }
          var resizers = Object.keys(enable).map(function(dir) {
            if (enable[dir] !== false) {
              return react.exports.createElement(Resizer$1, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null);
            }
            return null;
          });
          return react.exports.createElement("div", { className: handleWrapperClass, style: handleWrapperStyle }, resizers);
        };
        Resizable.prototype.render = function() {
          var _this = this;
          var extendsProps = Object.keys(this.props).reduce(function(acc, key) {
            if (definedProps$1.indexOf(key) !== -1) {
              return acc;
            }
            acc[key] = _this.props[key];
            return acc;
          }, {});
          var style = __assign$3(__assign$3(__assign$3({ position: "relative", userSelect: this.state.isResizing ? "none" : "auto" }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: "border-box", flexShrink: 0 });
          if (this.state.flexBasis) {
            style.flexBasis = this.state.flexBasis;
          }
          var Wrapper = this.props.as || "div";
          return react.exports.createElement(Wrapper, __assign$3({ ref: this.ref, style, className: this.props.className }, extendsProps), this.state.isResizing && react.exports.createElement("div", { style: this.state.backgroundStyle }), this.props.children, this.renderResizer());
        };
        Resizable.defaultProps = {
          as: "div",
          onResizeStart: function() {
          },
          onResize: function() {
          },
          onResizeStop: function() {
          },
          enable: {
            top: true,
            right: true,
            bottom: true,
            left: true,
            topRight: true,
            bottomRight: true,
            bottomLeft: true,
            topLeft: true
          },
          style: {},
          grid: [1, 1],
          lockAspectRatio: false,
          lockAspectRatioExtraWidth: 0,
          lockAspectRatioExtraHeight: 0,
          scale: 1,
          resizeRatio: 1,
          snapGap: 0
        };
        return Resizable;
      })(react.exports.PureComponent);
      function unwrapExports$7(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$8(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$9 = createCommonjsModule$8(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      unwrapExports$7(lib$9);
      lib$9.isHotkey;
      lib$9.isCodeHotkey;
      lib$9.isKeyHotkey;
      lib$9.parseHotkey;
      lib$9.compareHotkey;
      lib$9.toKeyCode;
      lib$9.toKeyName;
      createAtomStore({
        width: 0
      }, {
        name: "image",
        scope: "img"
      });
      createStore("image")({
        focusEndCaptionPath: null,
        focusStartCaptionPath: null
      });
      let ListStyleType;
      (function(ListStyleType2) {
        ListStyleType2["Armenian"] = "armenian";
        ListStyleType2["Circle"] = "circle";
        ListStyleType2["CjkIdeographic"] = "cjk-ideographic";
        ListStyleType2["Decimal"] = "decimal";
        ListStyleType2["DecimalLeadingZero"] = "decimal-leading-zero";
        ListStyleType2["Disc"] = "disc";
        ListStyleType2["Georgian"] = "georgian";
        ListStyleType2["Hebrew"] = "hebrew";
        ListStyleType2["Hiragana"] = "hiragana";
        ListStyleType2["HiraganaIroha"] = "hiragana-iroha";
        ListStyleType2["Katakana"] = "katakana";
        ListStyleType2["KatakanaIroha"] = "katakana-iroha";
        ListStyleType2["LowerAlpha"] = "lower-alpha";
        ListStyleType2["LowerGreek"] = "lower-greek";
        ListStyleType2["LowerLatin"] = "lower-latin";
        ListStyleType2["LowerRoman"] = "lower-roman";
        ListStyleType2["None"] = "none";
        ListStyleType2["Square"] = "square";
        ListStyleType2["UpperAlpha"] = "upper-alpha";
        ListStyleType2["UpperLatin"] = "upper-latin";
        ListStyleType2["UpperRoman"] = "upper-roman";
        ListStyleType2["Initial"] = "initial";
        ListStyleType2["Inherit"] = "inherit";
      })(ListStyleType || (ListStyleType = {}));
      function unwrapExports$6(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$7(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$8 = createCommonjsModule$7(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      unwrapExports$6(lib$8);
      lib$8.isHotkey;
      lib$8.isCodeHotkey;
      lib$8.isKeyHotkey;
      lib$8.parseHotkey;
      lib$8.compareHotkey;
      lib$8.toKeyCode;
      lib$8.toKeyName;
      function unwrapExports$5(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$6(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$7 = createCommonjsModule$6(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      var isHotkey$2 = unwrapExports$5(lib$7);
      lib$7.isHotkey;
      lib$7.isCodeHotkey;
      lib$7.isKeyHotkey;
      lib$7.parseHotkey;
      lib$7.compareHotkey;
      lib$7.toKeyCode;
      lib$7.toKeyName;
      const SIMULATE_BACKSPACE = {
        key: "",
        which: 8
      };
      const onKeyDownResetNode = (editor, {
        options: {
          rules
        }
      }) => (event) => {
        let reset;
        if (editor.selection && isCollapsed(editor.selection)) {
          rules.forEach(({
            types,
            defaultType,
            hotkey,
            predicate,
            onReset
          }) => {
            if (hotkey && isHotkey$2(hotkey, event)) {
              if (predicate(editor) && someNode(editor, {
                match: {
                  type: types
                }
              })) {
                var _event$preventDefault;
                (_event$preventDefault = event.preventDefault) === null || _event$preventDefault === void 0 ? void 0 : _event$preventDefault.call(event);
                setElements(editor, {
                  type: defaultType
                });
                if (onReset) {
                  onReset(editor);
                }
                reset = true;
              }
            }
          });
        }
        return reset;
      };
      const KEY_RESET_NODE = "resetNode";
      const createResetNodePlugin = createPluginFactory({
        key: KEY_RESET_NODE,
        handlers: {
          onKeyDown: onKeyDownResetNode
        },
        options: {
          rules: []
        }
      });
      var isArray$h = Array.isArray;
      var isArray_1$2 = isArray$h;
      function castArray() {
        if (!arguments.length) {
          return [];
        }
        var value = arguments[0];
        return isArray_1$2(value) ? value : [value];
      }
      var castArray_1 = castArray;
      function unwrapExports$4(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$5(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$6 = createCommonjsModule$5(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      var isHotkey$1 = unwrapExports$4(lib$6);
      lib$6.isHotkey;
      lib$6.isCodeHotkey;
      lib$6.isKeyHotkey;
      lib$6.parseHotkey;
      lib$6.compareHotkey;
      lib$6.toKeyCode;
      lib$6.toKeyName;
      const isListNested = (editor, listPath) => {
        var _getParentNode;
        const listParentNode = (_getParentNode = getParentNode(editor, listPath)) === null || _getParentNode === void 0 ? void 0 : _getParentNode[0];
        return (listParentNode === null || listParentNode === void 0 ? void 0 : listParentNode.type) === getPluginType(editor, ELEMENT_LI);
      };
      const getUnorderedListType = (editor) => {
        return getPluginType(editor, ELEMENT_UL);
      };
      const getOrderedListType = (editor) => {
        return getPluginType(editor, ELEMENT_OL);
      };
      const getListTypes = (editor) => {
        return [getOrderedListType(editor), getUnorderedListType(editor)];
      };
      const getListItemType = (editor) => {
        return getPluginType(editor, ELEMENT_LI);
      };
      const getListItemContentType = (editor) => {
        return getPluginType(editor, ELEMENT_LIC);
      };
      const getHighestEmptyList = (editor, {
        diffListPath,
        liPath
      }) => {
        const list2 = getAboveNode(editor, {
          at: liPath,
          match: {
            type: getListTypes(editor)
          }
        });
        if (!list2)
          return;
        const [listNode, listPath] = list2;
        if (!diffListPath || !Path.equals(listPath, diffListPath)) {
          if (listNode.children.length < 2) {
            const liParent = getAboveNode(editor, {
              at: listPath,
              match: {
                type: getPluginType(editor, ELEMENT_LI)
              }
            });
            if (liParent) {
              return getHighestEmptyList(editor, {
                liPath: liParent[1],
                diffListPath
              }) || listPath;
            }
          }
          return liPath;
        }
      };
      const getListItemEntry = (editor, {
        at = editor.selection
      } = {}) => {
        const liType = getPluginType(editor, ELEMENT_LI);
        let _at;
        if (Range.isRange(at) && !isCollapsed(at)) {
          _at = at.focus.path;
        } else if (Range.isRange(at)) {
          _at = at.anchor.path;
        } else {
          _at = at;
        }
        if (_at) {
          const node = getNode(editor, _at);
          if (node) {
            const listItem = getAboveNode(editor, {
              at: _at,
              match: {
                type: liType
              }
            });
            if (listItem) {
              const list2 = getParentNode(editor, listItem[1]);
              return {
                list: list2,
                listItem
              };
            }
          }
        }
      };
      const getListRoot = (editor, at = editor.selection) => {
        if (!at)
          return;
        const parentList = getAboveNode(editor, {
          at,
          match: {
            type: [getPluginType(editor, ELEMENT_UL), getPluginType(editor, ELEMENT_OL)]
          }
        });
        if (parentList) {
          var _getListRoot;
          const [, parentListPath] = parentList;
          return (_getListRoot = getListRoot(editor, parentListPath)) !== null && _getListRoot !== void 0 ? _getListRoot : parentList;
        }
      };
      const hasListChild = (editor, node) => node.children.some((n22) => match(n22, [], {
        type: getListTypes(editor)
      }));
      const isAcrossListItems = (editor) => {
        const {
          selection
        } = editor;
        if (!selection || isCollapsed(selection)) {
          return false;
        }
        const isAcrossBlocks = isRangeAcrossBlocks(editor);
        if (!isAcrossBlocks)
          return false;
        return someNode(editor, {
          match: {
            type: getPluginType(editor, ELEMENT_LI)
          }
        });
      };
      const isListRoot = (editor, node) => isElement(node) && getListTypes(editor).includes(node.type);
      const moveListItemDown = (editor, {
        list: list2,
        listItem
      }) => {
        const [listNode] = list2;
        const [, listItemPath] = listItem;
        let previousListItemPath;
        try {
          previousListItemPath = Path.previous(listItemPath);
        } catch (e22) {
          return;
        }
        const previousSiblingItem = getNodeEntry(editor, previousListItemPath);
        if (previousSiblingItem) {
          const [previousNode, previousPath] = previousSiblingItem;
          const sublist = previousNode.children.find((n22) => match(n22, [], {
            type: getListTypes(editor)
          }));
          const newPath = previousPath.concat(sublist ? [1, sublist.children.length] : [1]);
          withoutNormalizing(editor, () => {
            if (!sublist) {
              wrapNodes(editor, {
                type: listNode.type,
                children: []
              }, {
                at: listItemPath
              });
            }
            moveNodes(editor, {
              at: listItemPath,
              to: newPath
            });
          });
        }
      };
      const moveListItemsToList = (editor, {
        fromList: fromList2,
        fromListItem,
        fromStartIndex,
        to: _to,
        toList,
        toListIndex = null,
        deleteFromList = true
      }) => {
        let fromListPath;
        let moved;
        withoutNormalizing(editor, () => {
          if (fromListItem) {
            const fromListItemSublist = findDescendant(editor, {
              at: fromListItem[1],
              match: {
                type: getListTypes(editor)
              }
            });
            if (!fromListItemSublist)
              return;
            fromListPath = fromListItemSublist === null || fromListItemSublist === void 0 ? void 0 : fromListItemSublist[1];
          } else if (fromList2) {
            fromListPath = fromList2[1];
          } else {
            return;
          }
          let to22 = null;
          if (_to)
            to22 = _to;
          if (toList) {
            if (toListIndex !== null)
              to22 = toList[1].concat([toListIndex]);
            else {
              const lastChildPath = getLastChildPath(toList);
              to22 = Path.next(lastChildPath);
            }
          }
          if (!to22)
            return;
          moved = moveChildren(editor, {
            at: fromListPath,
            to: to22,
            fromStartIndex
          });
          if (deleteFromList) {
            deleteText(editor, {
              at: fromListPath
            });
          }
        });
        return moved;
      };
      const unwrapList = (editor, {
        at
      } = {}) => {
        const ancestorListTypeCheck = () => {
          if (getAboveNode(editor, {
            match: {
              type: getListTypes(editor),
              at
            }
          })) {
            return true;
          }
          if (!at && editor.selection) {
            const commonNode = getCommonNode(editor, editor.selection.anchor.path, editor.selection.focus.path);
            if (isElement(commonNode[0]) && getListTypes(editor).includes(commonNode[0].type)) {
              return true;
            }
          }
          return false;
        };
        withoutNormalizing(editor, () => {
          do {
            setElements(editor, {
              type: getPluginType(editor, ELEMENT_DEFAULT)
            });
            unwrapNodes(editor, {
              at,
              match: {
                type: getPluginType(editor, ELEMENT_LI)
              },
              split: true
            });
            unwrapNodes(editor, {
              at,
              match: {
                type: [getPluginType(editor, ELEMENT_UL), getPluginType(editor, ELEMENT_OL)]
              },
              split: true
            });
          } while (ancestorListTypeCheck());
        });
      };
      const moveListItemUp = (editor, {
        list: list2,
        listItem
      }) => {
        const move = () => {
          const [listNode, listPath] = list2;
          const [liNode, liPath] = listItem;
          const liParent = getAboveNode(editor, {
            at: listPath,
            match: {
              type: getPluginType(editor, ELEMENT_LI)
            }
          });
          if (!liParent) {
            let toListPath2;
            try {
              toListPath2 = Path.next(listPath);
            } catch (err) {
              return;
            }
            const condA = hasListChild(editor, liNode);
            const condB = !isLastChild(list2, liPath);
            if (condA || condB) {
              insertElements(editor, {
                type: listNode.type,
                children: []
              }, {
                at: toListPath2
              });
            }
            if (condA) {
              const toListNode = getNode(editor, toListPath2);
              if (!toListNode)
                return;
              moveListItemsToList(editor, {
                fromListItem: listItem,
                toList: [toListNode, toListPath2]
              });
            }
            if (condB) {
              const toListNode = getNode(editor, toListPath2);
              if (!toListNode)
                return;
              moveListItemsToList(editor, {
                fromList: list2,
                fromStartIndex: liPath[liPath.length - 1] + 1,
                toList: [toListNode, toListPath2],
                deleteFromList: false
              });
            }
            unwrapList(editor, {
              at: liPath.concat(0)
            });
            return true;
          }
          const [, liParentPath] = liParent;
          const toListPath = liPath.concat([1]);
          if (!isLastChild(list2, liPath)) {
            if (!hasListChild(editor, liNode)) {
              insertElements(editor, {
                type: listNode.type,
                children: []
              }, {
                at: toListPath
              });
            }
            const toListNode = getNode(editor, toListPath);
            if (!toListNode)
              return;
            moveListItemsToList(editor, {
              fromListItem: liParent,
              toList: [toListNode, toListPath],
              fromStartIndex: liPath[liPath.length - 1] + 1,
              deleteFromList: false
            });
          }
          const movedUpLiPath = Path.next(liParentPath);
          moveNodes(editor, {
            at: liPath,
            to: movedUpLiPath
          });
          return true;
        };
        let moved = false;
        withoutNormalizing(editor, () => {
          moved = move();
        });
        return moved;
      };
      const removeFirstListItem = (editor, {
        list: list2,
        listItem
      }) => {
        const [, listPath] = list2;
        if (!isListNested(editor, listPath)) {
          moveListItemUp(editor, {
            list: list2,
            listItem
          });
          return true;
        }
        return false;
      };
      const moveListItems = (editor, {
        increase = true,
        at = (() => {
          var _editor$selection;
          return (_editor$selection = editor.selection) !== null && _editor$selection !== void 0 ? _editor$selection : void 0;
        })(),
        enableResetOnShiftTab
      } = {}) => {
        const _nodes = getNodeEntries(editor, {
          at,
          match: {
            type: getPluginType(editor, ELEMENT_LIC)
          }
        });
        const lics = Array.from(_nodes);
        if (!lics.length)
          return;
        const highestLicPaths = [];
        const highestLicPathRefs = [];
        lics.forEach((lic) => {
          const licPath = lic[1];
          const liPath = Path.parent(licPath);
          const isAncestor2 = highestLicPaths.some((path) => {
            const highestLiPath = Path.parent(path);
            return Path.isAncestor(highestLiPath, liPath);
          });
          if (!isAncestor2) {
            highestLicPaths.push(licPath);
            highestLicPathRefs.push(createPathRef(editor, licPath));
          }
        });
        const licPathRefsToMove = increase ? highestLicPathRefs : highestLicPathRefs.reverse();
        withoutNormalizing(editor, () => {
          licPathRefsToMove.forEach((licPathRef) => {
            const licPath = licPathRef.unref();
            if (!licPath)
              return;
            const listItem = getParentNode(editor, licPath);
            if (!listItem)
              return;
            const parentList = getParentNode(editor, listItem[1]);
            if (!parentList)
              return;
            if (increase) {
              moveListItemDown(editor, {
                list: parentList,
                listItem
              });
            } else if (isListNested(editor, parentList[1])) {
              moveListItemUp(editor, {
                list: parentList,
                listItem
              });
            } else if (enableResetOnShiftTab) {
              removeFirstListItem(editor, {
                list: parentList,
                listItem
              });
            }
          });
        });
      };
      const insertListItem = (editor) => {
        const liType = getPluginType(editor, ELEMENT_LI);
        const licType = getPluginType(editor, ELEMENT_LIC);
        if (!editor.selection) {
          return false;
        }
        const licEntry = getAboveNode(editor, {
          match: {
            type: licType
          }
        });
        if (!licEntry)
          return false;
        const [, paragraphPath] = licEntry;
        const listItemEntry = getParentNode(editor, paragraphPath);
        if (!listItemEntry)
          return false;
        const [listItemNode, listItemPath] = listItemEntry;
        if (listItemNode.type !== liType)
          return false;
        let success = false;
        withoutNormalizing(editor, () => {
          if (!Range.isCollapsed(editor.selection)) {
            deleteText(editor);
          }
          const isStart = isStartPoint(editor, editor.selection.focus, paragraphPath);
          const isEnd = isBlockTextEmptyAfterSelection(editor);
          const nextParagraphPath = Path.next(paragraphPath);
          const nextListItemPath = Path.next(listItemPath);
          if (isStart) {
            insertElements(editor, {
              type: liType,
              children: [{
                type: licType,
                children: [{
                  text: ""
                }]
              }]
            }, {
              at: listItemPath
            });
            success = true;
            return;
          }
          if (!isEnd) {
            withoutNormalizing(editor, () => {
              splitNodes(editor);
              wrapNodes(editor, {
                type: liType,
                children: []
              }, {
                at: nextParagraphPath
              });
              moveNodes(editor, {
                at: nextParagraphPath,
                to: nextListItemPath
              });
              select(editor, nextListItemPath);
              collapseSelection(editor, {
                edge: "start"
              });
            });
          } else {
            const marks = getMarks(editor) || {};
            insertElements(editor, {
              type: liType,
              children: [{
                type: licType,
                children: [{
                  text: "",
                  ...marks
                }]
              }]
            }, {
              at: nextListItemPath
            });
            select(editor, nextListItemPath);
          }
          if (listItemNode.children.length > 1) {
            moveNodes(editor, {
              at: nextParagraphPath,
              to: nextListItemPath.concat(1)
            });
          }
          success = true;
        });
        return success;
      };
      const moveListItemSublistItemsToListItemSublist = (editor, {
        fromListItem,
        toListItem,
        start
      }) => {
        const [, fromListItemPath] = fromListItem;
        const [, toListItemPath] = toListItem;
        let moved = 0;
        withoutNormalizing(editor, () => {
          const fromListItemSublist = findDescendant(editor, {
            at: fromListItemPath,
            match: {
              type: getListTypes(editor)
            }
          });
          if (!fromListItemSublist)
            return;
          const [, fromListItemSublistPath] = fromListItemSublist;
          const toListItemSublist = findDescendant(editor, {
            at: toListItemPath,
            match: {
              type: getListTypes(editor)
            }
          });
          let to22;
          if (!toListItemSublist) {
            const fromList2 = getParentNode(editor, fromListItemPath);
            if (!fromList2)
              return;
            const [fromListNode] = fromList2;
            const fromListType = fromListNode.type;
            const toListItemSublistPath = toListItemPath.concat([1]);
            insertElements(editor, {
              type: fromListType,
              children: []
            }, {
              at: toListItemSublistPath
            });
            to22 = toListItemSublistPath.concat([0]);
          } else if (start) {
            const [, toListItemSublistPath] = toListItemSublist;
            to22 = toListItemSublistPath.concat([0]);
          } else {
            to22 = Path.next(getLastChildPath(toListItemSublist));
          }
          moved = moveChildren(editor, {
            at: fromListItemSublistPath,
            to: to22
          });
          deleteText(editor, {
            at: fromListItemSublistPath
          });
        });
        return moved;
      };
      const removeListItem = (editor, {
        list: list2,
        listItem,
        reverse = true
      }) => {
        const [liNode, liPath] = listItem;
        if (isExpanded(editor.selection) || !hasListChild(editor, liNode)) {
          return false;
        }
        const previousLiPath = getPreviousPath(liPath);
        let success = false;
        withoutNormalizing(editor, () => {
          if (previousLiPath) {
            const previousLi = getNodeEntry(editor, previousLiPath);
            let tempLiPath = Path.next(liPath);
            insertElements(editor, {
              type: getPluginType(editor, ELEMENT_LI),
              children: [{
                type: getPluginType(editor, ELEMENT_LIC),
                children: [{
                  text: ""
                }]
              }]
            }, {
              at: tempLiPath
            });
            const tempLi = getNodeEntry(editor, tempLiPath);
            const tempLiPathRef = createPathRef(editor, tempLi[1]);
            moveListItemSublistItemsToListItemSublist(editor, {
              fromListItem: listItem,
              toListItem: tempLi
            });
            deleteMerge(editor, {
              reverse
            });
            tempLiPath = tempLiPathRef.unref();
            moveListItemSublistItemsToListItemSublist(editor, {
              fromListItem: [tempLi[0], tempLiPath],
              toListItem: previousLi
            });
            removeNodes(editor, {
              at: tempLiPath
            });
            success = true;
            return;
          }
          moveListItemsToList(editor, {
            fromListItem: listItem,
            toList: list2,
            toListIndex: 1
          });
        });
        return success;
      };
      const toggleList = (editor, {
        type
      }) => withoutNormalizing(editor, () => {
        if (!editor.selection) {
          return;
        }
        if (isCollapsed(editor.selection) || !isRangeAcrossBlocks(editor)) {
          const res = getListItemEntry(editor);
          if (res) {
            const {
              list: list2
            } = res;
            if (list2[0].type !== type) {
              setElements(editor, {
                type
              }, {
                at: editor.selection,
                match: (n22) => isElement(n22) && getListTypes(editor).includes(n22.type),
                mode: "lowest"
              });
            } else {
              unwrapList(editor);
            }
          } else {
            const list2 = {
              type,
              children: []
            };
            wrapNodes(editor, list2);
            const _nodes = getNodeEntries(editor, {
              match: {
                type: getPluginType(editor, ELEMENT_DEFAULT)
              }
            });
            const nodes = Array.from(_nodes);
            setElements(editor, {
              type: getPluginType(editor, ELEMENT_LIC)
            });
            const listItem = {
              type: getPluginType(editor, ELEMENT_LI),
              children: []
            };
            for (const [, path] of nodes) {
              wrapNodes(editor, listItem, {
                at: path
              });
            }
          }
        } else {
          const [startPoint, endPoint] = Range.edges(editor.selection);
          const commonEntry = getCommonNode(editor, startPoint.path, endPoint.path);
          if (getListTypes(editor).includes(commonEntry[0].type) || commonEntry[0].type === getPluginType(editor, ELEMENT_LI)) {
            if (commonEntry[0].type !== type) {
              const startList = findNode(editor, {
                at: Range.start(editor.selection),
                match: {
                  type: getListTypes(editor)
                },
                mode: "lowest"
              });
              const endList = findNode(editor, {
                at: Range.end(editor.selection),
                match: {
                  type: getListTypes(editor)
                },
                mode: "lowest"
              });
              const rangeLength = Math.min(startList[1].length, endList[1].length);
              setElements(editor, {
                type
              }, {
                at: editor.selection,
                match: (n22, path) => isElement(n22) && getListTypes(editor).includes(n22.type) && path.length >= rangeLength,
                mode: "all"
              });
            } else {
              unwrapList(editor);
            }
          } else {
            const rootPathLength = commonEntry[1].length;
            const _nodes = getNodeEntries(editor, {
              mode: "all"
            });
            const nodes = Array.from(_nodes).filter(([, path]) => path.length === rootPathLength + 1).reverse();
            nodes.forEach((n22) => {
              if (getListTypes(editor).includes(n22[0].type)) {
                setElements(editor, {
                  type
                }, {
                  at: n22[1],
                  match: (_n) => isElement(_n) && getListTypes(editor).includes(_n.type),
                  mode: "all"
                });
              } else {
                setElements(editor, {
                  type: getPluginType(editor, ELEMENT_LIC)
                }, {
                  at: n22[1]
                });
                const listItem = {
                  type: getPluginType(editor, ELEMENT_LI),
                  children: []
                };
                wrapNodes(editor, listItem, {
                  at: n22[1]
                });
                const list2 = {
                  type,
                  children: []
                };
                wrapNodes(editor, list2, {
                  at: n22[1]
                });
              }
            });
          }
        }
      });
      const onKeyDownList = (editor, {
        type,
        options: {
          hotkey,
          enableResetOnShiftTab
        }
      }) => (e22) => {
        const isTab = Hotkeys.isTab(editor, e22);
        const isUntab = Hotkeys.isUntab(editor, e22);
        let workRange = editor.selection;
        if (editor.selection && (isTab || isUntab)) {
          const {
            selection
          } = editor;
          if (!isCollapsed(editor.selection)) {
            const {
              anchor,
              focus
            } = Range.isBackward(selection) ? {
              anchor: selection.focus,
              focus: selection.anchor
            } : {
              anchor: selection.anchor,
              focus: selection.focus
            };
            anchor.offset = 0;
            const unHungRange = unhangRange(editor, {
              anchor,
              focus
            });
            if (unHungRange) {
              workRange = unHungRange;
              select(editor, unHungRange);
            }
          }
          const listSelected = someNode(editor, {
            match: {
              type: getPluginType(editor, ELEMENT_LIC)
            }
          });
          if (workRange && listSelected) {
            e22.preventDefault();
            moveListItems(editor, {
              at: workRange,
              increase: isTab,
              enableResetOnShiftTab
            });
            return true;
          }
        }
        if (!hotkey)
          return;
        const hotkeys = castArray_1(hotkey);
        for (const _hotkey of hotkeys) {
          if (isHotkey$1(_hotkey)(e22)) {
            toggleList(editor, {
              type
            });
          }
        }
      };
      const deleteBackwardList = (editor, unit) => {
        const res = getListItemEntry(editor, {});
        let moved = false;
        if (res) {
          const {
            list: list2,
            listItem
          } = res;
          if (isSelectionAtBlockStart(editor, {
            match: (node) => node.type === getPluginType(editor, ELEMENT_LI)
          })) {
            withoutNormalizing(editor, () => {
              moved = removeFirstListItem(editor, {
                list: list2,
                listItem
              });
              if (moved)
                return true;
              moved = removeListItem(editor, {
                list: list2,
                listItem
              });
              if (moved)
                return true;
              if (isFirstChild(listItem[1]) && !isListNested(editor, list2[1])) {
                onKeyDownResetNode(editor, mockPlugin({
                  options: {
                    rules: [{
                      types: [getPluginType(editor, ELEMENT_LI)],
                      defaultType: getPluginType(editor, ELEMENT_DEFAULT),
                      hotkey: "backspace",
                      predicate: () => isSelectionAtBlockStart(editor),
                      onReset: (e22) => unwrapList(e22)
                    }]
                  }
                }))(SIMULATE_BACKSPACE);
                moved = true;
                return;
              }
              deleteMerge(editor, {
                unit,
                reverse: true
              });
              moved = true;
            });
          }
        }
        return moved;
      };
      const selectionIsNotInAListHandler = (editor) => {
        const pointAfterSelection = getPointAfter(editor, editor.selection.focus.path);
        if (pointAfterSelection) {
          const nextSiblingListRes = getListItemEntry(editor, {
            at: pointAfterSelection
          });
          if (nextSiblingListRes) {
            const {
              listItem
            } = nextSiblingListRes;
            const parentBlockEntity = getBlockAbove(editor, {
              at: editor.selection.anchor
            });
            if (!getEditorString(editor, parentBlockEntity[1])) {
              removeNodes(editor);
              return true;
            }
            if (hasListChild(editor, listItem[0])) {
              const sublistRes = getListItemEntry(editor, {
                at: [...listItem[1], 1, 0, 0]
              });
              moveListItemUp(editor, sublistRes);
            }
          }
        }
        return false;
      };
      const selectionIsInAListHandler = (editor, res) => {
        const {
          listItem
        } = res;
        if (!hasListChild(editor, listItem[0])) {
          const liType = getPluginType(editor, ELEMENT_LI);
          const _nodes = getNodeEntries(editor, {
            at: listItem[1],
            mode: "lowest",
            match: (node, path) => {
              var _getNode;
              if (path.length === 0) {
                return false;
              }
              const isNodeLi = node.type === liType;
              const isSiblingOfNodeLi = ((_getNode = getNode(editor, Path.next(path))) === null || _getNode === void 0 ? void 0 : _getNode.type) === liType;
              return isNodeLi && isSiblingOfNodeLi;
            }
          });
          const liWithSiblings = Array.from(_nodes, (entry) => entry[1])[0];
          if (!liWithSiblings) {
            const pointAfterListItem = getPointAfter(editor, listItem[1]);
            if (pointAfterListItem) {
              const nextSiblingListRes = getListItemEntry(editor, {
                at: pointAfterListItem
              });
              if (nextSiblingListRes) {
                const listRoot = getListRoot(editor, listItem[1]);
                moveListItemsToList(editor, {
                  fromList: nextSiblingListRes.list,
                  toList: listRoot,
                  deleteFromList: true
                });
                return true;
              }
            }
            return false;
          }
          const siblingListItem = getNodeEntry(editor, Path.next(liWithSiblings));
          const siblingList = getParentNode(editor, siblingListItem[1]);
          if (siblingList && removeListItem(editor, {
            list: siblingList,
            listItem: siblingListItem,
            reverse: false
          })) {
            return true;
          }
          return false;
        }
        const nestedList = getNodeEntry(editor, Path.next([...listItem[1], 0]));
        const nestedListItem = getChildren(nestedList)[0];
        if (removeFirstListItem(editor, {
          list: nestedList,
          listItem: nestedListItem
        })) {
          return true;
        }
        if (removeListItem(editor, {
          list: nestedList,
          listItem: nestedListItem
        })) {
          return true;
        }
        return false;
      };
      const deleteForwardList = (editor) => {
        let skipDefaultDelete = false;
        if (!(editor !== null && editor !== void 0 && editor.selection)) {
          return skipDefaultDelete;
        }
        if (!isSelectionAtBlockEnd(editor)) {
          return skipDefaultDelete;
        }
        withoutNormalizing(editor, () => {
          const res = getListItemEntry(editor, {});
          if (!res) {
            skipDefaultDelete = selectionIsNotInAListHandler(editor);
            return;
          }
          skipDefaultDelete = selectionIsInAListHandler(editor, res);
        });
        return skipDefaultDelete;
      };
      const deleteFragmentList = (editor) => {
        let deleted = false;
        withoutNormalizing(editor, () => {
          if (!isAcrossListItems(editor))
            return;
          const end = getEndPoint(editor, editor.selection);
          const liEnd = getAboveNode(editor, {
            at: end,
            match: {
              type: getPluginType(editor, ELEMENT_LI)
            }
          });
          const liEndCanBeDeleted = liEnd && !hasListChild(editor, liEnd[0]);
          const liEndPathRef = liEndCanBeDeleted ? createPathRef(editor, liEnd[1]) : void 0;
          deleteMerge(editor);
          const start = getStartPoint(editor, editor.selection);
          const liStart = getAboveNode(editor, {
            at: start,
            match: {
              type: getPluginType(editor, ELEMENT_LI)
            }
          });
          if (liEndPathRef) {
            const liEndPath = liEndPathRef.unref();
            const listStart = liStart && getParentNode(editor, liStart[1]);
            const deletePath = getHighestEmptyList(editor, {
              liPath: liEndPath,
              diffListPath: listStart === null || listStart === void 0 ? void 0 : listStart[1]
            });
            if (deletePath) {
              removeNodes(editor, {
                at: deletePath
              });
            }
            deleted = true;
          }
        });
        return deleted;
      };
      const insertBreakList = (editor) => {
        if (!editor.selection)
          return;
        const res = getListItemEntry(editor, {});
        let moved;
        if (res) {
          const {
            list: list2,
            listItem
          } = res;
          if (isBlockAboveEmpty(editor)) {
            moved = moveListItemUp(editor, {
              list: list2,
              listItem
            });
            if (moved)
              return true;
          }
        }
        const didReset = onKeyDownResetNode(editor, mockPlugin({
          options: {
            rules: [{
              types: [getPluginType(editor, ELEMENT_LI)],
              defaultType: getPluginType(editor, ELEMENT_DEFAULT),
              predicate: () => !moved && isBlockAboveEmpty(editor),
              onReset: (_editor) => unwrapList(_editor)
            }]
          }
        }))(SIMULATE_BACKSPACE);
        if (didReset)
          return true;
        if (!moved) {
          const inserted = insertListItem(editor);
          if (inserted)
            return true;
        }
      };
      const insertFragmentList = (editor) => {
        const {
          insertFragment: _insertFragment
        } = editor;
        const listItemPlugin = getPlugin(editor, ELEMENT_LI);
        const listItemType = getListItemType(editor);
        const listItemContentType = getListItemContentType(editor);
        const getFirstAncestorOfType = (root2, entry, {
          type
        }) => {
          let ancestor = Path.parent(entry[1]);
          while (getNode(root2, ancestor).type !== type) {
            ancestor = Path.parent(ancestor);
          }
          return [getNode(root2, ancestor), ancestor];
        };
        const findListItemsWithContent = (first) => {
          let prev = null;
          let node = first;
          while (isListRoot(editor, node) || node.type === listItemType && node.children[0].type !== listItemContentType) {
            prev = node;
            [node] = node.children;
          }
          return prev ? prev.children : [node];
        };
        const trimList = (listRoot) => {
          if (!isListRoot(editor, listRoot)) {
            return [listRoot];
          }
          const _texts = getNodeTexts(listRoot);
          const textEntries = Array.from(_texts);
          const commonAncestorEntry = textEntries.reduce((commonAncestor, textEntry) => Path.isAncestor(commonAncestor[1], textEntry[1]) ? commonAncestor : getCommonNode(listRoot, textEntry[1], commonAncestor[1]), getFirstAncestorOfType(listRoot, textEntries[0], listItemPlugin));
          const [first, ...rest] = isListRoot(editor, commonAncestorEntry[0]) ? commonAncestorEntry[0].children : [commonAncestorEntry[0]];
          return [...findListItemsWithContent(first), ...rest];
        };
        const wrapNodeIntoListItem = (node) => {
          return node.type === listItemType ? node : {
            type: listItemType,
            children: [node]
          };
        };
        const isSingleLic = (fragment) => {
          const isFragmentOnlyListRoot = fragment.length === 1 && isListRoot(editor, fragment[0]);
          return isFragmentOnlyListRoot && [...getNodes({
            children: fragment
          })].filter((entry) => isElement(entry[0])).filter(([node]) => node.type === listItemContentType).length === 1;
        };
        const getTextAndListItemNodes = (fragment, liEntry, licEntry) => {
          const [, liPath] = liEntry;
          const [licNode, licPath] = licEntry;
          const isEmptyNode = !getNodeString(licNode);
          const [first, ...rest] = fragment.flatMap(trimList).map(wrapNodeIntoListItem);
          let textNode;
          let listItemNodes;
          if (isListRoot(editor, fragment[0])) {
            if (isSingleLic(fragment)) {
              textNode = first;
              listItemNodes = rest;
            } else if (isEmptyNode) {
              const li2 = getNode(editor, liPath);
              const [, ...currentSublists] = li2.children;
              const [newLic, ...newSublists] = first.children;
              insertElements(editor, newLic, {
                at: Path.next(licPath),
                select: true
              });
              removeNodes(editor, {
                at: licPath
              });
              if (newSublists !== null && newSublists !== void 0 && newSublists.length) {
                if (currentSublists !== null && currentSublists !== void 0 && currentSublists.length) {
                  const path = [...liPath, 1, 0];
                  insertElements(editor, newSublists[0].children, {
                    at: path,
                    select: true
                  });
                } else {
                  insertElements(editor, newSublists, {
                    at: Path.next(licPath),
                    select: true
                  });
                }
              }
              textNode = {
                text: ""
              };
              listItemNodes = rest;
            } else {
              textNode = {
                text: ""
              };
              listItemNodes = [first, ...rest];
            }
          } else {
            textNode = first;
            listItemNodes = rest;
          }
          return {
            textNode,
            listItemNodes
          };
        };
        return (fragment) => {
          let liEntry = findNode(editor, {
            match: {
              type: listItemType
            },
            mode: "lowest"
          });
          if (!liEntry) {
            return _insertFragment(isListRoot(editor, fragment[0]) ? [{
              text: ""
            }, ...fragment] : fragment);
          }
          insertFragment(editor, [{
            text: ""
          }]);
          liEntry = findNode(editor, {
            match: {
              type: listItemType
            },
            mode: "lowest"
          });
          const licEntry = findNode(editor, {
            match: {
              type: listItemContentType
            },
            mode: "lowest"
          });
          if (!licEntry) {
            return _insertFragment(isListRoot(editor, fragment[0]) ? [{
              text: ""
            }, ...fragment] : fragment);
          }
          const {
            textNode,
            listItemNodes
          } = getTextAndListItemNodes(fragment, liEntry, licEntry);
          insertFragment(editor, [textNode]);
          const [, liPath] = liEntry;
          return insertElements(editor, listItemNodes, {
            at: Path.next(liPath),
            select: true
          });
        };
      };
      const getDeepInlineChildren = (editor, {
        children
      }) => {
        const inlineChildren = [];
        for (const child of children) {
          if (isBlock(editor, child[0])) {
            inlineChildren.push(...getDeepInlineChildren(editor, {
              children: getChildren(child)
            }));
          } else {
            inlineChildren.push(child);
          }
        }
        return inlineChildren;
      };
      const normalizeListItem = (editor, {
        listItem,
        validLiChildrenTypes = []
      }) => {
        let changed = false;
        const allValidLiChildrenTypes = [getPluginType(editor, ELEMENT_UL), getPluginType(editor, ELEMENT_OL), getPluginType(editor, ELEMENT_LIC), ...validLiChildrenTypes];
        const [, liPath] = listItem;
        const liChildren = getChildren(listItem);
        const invalidLiChildrenPathRefs = liChildren.filter(([child]) => !allValidLiChildrenTypes.includes(child.type)).map(([, childPath]) => createPathRef(editor, childPath));
        const firstLiChild = liChildren[0];
        const [firstLiChildNode, firstLiChildPath] = firstLiChild !== null && firstLiChild !== void 0 ? firstLiChild : [];
        if (!firstLiChild || !isBlock(editor, firstLiChildNode)) {
          insertEmptyElement(editor, getPluginType(editor, ELEMENT_LIC), {
            at: liPath.concat([0])
          });
          return true;
        }
        if (isBlock(editor, firstLiChildNode) && !match(firstLiChildNode, [], {
          type: getPluginType(editor, ELEMENT_LIC)
        })) {
          if (match(firstLiChildNode, [], {
            type: getListTypes(editor)
          })) {
            const parent2 = getParentNode(editor, listItem[1]);
            const sublist = firstLiChild;
            const children = getChildren(firstLiChild).reverse();
            children.forEach((c22) => {
              moveListItemUp(editor, {
                list: sublist,
                listItem: c22
              });
            });
            removeNodes(editor, {
              at: [...parent2[1], 0]
            });
            return true;
          }
          if (validLiChildrenTypes.includes(firstLiChildNode.type)) {
            return true;
          }
          setElements(editor, {
            type: getPluginType(editor, ELEMENT_LIC)
          }, {
            at: firstLiChildPath
          });
          changed = true;
        }
        const licChildren = getChildren(firstLiChild);
        if (licChildren.length) {
          var _licChildren;
          const blockPathRefs = [];
          const inlineChildren = [];
          for (const licChild of licChildren) {
            if (!isBlock(editor, licChild[0])) {
              break;
            }
            blockPathRefs.push(createPathRef(editor, licChild[1]));
            inlineChildren.push(...getDeepInlineChildren(editor, {
              children: getChildren(licChild)
            }));
          }
          const to22 = Path.next((_licChildren = licChildren[licChildren.length - 1]) === null || _licChildren === void 0 ? void 0 : _licChildren[1]);
          inlineChildren.reverse().forEach(([, path]) => {
            moveNodes(editor, {
              at: path,
              to: to22
            });
          });
          blockPathRefs.forEach((pathRef) => {
            const path = pathRef.unref();
            path && removeNodes(editor, {
              at: path
            });
          });
          if (blockPathRefs.length) {
            changed = true;
          }
        }
        if (changed)
          return true;
        invalidLiChildrenPathRefs.reverse().forEach((ref) => {
          const path = ref.unref();
          path && moveNodes(editor, {
            at: path,
            to: firstLiChildPath.concat([0])
          });
        });
        return !!invalidLiChildrenPathRefs.length;
      };
      const normalizeNestedList = (editor, {
        nestedListItem
      }) => {
        const [, path] = nestedListItem;
        const parentNode = getParentNode(editor, path);
        const hasParentList = parentNode && match(parentNode[0], [], {
          type: getListTypes(editor)
        });
        if (!hasParentList) {
          return false;
        }
        let previousListItemPath;
        try {
          previousListItemPath = Path.previous(path);
        } catch (e22) {
          return false;
        }
        const previousSiblingItem = getNodeEntry(editor, previousListItemPath);
        if (previousSiblingItem) {
          const [, previousPath] = previousSiblingItem;
          const newPath = previousPath.concat([1]);
          moveNodes(editor, {
            at: path,
            to: newPath
          });
          return true;
        }
      };
      const normalizeList = (editor, {
        validLiChildrenTypes
      }) => {
        const {
          normalizeNode
        } = editor;
        const liType = getPluginType(editor, ELEMENT_LI);
        const licType = getPluginType(editor, ELEMENT_LIC);
        const defaultType = getPluginType(editor, ELEMENT_DEFAULT);
        return ([node, path]) => {
          if (!isElement(node)) {
            return normalizeNode([node, path]);
          }
          if (isListRoot(editor, node)) {
            const nonLiChild = getChildren([node, path]).find(([child]) => child.type !== liType);
            if (nonLiChild) {
              return wrapNodes(editor, {
                type: liType,
                children: []
              }, {
                at: nonLiChild[1]
              });
            }
          }
          if (match(node, [], {
            type: getListTypes(editor)
          })) {
            if (!node.children.length || !node.children.find((item) => item.type === liType)) {
              return removeNodes(editor, {
                at: path
              });
            }
            const nextPath = Path.next(path);
            const nextNode = getNode(editor, nextPath);
            if ((nextNode === null || nextNode === void 0 ? void 0 : nextNode.type) === node.type) {
              moveListItemsToList(editor, {
                fromList: [nextNode, nextPath],
                toList: [node, path],
                deleteFromList: true
              });
            }
            const prevPath = getPreviousPath(path);
            const prevNode = getNode(editor, prevPath);
            if ((prevNode === null || prevNode === void 0 ? void 0 : prevNode.type) === node.type) {
              editor.normalizeNode([prevNode, prevPath]);
              return;
            }
            if (normalizeNestedList(editor, {
              nestedListItem: [node, path]
            })) {
              return;
            }
          }
          if (node.type === getPluginType(editor, ELEMENT_LI)) {
            if (normalizeListItem(editor, {
              listItem: [node, path],
              validLiChildrenTypes
            })) {
              return;
            }
          }
          if (node.type === licType && licType !== defaultType) {
            var _getParentNode;
            if (((_getParentNode = getParentNode(editor, path)) === null || _getParentNode === void 0 ? void 0 : _getParentNode[0].type) !== liType) {
              setElements(editor, {
                type: defaultType
              }, {
                at: path
              });
              return;
            }
          }
          normalizeNode([node, path]);
        };
      };
      const withList = (editor, {
        options: {
          validLiChildrenTypes
        }
      }) => {
        const {
          insertBreak,
          deleteBackward: deleteBackward2,
          deleteForward,
          deleteFragment
        } = editor;
        editor.insertBreak = () => {
          if (insertBreakList(editor))
            return;
          insertBreak();
        };
        editor.deleteBackward = (unit) => {
          if (deleteBackwardList(editor, unit))
            return;
          deleteBackward2(unit);
        };
        editor.deleteForward = (unit) => {
          if (deleteForwardList(editor))
            return;
          deleteForward(unit);
        };
        editor.deleteFragment = () => {
          if (deleteFragmentList(editor))
            return;
          deleteFragment();
        };
        editor.insertFragment = insertFragmentList(editor);
        editor.normalizeNode = normalizeList(editor, {
          validLiChildrenTypes
        });
        return editor;
      };
      const ELEMENT_UL = "ul";
      const ELEMENT_OL = "ol";
      const ELEMENT_LI = "li";
      const ELEMENT_LIC = "lic";
      const createListPlugin = createPluginFactory({
        key: "list",
        plugins: [{
          key: ELEMENT_UL,
          isElement: true,
          handlers: {
            onKeyDown: onKeyDownList
          },
          withOverrides: withList,
          deserializeHtml: {
            rules: [{
              validNodeName: "UL"
            }]
          }
        }, {
          key: ELEMENT_OL,
          isElement: true,
          handlers: {
            onKeyDown: onKeyDownList
          },
          deserializeHtml: {
            rules: [{
              validNodeName: "OL"
            }]
          }
        }, {
          key: ELEMENT_LI,
          isElement: true,
          deserializeHtml: {
            rules: [{
              validNodeName: "LI"
            }]
          },
          then: (editor, {
            type
          }) => ({
            inject: {
              pluginsByKey: {
                [KEY_DESERIALIZE_HTML]: {
                  editor: {
                    insertData: {
                      preInsert: () => {
                        return someNode(editor, {
                          match: {
                            type
                          }
                        });
                      }
                    }
                  }
                }
              }
            }
          })
        }, {
          key: ELEMENT_LIC,
          isElement: true
        }]
      });
      const ELEMENT_TODO_LI = "action_item";
      function unwrapExports$3(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$4(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$5 = createCommonjsModule$4(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      unwrapExports$3(lib$5);
      lib$5.isHotkey;
      lib$5.isCodeHotkey;
      lib$5.isKeyHotkey;
      lib$5.parseHotkey;
      lib$5.compareHotkey;
      lib$5.toKeyCode;
      lib$5.toKeyName;
      function listCacheClear$3() {
        this.__data__ = [];
        this.size = 0;
      }
      var _listCacheClear$1 = listCacheClear$3;
      function eq$5(value, other) {
        return value === other || value !== value && other !== other;
      }
      var eq_1$1 = eq$5;
      function assocIndexOf$6(array, key) {
        var length = array.length;
        while (length--) {
          if (eq_1$1(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      var _assocIndexOf$1 = assocIndexOf$6;
      var arrayProto$2 = Array.prototype;
      var splice$4 = arrayProto$2.splice;
      function listCacheDelete$3(key) {
        var data = this.__data__, index2 = _assocIndexOf$1(data, key);
        if (index2 < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index2 == lastIndex) {
          data.pop();
        } else {
          splice$4.call(data, index2, 1);
        }
        --this.size;
        return true;
      }
      var _listCacheDelete$1 = listCacheDelete$3;
      function listCacheGet$3(key) {
        var data = this.__data__, index2 = _assocIndexOf$1(data, key);
        return index2 < 0 ? void 0 : data[index2][1];
      }
      var _listCacheGet$1 = listCacheGet$3;
      function listCacheHas$3(key) {
        return _assocIndexOf$1(this.__data__, key) > -1;
      }
      var _listCacheHas$1 = listCacheHas$3;
      function listCacheSet$3(key, value) {
        var data = this.__data__, index2 = _assocIndexOf$1(data, key);
        if (index2 < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index2][1] = value;
        }
        return this;
      }
      var _listCacheSet$1 = listCacheSet$3;
      function ListCache$6(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      ListCache$6.prototype.clear = _listCacheClear$1;
      ListCache$6.prototype["delete"] = _listCacheDelete$1;
      ListCache$6.prototype.get = _listCacheGet$1;
      ListCache$6.prototype.has = _listCacheHas$1;
      ListCache$6.prototype.set = _listCacheSet$1;
      var _ListCache$1 = ListCache$6;
      function stackClear$3() {
        this.__data__ = new _ListCache$1();
        this.size = 0;
      }
      var _stackClear$1 = stackClear$3;
      function stackDelete$3(key) {
        var data = this.__data__, result = data["delete"](key);
        this.size = data.size;
        return result;
      }
      var _stackDelete$1 = stackDelete$3;
      function stackGet$3(key) {
        return this.__data__.get(key);
      }
      var _stackGet$1 = stackGet$3;
      function stackHas$3(key) {
        return this.__data__.has(key);
      }
      var _stackHas$1 = stackHas$3;
      var commonjsGlobal$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function createCommonjsModule$3(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var freeGlobal$3 = typeof commonjsGlobal$1 == "object" && commonjsGlobal$1 && commonjsGlobal$1.Object === Object && commonjsGlobal$1;
      var _freeGlobal$1 = freeGlobal$3;
      var freeSelf$2 = typeof self == "object" && self && self.Object === Object && self;
      var root$a = _freeGlobal$1 || freeSelf$2 || Function("return this")();
      var _root$1 = root$a;
      var Symbol$6 = _root$1.Symbol;
      var _Symbol$1 = Symbol$6;
      var objectProto$c$2 = Object.prototype;
      var hasOwnProperty$9$2 = objectProto$c$2.hasOwnProperty;
      var nativeObjectToString$1$2 = objectProto$c$2.toString;
      var symToStringTag$1$2 = _Symbol$1 ? _Symbol$1.toStringTag : void 0;
      function getRawTag$2(value) {
        var isOwn = hasOwnProperty$9$2.call(value, symToStringTag$1$2), tag = value[symToStringTag$1$2];
        try {
          value[symToStringTag$1$2] = void 0;
          var unmasked = true;
        } catch (e22) {
        }
        var result = nativeObjectToString$1$2.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag$1$2] = tag;
          } else {
            delete value[symToStringTag$1$2];
          }
        }
        return result;
      }
      var _getRawTag$1 = getRawTag$2;
      var objectProto$b$2 = Object.prototype;
      var nativeObjectToString$3 = objectProto$b$2.toString;
      function objectToString$2(value) {
        return nativeObjectToString$3.call(value);
      }
      var _objectToString$1 = objectToString$2;
      var nullTag$2 = "[object Null]", undefinedTag$2 = "[object Undefined]";
      var symToStringTag$3 = _Symbol$1 ? _Symbol$1.toStringTag : void 0;
      function baseGetTag$8(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag$2 : nullTag$2;
        }
        return symToStringTag$3 && symToStringTag$3 in Object(value) ? _getRawTag$1(value) : _objectToString$1(value);
      }
      var _baseGetTag$1 = baseGetTag$8;
      function isObject$c(value) {
        var type = typeof value;
        return value != null && (type == "object" || type == "function");
      }
      var isObject_1$1 = isObject$c;
      var asyncTag$3 = "[object AsyncFunction]", funcTag$2$2 = "[object Function]", genTag$1$2 = "[object GeneratorFunction]", proxyTag$3 = "[object Proxy]";
      function isFunction$7(value) {
        if (!isObject_1$1(value)) {
          return false;
        }
        var tag = _baseGetTag$1(value);
        return tag == funcTag$2$2 || tag == genTag$1$2 || tag == asyncTag$3 || tag == proxyTag$3;
      }
      var isFunction_1$2 = isFunction$7;
      var coreJsData$5 = _root$1["__core-js_shared__"];
      var _coreJsData$2 = coreJsData$5;
      var maskSrcKey$3 = function() {
        var uid2 = /[^.]+$/.exec(_coreJsData$2 && _coreJsData$2.keys && _coreJsData$2.keys.IE_PROTO || "");
        return uid2 ? "Symbol(src)_1." + uid2 : "";
      }();
      function isMasked$4(func) {
        return !!maskSrcKey$3 && maskSrcKey$3 in func;
      }
      var _isMasked$2 = isMasked$4;
      var funcProto$1$2 = Function.prototype;
      var funcToString$1$2 = funcProto$1$2.toString;
      function toSource$5(func) {
        if (func != null) {
          try {
            return funcToString$1$2.call(func);
          } catch (e22) {
          }
          try {
            return func + "";
          } catch (e22) {
          }
        }
        return "";
      }
      var _toSource$2 = toSource$5;
      var reRegExpChar$3 = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor$3 = /^\[object .+?Constructor\]$/;
      var funcProto$7 = Function.prototype, objectProto$a$2 = Object.prototype;
      var funcToString$7 = funcProto$7.toString;
      var hasOwnProperty$8$2 = objectProto$a$2.hasOwnProperty;
      var reIsNative$3 = RegExp("^" + funcToString$7.call(hasOwnProperty$8$2).replace(reRegExpChar$3, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      function baseIsNative$4(value) {
        if (!isObject_1$1(value) || _isMasked$2(value)) {
          return false;
        }
        var pattern = isFunction_1$2(value) ? reIsNative$3 : reIsHostCtor$3;
        return pattern.test(_toSource$2(value));
      }
      var _baseIsNative$2 = baseIsNative$4;
      function getValue$4(object, key) {
        return object == null ? void 0 : object[key];
      }
      var _getValue$2 = getValue$4;
      function getNative$a(object, key) {
        var value = _getValue$2(object, key);
        return _baseIsNative$2(value) ? value : void 0;
      }
      var _getNative$2 = getNative$a;
      var Map$8 = _getNative$2(_root$1, "Map");
      var _Map$2 = Map$8;
      var nativeCreate$7 = _getNative$2(Object, "create");
      var _nativeCreate$1 = nativeCreate$7;
      function hashClear$3() {
        this.__data__ = _nativeCreate$1 ? _nativeCreate$1(null) : {};
        this.size = 0;
      }
      var _hashClear$1 = hashClear$3;
      function hashDelete$3(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }
      var _hashDelete$1 = hashDelete$3;
      var HASH_UNDEFINED$1$1 = "__lodash_hash_undefined__";
      var objectProto$9$1 = Object.prototype;
      var hasOwnProperty$7$1 = objectProto$9$1.hasOwnProperty;
      function hashGet$3(key) {
        var data = this.__data__;
        if (_nativeCreate$1) {
          var result = data[key];
          return result === HASH_UNDEFINED$1$1 ? void 0 : result;
        }
        return hasOwnProperty$7$1.call(data, key) ? data[key] : void 0;
      }
      var _hashGet$1 = hashGet$3;
      var objectProto$8$1 = Object.prototype;
      var hasOwnProperty$6$1 = objectProto$8$1.hasOwnProperty;
      function hashHas$3(key) {
        var data = this.__data__;
        return _nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$6$1.call(data, key);
      }
      var _hashHas$1 = hashHas$3;
      var HASH_UNDEFINED$6 = "__lodash_hash_undefined__";
      function hashSet$3(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = _nativeCreate$1 && value === void 0 ? HASH_UNDEFINED$6 : value;
        return this;
      }
      var _hashSet$1 = hashSet$3;
      function Hash$3(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      Hash$3.prototype.clear = _hashClear$1;
      Hash$3.prototype["delete"] = _hashDelete$1;
      Hash$3.prototype.get = _hashGet$1;
      Hash$3.prototype.has = _hashHas$1;
      Hash$3.prototype.set = _hashSet$1;
      var _Hash$1 = Hash$3;
      function mapCacheClear$3() {
        this.size = 0;
        this.__data__ = {
          "hash": new _Hash$1(),
          "map": new (_Map$2 || _ListCache$1)(),
          "string": new _Hash$1()
        };
      }
      var _mapCacheClear$1 = mapCacheClear$3;
      function isKeyable$3(value) {
        var type = typeof value;
        return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
      }
      var _isKeyable$1 = isKeyable$3;
      function getMapData$6(map22, key) {
        var data = map22.__data__;
        return _isKeyable$1(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
      }
      var _getMapData$1 = getMapData$6;
      function mapCacheDelete$3(key) {
        var result = _getMapData$1(this, key)["delete"](key);
        this.size -= result ? 1 : 0;
        return result;
      }
      var _mapCacheDelete$1 = mapCacheDelete$3;
      function mapCacheGet$3(key) {
        return _getMapData$1(this, key).get(key);
      }
      var _mapCacheGet$1 = mapCacheGet$3;
      function mapCacheHas$3(key) {
        return _getMapData$1(this, key).has(key);
      }
      var _mapCacheHas$1 = mapCacheHas$3;
      function mapCacheSet$3(key, value) {
        var data = _getMapData$1(this, key), size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }
      var _mapCacheSet$1 = mapCacheSet$3;
      function MapCache$5(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      MapCache$5.prototype.clear = _mapCacheClear$1;
      MapCache$5.prototype["delete"] = _mapCacheDelete$1;
      MapCache$5.prototype.get = _mapCacheGet$1;
      MapCache$5.prototype.has = _mapCacheHas$1;
      MapCache$5.prototype.set = _mapCacheSet$1;
      var _MapCache$1 = MapCache$5;
      var LARGE_ARRAY_SIZE$2 = 200;
      function stackSet$3(key, value) {
        var data = this.__data__;
        if (data instanceof _ListCache$1) {
          var pairs = data.__data__;
          if (!_Map$2 || pairs.length < LARGE_ARRAY_SIZE$2 - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new _MapCache$1(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }
      var _stackSet$1 = stackSet$3;
      function Stack$5(entries) {
        var data = this.__data__ = new _ListCache$1(entries);
        this.size = data.size;
      }
      Stack$5.prototype.clear = _stackClear$1;
      Stack$5.prototype["delete"] = _stackDelete$1;
      Stack$5.prototype.get = _stackGet$1;
      Stack$5.prototype.has = _stackHas$1;
      Stack$5.prototype.set = _stackSet$1;
      var _Stack$1 = Stack$5;
      function arrayEach$3(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (iteratee(array[index2], index2, array) === false) {
            break;
          }
        }
        return array;
      }
      var _arrayEach$1 = arrayEach$3;
      var defineProperty$5 = function() {
        try {
          var func = _getNative$2(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e22) {
        }
      }();
      var _defineProperty$6 = defineProperty$5;
      function baseAssignValue$4(object, key, value) {
        if (key == "__proto__" && _defineProperty$6) {
          _defineProperty$6(object, key, {
            "configurable": true,
            "enumerable": true,
            "value": value,
            "writable": true
          });
        } else {
          object[key] = value;
        }
      }
      var _baseAssignValue$1 = baseAssignValue$4;
      var objectProto$7$1 = Object.prototype;
      var hasOwnProperty$5$1 = objectProto$7$1.hasOwnProperty;
      function assignValue$4(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty$5$1.call(object, key) && eq_1$1(objValue, value)) || value === void 0 && !(key in object)) {
          _baseAssignValue$1(object, key, value);
        }
      }
      var _assignValue$1 = assignValue$4;
      function copyObject$6(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index2 = -1, length = props.length;
        while (++index2 < length) {
          var key = props[index2];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
          if (newValue === void 0) {
            newValue = source[key];
          }
          if (isNew) {
            _baseAssignValue$1(object, key, newValue);
          } else {
            _assignValue$1(object, key, newValue);
          }
        }
        return object;
      }
      var _copyObject$1 = copyObject$6;
      function baseTimes$3(n22, iteratee) {
        var index2 = -1, result = Array(n22);
        while (++index2 < n22) {
          result[index2] = iteratee(index2);
        }
        return result;
      }
      var _baseTimes$1 = baseTimes$3;
      function isObjectLike$a(value) {
        return value != null && typeof value == "object";
      }
      var isObjectLike_1$1 = isObjectLike$a;
      var argsTag$2$2 = "[object Arguments]";
      function baseIsArguments$4(value) {
        return isObjectLike_1$1(value) && _baseGetTag$1(value) == argsTag$2$2;
      }
      var _baseIsArguments$2 = baseIsArguments$4;
      var objectProto$6$2 = Object.prototype;
      var hasOwnProperty$4$2 = objectProto$6$2.hasOwnProperty;
      var propertyIsEnumerable$1$2 = objectProto$6$2.propertyIsEnumerable;
      var isArguments$5 = _baseIsArguments$2(function() {
        return arguments;
      }()) ? _baseIsArguments$2 : function(value) {
        return isObjectLike_1$1(value) && hasOwnProperty$4$2.call(value, "callee") && !propertyIsEnumerable$1$2.call(value, "callee");
      };
      var isArguments_1$1 = isArguments$5;
      var isArray$g = Array.isArray;
      var isArray_1$1 = isArray$g;
      function stubFalse$3() {
        return false;
      }
      var stubFalse_1$2 = stubFalse$3;
      var isBuffer_1 = createCommonjsModule$3(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root$1.Buffer : void 0;
        var nativeIsBuffer2 = Buffer22 ? Buffer22.isBuffer : void 0;
        var isBuffer2 = nativeIsBuffer2 || stubFalse_1$2;
        module2.exports = isBuffer2;
      });
      var MAX_SAFE_INTEGER$1$1 = 9007199254740991;
      var reIsUint$2 = /^(?:0|[1-9]\d*)$/;
      function isIndex$4(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER$1$1 : length;
        return !!length && (type == "number" || type != "symbol" && reIsUint$2.test(value)) && (value > -1 && value % 1 == 0 && value < length);
      }
      var _isIndex$1 = isIndex$4;
      var MAX_SAFE_INTEGER$4 = 9007199254740991;
      function isLength$5(value) {
        return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$4;
      }
      var isLength_1$1 = isLength$5;
      var argsTag$1$1 = "[object Arguments]", arrayTag$1$1 = "[object Array]", boolTag$2$1 = "[object Boolean]", dateTag$2$1 = "[object Date]", errorTag$1$1 = "[object Error]", funcTag$1$1 = "[object Function]", mapTag$4$1 = "[object Map]", numberTag$2$1 = "[object Number]", objectTag$2$1 = "[object Object]", regexpTag$2$1 = "[object RegExp]", setTag$4$1 = "[object Set]", stringTag$2$1 = "[object String]", weakMapTag$2$1 = "[object WeakMap]";
      var arrayBufferTag$2$1 = "[object ArrayBuffer]", dataViewTag$3$1 = "[object DataView]", float32Tag$2$1 = "[object Float32Array]", float64Tag$2$1 = "[object Float64Array]", int8Tag$2$1 = "[object Int8Array]", int16Tag$2$1 = "[object Int16Array]", int32Tag$2$1 = "[object Int32Array]", uint8Tag$2$1 = "[object Uint8Array]", uint8ClampedTag$2$1 = "[object Uint8ClampedArray]", uint16Tag$2$1 = "[object Uint16Array]", uint32Tag$2$1 = "[object Uint32Array]";
      var typedArrayTags$2 = {};
      typedArrayTags$2[float32Tag$2$1] = typedArrayTags$2[float64Tag$2$1] = typedArrayTags$2[int8Tag$2$1] = typedArrayTags$2[int16Tag$2$1] = typedArrayTags$2[int32Tag$2$1] = typedArrayTags$2[uint8Tag$2$1] = typedArrayTags$2[uint8ClampedTag$2$1] = typedArrayTags$2[uint16Tag$2$1] = typedArrayTags$2[uint32Tag$2$1] = true;
      typedArrayTags$2[argsTag$1$1] = typedArrayTags$2[arrayTag$1$1] = typedArrayTags$2[arrayBufferTag$2$1] = typedArrayTags$2[boolTag$2$1] = typedArrayTags$2[dataViewTag$3$1] = typedArrayTags$2[dateTag$2$1] = typedArrayTags$2[errorTag$1$1] = typedArrayTags$2[funcTag$1$1] = typedArrayTags$2[mapTag$4$1] = typedArrayTags$2[numberTag$2$1] = typedArrayTags$2[objectTag$2$1] = typedArrayTags$2[regexpTag$2$1] = typedArrayTags$2[setTag$4$1] = typedArrayTags$2[stringTag$2$1] = typedArrayTags$2[weakMapTag$2$1] = false;
      function baseIsTypedArray$3(value) {
        return isObjectLike_1$1(value) && isLength_1$1(value.length) && !!typedArrayTags$2[_baseGetTag$1(value)];
      }
      var _baseIsTypedArray$1 = baseIsTypedArray$3;
      function baseUnary$5(func) {
        return function(value) {
          return func(value);
        };
      }
      var _baseUnary$1 = baseUnary$5;
      var _nodeUtil$2 = createCommonjsModule$3(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var freeProcess2 = moduleExports2 && _freeGlobal$1.process;
        var nodeUtil2 = function() {
          try {
            var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
            if (types) {
              return types;
            }
            return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
          } catch (e22) {
          }
        }();
        module2.exports = nodeUtil2;
      });
      var nodeIsTypedArray$2 = _nodeUtil$2 && _nodeUtil$2.isTypedArray;
      var isTypedArray$5 = nodeIsTypedArray$2 ? _baseUnary$1(nodeIsTypedArray$2) : _baseIsTypedArray$1;
      var isTypedArray_1$1 = isTypedArray$5;
      var objectProto$5$1 = Object.prototype;
      var hasOwnProperty$3$1 = objectProto$5$1.hasOwnProperty;
      function arrayLikeKeys$4(value, inherited) {
        var isArr = isArray_1$1(value), isArg = !isArr && isArguments_1$1(value), isBuff = !isArr && !isArg && isBuffer_1(value), isType2 = !isArr && !isArg && !isBuff && isTypedArray_1$1(value), skipIndexes = isArr || isArg || isBuff || isType2, result = skipIndexes ? _baseTimes$1(value.length, String) : [], length = result.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty$3$1.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType2 && (key == "buffer" || key == "byteLength" || key == "byteOffset") || _isIndex$1(key, length)))) {
            result.push(key);
          }
        }
        return result;
      }
      var _arrayLikeKeys$1 = arrayLikeKeys$4;
      var objectProto$4$1 = Object.prototype;
      function isPrototype$5(value) {
        var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$4$1;
        return value === proto2;
      }
      var _isPrototype$1 = isPrototype$5;
      function overArg$4(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      var _overArg$1 = overArg$4;
      var nativeKeys$4 = _overArg$1(Object.keys, Object);
      var _nativeKeys$1 = nativeKeys$4;
      var objectProto$3$1 = Object.prototype;
      var hasOwnProperty$2$1 = objectProto$3$1.hasOwnProperty;
      function baseKeys$3(object) {
        if (!_isPrototype$1(object)) {
          return _nativeKeys$1(object);
        }
        var result = [];
        for (var key in Object(object)) {
          if (hasOwnProperty$2$1.call(object, key) && key != "constructor") {
            result.push(key);
          }
        }
        return result;
      }
      var _baseKeys$1 = baseKeys$3;
      function isArrayLike$6(value) {
        return value != null && isLength_1$1(value.length) && !isFunction_1$2(value);
      }
      var isArrayLike_1$1 = isArrayLike$6;
      function keys$9(object) {
        return isArrayLike_1$1(object) ? _arrayLikeKeys$1(object) : _baseKeys$1(object);
      }
      var keys_1$1 = keys$9;
      function baseAssign$2(object, source) {
        return object && _copyObject$1(source, keys_1$1(source), object);
      }
      var _baseAssign$1 = baseAssign$2;
      function nativeKeysIn$3(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }
      var _nativeKeysIn$1 = nativeKeysIn$3;
      var objectProto$2$1 = Object.prototype;
      var hasOwnProperty$1$1 = objectProto$2$1.hasOwnProperty;
      function baseKeysIn$3(object) {
        if (!isObject_1$1(object)) {
          return _nativeKeysIn$1(object);
        }
        var isProto = _isPrototype$1(object), result = [];
        for (var key in object) {
          if (!(key == "constructor" && (isProto || !hasOwnProperty$1$1.call(object, key)))) {
            result.push(key);
          }
        }
        return result;
      }
      var _baseKeysIn$1 = baseKeysIn$3;
      function keysIn$5(object) {
        return isArrayLike_1$1(object) ? _arrayLikeKeys$1(object, true) : _baseKeysIn$1(object);
      }
      var keysIn_1$1 = keysIn$5;
      function baseAssignIn$2(object, source) {
        return object && _copyObject$1(source, keysIn_1$1(source), object);
      }
      var _baseAssignIn$1 = baseAssignIn$2;
      var _cloneBuffer$1 = createCommonjsModule$3(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root$1.Buffer : void 0, allocUnsafe2 = Buffer22 ? Buffer22.allocUnsafe : void 0;
        function cloneBuffer2(buffer2, isDeep) {
          if (isDeep) {
            return buffer2.slice();
          }
          var length = buffer2.length, result = allocUnsafe2 ? allocUnsafe2(length) : new buffer2.constructor(length);
          buffer2.copy(result);
          return result;
        }
        module2.exports = cloneBuffer2;
      });
      function copyArray$3(source, array) {
        var index2 = -1, length = source.length;
        array || (array = Array(length));
        while (++index2 < length) {
          array[index2] = source[index2];
        }
        return array;
      }
      var _copyArray$1 = copyArray$3;
      function arrayFilter$3(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index2 < length) {
          var value = array[index2];
          if (predicate(value, index2, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      var _arrayFilter$1 = arrayFilter$3;
      function stubArray$4() {
        return [];
      }
      var stubArray_1$1 = stubArray$4;
      var objectProto$1$1 = Object.prototype;
      var propertyIsEnumerable$4 = objectProto$1$1.propertyIsEnumerable;
      var nativeGetSymbols$1$1 = Object.getOwnPropertySymbols;
      var getSymbols$6 = !nativeGetSymbols$1$1 ? stubArray_1$1 : function(object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return _arrayFilter$1(nativeGetSymbols$1$1(object), function(symbol) {
          return propertyIsEnumerable$4.call(object, symbol);
        });
      };
      var _getSymbols$1 = getSymbols$6;
      function copySymbols$2(source, object) {
        return _copyObject$1(source, _getSymbols$1(source), object);
      }
      var _copySymbols$1 = copySymbols$2;
      function arrayPush$4(array, values2) {
        var index2 = -1, length = values2.length, offset2 = array.length;
        while (++index2 < length) {
          array[offset2 + index2] = values2[index2];
        }
        return array;
      }
      var _arrayPush$1 = arrayPush$4;
      var getPrototype$6 = _overArg$1(Object.getPrototypeOf, Object);
      var _getPrototype$1 = getPrototype$6;
      var nativeGetSymbols$3 = Object.getOwnPropertySymbols;
      var getSymbolsIn$3 = !nativeGetSymbols$3 ? stubArray_1$1 : function(object) {
        var result = [];
        while (object) {
          _arrayPush$1(result, _getSymbols$1(object));
          object = _getPrototype$1(object);
        }
        return result;
      };
      var _getSymbolsIn$1 = getSymbolsIn$3;
      function copySymbolsIn$2(source, object) {
        return _copyObject$1(source, _getSymbolsIn$1(source), object);
      }
      var _copySymbolsIn$1 = copySymbolsIn$2;
      function baseGetAllKeys$4(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray_1$1(object) ? result : _arrayPush$1(result, symbolsFunc(object));
      }
      var _baseGetAllKeys$1 = baseGetAllKeys$4;
      function getAllKeys$4(object) {
        return _baseGetAllKeys$1(object, keys_1$1, _getSymbols$1);
      }
      var _getAllKeys$1 = getAllKeys$4;
      function getAllKeysIn$2(object) {
        return _baseGetAllKeys$1(object, keysIn_1$1, _getSymbolsIn$1);
      }
      var _getAllKeysIn$1 = getAllKeysIn$2;
      var DataView$5 = _getNative$2(_root$1, "DataView");
      var _DataView$2 = DataView$5;
      var Promise$1$2 = _getNative$2(_root$1, "Promise");
      var _Promise$2 = Promise$1$2;
      var Set$6 = _getNative$2(_root$1, "Set");
      var _Set$2 = Set$6;
      var WeakMap$6 = _getNative$2(_root$1, "WeakMap");
      var _WeakMap$2 = WeakMap$6;
      var mapTag$3$2 = "[object Map]", objectTag$1$2 = "[object Object]", promiseTag$3 = "[object Promise]", setTag$3$2 = "[object Set]", weakMapTag$1$2 = "[object WeakMap]";
      var dataViewTag$2$2 = "[object DataView]";
      var dataViewCtorString$3 = _toSource$2(_DataView$2), mapCtorString$3 = _toSource$2(_Map$2), promiseCtorString$3 = _toSource$2(_Promise$2), setCtorString$3 = _toSource$2(_Set$2), weakMapCtorString$3 = _toSource$2(_WeakMap$2);
      var getTag$8 = _baseGetTag$1;
      if (_DataView$2 && getTag$8(new _DataView$2(new ArrayBuffer(1))) != dataViewTag$2$2 || _Map$2 && getTag$8(new _Map$2()) != mapTag$3$2 || _Promise$2 && getTag$8(_Promise$2.resolve()) != promiseTag$3 || _Set$2 && getTag$8(new _Set$2()) != setTag$3$2 || _WeakMap$2 && getTag$8(new _WeakMap$2()) != weakMapTag$1$2) {
        getTag$8 = function(value) {
          var result = _baseGetTag$1(value), Ctor = result == objectTag$1$2 ? value.constructor : void 0, ctorString = Ctor ? _toSource$2(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString$3:
                return dataViewTag$2$2;
              case mapCtorString$3:
                return mapTag$3$2;
              case promiseCtorString$3:
                return promiseTag$3;
              case setCtorString$3:
                return setTag$3$2;
              case weakMapCtorString$3:
                return weakMapTag$1$2;
            }
          }
          return result;
        };
      }
      var _getTag$1 = getTag$8;
      var objectProto$t = Object.prototype;
      var hasOwnProperty$q = objectProto$t.hasOwnProperty;
      function initCloneArray$2(array) {
        var length = array.length, result = new array.constructor(length);
        if (length && typeof array[0] == "string" && hasOwnProperty$q.call(array, "index")) {
          result.index = array.index;
          result.input = array.input;
        }
        return result;
      }
      var _initCloneArray$1 = initCloneArray$2;
      var Uint8Array$5 = _root$1.Uint8Array;
      var _Uint8Array$1 = Uint8Array$5;
      function cloneArrayBuffer$5(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new _Uint8Array$1(result).set(new _Uint8Array$1(arrayBuffer));
        return result;
      }
      var _cloneArrayBuffer$1 = cloneArrayBuffer$5;
      function cloneDataView$2(dataView, isDeep) {
        var buffer2 = isDeep ? _cloneArrayBuffer$1(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer2, dataView.byteOffset, dataView.byteLength);
      }
      var _cloneDataView$1 = cloneDataView$2;
      var reFlags$1 = /\w*$/;
      function cloneRegExp$2(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags$1.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }
      var _cloneRegExp$1 = cloneRegExp$2;
      var symbolProto$6 = _Symbol$1 ? _Symbol$1.prototype : void 0, symbolValueOf$3 = symbolProto$6 ? symbolProto$6.valueOf : void 0;
      function cloneSymbol$2(symbol) {
        return symbolValueOf$3 ? Object(symbolValueOf$3.call(symbol)) : {};
      }
      var _cloneSymbol$1 = cloneSymbol$2;
      function cloneTypedArray$3(typedArray, isDeep) {
        var buffer2 = isDeep ? _cloneArrayBuffer$1(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer2, typedArray.byteOffset, typedArray.length);
      }
      var _cloneTypedArray$1 = cloneTypedArray$3;
      var boolTag$1$1 = "[object Boolean]", dateTag$1$1 = "[object Date]", mapTag$2$1 = "[object Map]", numberTag$1$1 = "[object Number]", regexpTag$1$1 = "[object RegExp]", setTag$2$1 = "[object Set]", stringTag$1$1 = "[object String]", symbolTag$1$1 = "[object Symbol]";
      var arrayBufferTag$1$1 = "[object ArrayBuffer]", dataViewTag$1$1 = "[object DataView]", float32Tag$1$1 = "[object Float32Array]", float64Tag$1$1 = "[object Float64Array]", int8Tag$1$1 = "[object Int8Array]", int16Tag$1$1 = "[object Int16Array]", int32Tag$1$1 = "[object Int32Array]", uint8Tag$1$1 = "[object Uint8Array]", uint8ClampedTag$1$1 = "[object Uint8ClampedArray]", uint16Tag$1$1 = "[object Uint16Array]", uint32Tag$1$1 = "[object Uint32Array]";
      function initCloneByTag$2(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag$1$1:
            return _cloneArrayBuffer$1(object);
          case boolTag$1$1:
          case dateTag$1$1:
            return new Ctor(+object);
          case dataViewTag$1$1:
            return _cloneDataView$1(object, isDeep);
          case float32Tag$1$1:
          case float64Tag$1$1:
          case int8Tag$1$1:
          case int16Tag$1$1:
          case int32Tag$1$1:
          case uint8Tag$1$1:
          case uint8ClampedTag$1$1:
          case uint16Tag$1$1:
          case uint32Tag$1$1:
            return _cloneTypedArray$1(object, isDeep);
          case mapTag$2$1:
            return new Ctor();
          case numberTag$1$1:
          case stringTag$1$1:
            return new Ctor(object);
          case regexpTag$1$1:
            return _cloneRegExp$1(object);
          case setTag$2$1:
            return new Ctor();
          case symbolTag$1$1:
            return _cloneSymbol$1(object);
        }
      }
      var _initCloneByTag$1 = initCloneByTag$2;
      var objectCreate$2 = Object.create;
      var baseCreate$4 = function() {
        function object() {
        }
        return function(proto2) {
          if (!isObject_1$1(proto2)) {
            return {};
          }
          if (objectCreate$2) {
            return objectCreate$2(proto2);
          }
          object.prototype = proto2;
          var result = new object();
          object.prototype = void 0;
          return result;
        };
      }();
      var _baseCreate$1 = baseCreate$4;
      function initCloneObject$3(object) {
        return typeof object.constructor == "function" && !_isPrototype$1(object) ? _baseCreate$1(_getPrototype$1(object)) : {};
      }
      var _initCloneObject$1 = initCloneObject$3;
      var mapTag$1$1 = "[object Map]";
      function baseIsMap$2(value) {
        return isObjectLike_1$1(value) && _getTag$1(value) == mapTag$1$1;
      }
      var _baseIsMap$1 = baseIsMap$2;
      var nodeIsMap$1 = _nodeUtil$2 && _nodeUtil$2.isMap;
      var isMap$2 = nodeIsMap$1 ? _baseUnary$1(nodeIsMap$1) : _baseIsMap$1;
      var isMap_1$1 = isMap$2;
      var setTag$1$1 = "[object Set]";
      function baseIsSet$2(value) {
        return isObjectLike_1$1(value) && _getTag$1(value) == setTag$1$1;
      }
      var _baseIsSet$1 = baseIsSet$2;
      var nodeIsSet$1 = _nodeUtil$2 && _nodeUtil$2.isSet;
      var isSet$2 = nodeIsSet$1 ? _baseUnary$1(nodeIsSet$1) : _baseIsSet$1;
      var isSet_1$1 = isSet$2;
      var CLONE_DEEP_FLAG$1$1 = 1, CLONE_FLAT_FLAG$1 = 2, CLONE_SYMBOLS_FLAG$1$1 = 4;
      var argsTag$7 = "[object Arguments]", arrayTag$5 = "[object Array]", boolTag$6 = "[object Boolean]", dateTag$6 = "[object Date]", errorTag$5 = "[object Error]", funcTag$5 = "[object Function]", genTag$3 = "[object GeneratorFunction]", mapTag$9 = "[object Map]", numberTag$6 = "[object Number]", objectTag$9 = "[object Object]", regexpTag$6 = "[object RegExp]", setTag$9 = "[object Set]", stringTag$7 = "[object String]", symbolTag$5 = "[object Symbol]", weakMapTag$5 = "[object WeakMap]";
      var arrayBufferTag$6 = "[object ArrayBuffer]", dataViewTag$8 = "[object DataView]", float32Tag$4 = "[object Float32Array]", float64Tag$4 = "[object Float64Array]", int8Tag$4 = "[object Int8Array]", int16Tag$4 = "[object Int16Array]", int32Tag$4 = "[object Int32Array]", uint8Tag$4 = "[object Uint8Array]", uint8ClampedTag$4 = "[object Uint8ClampedArray]", uint16Tag$4 = "[object Uint16Array]", uint32Tag$4 = "[object Uint32Array]";
      var cloneableTags$1 = {};
      cloneableTags$1[argsTag$7] = cloneableTags$1[arrayTag$5] = cloneableTags$1[arrayBufferTag$6] = cloneableTags$1[dataViewTag$8] = cloneableTags$1[boolTag$6] = cloneableTags$1[dateTag$6] = cloneableTags$1[float32Tag$4] = cloneableTags$1[float64Tag$4] = cloneableTags$1[int8Tag$4] = cloneableTags$1[int16Tag$4] = cloneableTags$1[int32Tag$4] = cloneableTags$1[mapTag$9] = cloneableTags$1[numberTag$6] = cloneableTags$1[objectTag$9] = cloneableTags$1[regexpTag$6] = cloneableTags$1[setTag$9] = cloneableTags$1[stringTag$7] = cloneableTags$1[symbolTag$5] = cloneableTags$1[uint8Tag$4] = cloneableTags$1[uint8ClampedTag$4] = cloneableTags$1[uint16Tag$4] = cloneableTags$1[uint32Tag$4] = true;
      cloneableTags$1[errorTag$5] = cloneableTags$1[funcTag$5] = cloneableTags$1[weakMapTag$5] = false;
      function baseClone$2(value, bitmask, customizer, key, object, stack) {
        var result, isDeep = bitmask & CLONE_DEEP_FLAG$1$1, isFlat = bitmask & CLONE_FLAT_FLAG$1, isFull = bitmask & CLONE_SYMBOLS_FLAG$1$1;
        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }
        if (result !== void 0) {
          return result;
        }
        if (!isObject_1$1(value)) {
          return value;
        }
        var isArr = isArray_1$1(value);
        if (isArr) {
          result = _initCloneArray$1(value);
          if (!isDeep) {
            return _copyArray$1(value, result);
          }
        } else {
          var tag = _getTag$1(value), isFunc = tag == funcTag$5 || tag == genTag$3;
          if (isBuffer_1(value)) {
            return _cloneBuffer$1(value, isDeep);
          }
          if (tag == objectTag$9 || tag == argsTag$7 || isFunc && !object) {
            result = isFlat || isFunc ? {} : _initCloneObject$1(value);
            if (!isDeep) {
              return isFlat ? _copySymbolsIn$1(value, _baseAssignIn$1(result, value)) : _copySymbols$1(value, _baseAssign$1(result, value));
            }
          } else {
            if (!cloneableTags$1[tag]) {
              return object ? value : {};
            }
            result = _initCloneByTag$1(value, tag, isDeep);
          }
        }
        stack || (stack = new _Stack$1());
        var stacked = stack.get(value);
        if (stacked) {
          return stacked;
        }
        stack.set(value, result);
        if (isSet_1$1(value)) {
          value.forEach(function(subValue) {
            result.add(baseClone$2(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap_1$1(value)) {
          value.forEach(function(subValue, key2) {
            result.set(key2, baseClone$2(subValue, bitmask, customizer, key2, value, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? _getAllKeysIn$1 : _getAllKeys$1 : isFlat ? keysIn_1$1 : keys_1$1;
        var props = isArr ? void 0 : keysFunc(value);
        _arrayEach$1(props || value, function(subValue, key2) {
          if (props) {
            key2 = subValue;
            subValue = value[key2];
          }
          _assignValue$1(result, key2, baseClone$2(subValue, bitmask, customizer, key2, value, stack));
        });
        return result;
      }
      var _baseClone$1 = baseClone$2;
      var CLONE_DEEP_FLAG$2 = 1, CLONE_SYMBOLS_FLAG$2 = 4;
      function cloneDeep$1(value) {
        return _baseClone$1(value, CLONE_DEEP_FLAG$2 | CLONE_SYMBOLS_FLAG$2);
      }
      var cloneDeep_1$1 = cloneDeep$1;
      const withNodeId = (editor, {
        options: {
          idKey = "",
          idCreator,
          filterText,
          filter,
          reuseId,
          allow,
          exclude
        }
      }) => {
        const {
          apply: apply2
        } = editor;
        const idPropsCreator = () => ({
          [idKey]: idCreator()
        });
        const filterNode = (nodeEntry) => {
          var _nodeEntry$;
          return filter(nodeEntry) && (!filterText || ((_nodeEntry$ = nodeEntry[0]) === null || _nodeEntry$ === void 0 ? void 0 : _nodeEntry$.type) !== void 0);
        };
        const query = {
          filter: filterNode,
          allow,
          exclude
        };
        editor.apply = (operation) => {
          if (operation.type === "insert_node") {
            const node = cloneDeep_1$1(operation.node);
            if (!reuseId || someNode(editor, {
              match: {
                [idKey]: node[idKey]
              },
              at: []
            })) {
              delete node[idKey];
            }
            defaultsDeepToNodes({
              node,
              source: idPropsCreator,
              query
            });
            return apply2({
              ...operation,
              node
            });
          }
          if (operation.type === "split_node") {
            const node = operation.properties;
            if (queryNode([node, []], query)) {
              let id2 = operation.properties[idKey];
              if (!reuseId || id2 === void 0 || someNode(editor, {
                match: {
                  [idKey]: id2
                },
                at: []
              })) {
                id2 = idCreator();
              }
              return apply2({
                ...operation,
                properties: {
                  ...operation.properties,
                  [idKey]: id2
                }
              });
            }
          }
          return apply2(operation);
        };
        return editor;
      };
      const KEY_NODE_ID = "nodeId";
      const createNodeIdPlugin = createPluginFactory({
        key: KEY_NODE_ID,
        withOverrides: withNodeId,
        options: {
          idKey: "id",
          idCreator: () => Date.now(),
          filterText: true,
          filter: () => true
        }
      });
      var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
      function unwrapExports$2(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$2(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$4 = createCommonjsModule$2(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, { byKey: true }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      unwrapExports$2(lib$4);
      lib$4.isHotkey;
      lib$4.isCodeHotkey;
      lib$4.isKeyHotkey;
      lib$4.parseHotkey;
      lib$4.compareHotkey;
      lib$4.toKeyCode;
      lib$4.toKeyName;
      var freeGlobal$2 = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
      var _freeGlobal = freeGlobal$2;
      var freeSelf$1 = typeof self == "object" && self && self.Object === Object && self;
      var root$9 = _freeGlobal || freeSelf$1 || Function("return this")();
      var _root = root$9;
      var Symbol$1$1 = _root.Symbol;
      var _Symbol = Symbol$1$1;
      var objectProto$c$1 = Object.prototype;
      var hasOwnProperty$9$1 = objectProto$c$1.hasOwnProperty;
      var nativeObjectToString$1$1 = objectProto$c$1.toString;
      var symToStringTag$1$1 = _Symbol ? _Symbol.toStringTag : void 0;
      function getRawTag$1(value) {
        var isOwn = hasOwnProperty$9$1.call(value, symToStringTag$1$1), tag = value[symToStringTag$1$1];
        try {
          value[symToStringTag$1$1] = void 0;
          var unmasked = true;
        } catch (e22) {
        }
        var result = nativeObjectToString$1$1.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag$1$1] = tag;
          } else {
            delete value[symToStringTag$1$1];
          }
        }
        return result;
      }
      var _getRawTag = getRawTag$1;
      var objectProto$b$1 = Object.prototype;
      var nativeObjectToString$2 = objectProto$b$1.toString;
      function objectToString$1(value) {
        return nativeObjectToString$2.call(value);
      }
      var _objectToString = objectToString$1;
      var nullTag$1 = "[object Null]", undefinedTag$1 = "[object Undefined]";
      var symToStringTag$2 = _Symbol ? _Symbol.toStringTag : void 0;
      function baseGetTag$7(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag$1 : nullTag$1;
        }
        return symToStringTag$2 && symToStringTag$2 in Object(value) ? _getRawTag(value) : _objectToString(value);
      }
      var _baseGetTag = baseGetTag$7;
      function isObject$b(value) {
        var type = typeof value;
        return value != null && (type == "object" || type == "function");
      }
      var isObject_1 = isObject$b;
      var asyncTag$2 = "[object AsyncFunction]", funcTag$2$1 = "[object Function]", genTag$1$1 = "[object GeneratorFunction]", proxyTag$2 = "[object Proxy]";
      function isFunction$6(value) {
        if (!isObject_1(value)) {
          return false;
        }
        var tag = _baseGetTag(value);
        return tag == funcTag$2$1 || tag == genTag$1$1 || tag == asyncTag$2 || tag == proxyTag$2;
      }
      var isFunction_1$1 = isFunction$6;
      var coreJsData$4 = _root["__core-js_shared__"];
      var _coreJsData$1 = coreJsData$4;
      var maskSrcKey$2 = function() {
        var uid2 = /[^.]+$/.exec(_coreJsData$1 && _coreJsData$1.keys && _coreJsData$1.keys.IE_PROTO || "");
        return uid2 ? "Symbol(src)_1." + uid2 : "";
      }();
      function isMasked$3(func) {
        return !!maskSrcKey$2 && maskSrcKey$2 in func;
      }
      var _isMasked$1 = isMasked$3;
      var funcProto$1$1 = Function.prototype;
      var funcToString$1$1 = funcProto$1$1.toString;
      function toSource$4(func) {
        if (func != null) {
          try {
            return funcToString$1$1.call(func);
          } catch (e22) {
          }
          try {
            return func + "";
          } catch (e22) {
          }
        }
        return "";
      }
      var _toSource$1 = toSource$4;
      var reRegExpChar$2 = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor$2 = /^\[object .+?Constructor\]$/;
      var funcProto$6 = Function.prototype, objectProto$a$1 = Object.prototype;
      var funcToString$6 = funcProto$6.toString;
      var hasOwnProperty$8$1 = objectProto$a$1.hasOwnProperty;
      var reIsNative$2 = RegExp("^" + funcToString$6.call(hasOwnProperty$8$1).replace(reRegExpChar$2, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      function baseIsNative$3(value) {
        if (!isObject_1(value) || _isMasked$1(value)) {
          return false;
        }
        var pattern = isFunction_1$1(value) ? reIsNative$2 : reIsHostCtor$2;
        return pattern.test(_toSource$1(value));
      }
      var _baseIsNative$1 = baseIsNative$3;
      function getValue$3(object, key) {
        return object == null ? void 0 : object[key];
      }
      var _getValue$1 = getValue$3;
      function getNative$9(object, key) {
        var value = _getValue$1(object, key);
        return _baseIsNative$1(value) ? value : void 0;
      }
      var _getNative$1 = getNative$9;
      var Map$7 = _getNative$1(_root, "Map");
      var _Map$1 = Map$7;
      _getNative$1(Object, "create");
      (function() {
        try {
          var func = _getNative$1(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e22) {
        }
      })();
      function isObjectLike$9(value) {
        return value != null && typeof value == "object";
      }
      var isObjectLike_1 = isObjectLike$9;
      var argsTag$2$1 = "[object Arguments]";
      function baseIsArguments$3(value) {
        return isObjectLike_1(value) && _baseGetTag(value) == argsTag$2$1;
      }
      var _baseIsArguments$1 = baseIsArguments$3;
      var objectProto$6$1 = Object.prototype;
      var hasOwnProperty$4$1 = objectProto$6$1.hasOwnProperty;
      var propertyIsEnumerable$1$1 = objectProto$6$1.propertyIsEnumerable;
      _baseIsArguments$1(function() {
        return arguments;
      }()) ? _baseIsArguments$1 : function(value) {
        return isObjectLike_1(value) && hasOwnProperty$4$1.call(value, "callee") && !propertyIsEnumerable$1$1.call(value, "callee");
      };
      function stubFalse$2() {
        return false;
      }
      var stubFalse_1$1 = stubFalse$2;
      createCommonjsModule$2(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root.Buffer : void 0;
        var nativeIsBuffer2 = Buffer22 ? Buffer22.isBuffer : void 0;
        var isBuffer2 = nativeIsBuffer2 || stubFalse_1$1;
        module2.exports = isBuffer2;
      });
      var _nodeUtil$1 = createCommonjsModule$2(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var freeProcess2 = moduleExports2 && _freeGlobal.process;
        var nodeUtil2 = function() {
          try {
            var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
            if (types) {
              return types;
            }
            return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
          } catch (e22) {
          }
        }();
        module2.exports = nodeUtil2;
      });
      _nodeUtil$1 && _nodeUtil$1.isTypedArray;
      createCommonjsModule$2(function(module2, exports3) {
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? _root.Buffer : void 0, allocUnsafe2 = Buffer22 ? Buffer22.allocUnsafe : void 0;
        function cloneBuffer2(buffer2, isDeep) {
          if (isDeep) {
            return buffer2.slice();
          }
          var length = buffer2.length, result = allocUnsafe2 ? allocUnsafe2(length) : new buffer2.constructor(length);
          buffer2.copy(result);
          return result;
        }
        module2.exports = cloneBuffer2;
      });
      var DataView$4 = _getNative$1(_root, "DataView");
      var _DataView$1 = DataView$4;
      var Promise$1$1 = _getNative$1(_root, "Promise");
      var _Promise$1 = Promise$1$1;
      var Set$5 = _getNative$1(_root, "Set");
      var _Set$1 = Set$5;
      var WeakMap$5 = _getNative$1(_root, "WeakMap");
      var _WeakMap$1 = WeakMap$5;
      var mapTag$3$1 = "[object Map]", objectTag$1$1 = "[object Object]", promiseTag$2 = "[object Promise]", setTag$3$1 = "[object Set]", weakMapTag$1$1 = "[object WeakMap]";
      var dataViewTag$2$1 = "[object DataView]";
      var dataViewCtorString$2 = _toSource$1(_DataView$1), mapCtorString$2 = _toSource$1(_Map$1), promiseCtorString$2 = _toSource$1(_Promise$1), setCtorString$2 = _toSource$1(_Set$1), weakMapCtorString$2 = _toSource$1(_WeakMap$1);
      var getTag$7 = _baseGetTag;
      if (_DataView$1 && getTag$7(new _DataView$1(new ArrayBuffer(1))) != dataViewTag$2$1 || _Map$1 && getTag$7(new _Map$1()) != mapTag$3$1 || _Promise$1 && getTag$7(_Promise$1.resolve()) != promiseTag$2 || _Set$1 && getTag$7(new _Set$1()) != setTag$3$1 || _WeakMap$1 && getTag$7(new _WeakMap$1()) != weakMapTag$1$1) {
        getTag$7 = function(value) {
          var result = _baseGetTag(value), Ctor = result == objectTag$1$1 ? value.constructor : void 0, ctorString = Ctor ? _toSource$1(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString$2:
                return dataViewTag$2$1;
              case mapCtorString$2:
                return mapTag$3$1;
              case promiseCtorString$2:
                return promiseTag$2;
              case setCtorString$2:
                return setTag$3$1;
              case weakMapCtorString$2:
                return weakMapTag$1$1;
            }
          }
          return result;
        };
      }
      _root.Uint8Array;
      var symbolProto$5 = _Symbol ? _Symbol.prototype : void 0;
      symbolProto$5 ? symbolProto$5.valueOf : void 0;
      _nodeUtil$1 && _nodeUtil$1.isMap;
      _nodeUtil$1 && _nodeUtil$1.isSet;
      var papaparse_min = { exports: {} };
      (function(module2, exports3) {
        !function(e22, t22) {
          module2.exports = t22();
        }(commonjsGlobal$4, function s22() {
          var f22 = typeof self != "undefined" ? self : typeof window != "undefined" ? window : f22 !== void 0 ? f22 : {};
          var n22 = !f22.document && !!f22.postMessage, o22 = n22 && /blob:/i.test((f22.location || {}).protocol), a22 = {}, h22 = 0, b22 = { parse: function(e22, t22) {
            var i32 = (t22 = t22 || {}).dynamicTyping || false;
            M22(i32) && (t22.dynamicTypingFunction = i32, i32 = {});
            if (t22.dynamicTyping = i32, t22.transform = !!M22(t22.transform) && t22.transform, t22.worker && b22.WORKERS_SUPPORTED) {
              var r22 = function() {
                if (!b22.WORKERS_SUPPORTED)
                  return false;
                var e32 = (i42 = f22.URL || f22.webkitURL || null, r32 = s22.toString(), b22.BLOB_URL || (b22.BLOB_URL = i42.createObjectURL(new Blob(["(", r32, ")();"], { type: "text/javascript" })))), t32 = new f22.Worker(e32);
                var i42, r32;
                return t32.onmessage = _22, t32.id = h22++, a22[t32.id] = t32;
              }();
              return r22.userStep = t22.step, r22.userChunk = t22.chunk, r22.userComplete = t22.complete, r22.userError = t22.error, t22.step = M22(t22.step), t22.chunk = M22(t22.chunk), t22.complete = M22(t22.complete), t22.error = M22(t22.error), delete t22.worker, void r22.postMessage({ input: e22, config: t22, workerId: r22.id });
            }
            var n32 = null;
            b22.NODE_STREAM_INPUT, typeof e22 == "string" ? n32 = t22.download ? new l22(t22) : new p22(t22) : e22.readable === true && M22(e22.read) && M22(e22.on) ? n32 = new g22(t22) : (f22.File && e22 instanceof File || e22 instanceof Object) && (n32 = new c22(t22));
            return n32.stream(e22);
          }, unparse: function(e22, t22) {
            var n32 = false, _32 = true, m32 = ",", y32 = "\r\n", s32 = '"', a32 = s32 + s32, i32 = false, r22 = null, o32 = false;
            !function() {
              if (typeof t22 != "object")
                return;
              typeof t22.delimiter != "string" || b22.BAD_DELIMITERS.filter(function(e32) {
                return t22.delimiter.indexOf(e32) !== -1;
              }).length || (m32 = t22.delimiter);
              (typeof t22.quotes == "boolean" || typeof t22.quotes == "function" || Array.isArray(t22.quotes)) && (n32 = t22.quotes);
              typeof t22.skipEmptyLines != "boolean" && typeof t22.skipEmptyLines != "string" || (i32 = t22.skipEmptyLines);
              typeof t22.newline == "string" && (y32 = t22.newline);
              typeof t22.quoteChar == "string" && (s32 = t22.quoteChar);
              typeof t22.header == "boolean" && (_32 = t22.header);
              if (Array.isArray(t22.columns)) {
                if (t22.columns.length === 0)
                  throw new Error("Option columns is empty");
                r22 = t22.columns;
              }
              t22.escapeChar !== void 0 && (a32 = t22.escapeChar + s32);
              (typeof t22.escapeFormulae == "boolean" || t22.escapeFormulae instanceof RegExp) && (o32 = t22.escapeFormulae instanceof RegExp ? t22.escapeFormulae : /^[=+\-@\t\r].*$/);
            }();
            var h32 = new RegExp(j22(s32), "g");
            typeof e22 == "string" && (e22 = JSON.parse(e22));
            if (Array.isArray(e22)) {
              if (!e22.length || Array.isArray(e22[0]))
                return u32(null, e22, i32);
              if (typeof e22[0] == "object")
                return u32(r22 || Object.keys(e22[0]), e22, i32);
            } else if (typeof e22 == "object")
              return typeof e22.data == "string" && (e22.data = JSON.parse(e22.data)), Array.isArray(e22.data) && (e22.fields || (e22.fields = e22.meta && e22.meta.fields || r22), e22.fields || (e22.fields = Array.isArray(e22.data[0]) ? e22.fields : typeof e22.data[0] == "object" ? Object.keys(e22.data[0]) : []), Array.isArray(e22.data[0]) || typeof e22.data[0] == "object" || (e22.data = [e22.data])), u32(e22.fields || [], e22.data || [], i32);
            throw new Error("Unable to serialize unrecognized input");
            function u32(e32, t32, i42) {
              var r32 = "";
              typeof e32 == "string" && (e32 = JSON.parse(e32)), typeof t32 == "string" && (t32 = JSON.parse(t32));
              var n42 = Array.isArray(e32) && 0 < e32.length, s42 = !Array.isArray(t32[0]);
              if (n42 && _32) {
                for (var a42 = 0; a42 < e32.length; a42++)
                  0 < a42 && (r32 += m32), r32 += v32(e32[a42], a42);
                0 < t32.length && (r32 += y32);
              }
              for (var o42 = 0; o42 < t32.length; o42++) {
                var h42 = n42 ? e32.length : t32[o42].length, u42 = false, f32 = n42 ? Object.keys(t32[o42]).length === 0 : t32[o42].length === 0;
                if (i42 && !n42 && (u42 = i42 === "greedy" ? t32[o42].join("").trim() === "" : t32[o42].length === 1 && t32[o42][0].length === 0), i42 === "greedy" && n42) {
                  for (var d32 = [], l32 = 0; l32 < h42; l32++) {
                    var c32 = s42 ? e32[l32] : l32;
                    d32.push(t32[o42][c32]);
                  }
                  u42 = d32.join("").trim() === "";
                }
                if (!u42) {
                  for (var p32 = 0; p32 < h42; p32++) {
                    0 < p32 && !f32 && (r32 += m32);
                    var g32 = n42 && s42 ? e32[p32] : p32;
                    r32 += v32(t32[o42][g32], p32);
                  }
                  o42 < t32.length - 1 && (!i42 || 0 < h42 && !f32) && (r32 += y32);
                }
              }
              return r32;
            }
            function v32(e32, t32) {
              if (e32 == null)
                return "";
              if (e32.constructor === Date)
                return JSON.stringify(e32).slice(1, 25);
              var i42 = false;
              o32 && typeof e32 == "string" && o32.test(e32) && (e32 = "'" + e32, i42 = true);
              var r32 = e32.toString().replace(h32, a32);
              return (i42 = i42 || n32 === true || typeof n32 == "function" && n32(e32, t32) || Array.isArray(n32) && n32[t32] || function(e42, t42) {
                for (var i52 = 0; i52 < t42.length; i52++)
                  if (-1 < e42.indexOf(t42[i52]))
                    return true;
                return false;
              }(r32, b22.BAD_DELIMITERS) || -1 < r32.indexOf(m32) || r32.charAt(0) === " " || r32.charAt(r32.length - 1) === " ") ? s32 + r32 + s32 : r32;
            }
          } };
          if (b22.RECORD_SEP = String.fromCharCode(30), b22.UNIT_SEP = String.fromCharCode(31), b22.BYTE_ORDER_MARK = "\uFEFF", b22.BAD_DELIMITERS = ["\r", "\n", '"', b22.BYTE_ORDER_MARK], b22.WORKERS_SUPPORTED = !n22 && !!f22.Worker, b22.NODE_STREAM_INPUT = 1, b22.LocalChunkSize = 10485760, b22.RemoteChunkSize = 5242880, b22.DefaultDelimiter = ",", b22.Parser = E22, b22.ParserHandle = i22, b22.NetworkStreamer = l22, b22.FileStreamer = c22, b22.StringStreamer = p22, b22.ReadableStreamStreamer = g22, f22.jQuery) {
            var d22 = f22.jQuery;
            d22.fn.parse = function(o32) {
              var i32 = o32.config || {}, h32 = [];
              return this.each(function(e32) {
                if (!(d22(this).prop("tagName").toUpperCase() === "INPUT" && d22(this).attr("type").toLowerCase() === "file" && f22.FileReader) || !this.files || this.files.length === 0)
                  return true;
                for (var t22 = 0; t22 < this.files.length; t22++)
                  h32.push({ file: this.files[t22], inputElem: this, instanceConfig: d22.extend({}, i32) });
              }), e22(), this;
              function e22() {
                if (h32.length !== 0) {
                  var e32, t22, i42, r22, n32 = h32[0];
                  if (M22(o32.before)) {
                    var s32 = o32.before(n32.file, n32.inputElem);
                    if (typeof s32 == "object") {
                      if (s32.action === "abort")
                        return e32 = "AbortError", t22 = n32.file, i42 = n32.inputElem, r22 = s32.reason, void (M22(o32.error) && o32.error({ name: e32 }, t22, i42, r22));
                      if (s32.action === "skip")
                        return void u32();
                      typeof s32.config == "object" && (n32.instanceConfig = d22.extend(n32.instanceConfig, s32.config));
                    } else if (s32 === "skip")
                      return void u32();
                  }
                  var a32 = n32.instanceConfig.complete;
                  n32.instanceConfig.complete = function(e42) {
                    M22(a32) && a32(e42, n32.file, n32.inputElem), u32();
                  }, b22.parse(n32.file, n32.instanceConfig);
                } else
                  M22(o32.complete) && o32.complete();
              }
              function u32() {
                h32.splice(0, 1), e22();
              }
            };
          }
          function u22(e22) {
            this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, function(e32) {
              var t22 = w22(e32);
              t22.chunkSize = parseInt(t22.chunkSize), e32.step || e32.chunk || (t22.chunkSize = null);
              this._handle = new i22(t22), (this._handle.streamer = this)._config = t22;
            }.call(this, e22), this.parseChunk = function(e32, t22) {
              if (this.isFirstChunk && M22(this._config.beforeFirstChunk)) {
                var i32 = this._config.beforeFirstChunk(e32);
                i32 !== void 0 && (e32 = i32);
              }
              this.isFirstChunk = false, this._halted = false;
              var r22 = this._partialLine + e32;
              this._partialLine = "";
              var n32 = this._handle.parse(r22, this._baseIndex, !this._finished);
              if (!this._handle.paused() && !this._handle.aborted()) {
                var s32 = n32.meta.cursor;
                this._finished || (this._partialLine = r22.substring(s32 - this._baseIndex), this._baseIndex = s32), n32 && n32.data && (this._rowCount += n32.data.length);
                var a32 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
                if (o22)
                  f22.postMessage({ results: n32, workerId: b22.WORKER_ID, finished: a32 });
                else if (M22(this._config.chunk) && !t22) {
                  if (this._config.chunk(n32, this._handle), this._handle.paused() || this._handle.aborted())
                    return void (this._halted = true);
                  n32 = void 0, this._completeResults = void 0;
                }
                return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n32.data), this._completeResults.errors = this._completeResults.errors.concat(n32.errors), this._completeResults.meta = n32.meta), this._completed || !a32 || !M22(this._config.complete) || n32 && n32.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), a32 || n32 && n32.meta.paused || this._nextChunk(), n32;
              }
              this._halted = true;
            }, this._sendError = function(e32) {
              M22(this._config.error) ? this._config.error(e32) : o22 && this._config.error && f22.postMessage({ workerId: b22.WORKER_ID, error: e32, finished: false });
            };
          }
          function l22(e22) {
            var r22;
            (e22 = e22 || {}).chunkSize || (e22.chunkSize = b22.RemoteChunkSize), u22.call(this, e22), this._nextChunk = n22 ? function() {
              this._readChunk(), this._chunkLoaded();
            } : function() {
              this._readChunk();
            }, this.stream = function(e32) {
              this._input = e32, this._nextChunk();
            }, this._readChunk = function() {
              if (this._finished)
                this._chunkLoaded();
              else {
                if (r22 = new XMLHttpRequest(), this._config.withCredentials && (r22.withCredentials = this._config.withCredentials), n22 || (r22.onload = v22(this._chunkLoaded, this), r22.onerror = v22(this._chunkError, this)), r22.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !n22), this._config.downloadRequestHeaders) {
                  var e32 = this._config.downloadRequestHeaders;
                  for (var t22 in e32)
                    r22.setRequestHeader(t22, e32[t22]);
                }
                if (this._config.chunkSize) {
                  var i32 = this._start + this._config.chunkSize - 1;
                  r22.setRequestHeader("Range", "bytes=" + this._start + "-" + i32);
                }
                try {
                  r22.send(this._config.downloadRequestBody);
                } catch (e42) {
                  this._chunkError(e42.message);
                }
                n22 && r22.status === 0 && this._chunkError();
              }
            }, this._chunkLoaded = function() {
              r22.readyState === 4 && (r22.status < 200 || 400 <= r22.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : r22.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e32) {
                var t22 = e32.getResponseHeader("Content-Range");
                if (t22 === null)
                  return -1;
                return parseInt(t22.substring(t22.lastIndexOf("/") + 1));
              }(r22), this.parseChunk(r22.responseText)));
            }, this._chunkError = function(e32) {
              var t22 = r22.statusText || e32;
              this._sendError(new Error(t22));
            };
          }
          function c22(e22) {
            var r22, n32;
            (e22 = e22 || {}).chunkSize || (e22.chunkSize = b22.LocalChunkSize), u22.call(this, e22);
            var s32 = typeof FileReader != "undefined";
            this.stream = function(e32) {
              this._input = e32, n32 = e32.slice || e32.webkitSlice || e32.mozSlice, s32 ? ((r22 = new FileReader()).onload = v22(this._chunkLoaded, this), r22.onerror = v22(this._chunkError, this)) : r22 = new FileReaderSync(), this._nextChunk();
            }, this._nextChunk = function() {
              this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
            }, this._readChunk = function() {
              var e32 = this._input;
              if (this._config.chunkSize) {
                var t22 = Math.min(this._start + this._config.chunkSize, this._input.size);
                e32 = n32.call(e32, this._start, t22);
              }
              var i32 = r22.readAsText(e32, this._config.encoding);
              s32 || this._chunkLoaded({ target: { result: i32 } });
            }, this._chunkLoaded = function(e32) {
              this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e32.target.result);
            }, this._chunkError = function() {
              this._sendError(r22.error);
            };
          }
          function p22(e22) {
            var i32;
            u22.call(this, e22 = e22 || {}), this.stream = function(e32) {
              return i32 = e32, this._nextChunk();
            }, this._nextChunk = function() {
              if (!this._finished) {
                var e32, t22 = this._config.chunkSize;
                return t22 ? (e32 = i32.substring(0, t22), i32 = i32.substring(t22)) : (e32 = i32, i32 = ""), this._finished = !i32, this.parseChunk(e32);
              }
            };
          }
          function g22(e22) {
            u22.call(this, e22 = e22 || {});
            var t22 = [], i32 = true, r22 = false;
            this.pause = function() {
              u22.prototype.pause.apply(this, arguments), this._input.pause();
            }, this.resume = function() {
              u22.prototype.resume.apply(this, arguments), this._input.resume();
            }, this.stream = function(e32) {
              this._input = e32, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
            }, this._checkIsFinished = function() {
              r22 && t22.length === 1 && (this._finished = true);
            }, this._nextChunk = function() {
              this._checkIsFinished(), t22.length ? this.parseChunk(t22.shift()) : i32 = true;
            }, this._streamData = v22(function(e32) {
              try {
                t22.push(typeof e32 == "string" ? e32 : e32.toString(this._config.encoding)), i32 && (i32 = false, this._checkIsFinished(), this.parseChunk(t22.shift()));
              } catch (e42) {
                this._streamError(e42);
              }
            }, this), this._streamError = v22(function(e32) {
              this._streamCleanUp(), this._sendError(e32);
            }, this), this._streamEnd = v22(function() {
              this._streamCleanUp(), r22 = true, this._streamData("");
            }, this), this._streamCleanUp = v22(function() {
              this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
            }, this);
          }
          function i22(m32) {
            var a32, o32, h32, r22 = Math.pow(2, 53), n32 = -r22, s32 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, u32 = /^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/, t22 = this, i32 = 0, f32 = 0, d32 = false, e22 = false, l32 = [], c32 = { data: [], errors: [], meta: {} };
            if (M22(m32.step)) {
              var p32 = m32.step;
              m32.step = function(e32) {
                if (c32 = e32, _32())
                  g32();
                else {
                  if (g32(), c32.data.length === 0)
                    return;
                  i32 += e32.data.length, m32.preview && i32 > m32.preview ? o32.abort() : (c32.data = c32.data[0], p32(c32, t22));
                }
              };
            }
            function y32(e32) {
              return m32.skipEmptyLines === "greedy" ? e32.join("").trim() === "" : e32.length === 1 && e32[0].length === 0;
            }
            function g32() {
              return c32 && h32 && (k22("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + b22.DefaultDelimiter + "'"), h32 = false), m32.skipEmptyLines && (c32.data = c32.data.filter(function(e32) {
                return !y32(e32);
              })), _32() && function() {
                if (!c32)
                  return;
                function e32(e42, t42) {
                  M22(m32.transformHeader) && (e42 = m32.transformHeader(e42, t42)), l32.push(e42);
                }
                if (Array.isArray(c32.data[0])) {
                  for (var t32 = 0; _32() && t32 < c32.data.length; t32++)
                    c32.data[t32].forEach(e32);
                  c32.data.splice(0, 1);
                } else
                  c32.data.forEach(e32);
              }(), function() {
                if (!c32 || !m32.header && !m32.dynamicTyping && !m32.transform)
                  return c32;
                function e32(e42, t42) {
                  var i42, r32 = m32.header ? {} : [];
                  for (i42 = 0; i42 < e42.length; i42++) {
                    var n42 = i42, s42 = e42[i42];
                    m32.header && (n42 = i42 >= l32.length ? "__parsed_extra" : l32[i42]), m32.transform && (s42 = m32.transform(s42, n42)), s42 = v32(n42, s42), n42 === "__parsed_extra" ? (r32[n42] = r32[n42] || [], r32[n42].push(s42)) : r32[n42] = s42;
                  }
                  return m32.header && (i42 > l32.length ? k22("FieldMismatch", "TooManyFields", "Too many fields: expected " + l32.length + " fields but parsed " + i42, f32 + t42) : i42 < l32.length && k22("FieldMismatch", "TooFewFields", "Too few fields: expected " + l32.length + " fields but parsed " + i42, f32 + t42)), r32;
                }
                var t32 = 1;
                !c32.data.length || Array.isArray(c32.data[0]) ? (c32.data = c32.data.map(e32), t32 = c32.data.length) : c32.data = e32(c32.data, 0);
                m32.header && c32.meta && (c32.meta.fields = l32);
                return f32 += t32, c32;
              }();
            }
            function _32() {
              return m32.header && l32.length === 0;
            }
            function v32(e32, t32) {
              return i42 = e32, m32.dynamicTypingFunction && m32.dynamicTyping[i42] === void 0 && (m32.dynamicTyping[i42] = m32.dynamicTypingFunction(i42)), (m32.dynamicTyping[i42] || m32.dynamicTyping) === true ? t32 === "true" || t32 === "TRUE" || t32 !== "false" && t32 !== "FALSE" && (function(e42) {
                if (s32.test(e42)) {
                  var t42 = parseFloat(e42);
                  if (n32 < t42 && t42 < r22)
                    return true;
                }
                return false;
              }(t32) ? parseFloat(t32) : u32.test(t32) ? new Date(t32) : t32 === "" ? null : t32) : t32;
              var i42;
            }
            function k22(e32, t32, i42, r32) {
              var n42 = { type: e32, code: t32, message: i42 };
              r32 !== void 0 && (n42.row = r32), c32.errors.push(n42);
            }
            this.parse = function(e32, t32, i42) {
              var r32 = m32.quoteChar || '"';
              if (m32.newline || (m32.newline = function(e42, t42) {
                e42 = e42.substring(0, 1048576);
                var i52 = new RegExp(j22(t42) + "([^]*?)" + j22(t42), "gm"), r42 = (e42 = e42.replace(i52, "")).split("\r"), n52 = e42.split("\n"), s52 = 1 < n52.length && n52[0].length < r42[0].length;
                if (r42.length === 1 || s52)
                  return "\n";
                for (var a42 = 0, o42 = 0; o42 < r42.length; o42++)
                  r42[o42][0] === "\n" && a42++;
                return a42 >= r42.length / 2 ? "\r\n" : "\r";
              }(e32, r32)), h32 = false, m32.delimiter)
                M22(m32.delimiter) && (m32.delimiter = m32.delimiter(e32), c32.meta.delimiter = m32.delimiter);
              else {
                var n42 = function(e42, t42, i52, r42, n52) {
                  var s52, a42, o42, h42;
                  n52 = n52 || [",", "	", "|", ";", b22.RECORD_SEP, b22.UNIT_SEP];
                  for (var u42 = 0; u42 < n52.length; u42++) {
                    var f42 = n52[u42], d42 = 0, l42 = 0, c42 = 0;
                    o42 = void 0;
                    for (var p42 = new E22({ comments: r42, delimiter: f42, newline: t42, preview: 10 }).parse(e42), g42 = 0; g42 < p42.data.length; g42++)
                      if (i52 && y32(p42.data[g42]))
                        c42++;
                      else {
                        var _42 = p42.data[g42].length;
                        l42 += _42, o42 !== void 0 ? 0 < _42 && (d42 += Math.abs(_42 - o42), o42 = _42) : o42 = _42;
                      }
                    0 < p42.data.length && (l42 /= p42.data.length - c42), (a42 === void 0 || d42 <= a42) && (h42 === void 0 || h42 < l42) && 1.99 < l42 && (a42 = d42, s52 = f42, h42 = l42);
                  }
                  return { successful: !!(m32.delimiter = s52), bestDelimiter: s52 };
                }(e32, m32.newline, m32.skipEmptyLines, m32.comments, m32.delimitersToGuess);
                n42.successful ? m32.delimiter = n42.bestDelimiter : (h32 = true, m32.delimiter = b22.DefaultDelimiter), c32.meta.delimiter = m32.delimiter;
              }
              var s42 = w22(m32);
              return m32.preview && m32.header && s42.preview++, a32 = e32, o32 = new E22(s42), c32 = o32.parse(a32, t32, i42), g32(), d32 ? { meta: { paused: true } } : c32 || { meta: { paused: false } };
            }, this.paused = function() {
              return d32;
            }, this.pause = function() {
              d32 = true, o32.abort(), a32 = M22(m32.chunk) ? "" : a32.substring(o32.getCharIndex());
            }, this.resume = function() {
              t22.streamer._halted ? (d32 = false, t22.streamer.parseChunk(a32, true)) : setTimeout(t22.resume, 3);
            }, this.aborted = function() {
              return e22;
            }, this.abort = function() {
              e22 = true, o32.abort(), c32.meta.aborted = true, M22(m32.complete) && m32.complete(c32), a32 = "";
            };
          }
          function j22(e22) {
            return e22.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          }
          function E22(e22) {
            var S22, O22 = (e22 = e22 || {}).delimiter, x22 = e22.newline, I22 = e22.comments, T22 = e22.step, D22 = e22.preview, A22 = e22.fastMode, L22 = S22 = e22.quoteChar === void 0 || e22.quoteChar === null ? '"' : e22.quoteChar;
            if (e22.escapeChar !== void 0 && (L22 = e22.escapeChar), (typeof O22 != "string" || -1 < b22.BAD_DELIMITERS.indexOf(O22)) && (O22 = ","), I22 === O22)
              throw new Error("Comment character same as delimiter");
            I22 === true ? I22 = "#" : (typeof I22 != "string" || -1 < b22.BAD_DELIMITERS.indexOf(I22)) && (I22 = false), x22 !== "\n" && x22 !== "\r" && x22 !== "\r\n" && (x22 = "\n");
            var F22 = 0, z22 = false;
            this.parse = function(r22, t22, i32) {
              if (typeof r22 != "string")
                throw new Error("Input must be a string");
              var n32 = r22.length, e32 = O22.length, s32 = x22.length, a32 = I22.length, o32 = M22(T22), h32 = [], u32 = [], f32 = [], d32 = F22 = 0;
              if (!r22)
                return C22();
              if (A22 || A22 !== false && r22.indexOf(S22) === -1) {
                for (var l32 = r22.split(x22), c32 = 0; c32 < l32.length; c32++) {
                  if (f32 = l32[c32], F22 += f32.length, c32 !== l32.length - 1)
                    F22 += x22.length;
                  else if (i32)
                    return C22();
                  if (!I22 || f32.substring(0, a32) !== I22) {
                    if (o32) {
                      if (h32 = [], k22(f32.split(O22)), R22(), z22)
                        return C22();
                    } else
                      k22(f32.split(O22));
                    if (D22 && D22 <= c32)
                      return h32 = h32.slice(0, D22), C22(true);
                  }
                }
                return C22();
              }
              for (var p32 = r22.indexOf(O22, F22), g32 = r22.indexOf(x22, F22), _32 = new RegExp(j22(L22) + j22(S22), "g"), m32 = r22.indexOf(S22, F22); ; )
                if (r22[F22] !== S22)
                  if (I22 && f32.length === 0 && r22.substring(F22, F22 + a32) === I22) {
                    if (g32 === -1)
                      return C22();
                    F22 = g32 + s32, g32 = r22.indexOf(x22, F22), p32 = r22.indexOf(O22, F22);
                  } else if (p32 !== -1 && (p32 < g32 || g32 === -1))
                    f32.push(r22.substring(F22, p32)), F22 = p32 + e32, p32 = r22.indexOf(O22, F22);
                  else {
                    if (g32 === -1)
                      break;
                    if (f32.push(r22.substring(F22, g32)), w32(g32 + s32), o32 && (R22(), z22))
                      return C22();
                    if (D22 && h32.length >= D22)
                      return C22(true);
                  }
                else
                  for (m32 = F22, F22++; ; ) {
                    if ((m32 = r22.indexOf(S22, m32 + 1)) === -1)
                      return i32 || u32.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: h32.length, index: F22 }), E32();
                    if (m32 === n32 - 1)
                      return E32(r22.substring(F22, m32).replace(_32, S22));
                    if (S22 !== L22 || r22[m32 + 1] !== L22) {
                      if (S22 === L22 || m32 === 0 || r22[m32 - 1] !== L22) {
                        p32 !== -1 && p32 < m32 + 1 && (p32 = r22.indexOf(O22, m32 + 1)), g32 !== -1 && g32 < m32 + 1 && (g32 = r22.indexOf(x22, m32 + 1));
                        var y32 = b32(g32 === -1 ? p32 : Math.min(p32, g32));
                        if (r22.substr(m32 + 1 + y32, e32) === O22) {
                          f32.push(r22.substring(F22, m32).replace(_32, S22)), r22[F22 = m32 + 1 + y32 + e32] !== S22 && (m32 = r22.indexOf(S22, F22)), p32 = r22.indexOf(O22, F22), g32 = r22.indexOf(x22, F22);
                          break;
                        }
                        var v32 = b32(g32);
                        if (r22.substring(m32 + 1 + v32, m32 + 1 + v32 + s32) === x22) {
                          if (f32.push(r22.substring(F22, m32).replace(_32, S22)), w32(m32 + 1 + v32 + s32), p32 = r22.indexOf(O22, F22), m32 = r22.indexOf(S22, F22), o32 && (R22(), z22))
                            return C22();
                          if (D22 && h32.length >= D22)
                            return C22(true);
                          break;
                        }
                        u32.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: h32.length, index: F22 }), m32++;
                      }
                    } else
                      m32++;
                  }
              return E32();
              function k22(e42) {
                h32.push(e42), d32 = F22;
              }
              function b32(e42) {
                var t32 = 0;
                if (e42 !== -1) {
                  var i42 = r22.substring(m32 + 1, e42);
                  i42 && i42.trim() === "" && (t32 = i42.length);
                }
                return t32;
              }
              function E32(e42) {
                return i32 || (e42 === void 0 && (e42 = r22.substring(F22)), f32.push(e42), F22 = n32, k22(f32), o32 && R22()), C22();
              }
              function w32(e42) {
                F22 = e42, k22(f32), f32 = [], g32 = r22.indexOf(x22, F22);
              }
              function C22(e42) {
                return { data: h32, errors: u32, meta: { delimiter: O22, linebreak: x22, aborted: z22, truncated: !!e42, cursor: d32 + (t22 || 0) } };
              }
              function R22() {
                T22(C22()), h32 = [], u32 = [];
              }
            }, this.abort = function() {
              z22 = true;
            }, this.getCharIndex = function() {
              return F22;
            };
          }
          function _22(e22) {
            var t22 = e22.data, i32 = a22[t22.workerId], r22 = false;
            if (t22.error)
              i32.userError(t22.error, t22.file);
            else if (t22.results && t22.results.data) {
              var n32 = { abort: function() {
                r22 = true, m22(t22.workerId, { data: [], errors: [], meta: { aborted: true } });
              }, pause: y22, resume: y22 };
              if (M22(i32.userStep)) {
                for (var s32 = 0; s32 < t22.results.data.length && (i32.userStep({ data: t22.results.data[s32], errors: t22.results.errors, meta: t22.results.meta }, n32), !r22); s32++)
                  ;
                delete t22.results;
              } else
                M22(i32.userChunk) && (i32.userChunk(t22.results, n32, t22.file), delete t22.results);
            }
            t22.finished && !r22 && m22(t22.workerId, t22.results);
          }
          function m22(e22, t22) {
            var i32 = a22[e22];
            M22(i32.userComplete) && i32.userComplete(t22), i32.terminate(), delete a22[e22];
          }
          function y22() {
            throw new Error("Not implemented.");
          }
          function w22(e22) {
            if (typeof e22 != "object" || e22 === null)
              return e22;
            var t22 = Array.isArray(e22) ? [] : {};
            for (var i32 in e22)
              t22[i32] = w22(e22[i32]);
            return t22;
          }
          function v22(e22, t22) {
            return function() {
              e22.apply(t22, arguments);
            };
          }
          function M22(e22) {
            return typeof e22 == "function";
          }
          return o22 && (f22.onmessage = function(e22) {
            var t22 = e22.data;
            b22.WORKER_ID === void 0 && t22 && (b22.WORKER_ID = t22.workerId);
            if (typeof t22.input == "string")
              f22.postMessage({ workerId: b22.WORKER_ID, results: b22.parse(t22.input, t22.config), finished: true });
            else if (f22.File && t22.input instanceof File || t22.input instanceof Object) {
              var i32 = b22.parse(t22.input, t22.config);
              i32 && f22.postMessage({ workerId: b22.WORKER_ID, results: i32, finished: true });
            }
          }), (l22.prototype = Object.create(u22.prototype)).constructor = l22, (c22.prototype = Object.create(u22.prototype)).constructor = c22, (p22.prototype = Object.create(p22.prototype)).constructor = p22, (g22.prototype = Object.create(u22.prototype)).constructor = g22, b22;
        });
      })(papaparse_min);
      function unwrapExports$1(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule$1(fn2, module2) {
        return module2 = { exports: {} }, fn2(module2, module2.exports), module2.exports;
      }
      var assertString_1 = createCommonjsModule$1(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        exports3.default = assertString;
        function _typeof(obj) {
          "@babel/helpers - typeof";
          if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            _typeof = function _typeof2(obj2) {
              return typeof obj2;
            };
          } else {
            _typeof = function _typeof2(obj2) {
              return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
            };
          }
          return _typeof(obj);
        }
        function assertString(input) {
          var isString22 = typeof input === "string" || input instanceof String;
          if (!isString22) {
            var invalidType = _typeof(input);
            if (input === null)
              invalidType = "null";
            else if (invalidType === "object")
              invalidType = input.constructor.name;
            throw new TypeError("Expected a string but received a ".concat(invalidType));
          }
        }
        module2.exports = exports3.default;
        module2.exports.default = exports3.default;
      });
      unwrapExports$1(assertString_1);
      var merge_1 = createCommonjsModule$1(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        exports3.default = merge2;
        function merge2() {
          var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var defaults2 = arguments.length > 1 ? arguments[1] : void 0;
          for (var key in defaults2) {
            if (typeof obj[key] === "undefined") {
              obj[key] = defaults2[key];
            }
          }
          return obj;
        }
        module2.exports = exports3.default;
        module2.exports.default = exports3.default;
      });
      unwrapExports$1(merge_1);
      var isFQDN_1 = createCommonjsModule$1(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        exports3.default = isFQDN;
        var _assertString = _interopRequireDefault2(assertString_1);
        var _merge = _interopRequireDefault2(merge_1);
        function _interopRequireDefault2(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }
        var default_fqdn_options = {
          require_tld: true,
          allow_underscores: false,
          allow_trailing_dot: false,
          allow_numeric_tld: false,
          allow_wildcard: false
        };
        function isFQDN(str, options) {
          (0, _assertString.default)(str);
          options = (0, _merge.default)(options, default_fqdn_options);
          if (options.allow_trailing_dot && str[str.length - 1] === ".") {
            str = str.substring(0, str.length - 1);
          }
          if (options.allow_wildcard === true && str.indexOf("*.") === 0) {
            str = str.substring(2);
          }
          var parts = str.split(".");
          var tld = parts[parts.length - 1];
          if (options.require_tld) {
            if (parts.length < 2) {
              return false;
            }
            if (!/^([a-z\u00A1-\u00A8\u00AA-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
              return false;
            }
            if (/\s/.test(tld)) {
              return false;
            }
          }
          if (!options.allow_numeric_tld && /^\d+$/.test(tld)) {
            return false;
          }
          return parts.every(function(part) {
            if (part.length > 63) {
              return false;
            }
            if (!/^[a-z_\u00a1-\uffff0-9-]+$/i.test(part)) {
              return false;
            }
            if (/[\uff01-\uff5e]/.test(part)) {
              return false;
            }
            if (/^-|-$/.test(part)) {
              return false;
            }
            if (!options.allow_underscores && /_/.test(part)) {
              return false;
            }
            return true;
          });
        }
        module2.exports = exports3.default;
        module2.exports.default = exports3.default;
      });
      unwrapExports$1(isFQDN_1);
      var isIP_1 = createCommonjsModule$1(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        exports3.default = isIP;
        var _assertString = _interopRequireDefault2(assertString_1);
        function _interopRequireDefault2(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }
        var IPv4SegmentFormat = "(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])";
        var IPv4AddressFormat = "(".concat(IPv4SegmentFormat, "[.]){3}").concat(IPv4SegmentFormat);
        var IPv4AddressRegExp = new RegExp("^".concat(IPv4AddressFormat, "$"));
        var IPv6SegmentFormat = "(?:[0-9a-fA-F]{1,4})";
        var IPv6AddressRegExp = new RegExp("^(" + "(?:".concat(IPv6SegmentFormat, ":){7}(?:").concat(IPv6SegmentFormat, "|:)|") + "(?:".concat(IPv6SegmentFormat, ":){6}(?:").concat(IPv4AddressFormat, "|:").concat(IPv6SegmentFormat, "|:)|") + "(?:".concat(IPv6SegmentFormat, ":){5}(?::").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,2}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){4}(?:(:").concat(IPv6SegmentFormat, "){0,1}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,3}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){3}(?:(:").concat(IPv6SegmentFormat, "){0,2}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,4}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){2}(?:(:").concat(IPv6SegmentFormat, "){0,3}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,5}|:)|") + "(?:".concat(IPv6SegmentFormat, ":){1}(?:(:").concat(IPv6SegmentFormat, "){0,4}:").concat(IPv4AddressFormat, "|(:").concat(IPv6SegmentFormat, "){1,6}|:)|") + "(?::((?::".concat(IPv6SegmentFormat, "){0,5}:").concat(IPv4AddressFormat, "|(?::").concat(IPv6SegmentFormat, "){1,7}|:))") + ")(%[0-9a-zA-Z-.:]{1,})?$");
        function isIP(str) {
          var version = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          (0, _assertString.default)(str);
          version = String(version);
          if (!version) {
            return isIP(str, 4) || isIP(str, 6);
          }
          if (version === "4") {
            if (!IPv4AddressRegExp.test(str)) {
              return false;
            }
            var parts = str.split(".").sort(function(a22, b22) {
              return a22 - b22;
            });
            return parts[3] <= 255;
          }
          if (version === "6") {
            return !!IPv6AddressRegExp.test(str);
          }
          return false;
        }
        module2.exports = exports3.default;
        module2.exports.default = exports3.default;
      });
      unwrapExports$1(isIP_1);
      var isURL_1 = createCommonjsModule$1(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        exports3.default = isURL;
        var _assertString = _interopRequireDefault2(assertString_1);
        var _isFQDN = _interopRequireDefault2(isFQDN_1);
        var _isIP = _interopRequireDefault2(isIP_1);
        var _merge = _interopRequireDefault2(merge_1);
        function _interopRequireDefault2(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }
        function _slicedToArray2(arr, i22) {
          return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i22) || _unsupportedIterableToArray2(arr, i22) || _nonIterableRest2();
        }
        function _nonIterableRest2() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _unsupportedIterableToArray2(o22, minLen) {
          if (!o22)
            return;
          if (typeof o22 === "string")
            return _arrayLikeToArray2(o22, minLen);
          var n22 = Object.prototype.toString.call(o22).slice(8, -1);
          if (n22 === "Object" && o22.constructor)
            n22 = o22.constructor.name;
          if (n22 === "Map" || n22 === "Set")
            return Array.from(o22);
          if (n22 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n22))
            return _arrayLikeToArray2(o22, minLen);
        }
        function _arrayLikeToArray2(arr, len) {
          if (len == null || len > arr.length)
            len = arr.length;
          for (var i22 = 0, arr2 = new Array(len); i22 < len; i22++) {
            arr2[i22] = arr[i22];
          }
          return arr2;
        }
        function _iterableToArrayLimit2(arr, i22) {
          if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
            return;
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e4 = void 0;
          try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);
              if (i22 && _arr.length === i22)
                break;
            }
          } catch (err) {
            _d = true;
            _e4 = err;
          } finally {
            try {
              if (!_n && _i["return"] != null)
                _i["return"]();
            } finally {
              if (_d)
                throw _e4;
            }
          }
          return _arr;
        }
        function _arrayWithHoles2(arr) {
          if (Array.isArray(arr))
            return arr;
        }
        var default_url_options = {
          protocols: ["http", "https", "ftp"],
          require_tld: true,
          require_protocol: false,
          require_host: true,
          require_port: false,
          require_valid_protocol: true,
          allow_underscores: false,
          allow_trailing_dot: false,
          allow_protocol_relative_urls: false,
          allow_fragments: true,
          allow_query_components: true,
          validate_length: true
        };
        var wrapped_ipv6 = /^\[([^\]]+)\](?::([0-9]+))?$/;
        function isRegExp(obj) {
          return Object.prototype.toString.call(obj) === "[object RegExp]";
        }
        function checkHost(host, matches) {
          for (var i22 = 0; i22 < matches.length; i22++) {
            var match5 = matches[i22];
            if (host === match5 || isRegExp(match5) && match5.test(host)) {
              return true;
            }
          }
          return false;
        }
        function isURL(url, options) {
          (0, _assertString.default)(url);
          if (!url || /[\s<>]/.test(url)) {
            return false;
          }
          if (url.indexOf("mailto:") === 0) {
            return false;
          }
          options = (0, _merge.default)(options, default_url_options);
          if (options.validate_length && url.length >= 2083) {
            return false;
          }
          if (!options.allow_fragments && url.includes("#")) {
            return false;
          }
          if (!options.allow_query_components && (url.includes("?") || url.includes("&"))) {
            return false;
          }
          var protocol, auth, host, hostname, port, port_str, split, ipv6;
          split = url.split("#");
          url = split.shift();
          split = url.split("?");
          url = split.shift();
          split = url.split("://");
          if (split.length > 1) {
            protocol = split.shift().toLowerCase();
            if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
              return false;
            }
          } else if (options.require_protocol) {
            return false;
          } else if (url.substr(0, 2) === "//") {
            if (!options.allow_protocol_relative_urls) {
              return false;
            }
            split[0] = url.substr(2);
          }
          url = split.join("://");
          if (url === "") {
            return false;
          }
          split = url.split("/");
          url = split.shift();
          if (url === "" && !options.require_host) {
            return true;
          }
          split = url.split("@");
          if (split.length > 1) {
            if (options.disallow_auth) {
              return false;
            }
            if (split[0] === "") {
              return false;
            }
            auth = split.shift();
            if (auth.indexOf(":") >= 0 && auth.split(":").length > 2) {
              return false;
            }
            var _auth$split = auth.split(":"), _auth$split2 = _slicedToArray2(_auth$split, 2), user = _auth$split2[0], password = _auth$split2[1];
            if (user === "" && password === "") {
              return false;
            }
          }
          hostname = split.join("@");
          port_str = null;
          ipv6 = null;
          var ipv6_match = hostname.match(wrapped_ipv6);
          if (ipv6_match) {
            host = "";
            ipv6 = ipv6_match[1];
            port_str = ipv6_match[2] || null;
          } else {
            split = hostname.split(":");
            host = split.shift();
            if (split.length) {
              port_str = split.join(":");
            }
          }
          if (port_str !== null && port_str.length > 0) {
            port = parseInt(port_str, 10);
            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
              return false;
            }
          } else if (options.require_port) {
            return false;
          }
          if (options.host_whitelist) {
            return checkHost(host, options.host_whitelist);
          }
          if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {
            return false;
          }
          host = host || ipv6;
          if (options.host_blacklist && checkHost(host, options.host_blacklist)) {
            return false;
          }
          return true;
        }
        module2.exports = exports3.default;
        module2.exports.default = exports3.default;
      });
      unwrapExports$1(isURL_1);
      var reactDomServer_browser_production_min = {};
      var l10 = objectAssign, m9 = react.exports;
      function p$1(a22) {
        for (var b22 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a22, c22 = 1; c22 < arguments.length; c22++)
          b22 += "&args[]=" + encodeURIComponent(arguments[c22]);
        return "Minified React error #" + a22 + "; visit " + b22 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      }
      var q6 = 60106, r10 = 60107, u8 = 60108, z5 = 60114, B4 = 60109, aa = 60110, ba = 60112, D8 = 60113, ca = 60120, da = 60115, ea = 60116, fa = 60121, ha = 60117, ia = 60119, ja = 60129, ka = 60131;
      if (typeof Symbol === "function" && Symbol.for) {
        var E6 = Symbol.for;
        q6 = E6("react.portal");
        r10 = E6("react.fragment");
        u8 = E6("react.strict_mode");
        z5 = E6("react.profiler");
        B4 = E6("react.provider");
        aa = E6("react.context");
        ba = E6("react.forward_ref");
        D8 = E6("react.suspense");
        ca = E6("react.suspense_list");
        da = E6("react.memo");
        ea = E6("react.lazy");
        fa = E6("react.block");
        ha = E6("react.fundamental");
        ia = E6("react.scope");
        ja = E6("react.debug_trace_mode");
        ka = E6("react.legacy_hidden");
      }
      function F9(a22) {
        if (a22 == null)
          return null;
        if (typeof a22 === "function")
          return a22.displayName || a22.name || null;
        if (typeof a22 === "string")
          return a22;
        switch (a22) {
          case r10:
            return "Fragment";
          case q6:
            return "Portal";
          case z5:
            return "Profiler";
          case u8:
            return "StrictMode";
          case D8:
            return "Suspense";
          case ca:
            return "SuspenseList";
        }
        if (typeof a22 === "object")
          switch (a22.$$typeof) {
            case aa:
              return (a22.displayName || "Context") + ".Consumer";
            case B4:
              return (a22._context.displayName || "Context") + ".Provider";
            case ba:
              var b22 = a22.render;
              b22 = b22.displayName || b22.name || "";
              return a22.displayName || (b22 !== "" ? "ForwardRef(" + b22 + ")" : "ForwardRef");
            case da:
              return F9(a22.type);
            case fa:
              return F9(a22._render);
            case ea:
              b22 = a22._payload;
              a22 = a22._init;
              try {
                return F9(a22(b22));
              } catch (c22) {
              }
          }
        return null;
      }
      var la = m9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, ma = {};
      function I8(a22, b22) {
        for (var c22 = a22._threadCount | 0; c22 <= b22; c22++)
          a22[c22] = a22._currentValue2, a22._threadCount = c22 + 1;
      }
      function na(a22, b22, c22, d22) {
        if (d22 && (d22 = a22.contextType, typeof d22 === "object" && d22 !== null))
          return I8(d22, c22), d22[c22];
        if (a22 = a22.contextTypes) {
          c22 = {};
          for (var f22 in a22)
            c22[f22] = b22[f22];
          b22 = c22;
        } else
          b22 = ma;
        return b22;
      }
      for (var J4 = new Uint16Array(16), K4 = 0; 15 > K4; K4++)
        J4[K4] = K4 + 1;
      J4[15] = 0;
      var oa = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, pa = Object.prototype.hasOwnProperty, qa = {}, ra = {};
      function sa(a22) {
        if (pa.call(ra, a22))
          return true;
        if (pa.call(qa, a22))
          return false;
        if (oa.test(a22))
          return ra[a22] = true;
        qa[a22] = true;
        return false;
      }
      function ta(a22, b22, c22, d22) {
        if (c22 !== null && c22.type === 0)
          return false;
        switch (typeof b22) {
          case "function":
          case "symbol":
            return true;
          case "boolean":
            if (d22)
              return false;
            if (c22 !== null)
              return !c22.acceptsBooleans;
            a22 = a22.toLowerCase().slice(0, 5);
            return a22 !== "data-" && a22 !== "aria-";
          default:
            return false;
        }
      }
      function ua(a22, b22, c22, d22) {
        if (b22 === null || typeof b22 === "undefined" || ta(a22, b22, c22, d22))
          return true;
        if (d22)
          return false;
        if (c22 !== null)
          switch (c22.type) {
            case 3:
              return !b22;
            case 4:
              return b22 === false;
            case 5:
              return isNaN(b22);
            case 6:
              return isNaN(b22) || 1 > b22;
          }
        return false;
      }
      function M9(a22, b22, c22, d22, f22, h22, t22) {
        this.acceptsBooleans = b22 === 2 || b22 === 3 || b22 === 4;
        this.attributeName = d22;
        this.attributeNamespace = f22;
        this.mustUseProperty = c22;
        this.propertyName = a22;
        this.type = b22;
        this.sanitizeURL = h22;
        this.removeEmptyString = t22;
      }
      var N5 = {};
      "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a22) {
        N5[a22] = new M9(a22, 0, false, a22, null, false, false);
      });
      [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a22) {
        var b22 = a22[0];
        N5[b22] = new M9(b22, 1, false, a22[1], null, false, false);
      });
      ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a22) {
        N5[a22] = new M9(a22, 2, false, a22.toLowerCase(), null, false, false);
      });
      ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a22) {
        N5[a22] = new M9(a22, 2, false, a22, null, false, false);
      });
      "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a22) {
        N5[a22] = new M9(a22, 3, false, a22.toLowerCase(), null, false, false);
      });
      ["checked", "multiple", "muted", "selected"].forEach(function(a22) {
        N5[a22] = new M9(a22, 3, true, a22, null, false, false);
      });
      ["capture", "download"].forEach(function(a22) {
        N5[a22] = new M9(a22, 4, false, a22, null, false, false);
      });
      ["cols", "rows", "size", "span"].forEach(function(a22) {
        N5[a22] = new M9(a22, 6, false, a22, null, false, false);
      });
      ["rowSpan", "start"].forEach(function(a22) {
        N5[a22] = new M9(a22, 5, false, a22.toLowerCase(), null, false, false);
      });
      var va = /[\-:]([a-z])/g;
      function wa(a22) {
        return a22[1].toUpperCase();
      }
      "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a22) {
        var b22 = a22.replace(va, wa);
        N5[b22] = new M9(b22, 1, false, a22, null, false, false);
      });
      "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a22) {
        var b22 = a22.replace(va, wa);
        N5[b22] = new M9(b22, 1, false, a22, "http://www.w3.org/1999/xlink", false, false);
      });
      ["xml:base", "xml:lang", "xml:space"].forEach(function(a22) {
        var b22 = a22.replace(va, wa);
        N5[b22] = new M9(b22, 1, false, a22, "http://www.w3.org/XML/1998/namespace", false, false);
      });
      ["tabIndex", "crossOrigin"].forEach(function(a22) {
        N5[a22] = new M9(a22, 1, false, a22.toLowerCase(), null, false, false);
      });
      N5.xlinkHref = new M9("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
      ["src", "href", "action", "formAction"].forEach(function(a22) {
        N5[a22] = new M9(a22, 1, false, a22.toLowerCase(), null, true, true);
      });
      var xa = /["'&<>]/;
      function O4(a22) {
        if (typeof a22 === "boolean" || typeof a22 === "number")
          return "" + a22;
        a22 = "" + a22;
        var b22 = xa.exec(a22);
        if (b22) {
          var c22 = "", d22, f22 = 0;
          for (d22 = b22.index; d22 < a22.length; d22++) {
            switch (a22.charCodeAt(d22)) {
              case 34:
                b22 = "&quot;";
                break;
              case 38:
                b22 = "&amp;";
                break;
              case 39:
                b22 = "&#x27;";
                break;
              case 60:
                b22 = "&lt;";
                break;
              case 62:
                b22 = "&gt;";
                break;
              default:
                continue;
            }
            f22 !== d22 && (c22 += a22.substring(f22, d22));
            f22 = d22 + 1;
            c22 += b22;
          }
          a22 = f22 !== d22 ? c22 + a22.substring(f22, d22) : c22;
        }
        return a22;
      }
      function ya(a22, b22) {
        var c22 = N5.hasOwnProperty(a22) ? N5[a22] : null;
        var d22;
        if (d22 = a22 !== "style")
          d22 = c22 !== null ? c22.type === 0 : !(2 < a22.length) || a22[0] !== "o" && a22[0] !== "O" || a22[1] !== "n" && a22[1] !== "N" ? false : true;
        if (d22 || ua(a22, b22, c22, false))
          return "";
        if (c22 !== null) {
          a22 = c22.attributeName;
          d22 = c22.type;
          if (d22 === 3 || d22 === 4 && b22 === true)
            return a22 + '=""';
          c22.sanitizeURL && (b22 = "" + b22);
          return a22 + '="' + (O4(b22) + '"');
        }
        return sa(a22) ? a22 + '="' + (O4(b22) + '"') : "";
      }
      function za(a22, b22) {
        return a22 === b22 && (a22 !== 0 || 1 / a22 === 1 / b22) || a22 !== a22 && b22 !== b22;
      }
      var Aa = typeof Object.is === "function" ? Object.is : za, P5 = null, Q6 = null, R3 = null, S10 = false, T7 = false, U5 = null, V6 = 0;
      function W() {
        if (P5 === null)
          throw Error(p$1(321));
        return P5;
      }
      function Ba() {
        if (0 < V6)
          throw Error(p$1(312));
        return { memoizedState: null, queue: null, next: null };
      }
      function Ca() {
        R3 === null ? Q6 === null ? (S10 = false, Q6 = R3 = Ba()) : (S10 = true, R3 = Q6) : R3.next === null ? (S10 = false, R3 = R3.next = Ba()) : (S10 = true, R3 = R3.next);
        return R3;
      }
      function Da(a22, b22, c22, d22) {
        for (; T7; )
          T7 = false, V6 += 1, R3 = null, c22 = a22(b22, d22);
        Ea();
        return c22;
      }
      function Ea() {
        P5 = null;
        T7 = false;
        Q6 = null;
        V6 = 0;
        R3 = U5 = null;
      }
      function Fa(a22, b22) {
        return typeof b22 === "function" ? b22(a22) : b22;
      }
      function Ga(a22, b22, c22) {
        P5 = W();
        R3 = Ca();
        if (S10) {
          var d22 = R3.queue;
          b22 = d22.dispatch;
          if (U5 !== null && (c22 = U5.get(d22), c22 !== void 0)) {
            U5.delete(d22);
            d22 = R3.memoizedState;
            do
              d22 = a22(d22, c22.action), c22 = c22.next;
            while (c22 !== null);
            R3.memoizedState = d22;
            return [d22, b22];
          }
          return [R3.memoizedState, b22];
        }
        a22 = a22 === Fa ? typeof b22 === "function" ? b22() : b22 : c22 !== void 0 ? c22(b22) : b22;
        R3.memoizedState = a22;
        a22 = R3.queue = { last: null, dispatch: null };
        a22 = a22.dispatch = Ha.bind(null, P5, a22);
        return [R3.memoizedState, a22];
      }
      function Ia(a22, b22) {
        P5 = W();
        R3 = Ca();
        b22 = b22 === void 0 ? null : b22;
        if (R3 !== null) {
          var c22 = R3.memoizedState;
          if (c22 !== null && b22 !== null) {
            var d22 = c22[1];
            a:
              if (d22 === null)
                d22 = false;
              else {
                for (var f22 = 0; f22 < d22.length && f22 < b22.length; f22++)
                  if (!Aa(b22[f22], d22[f22])) {
                    d22 = false;
                    break a;
                  }
                d22 = true;
              }
            if (d22)
              return c22[0];
          }
        }
        a22 = a22();
        R3.memoizedState = [a22, b22];
        return a22;
      }
      function Ha(a22, b22, c22) {
        if (!(25 > V6))
          throw Error(p$1(301));
        if (a22 === P5)
          if (T7 = true, a22 = { action: c22, next: null }, U5 === null && (U5 = /* @__PURE__ */ new Map()), c22 = U5.get(b22), c22 === void 0)
            U5.set(b22, a22);
          else {
            for (b22 = c22; b22.next !== null; )
              b22 = b22.next;
            b22.next = a22;
          }
      }
      function Ja() {
      }
      var X9 = null, Ka = { readContext: function(a22) {
        var b22 = X9.threadID;
        I8(a22, b22);
        return a22[b22];
      }, useContext: function(a22) {
        W();
        var b22 = X9.threadID;
        I8(a22, b22);
        return a22[b22];
      }, useMemo: Ia, useReducer: Ga, useRef: function(a22) {
        P5 = W();
        R3 = Ca();
        var b22 = R3.memoizedState;
        return b22 === null ? (a22 = { current: a22 }, R3.memoizedState = a22) : b22;
      }, useState: function(a22) {
        return Ga(Fa, a22);
      }, useLayoutEffect: function() {
      }, useCallback: function(a22, b22) {
        return Ia(function() {
          return a22;
        }, b22);
      }, useImperativeHandle: Ja, useEffect: Ja, useDebugValue: Ja, useDeferredValue: function(a22) {
        W();
        return a22;
      }, useTransition: function() {
        W();
        return [function(a22) {
          a22();
        }, false];
      }, useOpaqueIdentifier: function() {
        return (X9.identifierPrefix || "") + "R:" + (X9.uniqueID++).toString(36);
      }, useMutableSource: function(a22, b22) {
        W();
        return b22(a22._source);
      } }, La = { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" };
      function Ma(a22) {
        switch (a22) {
          case "svg":
            return "http://www.w3.org/2000/svg";
          case "math":
            return "http://www.w3.org/1998/Math/MathML";
          default:
            return "http://www.w3.org/1999/xhtml";
        }
      }
      var Na = { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true }, Oa = l10({ menuitem: true }, Na), Y7 = {
        animationIterationCount: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
      }, Pa = ["Webkit", "ms", "Moz", "O"];
      Object.keys(Y7).forEach(function(a22) {
        Pa.forEach(function(b22) {
          b22 = b22 + a22.charAt(0).toUpperCase() + a22.substring(1);
          Y7[b22] = Y7[a22];
        });
      });
      var Qa = /([A-Z])/g, Ra = /^ms-/, Z6 = m9.Children.toArray, Sa = la.ReactCurrentDispatcher, Ta = { listing: true, pre: true, textarea: true }, Ua = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Va = {}, Wa = {};
      function Xa(a22) {
        if (a22 === void 0 || a22 === null)
          return a22;
        var b22 = "";
        m9.Children.forEach(a22, function(a32) {
          a32 != null && (b22 += a32);
        });
        return b22;
      }
      var Ya = Object.prototype.hasOwnProperty, Za = { children: null, dangerouslySetInnerHTML: null, suppressContentEditableWarning: null, suppressHydrationWarning: null };
      function $a(a22, b22) {
        if (a22 === void 0)
          throw Error(p$1(152, F9(b22) || "Component"));
      }
      function ab(a22, b22, c22) {
        function d22(d32, h32) {
          var e22 = h32.prototype && h32.prototype.isReactComponent, f32 = na(h32, b22, c22, e22), t22 = [], g22 = false, n22 = { isMounted: function() {
            return false;
          }, enqueueForceUpdate: function() {
            if (t22 === null)
              return null;
          }, enqueueReplaceState: function(a32, c32) {
            g22 = true;
            t22 = [c32];
          }, enqueueSetState: function(a32, c32) {
            if (t22 === null)
              return null;
            t22.push(c32);
          } };
          if (e22) {
            if (e22 = new h32(d32.props, f32, n22), typeof h32.getDerivedStateFromProps === "function") {
              var k22 = h32.getDerivedStateFromProps.call(null, d32.props, e22.state);
              k22 != null && (e22.state = l10({}, e22.state, k22));
            }
          } else if (P5 = {}, e22 = h32(d32.props, f32, n22), e22 = Da(h32, d32.props, e22, f32), e22 == null || e22.render == null) {
            a22 = e22;
            $a(a22, h32);
            return;
          }
          e22.props = d32.props;
          e22.context = f32;
          e22.updater = n22;
          n22 = e22.state;
          n22 === void 0 && (e22.state = n22 = null);
          if (typeof e22.UNSAFE_componentWillMount === "function" || typeof e22.componentWillMount === "function")
            if (typeof e22.componentWillMount === "function" && typeof h32.getDerivedStateFromProps !== "function" && e22.componentWillMount(), typeof e22.UNSAFE_componentWillMount === "function" && typeof h32.getDerivedStateFromProps !== "function" && e22.UNSAFE_componentWillMount(), t22.length) {
              n22 = t22;
              var v22 = g22;
              t22 = null;
              g22 = false;
              if (v22 && n22.length === 1)
                e22.state = n22[0];
              else {
                k22 = v22 ? n22[0] : e22.state;
                var H22 = true;
                for (v22 = v22 ? 1 : 0; v22 < n22.length; v22++) {
                  var x22 = n22[v22];
                  x22 = typeof x22 === "function" ? x22.call(e22, k22, d32.props, f32) : x22;
                  x22 != null && (H22 ? (H22 = false, k22 = l10({}, k22, x22)) : l10(k22, x22));
                }
                e22.state = k22;
              }
            } else
              t22 = null;
          a22 = e22.render();
          $a(a22, h32);
          if (typeof e22.getChildContext === "function" && (d32 = h32.childContextTypes, typeof d32 === "object")) {
            var y22 = e22.getChildContext();
            for (var A22 in y22)
              if (!(A22 in d32))
                throw Error(p$1(108, F9(h32) || "Unknown", A22));
          }
          y22 && (b22 = l10({}, b22, y22));
        }
        for (; m9.isValidElement(a22); ) {
          var f22 = a22, h22 = f22.type;
          if (typeof h22 !== "function")
            break;
          d22(f22, h22);
        }
        return { child: a22, context: b22 };
      }
      var bb = function() {
        function a22(a32, b32, f22) {
          m9.isValidElement(a32) ? a32.type !== r10 ? a32 = [a32] : (a32 = a32.props.children, a32 = m9.isValidElement(a32) ? [a32] : Z6(a32)) : a32 = Z6(a32);
          a32 = { type: null, domNamespace: La.html, children: a32, childIndex: 0, context: ma, footer: "" };
          var c22 = J4[0];
          if (c22 === 0) {
            var d22 = J4;
            c22 = d22.length;
            var g22 = 2 * c22;
            if (!(65536 >= g22))
              throw Error(p$1(304));
            var e22 = new Uint16Array(g22);
            e22.set(d22);
            J4 = e22;
            J4[0] = c22 + 1;
            for (d22 = c22; d22 < g22 - 1; d22++)
              J4[d22] = d22 + 1;
            J4[g22 - 1] = 0;
          } else
            J4[0] = J4[c22];
          this.threadID = c22;
          this.stack = [a32];
          this.exhausted = false;
          this.currentSelectValue = null;
          this.previousWasTextNode = false;
          this.makeStaticMarkup = b32;
          this.suspenseDepth = 0;
          this.contextIndex = -1;
          this.contextStack = [];
          this.contextValueStack = [];
          this.uniqueID = 0;
          this.identifierPrefix = f22 && f22.identifierPrefix || "";
        }
        var b22 = a22.prototype;
        b22.destroy = function() {
          if (!this.exhausted) {
            this.exhausted = true;
            this.clearProviders();
            var a32 = this.threadID;
            J4[a32] = J4[0];
            J4[0] = a32;
          }
        };
        b22.pushProvider = function(a32) {
          var b32 = ++this.contextIndex, c22 = a32.type._context, h22 = this.threadID;
          I8(c22, h22);
          var t22 = c22[h22];
          this.contextStack[b32] = c22;
          this.contextValueStack[b32] = t22;
          c22[h22] = a32.props.value;
        };
        b22.popProvider = function() {
          var a32 = this.contextIndex, b32 = this.contextStack[a32], f22 = this.contextValueStack[a32];
          this.contextStack[a32] = null;
          this.contextValueStack[a32] = null;
          this.contextIndex--;
          b32[this.threadID] = f22;
        };
        b22.clearProviders = function() {
          for (var a32 = this.contextIndex; 0 <= a32; a32--)
            this.contextStack[a32][this.threadID] = this.contextValueStack[a32];
        };
        b22.read = function(a32) {
          if (this.exhausted)
            return null;
          var b32 = X9;
          X9 = this;
          var c22 = Sa.current;
          Sa.current = Ka;
          try {
            for (var h22 = [""], t22 = false; h22[0].length < a32; ) {
              if (this.stack.length === 0) {
                this.exhausted = true;
                var g22 = this.threadID;
                J4[g22] = J4[0];
                J4[0] = g22;
                break;
              }
              var e22 = this.stack[this.stack.length - 1];
              if (t22 || e22.childIndex >= e22.children.length) {
                var L22 = e22.footer;
                L22 !== "" && (this.previousWasTextNode = false);
                this.stack.pop();
                if (e22.type === "select")
                  this.currentSelectValue = null;
                else if (e22.type != null && e22.type.type != null && e22.type.type.$$typeof === B4)
                  this.popProvider(e22.type);
                else if (e22.type === D8) {
                  this.suspenseDepth--;
                  var G22 = h22.pop();
                  if (t22) {
                    t22 = false;
                    var C22 = e22.fallbackFrame;
                    if (!C22)
                      throw Error(p$1(303));
                    this.stack.push(C22);
                    h22[this.suspenseDepth] += "<!--$!-->";
                    continue;
                  } else
                    h22[this.suspenseDepth] += G22;
                }
                h22[this.suspenseDepth] += L22;
              } else {
                var n22 = e22.children[e22.childIndex++], k22 = "";
                try {
                  k22 += this.render(n22, e22.context, e22.domNamespace);
                } catch (v22) {
                  if (v22 != null && typeof v22.then === "function")
                    throw Error(p$1(294));
                  throw v22;
                } finally {
                }
                h22.length <= this.suspenseDepth && h22.push("");
                h22[this.suspenseDepth] += k22;
              }
            }
            return h22[0];
          } finally {
            Sa.current = c22, X9 = b32, Ea();
          }
        };
        b22.render = function(a32, b32, f22) {
          if (typeof a32 === "string" || typeof a32 === "number") {
            f22 = "" + a32;
            if (f22 === "")
              return "";
            if (this.makeStaticMarkup)
              return O4(f22);
            if (this.previousWasTextNode)
              return "<!-- -->" + O4(f22);
            this.previousWasTextNode = true;
            return O4(f22);
          }
          b32 = ab(a32, b32, this.threadID);
          a32 = b32.child;
          b32 = b32.context;
          if (a32 === null || a32 === false)
            return "";
          if (!m9.isValidElement(a32)) {
            if (a32 != null && a32.$$typeof != null) {
              f22 = a32.$$typeof;
              if (f22 === q6)
                throw Error(p$1(257));
              throw Error(p$1(258, f22.toString()));
            }
            a32 = Z6(a32);
            this.stack.push({ type: null, domNamespace: f22, children: a32, childIndex: 0, context: b32, footer: "" });
            return "";
          }
          var c22 = a32.type;
          if (typeof c22 === "string")
            return this.renderDOM(a32, b32, f22);
          switch (c22) {
            case ka:
            case ja:
            case u8:
            case z5:
            case ca:
            case r10:
              return a32 = Z6(a32.props.children), this.stack.push({
                type: null,
                domNamespace: f22,
                children: a32,
                childIndex: 0,
                context: b32,
                footer: ""
              }), "";
            case D8:
              throw Error(p$1(294));
            case ia:
              throw Error(p$1(343));
          }
          if (typeof c22 === "object" && c22 !== null)
            switch (c22.$$typeof) {
              case ba:
                P5 = {};
                var d22 = c22.render(a32.props, a32.ref);
                d22 = Da(c22.render, a32.props, d22, a32.ref);
                d22 = Z6(d22);
                this.stack.push({ type: null, domNamespace: f22, children: d22, childIndex: 0, context: b32, footer: "" });
                return "";
              case da:
                return a32 = [m9.createElement(c22.type, l10({ ref: a32.ref }, a32.props))], this.stack.push({ type: null, domNamespace: f22, children: a32, childIndex: 0, context: b32, footer: "" }), "";
              case B4:
                return c22 = Z6(a32.props.children), f22 = { type: a32, domNamespace: f22, children: c22, childIndex: 0, context: b32, footer: "" }, this.pushProvider(a32), this.stack.push(f22), "";
              case aa:
                c22 = a32.type;
                d22 = a32.props;
                var g22 = this.threadID;
                I8(c22, g22);
                c22 = Z6(d22.children(c22[g22]));
                this.stack.push({ type: a32, domNamespace: f22, children: c22, childIndex: 0, context: b32, footer: "" });
                return "";
              case ha:
                throw Error(p$1(338));
              case ea:
                return c22 = a32.type, d22 = c22._init, c22 = d22(c22._payload), a32 = [m9.createElement(c22, l10({ ref: a32.ref }, a32.props))], this.stack.push({
                  type: null,
                  domNamespace: f22,
                  children: a32,
                  childIndex: 0,
                  context: b32,
                  footer: ""
                }), "";
            }
          throw Error(p$1(130, c22 == null ? c22 : typeof c22, ""));
        };
        b22.renderDOM = function(a32, b32, f22) {
          var c22 = a32.type.toLowerCase();
          if (!Va.hasOwnProperty(c22)) {
            if (!Ua.test(c22))
              throw Error(p$1(65, c22));
            Va[c22] = true;
          }
          var d22 = a32.props;
          if (c22 === "input")
            d22 = l10({ type: void 0 }, d22, { defaultChecked: void 0, defaultValue: void 0, value: d22.value != null ? d22.value : d22.defaultValue, checked: d22.checked != null ? d22.checked : d22.defaultChecked });
          else if (c22 === "textarea") {
            var g22 = d22.value;
            if (g22 == null) {
              g22 = d22.defaultValue;
              var e22 = d22.children;
              if (e22 != null) {
                if (g22 != null)
                  throw Error(p$1(92));
                if (Array.isArray(e22)) {
                  if (!(1 >= e22.length))
                    throw Error(p$1(93));
                  e22 = e22[0];
                }
                g22 = "" + e22;
              }
              g22 == null && (g22 = "");
            }
            d22 = l10({}, d22, { value: void 0, children: "" + g22 });
          } else if (c22 === "select")
            this.currentSelectValue = d22.value != null ? d22.value : d22.defaultValue, d22 = l10({}, d22, { value: void 0 });
          else if (c22 === "option") {
            e22 = this.currentSelectValue;
            var L22 = Xa(d22.children);
            if (e22 != null) {
              var G22 = d22.value != null ? d22.value + "" : L22;
              g22 = false;
              if (Array.isArray(e22))
                for (var C22 = 0; C22 < e22.length; C22++) {
                  if ("" + e22[C22] === G22) {
                    g22 = true;
                    break;
                  }
                }
              else
                g22 = "" + e22 === G22;
              d22 = l10({ selected: void 0, children: void 0 }, d22, { selected: g22, children: L22 });
            }
          }
          if (g22 = d22) {
            if (Oa[c22] && (g22.children != null || g22.dangerouslySetInnerHTML != null))
              throw Error(p$1(137, c22));
            if (g22.dangerouslySetInnerHTML != null) {
              if (g22.children != null)
                throw Error(p$1(60));
              if (!(typeof g22.dangerouslySetInnerHTML === "object" && "__html" in g22.dangerouslySetInnerHTML))
                throw Error(p$1(61));
            }
            if (g22.style != null && typeof g22.style !== "object")
              throw Error(p$1(62));
          }
          g22 = d22;
          e22 = this.makeStaticMarkup;
          L22 = this.stack.length === 1;
          G22 = "<" + a32.type;
          b:
            if (c22.indexOf("-") === -1)
              C22 = typeof g22.is === "string";
            else
              switch (c22) {
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                  C22 = false;
                  break b;
                default:
                  C22 = true;
              }
          for (w22 in g22)
            if (Ya.call(g22, w22)) {
              var n22 = g22[w22];
              if (n22 != null) {
                if (w22 === "style") {
                  var k22 = void 0, v22 = "", H22 = "";
                  for (k22 in n22)
                    if (n22.hasOwnProperty(k22)) {
                      var x22 = k22.indexOf("--") === 0, y22 = n22[k22];
                      if (y22 != null) {
                        if (x22)
                          var A22 = k22;
                        else if (A22 = k22, Wa.hasOwnProperty(A22))
                          A22 = Wa[A22];
                        else {
                          var cb2 = A22.replace(Qa, "-$1").toLowerCase().replace(Ra, "-ms-");
                          A22 = Wa[A22] = cb2;
                        }
                        v22 += H22 + A22 + ":";
                        H22 = k22;
                        x22 = y22 == null || typeof y22 === "boolean" || y22 === "" ? "" : x22 || typeof y22 !== "number" || y22 === 0 || Y7.hasOwnProperty(H22) && Y7[H22] ? ("" + y22).trim() : y22 + "px";
                        v22 += x22;
                        H22 = ";";
                      }
                    }
                  n22 = v22 || null;
                }
                k22 = null;
                C22 ? Za.hasOwnProperty(w22) || (k22 = w22, k22 = sa(k22) && n22 != null ? k22 + '="' + (O4(n22) + '"') : "") : k22 = ya(w22, n22);
                k22 && (G22 += " " + k22);
              }
            }
          e22 || L22 && (G22 += ' data-reactroot=""');
          var w22 = G22;
          g22 = "";
          Na.hasOwnProperty(c22) ? w22 += "/>" : (w22 += ">", g22 = "</" + a32.type + ">");
          a: {
            e22 = d22.dangerouslySetInnerHTML;
            if (e22 != null) {
              if (e22.__html != null) {
                e22 = e22.__html;
                break a;
              }
            } else if (e22 = d22.children, typeof e22 === "string" || typeof e22 === "number") {
              e22 = O4(e22);
              break a;
            }
            e22 = null;
          }
          e22 != null ? (d22 = [], Ta.hasOwnProperty(c22) && e22.charAt(0) === "\n" && (w22 += "\n"), w22 += e22) : d22 = Z6(d22.children);
          a32 = a32.type;
          f22 = f22 == null || f22 === "http://www.w3.org/1999/xhtml" ? Ma(a32) : f22 === "http://www.w3.org/2000/svg" && a32 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : f22;
          this.stack.push({ domNamespace: f22, type: c22, children: d22, childIndex: 0, context: b32, footer: g22 });
          this.previousWasTextNode = false;
          return w22;
        };
        return a22;
      }();
      reactDomServer_browser_production_min.renderToNodeStream = function() {
        throw Error(p$1(207));
      };
      reactDomServer_browser_production_min.renderToStaticMarkup = function(a22, b22) {
        a22 = new bb(a22, true, b22);
        try {
          return a22.read(Infinity);
        } finally {
          a22.destroy();
        }
      };
      reactDomServer_browser_production_min.renderToStaticNodeStream = function() {
        throw Error(p$1(208));
      };
      reactDomServer_browser_production_min.renderToString = function(a22, b22) {
        a22 = new bb(a22, false, b22);
        try {
          return a22.read(Infinity);
        } finally {
          a22.destroy();
        }
      };
      reactDomServer_browser_production_min.version = "17.0.2";
      var assign$3 = Object.assign;
      var assign_1 = assign$3;
      function normalizeIdentifier$2(value) {
        return value.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
      }
      var normalizeIdentifier_1 = normalizeIdentifier$2;
      var fromCharCode$2 = String.fromCharCode;
      var fromCharCode_1 = fromCharCode$2;
      var content$2 = {};
      function markdownLineEnding$i(code) {
        return code < -2;
      }
      var markdownLineEnding_1 = markdownLineEnding$i;
      function markdownSpace$9(code) {
        return code === -2 || code === -1 || code === 32;
      }
      var markdownSpace_1 = markdownSpace$9;
      var markdownSpace$8 = markdownSpace_1;
      function spaceFactory(effects, ok2, type, max2) {
        var limit = max2 ? max2 - 1 : Infinity;
        var size = 0;
        return start;
        function start(code) {
          if (markdownSpace$8(code)) {
            effects.enter(type);
            return prefix(code);
          }
          return ok2(code);
        }
        function prefix(code) {
          if (markdownSpace$8(code) && size++ < limit) {
            effects.consume(code);
            return prefix;
          }
          effects.exit(type);
          return ok2(code);
        }
      }
      var factorySpace$h = spaceFactory;
      Object.defineProperty(content$2, "__esModule", { value: true });
      var markdownLineEnding$h = markdownLineEnding_1;
      var factorySpace$g = factorySpace$h;
      var tokenize$2 = initializeContent;
      function initializeContent(effects) {
        var contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);
        var previous2;
        return contentStart;
        function afterContentStartConstruct(code) {
          if (code === null) {
            effects.consume(code);
            return;
          }
          effects.enter("lineEnding");
          effects.consume(code);
          effects.exit("lineEnding");
          return factorySpace$g(effects, contentStart, "linePrefix");
        }
        function paragraphInitial(code) {
          effects.enter("paragraph");
          return lineStart(code);
        }
        function lineStart(code) {
          var token2 = effects.enter("chunkText", {
            contentType: "text",
            previous: previous2
          });
          if (previous2) {
            previous2.next = token2;
          }
          previous2 = token2;
          return data(code);
        }
        function data(code) {
          if (code === null) {
            effects.exit("chunkText");
            effects.exit("paragraph");
            effects.consume(code);
            return;
          }
          if (markdownLineEnding$h(code)) {
            effects.consume(code);
            effects.exit("chunkText");
            return lineStart;
          }
          effects.consume(code);
          return data;
        }
      }
      content$2.tokenize = tokenize$2;
      var document$2 = {};
      var markdownLineEnding$g = markdownLineEnding_1;
      var factorySpace$f = factorySpace$h;
      var partialBlankLine$4 = {
        tokenize: tokenizePartialBlankLine,
        partial: true
      };
      function tokenizePartialBlankLine(effects, ok2, nok) {
        return factorySpace$f(effects, afterWhitespace, "linePrefix");
        function afterWhitespace(code) {
          return code === null || markdownLineEnding$g(code) ? ok2(code) : nok(code);
        }
      }
      var partialBlankLine_1 = partialBlankLine$4;
      Object.defineProperty(document$2, "__esModule", { value: true });
      var markdownLineEnding$f = markdownLineEnding_1;
      var factorySpace$e = factorySpace$h;
      var partialBlankLine$3 = partialBlankLine_1;
      var tokenize$1 = initializeDocument;
      var containerConstruct = {
        tokenize: tokenizeContainer
      };
      var lazyFlowConstruct = {
        tokenize: tokenizeLazyFlow
      };
      function initializeDocument(effects) {
        var self2 = this;
        var stack = [];
        var continued = 0;
        var inspectConstruct = {
          tokenize: tokenizeInspect,
          partial: true
        };
        var inspectResult;
        var childFlow;
        var childToken;
        return start;
        function start(code) {
          if (continued < stack.length) {
            self2.containerState = stack[continued][1];
            return effects.attempt(stack[continued][0].continuation, documentContinue, documentContinued)(code);
          }
          return documentContinued(code);
        }
        function documentContinue(code) {
          continued++;
          return start(code);
        }
        function documentContinued(code) {
          if (inspectResult && inspectResult.flowContinue) {
            return flowStart(code);
          }
          self2.interrupt = childFlow && childFlow.currentConstruct && childFlow.currentConstruct.interruptible;
          self2.containerState = {};
          return effects.attempt(containerConstruct, containerContinue, flowStart)(code);
        }
        function containerContinue(code) {
          stack.push([self2.currentConstruct, self2.containerState]);
          self2.containerState = void 0;
          return documentContinued(code);
        }
        function flowStart(code) {
          if (code === null) {
            exitContainers(0, true);
            effects.consume(code);
            return;
          }
          childFlow = childFlow || self2.parser.flow(self2.now());
          effects.enter("chunkFlow", {
            contentType: "flow",
            previous: childToken,
            _tokenizer: childFlow
          });
          return flowContinue(code);
        }
        function flowContinue(code) {
          if (code === null) {
            continueFlow(effects.exit("chunkFlow"));
            return flowStart(code);
          }
          if (markdownLineEnding$f(code)) {
            effects.consume(code);
            continueFlow(effects.exit("chunkFlow"));
            return effects.check(inspectConstruct, documentAfterPeek);
          }
          effects.consume(code);
          return flowContinue;
        }
        function documentAfterPeek(code) {
          exitContainers(inspectResult.continued, inspectResult && inspectResult.flowEnd);
          continued = 0;
          return start(code);
        }
        function continueFlow(token2) {
          if (childToken)
            childToken.next = token2;
          childToken = token2;
          childFlow.lazy = inspectResult && inspectResult.lazy;
          childFlow.defineSkip(token2.start);
          childFlow.write(self2.sliceStream(token2));
        }
        function exitContainers(size, end) {
          var index2 = stack.length;
          if (childFlow && end) {
            childFlow.write([null]);
            childToken = childFlow = void 0;
          }
          while (index2-- > size) {
            self2.containerState = stack[index2][1];
            stack[index2][0].exit.call(self2, effects);
          }
          stack.length = size;
        }
        function tokenizeInspect(effects2, ok2) {
          var subcontinued = 0;
          inspectResult = {};
          return inspectStart;
          function inspectStart(code) {
            if (subcontinued < stack.length) {
              self2.containerState = stack[subcontinued][1];
              return effects2.attempt(stack[subcontinued][0].continuation, inspectContinue, inspectLess)(code);
            }
            if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {
              inspectResult.flowContinue = true;
              return inspectDone(code);
            }
            self2.interrupt = childFlow.currentConstruct && childFlow.currentConstruct.interruptible;
            self2.containerState = {};
            return effects2.attempt(containerConstruct, inspectFlowEnd, inspectDone)(code);
          }
          function inspectContinue(code) {
            subcontinued++;
            return self2.containerState._closeFlow ? inspectFlowEnd(code) : inspectStart(code);
          }
          function inspectLess(code) {
            if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {
              self2.containerState = {};
              return effects2.attempt(containerConstruct, inspectFlowEnd, effects2.attempt(lazyFlowConstruct, inspectFlowEnd, effects2.check(partialBlankLine$3, inspectFlowEnd, inspectLazy)))(code);
            }
            return inspectFlowEnd(code);
          }
          function inspectLazy(code) {
            subcontinued = stack.length;
            inspectResult.lazy = true;
            inspectResult.flowContinue = true;
            return inspectDone(code);
          }
          function inspectFlowEnd(code) {
            inspectResult.flowEnd = true;
            return inspectDone(code);
          }
          function inspectDone(code) {
            inspectResult.continued = subcontinued;
            self2.interrupt = self2.containerState = void 0;
            return ok2(code);
          }
        }
      }
      function tokenizeContainer(effects, ok2, nok) {
        return factorySpace$e(effects, effects.attempt(this.parser.constructs.document, ok2, nok), "linePrefix", this.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4);
      }
      function tokenizeLazyFlow(effects, ok2, nok) {
        return factorySpace$e(effects, effects.lazy(this.parser.constructs.flow, ok2, nok), "linePrefix", this.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4);
      }
      document$2.tokenize = tokenize$1;
      var flow$1 = {};
      function sizeChunks$2(chunks) {
        var index2 = -1;
        var size = 0;
        while (++index2 < chunks.length) {
          size += typeof chunks[index2] === "string" ? chunks[index2].length : 1;
        }
        return size;
      }
      var sizeChunks_1 = sizeChunks$2;
      var sizeChunks$1 = sizeChunks_1;
      function prefixSize$4(events, type) {
        var tail = events[events.length - 1];
        if (!tail || tail[1].type !== type)
          return 0;
        return sizeChunks$1(tail[2].sliceStream(tail[1]));
      }
      var prefixSize_1 = prefixSize$4;
      var splice$3 = [].splice;
      var splice_1 = splice$3;
      var splice$2 = splice_1;
      function chunkedSplice$6(list2, start, remove, items) {
        var end = list2.length;
        var chunkStart = 0;
        var parameters;
        if (start < 0) {
          start = -start > end ? 0 : end + start;
        } else {
          start = start > end ? end : start;
        }
        remove = remove > 0 ? remove : 0;
        if (items.length < 1e4) {
          parameters = Array.from(items);
          parameters.unshift(start, remove);
          splice$2.apply(list2, parameters);
        } else {
          if (remove)
            splice$2.apply(list2, [start, remove]);
          while (chunkStart < items.length) {
            parameters = items.slice(chunkStart, chunkStart + 1e4);
            parameters.unshift(start, 0);
            splice$2.apply(list2, parameters);
            chunkStart += 1e4;
            start += 1e4;
          }
        }
      }
      var chunkedSplice_1 = chunkedSplice$6;
      var assign$2 = assign_1;
      function shallow$5(object) {
        return assign$2({}, object);
      }
      var shallow_1 = shallow$5;
      var assign$1 = assign_1;
      var chunkedSplice$5 = chunkedSplice_1;
      var shallow$4 = shallow_1;
      function subtokenize$1(events) {
        var jumps = {};
        var index2 = -1;
        var event;
        var lineIndex;
        var otherIndex;
        var otherEvent;
        var parameters;
        var subevents;
        var more;
        while (++index2 < events.length) {
          while (index2 in jumps) {
            index2 = jumps[index2];
          }
          event = events[index2];
          if (index2 && event[1].type === "chunkFlow" && events[index2 - 1][1].type === "listItemPrefix") {
            subevents = event[1]._tokenizer.events;
            otherIndex = 0;
            if (otherIndex < subevents.length && subevents[otherIndex][1].type === "lineEndingBlank") {
              otherIndex += 2;
            }
            if (otherIndex < subevents.length && subevents[otherIndex][1].type === "content") {
              while (++otherIndex < subevents.length) {
                if (subevents[otherIndex][1].type === "content") {
                  break;
                }
                if (subevents[otherIndex][1].type === "chunkText") {
                  subevents[otherIndex][1].isInFirstContentOfListItem = true;
                  otherIndex++;
                }
              }
            }
          }
          if (event[0] === "enter") {
            if (event[1].contentType) {
              assign$1(jumps, subcontent(events, index2));
              index2 = jumps[index2];
              more = true;
            }
          } else if (event[1]._container || event[1]._movePreviousLineEndings) {
            otherIndex = index2;
            lineIndex = void 0;
            while (otherIndex--) {
              otherEvent = events[otherIndex];
              if (otherEvent[1].type === "lineEnding" || otherEvent[1].type === "lineEndingBlank") {
                if (otherEvent[0] === "enter") {
                  if (lineIndex) {
                    events[lineIndex][1].type = "lineEndingBlank";
                  }
                  otherEvent[1].type = "lineEnding";
                  lineIndex = otherIndex;
                }
              } else {
                break;
              }
            }
            if (lineIndex) {
              event[1].end = shallow$4(events[lineIndex][1].start);
              parameters = events.slice(lineIndex, index2);
              parameters.unshift(event);
              chunkedSplice$5(events, lineIndex, index2 - lineIndex + 1, parameters);
            }
          }
        }
        return !more;
      }
      function subcontent(events, eventIndex) {
        var token2 = events[eventIndex][1];
        var context = events[eventIndex][2];
        var startPosition = eventIndex - 1;
        var startPositions = [];
        var tokenizer = token2._tokenizer || context.parser[token2.contentType](token2.start);
        var childEvents = tokenizer.events;
        var jumps = [];
        var gaps = {};
        var stream;
        var previous2;
        var index2;
        var entered;
        var end;
        var adjust;
        while (token2) {
          while (events[++startPosition][1] !== token2) {
          }
          startPositions.push(startPosition);
          if (!token2._tokenizer) {
            stream = context.sliceStream(token2);
            if (!token2.next) {
              stream.push(null);
            }
            if (previous2) {
              tokenizer.defineSkip(token2.start);
            }
            if (token2.isInFirstContentOfListItem) {
              tokenizer._gfmTasklistFirstContentOfListItem = true;
            }
            tokenizer.write(stream);
            if (token2.isInFirstContentOfListItem) {
              tokenizer._gfmTasklistFirstContentOfListItem = void 0;
            }
          }
          previous2 = token2;
          token2 = token2.next;
        }
        token2 = previous2;
        index2 = childEvents.length;
        while (index2--) {
          if (childEvents[index2][0] === "enter") {
            entered = true;
          } else if (entered && childEvents[index2][1].type === childEvents[index2 - 1][1].type && childEvents[index2][1].start.line !== childEvents[index2][1].end.line) {
            add2(childEvents.slice(index2 + 1, end));
            token2._tokenizer = token2.next = void 0;
            token2 = token2.previous;
            end = index2 + 1;
          }
        }
        tokenizer.events = token2._tokenizer = token2.next = void 0;
        add2(childEvents.slice(0, end));
        index2 = -1;
        adjust = 0;
        while (++index2 < jumps.length) {
          gaps[adjust + jumps[index2][0]] = adjust + jumps[index2][1];
          adjust += jumps[index2][1] - jumps[index2][0] - 1;
        }
        return gaps;
        function add2(slice2) {
          var start = startPositions.pop();
          jumps.unshift([start, start + slice2.length - 1]);
          chunkedSplice$5(events, start, 2, slice2);
        }
      }
      var subtokenize_1 = subtokenize$1;
      var markdownLineEnding$e = markdownLineEnding_1;
      var prefixSize$3 = prefixSize_1;
      var subtokenize = subtokenize_1;
      var factorySpace$d = factorySpace$h;
      var content$1 = {
        tokenize: tokenizeContent,
        resolve: resolveContent,
        interruptible: true,
        lazy: true
      };
      var continuationConstruct = {
        tokenize: tokenizeContinuation,
        partial: true
      };
      function resolveContent(events) {
        subtokenize(events);
        return events;
      }
      function tokenizeContent(effects, ok2) {
        var previous2;
        return start;
        function start(code) {
          effects.enter("content");
          previous2 = effects.enter("chunkContent", {
            contentType: "content"
          });
          return data(code);
        }
        function data(code) {
          if (code === null) {
            return contentEnd(code);
          }
          if (markdownLineEnding$e(code)) {
            return effects.check(continuationConstruct, contentContinue, contentEnd)(code);
          }
          effects.consume(code);
          return data;
        }
        function contentEnd(code) {
          effects.exit("chunkContent");
          effects.exit("content");
          return ok2(code);
        }
        function contentContinue(code) {
          effects.consume(code);
          effects.exit("chunkContent");
          previous2 = previous2.next = effects.enter("chunkContent", {
            contentType: "content",
            previous: previous2
          });
          return data;
        }
      }
      function tokenizeContinuation(effects, ok2, nok) {
        var self2 = this;
        return startLookahead;
        function startLookahead(code) {
          effects.enter("lineEnding");
          effects.consume(code);
          effects.exit("lineEnding");
          return factorySpace$d(effects, prefixed, "linePrefix");
        }
        function prefixed(code) {
          if (code === null || markdownLineEnding$e(code)) {
            return nok(code);
          }
          if (self2.parser.constructs.disable.null.indexOf("codeIndented") > -1 || prefixSize$3(self2.events, "linePrefix") < 4) {
            return effects.interrupt(self2.parser.constructs.flow, nok, ok2)(code);
          }
          return ok2(code);
        }
      }
      var content_1 = content$1;
      Object.defineProperty(flow$1, "__esModule", { value: true });
      var content = content_1;
      var factorySpace$c = factorySpace$h;
      var partialBlankLine$2 = partialBlankLine_1;
      var tokenize = initializeFlow;
      function initializeFlow(effects) {
        var self2 = this;
        var initial = effects.attempt(partialBlankLine$2, atBlankEnding, effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace$c(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), "linePrefix")));
        return initial;
        function atBlankEnding(code) {
          if (code === null) {
            effects.consume(code);
            return;
          }
          effects.enter("lineEndingBlank");
          effects.consume(code);
          effects.exit("lineEndingBlank");
          self2.currentConstruct = void 0;
          return initial;
        }
        function afterConstruct(code) {
          if (code === null) {
            effects.consume(code);
            return;
          }
          effects.enter("lineEnding");
          effects.consume(code);
          effects.exit("lineEnding");
          self2.currentConstruct = void 0;
          return initial;
        }
      }
      flow$1.tokenize = tokenize;
      var text$3 = {};
      Object.defineProperty(text$3, "__esModule", { value: true });
      var assign = assign_1;
      var shallow$3 = shallow_1;
      var text$2 = initializeFactory("text");
      var string$1 = initializeFactory("string");
      var resolver = {
        resolveAll: createResolver()
      };
      function initializeFactory(field) {
        return {
          tokenize: initializeText,
          resolveAll: createResolver(field === "text" ? resolveAllLineSuffixes : void 0)
        };
        function initializeText(effects) {
          var self2 = this;
          var constructs2 = this.parser.constructs[field];
          var text2 = effects.attempt(constructs2, start, notText);
          return start;
          function start(code) {
            return atBreak(code) ? text2(code) : notText(code);
          }
          function notText(code) {
            if (code === null) {
              effects.consume(code);
              return;
            }
            effects.enter("data");
            effects.consume(code);
            return data;
          }
          function data(code) {
            if (atBreak(code)) {
              effects.exit("data");
              return text2(code);
            }
            effects.consume(code);
            return data;
          }
          function atBreak(code) {
            var list2 = constructs2[code];
            var index2 = -1;
            if (code === null) {
              return true;
            }
            if (list2) {
              while (++index2 < list2.length) {
                if (!list2[index2].previous || list2[index2].previous.call(self2, self2.previous)) {
                  return true;
                }
              }
            }
          }
        }
      }
      function createResolver(extraResolver) {
        return resolveAllText;
        function resolveAllText(events, context) {
          var index2 = -1;
          var enter;
          while (++index2 <= events.length) {
            if (enter === void 0) {
              if (events[index2] && events[index2][1].type === "data") {
                enter = index2;
                index2++;
              }
            } else if (!events[index2] || events[index2][1].type !== "data") {
              if (index2 !== enter + 2) {
                events[enter][1].end = events[index2 - 1][1].end;
                events.splice(enter + 2, index2 - enter - 2);
                index2 = enter + 2;
              }
              enter = void 0;
            }
          }
          return extraResolver ? extraResolver(events, context) : events;
        }
      }
      function resolveAllLineSuffixes(events, context) {
        var eventIndex = -1;
        var chunks;
        var data;
        var chunk;
        var index2;
        var bufferIndex;
        var size;
        var tabs;
        var token2;
        while (++eventIndex <= events.length) {
          if ((eventIndex === events.length || events[eventIndex][1].type === "lineEnding") && events[eventIndex - 1][1].type === "data") {
            data = events[eventIndex - 1][1];
            chunks = context.sliceStream(data);
            index2 = chunks.length;
            bufferIndex = -1;
            size = 0;
            tabs = void 0;
            while (index2--) {
              chunk = chunks[index2];
              if (typeof chunk === "string") {
                bufferIndex = chunk.length;
                while (chunk.charCodeAt(bufferIndex - 1) === 32) {
                  size++;
                  bufferIndex--;
                }
                if (bufferIndex)
                  break;
                bufferIndex = -1;
              } else if (chunk === -2) {
                tabs = true;
                size++;
              } else if (chunk === -1)
                ;
              else {
                index2++;
                break;
              }
            }
            if (size) {
              token2 = {
                type: eventIndex === events.length || tabs || size < 2 ? "lineSuffix" : "hardBreakTrailing",
                start: {
                  line: data.end.line,
                  column: data.end.column - size,
                  offset: data.end.offset - size,
                  _index: data.start._index + index2,
                  _bufferIndex: index2 ? bufferIndex : data.start._bufferIndex + bufferIndex
                },
                end: shallow$3(data.end)
              };
              data.end = shallow$3(token2.start);
              if (data.start.offset === data.end.offset) {
                assign(data, token2);
              } else {
                events.splice(eventIndex, 0, ["enter", token2, context], ["exit", token2, context]);
                eventIndex += 2;
              }
            }
            eventIndex++;
          }
        }
        return events;
      }
      text$3.resolver = resolver;
      text$3.string = string$1;
      text$3.text = text$2;
      var chunkedSplice$4 = chunkedSplice_1;
      function chunkedPush$2(list2, items) {
        if (list2.length) {
          chunkedSplice$4(list2, list2.length, 0, items);
          return list2;
        }
        return items;
      }
      var chunkedPush_1 = chunkedPush$2;
      function resolveAll$2(constructs2, events, context) {
        var called = [];
        var index2 = -1;
        var resolve;
        while (++index2 < constructs2.length) {
          resolve = constructs2[index2].resolveAll;
          if (resolve && called.indexOf(resolve) < 0) {
            events = resolve(events, context);
            called.push(resolve);
          }
        }
        return events;
      }
      var resolveAll_1 = resolveAll$2;
      var constructs = {};
      function markdownLineEndingOrSpace$8(code) {
        return code < 0 || code === 32;
      }
      var markdownLineEndingOrSpace_1 = markdownLineEndingOrSpace$8;
      var unicodePunctuation$2 = /[!-\/:-@\[-`\{-~\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;
      var unicodePunctuationRegex$1 = unicodePunctuation$2;
      var fromCharCode$1 = fromCharCode_1;
      function regexCheck$8(regex) {
        return check;
        function check(code) {
          return regex.test(fromCharCode$1(code));
        }
      }
      var regexCheck_1 = regexCheck$8;
      var unicodePunctuationRegex = unicodePunctuationRegex$1;
      var regexCheck$7 = regexCheck_1;
      var unicodePunctuation$1 = regexCheck$7(unicodePunctuationRegex);
      var unicodePunctuation_1 = unicodePunctuation$1;
      var regexCheck$6 = regexCheck_1;
      var unicodeWhitespace$1 = regexCheck$6(/\s/);
      var unicodeWhitespace_1 = unicodeWhitespace$1;
      var markdownLineEndingOrSpace$7 = markdownLineEndingOrSpace_1;
      var unicodePunctuation = unicodePunctuation_1;
      var unicodeWhitespace = unicodeWhitespace_1;
      function classifyCharacter$1(code) {
        if (code === null || markdownLineEndingOrSpace$7(code) || unicodeWhitespace(code)) {
          return 1;
        }
        if (unicodePunctuation(code)) {
          return 2;
        }
      }
      var classifyCharacter_1 = classifyCharacter$1;
      function movePoint$1(point2, offset2) {
        point2.column += offset2;
        point2.offset += offset2;
        point2._bufferIndex += offset2;
        return point2;
      }
      var movePoint_1 = movePoint$1;
      var chunkedPush$1 = chunkedPush_1;
      var chunkedSplice$3 = chunkedSplice_1;
      var classifyCharacter = classifyCharacter_1;
      var movePoint = movePoint_1;
      var resolveAll$1 = resolveAll_1;
      var shallow$2 = shallow_1;
      var attention$1 = {
        name: "attention",
        tokenize: tokenizeAttention,
        resolveAll: resolveAllAttention
      };
      function resolveAllAttention(events, context) {
        var index2 = -1;
        var open;
        var group;
        var text2;
        var openingSequence;
        var closingSequence;
        var use2;
        var nextEvents;
        var offset2;
        while (++index2 < events.length) {
          if (events[index2][0] === "enter" && events[index2][1].type === "attentionSequence" && events[index2][1]._close) {
            open = index2;
            while (open--) {
              if (events[open][0] === "exit" && events[open][1].type === "attentionSequence" && events[open][1]._open && context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index2][1]).charCodeAt(0)) {
                if ((events[open][1]._close || events[index2][1]._open) && (events[index2][1].end.offset - events[index2][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index2][1].end.offset - events[index2][1].start.offset) % 3)) {
                  continue;
                }
                use2 = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index2][1].end.offset - events[index2][1].start.offset > 1 ? 2 : 1;
                openingSequence = {
                  type: use2 > 1 ? "strongSequence" : "emphasisSequence",
                  start: movePoint(shallow$2(events[open][1].end), -use2),
                  end: shallow$2(events[open][1].end)
                };
                closingSequence = {
                  type: use2 > 1 ? "strongSequence" : "emphasisSequence",
                  start: shallow$2(events[index2][1].start),
                  end: movePoint(shallow$2(events[index2][1].start), use2)
                };
                text2 = {
                  type: use2 > 1 ? "strongText" : "emphasisText",
                  start: shallow$2(events[open][1].end),
                  end: shallow$2(events[index2][1].start)
                };
                group = {
                  type: use2 > 1 ? "strong" : "emphasis",
                  start: shallow$2(openingSequence.start),
                  end: shallow$2(closingSequence.end)
                };
                events[open][1].end = shallow$2(openingSequence.start);
                events[index2][1].start = shallow$2(closingSequence.end);
                nextEvents = [];
                if (events[open][1].end.offset - events[open][1].start.offset) {
                  nextEvents = chunkedPush$1(nextEvents, [
                    ["enter", events[open][1], context],
                    ["exit", events[open][1], context]
                  ]);
                }
                nextEvents = chunkedPush$1(nextEvents, [
                  ["enter", group, context],
                  ["enter", openingSequence, context],
                  ["exit", openingSequence, context],
                  ["enter", text2, context]
                ]);
                nextEvents = chunkedPush$1(nextEvents, resolveAll$1(context.parser.constructs.insideSpan.null, events.slice(open + 1, index2), context));
                nextEvents = chunkedPush$1(nextEvents, [
                  ["exit", text2, context],
                  ["enter", closingSequence, context],
                  ["exit", closingSequence, context],
                  ["exit", group, context]
                ]);
                if (events[index2][1].end.offset - events[index2][1].start.offset) {
                  offset2 = 2;
                  nextEvents = chunkedPush$1(nextEvents, [
                    ["enter", events[index2][1], context],
                    ["exit", events[index2][1], context]
                  ]);
                } else {
                  offset2 = 0;
                }
                chunkedSplice$3(events, open - 1, index2 - open + 3, nextEvents);
                index2 = open + nextEvents.length - offset2 - 2;
                break;
              }
            }
          }
        }
        index2 = -1;
        while (++index2 < events.length) {
          if (events[index2][1].type === "attentionSequence") {
            events[index2][1].type = "data";
          }
        }
        return events;
      }
      function tokenizeAttention(effects, ok2) {
        var before = classifyCharacter(this.previous);
        var marker;
        return start;
        function start(code) {
          effects.enter("attentionSequence");
          marker = code;
          return sequence(code);
        }
        function sequence(code) {
          var token2;
          var after;
          var open;
          var close;
          if (code === marker) {
            effects.consume(code);
            return sequence;
          }
          token2 = effects.exit("attentionSequence");
          after = classifyCharacter(code);
          open = !after || after === 2 && before;
          close = !before || before === 2 && after;
          token2._open = marker === 42 ? open : open && (before || !close);
          token2._close = marker === 42 ? close : close && (after || !open);
          return ok2(code);
        }
      }
      var attention_1 = attention$1;
      var regexCheck$5 = regexCheck_1;
      var asciiAlpha$3 = regexCheck$5(/[A-Za-z]/);
      var asciiAlpha_1 = asciiAlpha$3;
      var regexCheck$4 = regexCheck_1;
      var asciiAlphanumeric$4 = regexCheck$4(/[\dA-Za-z]/);
      var asciiAlphanumeric_1 = asciiAlphanumeric$4;
      var regexCheck$3 = regexCheck_1;
      var asciiAtext$1 = regexCheck$3(/[#-'*+\--9=?A-Z^-~]/);
      var asciiAtext_1 = asciiAtext$1;
      function asciiControl$2(code) {
        return code < 32 || code === 127;
      }
      var asciiControl_1 = asciiControl$2;
      var asciiAlpha$2 = asciiAlpha_1;
      var asciiAlphanumeric$3 = asciiAlphanumeric_1;
      var asciiAtext = asciiAtext_1;
      var asciiControl$1 = asciiControl_1;
      var autolink$1 = {
        name: "autolink",
        tokenize: tokenizeAutolink
      };
      function tokenizeAutolink(effects, ok2, nok) {
        var size = 1;
        return start;
        function start(code) {
          effects.enter("autolink");
          effects.enter("autolinkMarker");
          effects.consume(code);
          effects.exit("autolinkMarker");
          effects.enter("autolinkProtocol");
          return open;
        }
        function open(code) {
          if (asciiAlpha$2(code)) {
            effects.consume(code);
            return schemeOrEmailAtext;
          }
          return asciiAtext(code) ? emailAtext(code) : nok(code);
        }
        function schemeOrEmailAtext(code) {
          return code === 43 || code === 45 || code === 46 || asciiAlphanumeric$3(code) ? schemeInsideOrEmailAtext(code) : emailAtext(code);
        }
        function schemeInsideOrEmailAtext(code) {
          if (code === 58) {
            effects.consume(code);
            return urlInside;
          }
          if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric$3(code)) && size++ < 32) {
            effects.consume(code);
            return schemeInsideOrEmailAtext;
          }
          return emailAtext(code);
        }
        function urlInside(code) {
          if (code === 62) {
            effects.exit("autolinkProtocol");
            return end(code);
          }
          if (code === 32 || code === 60 || asciiControl$1(code)) {
            return nok(code);
          }
          effects.consume(code);
          return urlInside;
        }
        function emailAtext(code) {
          if (code === 64) {
            effects.consume(code);
            size = 0;
            return emailAtSignOrDot;
          }
          if (asciiAtext(code)) {
            effects.consume(code);
            return emailAtext;
          }
          return nok(code);
        }
        function emailAtSignOrDot(code) {
          return asciiAlphanumeric$3(code) ? emailLabel(code) : nok(code);
        }
        function emailLabel(code) {
          if (code === 46) {
            effects.consume(code);
            size = 0;
            return emailAtSignOrDot;
          }
          if (code === 62) {
            effects.exit("autolinkProtocol").type = "autolinkEmail";
            return end(code);
          }
          return emailValue(code);
        }
        function emailValue(code) {
          if ((code === 45 || asciiAlphanumeric$3(code)) && size++ < 63) {
            effects.consume(code);
            return code === 45 ? emailValue : emailLabel;
          }
          return nok(code);
        }
        function end(code) {
          effects.enter("autolinkMarker");
          effects.consume(code);
          effects.exit("autolinkMarker");
          effects.exit("autolink");
          return ok2;
        }
      }
      var autolink_1 = autolink$1;
      var markdownSpace$7 = markdownSpace_1;
      var factorySpace$b = factorySpace$h;
      var blockQuote$1 = {
        name: "blockQuote",
        tokenize: tokenizeBlockQuoteStart,
        continuation: {
          tokenize: tokenizeBlockQuoteContinuation
        },
        exit
      };
      function tokenizeBlockQuoteStart(effects, ok2, nok) {
        var self2 = this;
        return start;
        function start(code) {
          if (code === 62) {
            if (!self2.containerState.open) {
              effects.enter("blockQuote", {
                _container: true
              });
              self2.containerState.open = true;
            }
            effects.enter("blockQuotePrefix");
            effects.enter("blockQuoteMarker");
            effects.consume(code);
            effects.exit("blockQuoteMarker");
            return after;
          }
          return nok(code);
        }
        function after(code) {
          if (markdownSpace$7(code)) {
            effects.enter("blockQuotePrefixWhitespace");
            effects.consume(code);
            effects.exit("blockQuotePrefixWhitespace");
            effects.exit("blockQuotePrefix");
            return ok2;
          }
          effects.exit("blockQuotePrefix");
          return ok2(code);
        }
      }
      function tokenizeBlockQuoteContinuation(effects, ok2, nok) {
        return factorySpace$b(effects, effects.attempt(blockQuote$1, ok2, nok), "linePrefix", this.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4);
      }
      function exit(effects) {
        effects.exit("blockQuote");
      }
      var blockQuote_1 = blockQuote$1;
      var regexCheck$2 = regexCheck_1;
      var asciiPunctuation$1 = regexCheck$2(/[!-/:-@[-`{-~]/);
      var asciiPunctuation_1 = asciiPunctuation$1;
      var asciiPunctuation = asciiPunctuation_1;
      var characterEscape$1 = {
        name: "characterEscape",
        tokenize: tokenizeCharacterEscape
      };
      function tokenizeCharacterEscape(effects, ok2, nok) {
        return start;
        function start(code) {
          effects.enter("characterEscape");
          effects.enter("escapeMarker");
          effects.consume(code);
          effects.exit("escapeMarker");
          return open;
        }
        function open(code) {
          if (asciiPunctuation(code)) {
            effects.enter("characterEscapeValue");
            effects.consume(code);
            effects.exit("characterEscapeValue");
            effects.exit("characterEscape");
            return ok2;
          }
          return nok(code);
        }
      }
      var characterEscape_1 = characterEscape$1;
      var el;
      var semicolon = 59;
      var decodeEntity_browser = decodeEntity$1;
      function decodeEntity$1(characters) {
        var entity = "&" + characters + ";";
        var char;
        el = el || document.createElement("i");
        el.innerHTML = entity;
        char = el.textContent;
        if (char.charCodeAt(char.length - 1) === semicolon && characters !== "semi") {
          return false;
        }
        return char === entity ? false : char;
      }
      var regexCheck$1 = regexCheck_1;
      var asciiDigit$2 = regexCheck$1(/\d/);
      var asciiDigit_1 = asciiDigit$2;
      var regexCheck = regexCheck_1;
      var asciiHexDigit$1 = regexCheck(/[\dA-Fa-f]/);
      var asciiHexDigit_1 = asciiHexDigit$1;
      var decodeEntity = decodeEntity_browser;
      var asciiAlphanumeric$2 = asciiAlphanumeric_1;
      var asciiDigit$1 = asciiDigit_1;
      var asciiHexDigit = asciiHexDigit_1;
      function _interopDefaultLegacy$1(e22) {
        return e22 && typeof e22 === "object" && "default" in e22 ? e22 : { default: e22 };
      }
      var decodeEntity__default = _interopDefaultLegacy$1(decodeEntity);
      var characterReference$1 = {
        name: "characterReference",
        tokenize: tokenizeCharacterReference
      };
      function tokenizeCharacterReference(effects, ok2, nok) {
        var self2 = this;
        var size = 0;
        var max2;
        var test;
        return start;
        function start(code) {
          effects.enter("characterReference");
          effects.enter("characterReferenceMarker");
          effects.consume(code);
          effects.exit("characterReferenceMarker");
          return open;
        }
        function open(code) {
          if (code === 35) {
            effects.enter("characterReferenceMarkerNumeric");
            effects.consume(code);
            effects.exit("characterReferenceMarkerNumeric");
            return numeric;
          }
          effects.enter("characterReferenceValue");
          max2 = 31;
          test = asciiAlphanumeric$2;
          return value(code);
        }
        function numeric(code) {
          if (code === 88 || code === 120) {
            effects.enter("characterReferenceMarkerHexadecimal");
            effects.consume(code);
            effects.exit("characterReferenceMarkerHexadecimal");
            effects.enter("characterReferenceValue");
            max2 = 6;
            test = asciiHexDigit;
            return value;
          }
          effects.enter("characterReferenceValue");
          max2 = 7;
          test = asciiDigit$1;
          return value(code);
        }
        function value(code) {
          var token2;
          if (code === 59 && size) {
            token2 = effects.exit("characterReferenceValue");
            if (test === asciiAlphanumeric$2 && !decodeEntity__default["default"](self2.sliceSerialize(token2))) {
              return nok(code);
            }
            effects.enter("characterReferenceMarker");
            effects.consume(code);
            effects.exit("characterReferenceMarker");
            effects.exit("characterReference");
            return ok2;
          }
          if (test(code) && size++ < max2) {
            effects.consume(code);
            return value;
          }
          return nok(code);
        }
      }
      var characterReference_1 = characterReference$1;
      var markdownLineEnding$d = markdownLineEnding_1;
      var markdownLineEndingOrSpace$6 = markdownLineEndingOrSpace_1;
      var prefixSize$2 = prefixSize_1;
      var factorySpace$a = factorySpace$h;
      var codeFenced$1 = {
        name: "codeFenced",
        tokenize: tokenizeCodeFenced,
        concrete: true
      };
      function tokenizeCodeFenced(effects, ok2, nok) {
        var self2 = this;
        var closingFenceConstruct = {
          tokenize: tokenizeClosingFence,
          partial: true
        };
        var initialPrefix = prefixSize$2(this.events, "linePrefix");
        var sizeOpen = 0;
        var marker;
        return start;
        function start(code) {
          effects.enter("codeFenced");
          effects.enter("codeFencedFence");
          effects.enter("codeFencedFenceSequence");
          marker = code;
          return sequenceOpen(code);
        }
        function sequenceOpen(code) {
          if (code === marker) {
            effects.consume(code);
            sizeOpen++;
            return sequenceOpen;
          }
          effects.exit("codeFencedFenceSequence");
          return sizeOpen < 3 ? nok(code) : factorySpace$a(effects, infoOpen, "whitespace")(code);
        }
        function infoOpen(code) {
          if (code === null || markdownLineEnding$d(code)) {
            return openAfter(code);
          }
          effects.enter("codeFencedFenceInfo");
          effects.enter("chunkString", {
            contentType: "string"
          });
          return info2(code);
        }
        function info2(code) {
          if (code === null || markdownLineEndingOrSpace$6(code)) {
            effects.exit("chunkString");
            effects.exit("codeFencedFenceInfo");
            return factorySpace$a(effects, infoAfter, "whitespace")(code);
          }
          if (code === 96 && code === marker)
            return nok(code);
          effects.consume(code);
          return info2;
        }
        function infoAfter(code) {
          if (code === null || markdownLineEnding$d(code)) {
            return openAfter(code);
          }
          effects.enter("codeFencedFenceMeta");
          effects.enter("chunkString", {
            contentType: "string"
          });
          return meta(code);
        }
        function meta(code) {
          if (code === null || markdownLineEnding$d(code)) {
            effects.exit("chunkString");
            effects.exit("codeFencedFenceMeta");
            return openAfter(code);
          }
          if (code === 96 && code === marker)
            return nok(code);
          effects.consume(code);
          return meta;
        }
        function openAfter(code) {
          effects.exit("codeFencedFence");
          return self2.interrupt ? ok2(code) : content2(code);
        }
        function content2(code) {
          if (code === null) {
            return after(code);
          }
          if (markdownLineEnding$d(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            return effects.attempt(closingFenceConstruct, after, initialPrefix ? factorySpace$a(effects, content2, "linePrefix", initialPrefix + 1) : content2);
          }
          effects.enter("codeFlowValue");
          return contentContinue(code);
        }
        function contentContinue(code) {
          if (code === null || markdownLineEnding$d(code)) {
            effects.exit("codeFlowValue");
            return content2(code);
          }
          effects.consume(code);
          return contentContinue;
        }
        function after(code) {
          effects.exit("codeFenced");
          return ok2(code);
        }
        function tokenizeClosingFence(effects2, ok3, nok2) {
          var size = 0;
          return factorySpace$a(effects2, closingSequenceStart, "linePrefix", this.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4);
          function closingSequenceStart(code) {
            effects2.enter("codeFencedFence");
            effects2.enter("codeFencedFenceSequence");
            return closingSequence(code);
          }
          function closingSequence(code) {
            if (code === marker) {
              effects2.consume(code);
              size++;
              return closingSequence;
            }
            if (size < sizeOpen)
              return nok2(code);
            effects2.exit("codeFencedFenceSequence");
            return factorySpace$a(effects2, closingSequenceEnd, "whitespace")(code);
          }
          function closingSequenceEnd(code) {
            if (code === null || markdownLineEnding$d(code)) {
              effects2.exit("codeFencedFence");
              return ok3(code);
            }
            return nok2(code);
          }
        }
      }
      var codeFenced_1 = codeFenced$1;
      var markdownLineEnding$c = markdownLineEnding_1;
      var chunkedSplice$2 = chunkedSplice_1;
      var prefixSize$1 = prefixSize_1;
      var factorySpace$9 = factorySpace$h;
      var codeIndented$1 = {
        name: "codeIndented",
        tokenize: tokenizeCodeIndented,
        resolve: resolveCodeIndented
      };
      var indentedContentConstruct = {
        tokenize: tokenizeIndentedContent,
        partial: true
      };
      function resolveCodeIndented(events, context) {
        var code = {
          type: "codeIndented",
          start: events[0][1].start,
          end: events[events.length - 1][1].end
        };
        chunkedSplice$2(events, 0, 0, [["enter", code, context]]);
        chunkedSplice$2(events, events.length, 0, [["exit", code, context]]);
        return events;
      }
      function tokenizeCodeIndented(effects, ok2, nok) {
        return effects.attempt(indentedContentConstruct, afterPrefix, nok);
        function afterPrefix(code) {
          if (code === null) {
            return ok2(code);
          }
          if (markdownLineEnding$c(code)) {
            return effects.attempt(indentedContentConstruct, afterPrefix, ok2)(code);
          }
          effects.enter("codeFlowValue");
          return content2(code);
        }
        function content2(code) {
          if (code === null || markdownLineEnding$c(code)) {
            effects.exit("codeFlowValue");
            return afterPrefix(code);
          }
          effects.consume(code);
          return content2;
        }
      }
      function tokenizeIndentedContent(effects, ok2, nok) {
        var self2 = this;
        return factorySpace$9(effects, afterPrefix, "linePrefix", 4 + 1);
        function afterPrefix(code) {
          if (markdownLineEnding$c(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            return factorySpace$9(effects, afterPrefix, "linePrefix", 4 + 1);
          }
          return prefixSize$1(self2.events, "linePrefix") < 4 ? nok(code) : ok2(code);
        }
      }
      var codeIndented_1 = codeIndented$1;
      var markdownLineEnding$b = markdownLineEnding_1;
      var codeText$1 = {
        name: "codeText",
        tokenize: tokenizeCodeText,
        resolve: resolveCodeText,
        previous
      };
      function resolveCodeText(events) {
        var tailExitIndex = events.length - 4;
        var headEnterIndex = 3;
        var index2;
        var enter;
        if ((events[headEnterIndex][1].type === "lineEnding" || events[headEnterIndex][1].type === "space") && (events[tailExitIndex][1].type === "lineEnding" || events[tailExitIndex][1].type === "space")) {
          index2 = headEnterIndex;
          while (++index2 < tailExitIndex) {
            if (events[index2][1].type === "codeTextData") {
              events[tailExitIndex][1].type = events[headEnterIndex][1].type = "codeTextPadding";
              headEnterIndex += 2;
              tailExitIndex -= 2;
              break;
            }
          }
        }
        index2 = headEnterIndex - 1;
        tailExitIndex++;
        while (++index2 <= tailExitIndex) {
          if (enter === void 0) {
            if (index2 !== tailExitIndex && events[index2][1].type !== "lineEnding") {
              enter = index2;
            }
          } else if (index2 === tailExitIndex || events[index2][1].type === "lineEnding") {
            events[enter][1].type = "codeTextData";
            if (index2 !== enter + 2) {
              events[enter][1].end = events[index2 - 1][1].end;
              events.splice(enter + 2, index2 - enter - 2);
              tailExitIndex -= index2 - enter - 2;
              index2 = enter + 2;
            }
            enter = void 0;
          }
        }
        return events;
      }
      function previous(code) {
        return code !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
      }
      function tokenizeCodeText(effects, ok2, nok) {
        var sizeOpen = 0;
        var size;
        var token2;
        return start;
        function start(code) {
          effects.enter("codeText");
          effects.enter("codeTextSequence");
          return openingSequence(code);
        }
        function openingSequence(code) {
          if (code === 96) {
            effects.consume(code);
            sizeOpen++;
            return openingSequence;
          }
          effects.exit("codeTextSequence");
          return gap(code);
        }
        function gap(code) {
          if (code === null) {
            return nok(code);
          }
          if (code === 96) {
            token2 = effects.enter("codeTextSequence");
            size = 0;
            return closingSequence(code);
          }
          if (code === 32) {
            effects.enter("space");
            effects.consume(code);
            effects.exit("space");
            return gap;
          }
          if (markdownLineEnding$b(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            return gap;
          }
          effects.enter("codeTextData");
          return data(code);
        }
        function data(code) {
          if (code === null || code === 32 || code === 96 || markdownLineEnding$b(code)) {
            effects.exit("codeTextData");
            return gap(code);
          }
          effects.consume(code);
          return data;
        }
        function closingSequence(code) {
          if (code === 96) {
            effects.consume(code);
            size++;
            return closingSequence;
          }
          if (size === sizeOpen) {
            effects.exit("codeTextSequence");
            effects.exit("codeText");
            return ok2(code);
          }
          token2.type = "codeTextData";
          return data(code);
        }
      }
      var codeText_1 = codeText$1;
      var asciiControl = asciiControl_1;
      var markdownLineEndingOrSpace$5 = markdownLineEndingOrSpace_1;
      var markdownLineEnding$a = markdownLineEnding_1;
      function destinationFactory(effects, ok2, nok, type, literalType, literalMarkerType, rawType, stringType, max2) {
        var limit = max2 || Infinity;
        var balance = 0;
        return start;
        function start(code) {
          if (code === 60) {
            effects.enter(type);
            effects.enter(literalType);
            effects.enter(literalMarkerType);
            effects.consume(code);
            effects.exit(literalMarkerType);
            return destinationEnclosedBefore;
          }
          if (asciiControl(code) || code === 41) {
            return nok(code);
          }
          effects.enter(type);
          effects.enter(rawType);
          effects.enter(stringType);
          effects.enter("chunkString", {
            contentType: "string"
          });
          return destinationRaw(code);
        }
        function destinationEnclosedBefore(code) {
          if (code === 62) {
            effects.enter(literalMarkerType);
            effects.consume(code);
            effects.exit(literalMarkerType);
            effects.exit(literalType);
            effects.exit(type);
            return ok2;
          }
          effects.enter(stringType);
          effects.enter("chunkString", {
            contentType: "string"
          });
          return destinationEnclosed(code);
        }
        function destinationEnclosed(code) {
          if (code === 62) {
            effects.exit("chunkString");
            effects.exit(stringType);
            return destinationEnclosedBefore(code);
          }
          if (code === null || code === 60 || markdownLineEnding$a(code)) {
            return nok(code);
          }
          effects.consume(code);
          return code === 92 ? destinationEnclosedEscape : destinationEnclosed;
        }
        function destinationEnclosedEscape(code) {
          if (code === 60 || code === 62 || code === 92) {
            effects.consume(code);
            return destinationEnclosed;
          }
          return destinationEnclosed(code);
        }
        function destinationRaw(code) {
          if (code === 40) {
            if (++balance > limit)
              return nok(code);
            effects.consume(code);
            return destinationRaw;
          }
          if (code === 41) {
            if (!balance--) {
              effects.exit("chunkString");
              effects.exit(stringType);
              effects.exit(rawType);
              effects.exit(type);
              return ok2(code);
            }
            effects.consume(code);
            return destinationRaw;
          }
          if (code === null || markdownLineEndingOrSpace$5(code)) {
            if (balance)
              return nok(code);
            effects.exit("chunkString");
            effects.exit(stringType);
            effects.exit(rawType);
            effects.exit(type);
            return ok2(code);
          }
          if (asciiControl(code))
            return nok(code);
          effects.consume(code);
          return code === 92 ? destinationRawEscape : destinationRaw;
        }
        function destinationRawEscape(code) {
          if (code === 40 || code === 41 || code === 92) {
            effects.consume(code);
            return destinationRaw;
          }
          return destinationRaw(code);
        }
      }
      var factoryDestination$2 = destinationFactory;
      var markdownLineEnding$9 = markdownLineEnding_1;
      var markdownSpace$6 = markdownSpace_1;
      function labelFactory(effects, ok2, nok, type, markerType, stringType) {
        var self2 = this;
        var size = 0;
        var data;
        return start;
        function start(code) {
          effects.enter(type);
          effects.enter(markerType);
          effects.consume(code);
          effects.exit(markerType);
          effects.enter(stringType);
          return atBreak;
        }
        function atBreak(code) {
          if (code === null || code === 91 || code === 93 && !data || code === 94 && !size && "_hiddenFootnoteSupport" in self2.parser.constructs || size > 999) {
            return nok(code);
          }
          if (code === 93) {
            effects.exit(stringType);
            effects.enter(markerType);
            effects.consume(code);
            effects.exit(markerType);
            effects.exit(type);
            return ok2;
          }
          if (markdownLineEnding$9(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            return atBreak;
          }
          effects.enter("chunkString", {
            contentType: "string"
          });
          return label2(code);
        }
        function label2(code) {
          if (code === null || code === 91 || code === 93 || markdownLineEnding$9(code) || size++ > 999) {
            effects.exit("chunkString");
            return atBreak(code);
          }
          effects.consume(code);
          data = data || !markdownSpace$6(code);
          return code === 92 ? labelEscape : label2;
        }
        function labelEscape(code) {
          if (code === 91 || code === 92 || code === 93) {
            effects.consume(code);
            size++;
            return label2;
          }
          return label2(code);
        }
      }
      var factoryLabel$2 = labelFactory;
      var markdownLineEnding$8 = markdownLineEnding_1;
      var markdownSpace$5 = markdownSpace_1;
      var factorySpace$8 = factorySpace$h;
      function whitespaceFactory(effects, ok2) {
        var seen;
        return start;
        function start(code) {
          if (markdownLineEnding$8(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            seen = true;
            return start;
          }
          if (markdownSpace$5(code)) {
            return factorySpace$8(effects, start, seen ? "linePrefix" : "lineSuffix")(code);
          }
          return ok2(code);
        }
      }
      var factoryWhitespace$2 = whitespaceFactory;
      var markdownLineEnding$7 = markdownLineEnding_1;
      var factorySpace$7 = factorySpace$h;
      function titleFactory(effects, ok2, nok, type, markerType, stringType) {
        var marker;
        return start;
        function start(code) {
          effects.enter(type);
          effects.enter(markerType);
          effects.consume(code);
          effects.exit(markerType);
          marker = code === 40 ? 41 : code;
          return atFirstTitleBreak;
        }
        function atFirstTitleBreak(code) {
          if (code === marker) {
            effects.enter(markerType);
            effects.consume(code);
            effects.exit(markerType);
            effects.exit(type);
            return ok2;
          }
          effects.enter(stringType);
          return atTitleBreak(code);
        }
        function atTitleBreak(code) {
          if (code === marker) {
            effects.exit(stringType);
            return atFirstTitleBreak(marker);
          }
          if (code === null) {
            return nok(code);
          }
          if (markdownLineEnding$7(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            return factorySpace$7(effects, atTitleBreak, "linePrefix");
          }
          effects.enter("chunkString", {
            contentType: "string"
          });
          return title(code);
        }
        function title(code) {
          if (code === marker || code === null || markdownLineEnding$7(code)) {
            effects.exit("chunkString");
            return atTitleBreak(code);
          }
          effects.consume(code);
          return code === 92 ? titleEscape : title;
        }
        function titleEscape(code) {
          if (code === marker || code === 92) {
            effects.consume(code);
            return title;
          }
          return title(code);
        }
      }
      var factoryTitle$2 = titleFactory;
      var markdownLineEnding$6 = markdownLineEnding_1;
      var markdownLineEndingOrSpace$4 = markdownLineEndingOrSpace_1;
      var normalizeIdentifier$1 = normalizeIdentifier_1;
      var factoryDestination$1 = factoryDestination$2;
      var factoryLabel$1 = factoryLabel$2;
      var factorySpace$6 = factorySpace$h;
      var factoryWhitespace$1 = factoryWhitespace$2;
      var factoryTitle$1 = factoryTitle$2;
      var definition$1 = {
        name: "definition",
        tokenize: tokenizeDefinition
      };
      var titleConstruct = {
        tokenize: tokenizeTitle,
        partial: true
      };
      function tokenizeDefinition(effects, ok2, nok) {
        var self2 = this;
        var identifier;
        return start;
        function start(code) {
          effects.enter("definition");
          return factoryLabel$1.call(self2, effects, labelAfter, nok, "definitionLabel", "definitionLabelMarker", "definitionLabelString")(code);
        }
        function labelAfter(code) {
          identifier = normalizeIdentifier$1(self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1));
          if (code === 58) {
            effects.enter("definitionMarker");
            effects.consume(code);
            effects.exit("definitionMarker");
            return factoryWhitespace$1(effects, factoryDestination$1(effects, effects.attempt(titleConstruct, factorySpace$6(effects, after, "whitespace"), factorySpace$6(effects, after, "whitespace")), nok, "definitionDestination", "definitionDestinationLiteral", "definitionDestinationLiteralMarker", "definitionDestinationRaw", "definitionDestinationString"));
          }
          return nok(code);
        }
        function after(code) {
          if (code === null || markdownLineEnding$6(code)) {
            effects.exit("definition");
            if (self2.parser.defined.indexOf(identifier) < 0) {
              self2.parser.defined.push(identifier);
            }
            return ok2(code);
          }
          return nok(code);
        }
      }
      function tokenizeTitle(effects, ok2, nok) {
        return start;
        function start(code) {
          return markdownLineEndingOrSpace$4(code) ? factoryWhitespace$1(effects, before)(code) : nok(code);
        }
        function before(code) {
          if (code === 34 || code === 39 || code === 40) {
            return factoryTitle$1(effects, factorySpace$6(effects, after, "whitespace"), nok, "definitionTitle", "definitionTitleMarker", "definitionTitleString")(code);
          }
          return nok(code);
        }
        function after(code) {
          return code === null || markdownLineEnding$6(code) ? ok2(code) : nok(code);
        }
      }
      var definition_1 = definition$1;
      var markdownLineEnding$5 = markdownLineEnding_1;
      var hardBreakEscape$1 = {
        name: "hardBreakEscape",
        tokenize: tokenizeHardBreakEscape
      };
      function tokenizeHardBreakEscape(effects, ok2, nok) {
        return start;
        function start(code) {
          effects.enter("hardBreakEscape");
          effects.enter("escapeMarker");
          effects.consume(code);
          return open;
        }
        function open(code) {
          if (markdownLineEnding$5(code)) {
            effects.exit("escapeMarker");
            effects.exit("hardBreakEscape");
            return ok2(code);
          }
          return nok(code);
        }
      }
      var hardBreakEscape_1 = hardBreakEscape$1;
      var markdownLineEnding$4 = markdownLineEnding_1;
      var markdownLineEndingOrSpace$3 = markdownLineEndingOrSpace_1;
      var markdownSpace$4 = markdownSpace_1;
      var chunkedSplice$1 = chunkedSplice_1;
      var factorySpace$5 = factorySpace$h;
      var headingAtx$1 = {
        name: "headingAtx",
        tokenize: tokenizeHeadingAtx,
        resolve: resolveHeadingAtx
      };
      function resolveHeadingAtx(events, context) {
        var contentEnd = events.length - 2;
        var contentStart = 3;
        var content2;
        var text2;
        if (events[contentStart][1].type === "whitespace") {
          contentStart += 2;
        }
        if (contentEnd - 2 > contentStart && events[contentEnd][1].type === "whitespace") {
          contentEnd -= 2;
        }
        if (events[contentEnd][1].type === "atxHeadingSequence" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === "whitespace")) {
          contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;
        }
        if (contentEnd > contentStart) {
          content2 = {
            type: "atxHeadingText",
            start: events[contentStart][1].start,
            end: events[contentEnd][1].end
          };
          text2 = {
            type: "chunkText",
            start: events[contentStart][1].start,
            end: events[contentEnd][1].end,
            contentType: "text"
          };
          chunkedSplice$1(events, contentStart, contentEnd - contentStart + 1, [
            ["enter", content2, context],
            ["enter", text2, context],
            ["exit", text2, context],
            ["exit", content2, context]
          ]);
        }
        return events;
      }
      function tokenizeHeadingAtx(effects, ok2, nok) {
        var self2 = this;
        var size = 0;
        return start;
        function start(code) {
          effects.enter("atxHeading");
          effects.enter("atxHeadingSequence");
          return fenceOpenInside(code);
        }
        function fenceOpenInside(code) {
          if (code === 35 && size++ < 6) {
            effects.consume(code);
            return fenceOpenInside;
          }
          if (code === null || markdownLineEndingOrSpace$3(code)) {
            effects.exit("atxHeadingSequence");
            return self2.interrupt ? ok2(code) : headingBreak(code);
          }
          return nok(code);
        }
        function headingBreak(code) {
          if (code === 35) {
            effects.enter("atxHeadingSequence");
            return sequence(code);
          }
          if (code === null || markdownLineEnding$4(code)) {
            effects.exit("atxHeading");
            return ok2(code);
          }
          if (markdownSpace$4(code)) {
            return factorySpace$5(effects, headingBreak, "whitespace")(code);
          }
          effects.enter("atxHeadingText");
          return data(code);
        }
        function sequence(code) {
          if (code === 35) {
            effects.consume(code);
            return sequence;
          }
          effects.exit("atxHeadingSequence");
          return headingBreak(code);
        }
        function data(code) {
          if (code === null || code === 35 || markdownLineEndingOrSpace$3(code)) {
            effects.exit("atxHeadingText");
            return headingBreak(code);
          }
          effects.consume(code);
          return data;
        }
      }
      var headingAtx_1 = headingAtx$1;
      var basics = [
        "address",
        "article",
        "aside",
        "base",
        "basefont",
        "blockquote",
        "body",
        "caption",
        "center",
        "col",
        "colgroup",
        "dd",
        "details",
        "dialog",
        "dir",
        "div",
        "dl",
        "dt",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "frame",
        "frameset",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hr",
        "html",
        "iframe",
        "legend",
        "li",
        "link",
        "main",
        "menu",
        "menuitem",
        "nav",
        "noframes",
        "ol",
        "optgroup",
        "option",
        "p",
        "param",
        "section",
        "source",
        "summary",
        "table",
        "tbody",
        "td",
        "tfoot",
        "th",
        "thead",
        "title",
        "tr",
        "track",
        "ul"
      ];
      var htmlBlockNames$1 = basics;
      var raws = ["pre", "script", "style", "textarea"];
      var htmlRawNames$1 = raws;
      var asciiAlpha$1 = asciiAlpha_1;
      var asciiAlphanumeric$1 = asciiAlphanumeric_1;
      var markdownLineEnding$3 = markdownLineEnding_1;
      var markdownLineEndingOrSpace$2 = markdownLineEndingOrSpace_1;
      var markdownSpace$3 = markdownSpace_1;
      var fromCharCode = fromCharCode_1;
      var htmlBlockNames = htmlBlockNames$1;
      var htmlRawNames = htmlRawNames$1;
      var partialBlankLine$1 = partialBlankLine_1;
      var htmlFlow$1 = {
        name: "htmlFlow",
        tokenize: tokenizeHtmlFlow,
        resolveTo: resolveToHtmlFlow,
        concrete: true
      };
      var nextBlankConstruct = {
        tokenize: tokenizeNextBlank,
        partial: true
      };
      function resolveToHtmlFlow(events) {
        var index2 = events.length;
        while (index2--) {
          if (events[index2][0] === "enter" && events[index2][1].type === "htmlFlow") {
            break;
          }
        }
        if (index2 > 1 && events[index2 - 2][1].type === "linePrefix") {
          events[index2][1].start = events[index2 - 2][1].start;
          events[index2 + 1][1].start = events[index2 - 2][1].start;
          events.splice(index2 - 2, 2);
        }
        return events;
      }
      function tokenizeHtmlFlow(effects, ok2, nok) {
        var self2 = this;
        var kind;
        var startTag;
        var buffer2;
        var index2;
        var marker;
        return start;
        function start(code) {
          effects.enter("htmlFlow");
          effects.enter("htmlFlowData");
          effects.consume(code);
          return open;
        }
        function open(code) {
          if (code === 33) {
            effects.consume(code);
            return declarationStart;
          }
          if (code === 47) {
            effects.consume(code);
            return tagCloseStart;
          }
          if (code === 63) {
            effects.consume(code);
            kind = 3;
            return self2.interrupt ? ok2 : continuationDeclarationInside;
          }
          if (asciiAlpha$1(code)) {
            effects.consume(code);
            buffer2 = fromCharCode(code);
            startTag = true;
            return tagName;
          }
          return nok(code);
        }
        function declarationStart(code) {
          if (code === 45) {
            effects.consume(code);
            kind = 2;
            return commentOpenInside;
          }
          if (code === 91) {
            effects.consume(code);
            kind = 5;
            buffer2 = "CDATA[";
            index2 = 0;
            return cdataOpenInside;
          }
          if (asciiAlpha$1(code)) {
            effects.consume(code);
            kind = 4;
            return self2.interrupt ? ok2 : continuationDeclarationInside;
          }
          return nok(code);
        }
        function commentOpenInside(code) {
          if (code === 45) {
            effects.consume(code);
            return self2.interrupt ? ok2 : continuationDeclarationInside;
          }
          return nok(code);
        }
        function cdataOpenInside(code) {
          if (code === buffer2.charCodeAt(index2++)) {
            effects.consume(code);
            return index2 === buffer2.length ? self2.interrupt ? ok2 : continuation : cdataOpenInside;
          }
          return nok(code);
        }
        function tagCloseStart(code) {
          if (asciiAlpha$1(code)) {
            effects.consume(code);
            buffer2 = fromCharCode(code);
            return tagName;
          }
          return nok(code);
        }
        function tagName(code) {
          if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace$2(code)) {
            if (code !== 47 && startTag && htmlRawNames.indexOf(buffer2.toLowerCase()) > -1) {
              kind = 1;
              return self2.interrupt ? ok2(code) : continuation(code);
            }
            if (htmlBlockNames.indexOf(buffer2.toLowerCase()) > -1) {
              kind = 6;
              if (code === 47) {
                effects.consume(code);
                return basicSelfClosing;
              }
              return self2.interrupt ? ok2(code) : continuation(code);
            }
            kind = 7;
            return self2.interrupt ? nok(code) : startTag ? completeAttributeNameBefore(code) : completeClosingTagAfter(code);
          }
          if (code === 45 || asciiAlphanumeric$1(code)) {
            effects.consume(code);
            buffer2 += fromCharCode(code);
            return tagName;
          }
          return nok(code);
        }
        function basicSelfClosing(code) {
          if (code === 62) {
            effects.consume(code);
            return self2.interrupt ? ok2 : continuation;
          }
          return nok(code);
        }
        function completeClosingTagAfter(code) {
          if (markdownSpace$3(code)) {
            effects.consume(code);
            return completeClosingTagAfter;
          }
          return completeEnd(code);
        }
        function completeAttributeNameBefore(code) {
          if (code === 47) {
            effects.consume(code);
            return completeEnd;
          }
          if (code === 58 || code === 95 || asciiAlpha$1(code)) {
            effects.consume(code);
            return completeAttributeName;
          }
          if (markdownSpace$3(code)) {
            effects.consume(code);
            return completeAttributeNameBefore;
          }
          return completeEnd(code);
        }
        function completeAttributeName(code) {
          if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric$1(code)) {
            effects.consume(code);
            return completeAttributeName;
          }
          return completeAttributeNameAfter(code);
        }
        function completeAttributeNameAfter(code) {
          if (code === 61) {
            effects.consume(code);
            return completeAttributeValueBefore;
          }
          if (markdownSpace$3(code)) {
            effects.consume(code);
            return completeAttributeNameAfter;
          }
          return completeAttributeNameBefore(code);
        }
        function completeAttributeValueBefore(code) {
          if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {
            return nok(code);
          }
          if (code === 34 || code === 39) {
            effects.consume(code);
            marker = code;
            return completeAttributeValueQuoted;
          }
          if (markdownSpace$3(code)) {
            effects.consume(code);
            return completeAttributeValueBefore;
          }
          marker = void 0;
          return completeAttributeValueUnquoted(code);
        }
        function completeAttributeValueQuoted(code) {
          if (code === marker) {
            effects.consume(code);
            return completeAttributeValueQuotedAfter;
          }
          if (code === null || markdownLineEnding$3(code)) {
            return nok(code);
          }
          effects.consume(code);
          return completeAttributeValueQuoted;
        }
        function completeAttributeValueUnquoted(code) {
          if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace$2(code)) {
            return completeAttributeNameAfter(code);
          }
          effects.consume(code);
          return completeAttributeValueUnquoted;
        }
        function completeAttributeValueQuotedAfter(code) {
          if (code === 47 || code === 62 || markdownSpace$3(code)) {
            return completeAttributeNameBefore(code);
          }
          return nok(code);
        }
        function completeEnd(code) {
          if (code === 62) {
            effects.consume(code);
            return completeAfter;
          }
          return nok(code);
        }
        function completeAfter(code) {
          if (markdownSpace$3(code)) {
            effects.consume(code);
            return completeAfter;
          }
          return code === null || markdownLineEnding$3(code) ? continuation(code) : nok(code);
        }
        function continuation(code) {
          if (code === 45 && kind === 2) {
            effects.consume(code);
            return continuationCommentInside;
          }
          if (code === 60 && kind === 1) {
            effects.consume(code);
            return continuationRawTagOpen;
          }
          if (code === 62 && kind === 4) {
            effects.consume(code);
            return continuationClose;
          }
          if (code === 63 && kind === 3) {
            effects.consume(code);
            return continuationDeclarationInside;
          }
          if (code === 93 && kind === 5) {
            effects.consume(code);
            return continuationCharacterDataInside;
          }
          if (markdownLineEnding$3(code) && (kind === 6 || kind === 7)) {
            return effects.check(nextBlankConstruct, continuationClose, continuationAtLineEnding)(code);
          }
          if (code === null || markdownLineEnding$3(code)) {
            return continuationAtLineEnding(code);
          }
          effects.consume(code);
          return continuation;
        }
        function continuationAtLineEnding(code) {
          effects.exit("htmlFlowData");
          return htmlContinueStart(code);
        }
        function htmlContinueStart(code) {
          if (code === null) {
            return done(code);
          }
          if (markdownLineEnding$3(code)) {
            effects.enter("lineEnding");
            effects.consume(code);
            effects.exit("lineEnding");
            return htmlContinueStart;
          }
          effects.enter("htmlFlowData");
          return continuation(code);
        }
        function continuationCommentInside(code) {
          if (code === 45) {
            effects.consume(code);
            return continuationDeclarationInside;
          }
          return continuation(code);
        }
        function continuationRawTagOpen(code) {
          if (code === 47) {
            effects.consume(code);
            buffer2 = "";
            return continuationRawEndTag;
          }
          return continuation(code);
        }
        function continuationRawEndTag(code) {
          if (code === 62 && htmlRawNames.indexOf(buffer2.toLowerCase()) > -1) {
            effects.consume(code);
            return continuationClose;
          }
          if (asciiAlpha$1(code) && buffer2.length < 8) {
            effects.consume(code);
            buffer2 += fromCharCode(code);
            return continuationRawEndTag;
          }
          return continuation(code);
        }
        function continuationCharacterDataInside(code) {
          if (code === 93) {
            effects.consume(code);
            return continuationDeclarationInside;
          }
          return continuation(code);
        }
        function continuationDeclarationInside(code) {
          if (code === 62) {
            effects.consume(code);
            return continuationClose;
          }
          return continuation(code);
        }
        function continuationClose(code) {
          if (code === null || markdownLineEnding$3(code)) {
            effects.exit("htmlFlowData");
            return done(code);
          }
          effects.consume(code);
          return continuationClose;
        }
        function done(code) {
          effects.exit("htmlFlow");
          return ok2(code);
        }
      }
      function tokenizeNextBlank(effects, ok2, nok) {
        return start;
        function start(code) {
          effects.exit("htmlFlowData");
          effects.enter("lineEndingBlank");
          effects.consume(code);
          effects.exit("lineEndingBlank");
          return effects.attempt(partialBlankLine$1, ok2, nok);
        }
      }
      var htmlFlow_1 = htmlFlow$1;
      var asciiAlpha = asciiAlpha_1;
      var asciiAlphanumeric = asciiAlphanumeric_1;
      var markdownLineEnding$2 = markdownLineEnding_1;
      var markdownLineEndingOrSpace$1 = markdownLineEndingOrSpace_1;
      var markdownSpace$2 = markdownSpace_1;
      var factorySpace$4 = factorySpace$h;
      var htmlText$1 = {
        name: "htmlText",
        tokenize: tokenizeHtmlText
      };
      function tokenizeHtmlText(effects, ok2, nok) {
        var self2 = this;
        var marker;
        var buffer2;
        var index2;
        var returnState;
        return start;
        function start(code) {
          effects.enter("htmlText");
          effects.enter("htmlTextData");
          effects.consume(code);
          return open;
        }
        function open(code) {
          if (code === 33) {
            effects.consume(code);
            return declarationOpen;
          }
          if (code === 47) {
            effects.consume(code);
            return tagCloseStart;
          }
          if (code === 63) {
            effects.consume(code);
            return instruction;
          }
          if (asciiAlpha(code)) {
            effects.consume(code);
            return tagOpen;
          }
          return nok(code);
        }
        function declarationOpen(code) {
          if (code === 45) {
            effects.consume(code);
            return commentOpen;
          }
          if (code === 91) {
            effects.consume(code);
            buffer2 = "CDATA[";
            index2 = 0;
            return cdataOpen;
          }
          if (asciiAlpha(code)) {
            effects.consume(code);
            return declaration;
          }
          return nok(code);
        }
        function commentOpen(code) {
          if (code === 45) {
            effects.consume(code);
            return commentStart;
          }
          return nok(code);
        }
        function commentStart(code) {
          if (code === null || code === 62) {
            return nok(code);
          }
          if (code === 45) {
            effects.consume(code);
            return commentStartDash;
          }
          return comment(code);
        }
        function commentStartDash(code) {
          if (code === null || code === 62) {
            return nok(code);
          }
          return comment(code);
        }
        function comment(code) {
          if (code === null) {
            return nok(code);
          }
          if (code === 45) {
            effects.consume(code);
            return commentClose;
          }
          if (markdownLineEnding$2(code)) {
            returnState = comment;
            return atLineEnding(code);
          }
          effects.consume(code);
          return comment;
        }
        function commentClose(code) {
          if (code === 45) {
            effects.consume(code);
            return end;
          }
          return comment(code);
        }
        function cdataOpen(code) {
          if (code === buffer2.charCodeAt(index2++)) {
            effects.consume(code);
            return index2 === buffer2.length ? cdata : cdataOpen;
          }
          return nok(code);
        }
        function cdata(code) {
          if (code === null) {
            return nok(code);
          }
          if (code === 93) {
            effects.consume(code);
            return cdataClose;
          }
          if (markdownLineEnding$2(code)) {
            returnState = cdata;
            return atLineEnding(code);
          }
          effects.consume(code);
          return cdata;
        }
        function cdataClose(code) {
          if (code === 93) {
            effects.consume(code);
            return cdataEnd;
          }
          return cdata(code);
        }
        function cdataEnd(code) {
          if (code === 62) {
            return end(code);
          }
          if (code === 93) {
            effects.consume(code);
            return cdataEnd;
          }
          return cdata(code);
        }
        function declaration(code) {
          if (code === null || code === 62) {
            return end(code);
          }
          if (markdownLineEnding$2(code)) {
            returnState = declaration;
            return atLineEnding(code);
          }
          effects.consume(code);
          return declaration;
        }
        function instruction(code) {
          if (code === null) {
            return nok(code);
          }
          if (code === 63) {
            effects.consume(code);
            return instructionClose;
          }
          if (markdownLineEnding$2(code)) {
            returnState = instruction;
            return atLineEnding(code);
          }
          effects.consume(code);
          return instruction;
        }
        function instructionClose(code) {
          return code === 62 ? end(code) : instruction(code);
        }
        function tagCloseStart(code) {
          if (asciiAlpha(code)) {
            effects.consume(code);
            return tagClose;
          }
          return nok(code);
        }
        function tagClose(code) {
          if (code === 45 || asciiAlphanumeric(code)) {
            effects.consume(code);
            return tagClose;
          }
          return tagCloseBetween(code);
        }
        function tagCloseBetween(code) {
          if (markdownLineEnding$2(code)) {
            returnState = tagCloseBetween;
            return atLineEnding(code);
          }
          if (markdownSpace$2(code)) {
            effects.consume(code);
            return tagCloseBetween;
          }
          return end(code);
        }
        function tagOpen(code) {
          if (code === 45 || asciiAlphanumeric(code)) {
            effects.consume(code);
            return tagOpen;
          }
          if (code === 47 || code === 62 || markdownLineEndingOrSpace$1(code)) {
            return tagOpenBetween(code);
          }
          return nok(code);
        }
        function tagOpenBetween(code) {
          if (code === 47) {
            effects.consume(code);
            return end;
          }
          if (code === 58 || code === 95 || asciiAlpha(code)) {
            effects.consume(code);
            return tagOpenAttributeName;
          }
          if (markdownLineEnding$2(code)) {
            returnState = tagOpenBetween;
            return atLineEnding(code);
          }
          if (markdownSpace$2(code)) {
            effects.consume(code);
            return tagOpenBetween;
          }
          return end(code);
        }
        function tagOpenAttributeName(code) {
          if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {
            effects.consume(code);
            return tagOpenAttributeName;
          }
          return tagOpenAttributeNameAfter(code);
        }
        function tagOpenAttributeNameAfter(code) {
          if (code === 61) {
            effects.consume(code);
            return tagOpenAttributeValueBefore;
          }
          if (markdownLineEnding$2(code)) {
            returnState = tagOpenAttributeNameAfter;
            return atLineEnding(code);
          }
          if (markdownSpace$2(code)) {
            effects.consume(code);
            return tagOpenAttributeNameAfter;
          }
          return tagOpenBetween(code);
        }
        function tagOpenAttributeValueBefore(code) {
          if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {
            return nok(code);
          }
          if (code === 34 || code === 39) {
            effects.consume(code);
            marker = code;
            return tagOpenAttributeValueQuoted;
          }
          if (markdownLineEnding$2(code)) {
            returnState = tagOpenAttributeValueBefore;
            return atLineEnding(code);
          }
          if (markdownSpace$2(code)) {
            effects.consume(code);
            return tagOpenAttributeValueBefore;
          }
          effects.consume(code);
          marker = void 0;
          return tagOpenAttributeValueUnquoted;
        }
        function tagOpenAttributeValueQuoted(code) {
          if (code === marker) {
            effects.consume(code);
            return tagOpenAttributeValueQuotedAfter;
          }
          if (code === null) {
            return nok(code);
          }
          if (markdownLineEnding$2(code)) {
            returnState = tagOpenAttributeValueQuoted;
            return atLineEnding(code);
          }
          effects.consume(code);
          return tagOpenAttributeValueQuoted;
        }
        function tagOpenAttributeValueQuotedAfter(code) {
          if (code === 62 || code === 47 || markdownLineEndingOrSpace$1(code)) {
            return tagOpenBetween(code);
          }
          return nok(code);
        }
        function tagOpenAttributeValueUnquoted(code) {
          if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {
            return nok(code);
          }
          if (code === 62 || markdownLineEndingOrSpace$1(code)) {
            return tagOpenBetween(code);
          }
          effects.consume(code);
          return tagOpenAttributeValueUnquoted;
        }
        function atLineEnding(code) {
          effects.exit("htmlTextData");
          effects.enter("lineEnding");
          effects.consume(code);
          effects.exit("lineEnding");
          return factorySpace$4(effects, afterPrefix, "linePrefix", self2.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4);
        }
        function afterPrefix(code) {
          effects.enter("htmlTextData");
          return returnState(code);
        }
        function end(code) {
          if (code === 62) {
            effects.consume(code);
            effects.exit("htmlTextData");
            effects.exit("htmlText");
            return ok2;
          }
          return nok(code);
        }
      }
      var htmlText_1 = htmlText$1;
      var markdownLineEndingOrSpace = markdownLineEndingOrSpace_1;
      var chunkedPush = chunkedPush_1;
      var chunkedSplice = chunkedSplice_1;
      var normalizeIdentifier = normalizeIdentifier_1;
      var resolveAll = resolveAll_1;
      var shallow$1 = shallow_1;
      var factoryDestination = factoryDestination$2;
      var factoryLabel = factoryLabel$2;
      var factoryTitle = factoryTitle$2;
      var factoryWhitespace = factoryWhitespace$2;
      var labelEnd$3 = {
        name: "labelEnd",
        tokenize: tokenizeLabelEnd,
        resolveTo: resolveToLabelEnd,
        resolveAll: resolveAllLabelEnd
      };
      var resourceConstruct = {
        tokenize: tokenizeResource
      };
      var fullReferenceConstruct = {
        tokenize: tokenizeFullReference
      };
      var collapsedReferenceConstruct = {
        tokenize: tokenizeCollapsedReference
      };
      function resolveAllLabelEnd(events) {
        var index2 = -1;
        var token2;
        while (++index2 < events.length) {
          token2 = events[index2][1];
          if (!token2._used && (token2.type === "labelImage" || token2.type === "labelLink" || token2.type === "labelEnd")) {
            events.splice(index2 + 1, token2.type === "labelImage" ? 4 : 2);
            token2.type = "data";
            index2++;
          }
        }
        return events;
      }
      function resolveToLabelEnd(events, context) {
        var index2 = events.length;
        var offset2 = 0;
        var group;
        var label2;
        var text2;
        var token2;
        var open;
        var close;
        var media;
        while (index2--) {
          token2 = events[index2][1];
          if (open) {
            if (token2.type === "link" || token2.type === "labelLink" && token2._inactive) {
              break;
            }
            if (events[index2][0] === "enter" && token2.type === "labelLink") {
              token2._inactive = true;
            }
          } else if (close) {
            if (events[index2][0] === "enter" && (token2.type === "labelImage" || token2.type === "labelLink") && !token2._balanced) {
              open = index2;
              if (token2.type !== "labelLink") {
                offset2 = 2;
                break;
              }
            }
          } else if (token2.type === "labelEnd") {
            close = index2;
          }
        }
        group = {
          type: events[open][1].type === "labelLink" ? "link" : "image",
          start: shallow$1(events[open][1].start),
          end: shallow$1(events[events.length - 1][1].end)
        };
        label2 = {
          type: "label",
          start: shallow$1(events[open][1].start),
          end: shallow$1(events[close][1].end)
        };
        text2 = {
          type: "labelText",
          start: shallow$1(events[open + offset2 + 2][1].end),
          end: shallow$1(events[close - 2][1].start)
        };
        media = [
          ["enter", group, context],
          ["enter", label2, context]
        ];
        media = chunkedPush(media, events.slice(open + 1, open + offset2 + 3));
        media = chunkedPush(media, [["enter", text2, context]]);
        media = chunkedPush(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset2 + 4, close - 3), context));
        media = chunkedPush(media, [
          ["exit", text2, context],
          events[close - 2],
          events[close - 1],
          ["exit", label2, context]
        ]);
        media = chunkedPush(media, events.slice(close + 1));
        media = chunkedPush(media, [["exit", group, context]]);
        chunkedSplice(events, open, events.length, media);
        return events;
      }
      function tokenizeLabelEnd(effects, ok2, nok) {
        var self2 = this;
        var index2 = self2.events.length;
        var labelStart;
        var defined;
        while (index2--) {
          if ((self2.events[index2][1].type === "labelImage" || self2.events[index2][1].type === "labelLink") && !self2.events[index2][1]._balanced) {
            labelStart = self2.events[index2][1];
            break;
          }
        }
        return start;
        function start(code) {
          if (!labelStart) {
            return nok(code);
          }
          if (labelStart._inactive)
            return balanced(code);
          defined = self2.parser.defined.indexOf(normalizeIdentifier(self2.sliceSerialize({
            start: labelStart.end,
            end: self2.now()
          }))) > -1;
          effects.enter("labelEnd");
          effects.enter("labelMarker");
          effects.consume(code);
          effects.exit("labelMarker");
          effects.exit("labelEnd");
          return afterLabelEnd;
        }
        function afterLabelEnd(code) {
          if (code === 40) {
            return effects.attempt(resourceConstruct, ok2, defined ? ok2 : balanced)(code);
          }
          if (code === 91) {
            return effects.attempt(fullReferenceConstruct, ok2, defined ? effects.attempt(collapsedReferenceConstruct, ok2, balanced) : balanced)(code);
          }
          return defined ? ok2(code) : balanced(code);
        }
        function balanced(code) {
          labelStart._balanced = true;
          return nok(code);
        }
      }
      function tokenizeResource(effects, ok2, nok) {
        return start;
        function start(code) {
          effects.enter("resource");
          effects.enter("resourceMarker");
          effects.consume(code);
          effects.exit("resourceMarker");
          return factoryWhitespace(effects, open);
        }
        function open(code) {
          if (code === 41) {
            return end(code);
          }
          return factoryDestination(effects, destinationAfter, nok, "resourceDestination", "resourceDestinationLiteral", "resourceDestinationLiteralMarker", "resourceDestinationRaw", "resourceDestinationString", 3)(code);
        }
        function destinationAfter(code) {
          return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, between)(code) : end(code);
        }
        function between(code) {
          if (code === 34 || code === 39 || code === 40) {
            return factoryTitle(effects, factoryWhitespace(effects, end), nok, "resourceTitle", "resourceTitleMarker", "resourceTitleString")(code);
          }
          return end(code);
        }
        function end(code) {
          if (code === 41) {
            effects.enter("resourceMarker");
            effects.consume(code);
            effects.exit("resourceMarker");
            effects.exit("resource");
            return ok2;
          }
          return nok(code);
        }
      }
      function tokenizeFullReference(effects, ok2, nok) {
        var self2 = this;
        return start;
        function start(code) {
          return factoryLabel.call(self2, effects, afterLabel, nok, "reference", "referenceMarker", "referenceString")(code);
        }
        function afterLabel(code) {
          return self2.parser.defined.indexOf(normalizeIdentifier(self2.sliceSerialize(self2.events[self2.events.length - 1][1]).slice(1, -1))) < 0 ? nok(code) : ok2(code);
        }
      }
      function tokenizeCollapsedReference(effects, ok2, nok) {
        return start;
        function start(code) {
          effects.enter("reference");
          effects.enter("referenceMarker");
          effects.consume(code);
          effects.exit("referenceMarker");
          return open;
        }
        function open(code) {
          if (code === 93) {
            effects.enter("referenceMarker");
            effects.consume(code);
            effects.exit("referenceMarker");
            effects.exit("reference");
            return ok2;
          }
          return nok(code);
        }
      }
      var labelEnd_1 = labelEnd$3;
      var labelEnd$2 = labelEnd_1;
      var labelStartImage$1 = {
        name: "labelStartImage",
        tokenize: tokenizeLabelStartImage,
        resolveAll: labelEnd$2.resolveAll
      };
      function tokenizeLabelStartImage(effects, ok2, nok) {
        var self2 = this;
        return start;
        function start(code) {
          effects.enter("labelImage");
          effects.enter("labelImageMarker");
          effects.consume(code);
          effects.exit("labelImageMarker");
          return open;
        }
        function open(code) {
          if (code === 91) {
            effects.enter("labelMarker");
            effects.consume(code);
            effects.exit("labelMarker");
            effects.exit("labelImage");
            return after;
          }
          return nok(code);
        }
        function after(code) {
          return code === 94 && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code) : ok2(code);
        }
      }
      var labelStartImage_1 = labelStartImage$1;
      var labelEnd$1 = labelEnd_1;
      var labelStartLink$1 = {
        name: "labelStartLink",
        tokenize: tokenizeLabelStartLink,
        resolveAll: labelEnd$1.resolveAll
      };
      function tokenizeLabelStartLink(effects, ok2, nok) {
        var self2 = this;
        return start;
        function start(code) {
          effects.enter("labelLink");
          effects.enter("labelMarker");
          effects.consume(code);
          effects.exit("labelMarker");
          effects.exit("labelLink");
          return after;
        }
        function after(code) {
          return code === 94 && "_hiddenFootnoteSupport" in self2.parser.constructs ? nok(code) : ok2(code);
        }
      }
      var labelStartLink_1 = labelStartLink$1;
      var factorySpace$3 = factorySpace$h;
      var lineEnding$1 = {
        name: "lineEnding",
        tokenize: tokenizeLineEnding
      };
      function tokenizeLineEnding(effects, ok2) {
        return start;
        function start(code) {
          effects.enter("lineEnding");
          effects.consume(code);
          effects.exit("lineEnding");
          return factorySpace$3(effects, ok2, "linePrefix");
        }
      }
      var lineEnding_1 = lineEnding$1;
      var markdownLineEnding$1 = markdownLineEnding_1;
      var markdownSpace$1 = markdownSpace_1;
      var factorySpace$2 = factorySpace$h;
      var thematicBreak$2 = {
        name: "thematicBreak",
        tokenize: tokenizeThematicBreak
      };
      function tokenizeThematicBreak(effects, ok2, nok) {
        var size = 0;
        var marker;
        return start;
        function start(code) {
          effects.enter("thematicBreak");
          marker = code;
          return atBreak(code);
        }
        function atBreak(code) {
          if (code === marker) {
            effects.enter("thematicBreakSequence");
            return sequence(code);
          }
          if (markdownSpace$1(code)) {
            return factorySpace$2(effects, atBreak, "whitespace")(code);
          }
          if (size < 3 || code !== null && !markdownLineEnding$1(code)) {
            return nok(code);
          }
          effects.exit("thematicBreak");
          return ok2(code);
        }
        function sequence(code) {
          if (code === marker) {
            effects.consume(code);
            size++;
            return sequence;
          }
          effects.exit("thematicBreakSequence");
          return atBreak(code);
        }
      }
      var thematicBreak_1 = thematicBreak$2;
      var asciiDigit = asciiDigit_1;
      var markdownSpace = markdownSpace_1;
      var prefixSize = prefixSize_1;
      var sizeChunks = sizeChunks_1;
      var factorySpace$1 = factorySpace$h;
      var partialBlankLine = partialBlankLine_1;
      var thematicBreak$1 = thematicBreak_1;
      var list$1 = {
        name: "list",
        tokenize: tokenizeListStart,
        continuation: {
          tokenize: tokenizeListContinuation
        },
        exit: tokenizeListEnd
      };
      var listItemPrefixWhitespaceConstruct = {
        tokenize: tokenizeListItemPrefixWhitespace,
        partial: true
      };
      var indentConstruct = {
        tokenize: tokenizeIndent,
        partial: true
      };
      function tokenizeListStart(effects, ok2, nok) {
        var self2 = this;
        var initialSize = prefixSize(self2.events, "linePrefix");
        var size = 0;
        return start;
        function start(code) {
          var kind = self2.containerState.type || (code === 42 || code === 43 || code === 45 ? "listUnordered" : "listOrdered");
          if (kind === "listUnordered" ? !self2.containerState.marker || code === self2.containerState.marker : asciiDigit(code)) {
            if (!self2.containerState.type) {
              self2.containerState.type = kind;
              effects.enter(kind, {
                _container: true
              });
            }
            if (kind === "listUnordered") {
              effects.enter("listItemPrefix");
              return code === 42 || code === 45 ? effects.check(thematicBreak$1, nok, atMarker)(code) : atMarker(code);
            }
            if (!self2.interrupt || code === 49) {
              effects.enter("listItemPrefix");
              effects.enter("listItemValue");
              return inside(code);
            }
          }
          return nok(code);
        }
        function inside(code) {
          if (asciiDigit(code) && ++size < 10) {
            effects.consume(code);
            return inside;
          }
          if ((!self2.interrupt || size < 2) && (self2.containerState.marker ? code === self2.containerState.marker : code === 41 || code === 46)) {
            effects.exit("listItemValue");
            return atMarker(code);
          }
          return nok(code);
        }
        function atMarker(code) {
          effects.enter("listItemMarker");
          effects.consume(code);
          effects.exit("listItemMarker");
          self2.containerState.marker = self2.containerState.marker || code;
          return effects.check(partialBlankLine, self2.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));
        }
        function onBlank(code) {
          self2.containerState.initialBlankLine = true;
          initialSize++;
          return endOfPrefix(code);
        }
        function otherPrefix(code) {
          if (markdownSpace(code)) {
            effects.enter("listItemPrefixWhitespace");
            effects.consume(code);
            effects.exit("listItemPrefixWhitespace");
            return endOfPrefix;
          }
          return nok(code);
        }
        function endOfPrefix(code) {
          self2.containerState.size = initialSize + sizeChunks(self2.sliceStream(effects.exit("listItemPrefix")));
          return ok2(code);
        }
      }
      function tokenizeListContinuation(effects, ok2, nok) {
        var self2 = this;
        self2.containerState._closeFlow = void 0;
        return effects.check(partialBlankLine, onBlank, notBlank);
        function onBlank(code) {
          self2.containerState.furtherBlankLines = self2.containerState.furtherBlankLines || self2.containerState.initialBlankLine;
          return factorySpace$1(effects, ok2, "listItemIndent", self2.containerState.size + 1)(code);
        }
        function notBlank(code) {
          if (self2.containerState.furtherBlankLines || !markdownSpace(code)) {
            self2.containerState.furtherBlankLines = self2.containerState.initialBlankLine = void 0;
            return notInCurrentItem(code);
          }
          self2.containerState.furtherBlankLines = self2.containerState.initialBlankLine = void 0;
          return effects.attempt(indentConstruct, ok2, notInCurrentItem)(code);
        }
        function notInCurrentItem(code) {
          self2.containerState._closeFlow = true;
          self2.interrupt = void 0;
          return factorySpace$1(effects, effects.attempt(list$1, ok2, nok), "linePrefix", self2.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4)(code);
        }
      }
      function tokenizeIndent(effects, ok2, nok) {
        var self2 = this;
        return factorySpace$1(effects, afterPrefix, "listItemIndent", self2.containerState.size + 1);
        function afterPrefix(code) {
          return prefixSize(self2.events, "listItemIndent") === self2.containerState.size ? ok2(code) : nok(code);
        }
      }
      function tokenizeListEnd(effects) {
        effects.exit(this.containerState.type);
      }
      function tokenizeListItemPrefixWhitespace(effects, ok2, nok) {
        var self2 = this;
        return factorySpace$1(effects, afterPrefix, "listItemPrefixWhitespace", self2.parser.constructs.disable.null.indexOf("codeIndented") > -1 ? void 0 : 4 + 1);
        function afterPrefix(code) {
          return markdownSpace(code) || !prefixSize(self2.events, "listItemPrefixWhitespace") ? nok(code) : ok2(code);
        }
      }
      var list_1 = list$1;
      var markdownLineEnding = markdownLineEnding_1;
      var shallow = shallow_1;
      var factorySpace = factorySpace$h;
      var setextUnderline$1 = {
        name: "setextUnderline",
        tokenize: tokenizeSetextUnderline,
        resolveTo: resolveToSetextUnderline
      };
      function resolveToSetextUnderline(events, context) {
        var index2 = events.length;
        var content2;
        var text2;
        var definition2;
        var heading;
        while (index2--) {
          if (events[index2][0] === "enter") {
            if (events[index2][1].type === "content") {
              content2 = index2;
              break;
            }
            if (events[index2][1].type === "paragraph") {
              text2 = index2;
            }
          } else {
            if (events[index2][1].type === "content") {
              events.splice(index2, 1);
            }
            if (!definition2 && events[index2][1].type === "definition") {
              definition2 = index2;
            }
          }
        }
        heading = {
          type: "setextHeading",
          start: shallow(events[text2][1].start),
          end: shallow(events[events.length - 1][1].end)
        };
        events[text2][1].type = "setextHeadingText";
        if (definition2) {
          events.splice(text2, 0, ["enter", heading, context]);
          events.splice(definition2 + 1, 0, ["exit", events[content2][1], context]);
          events[content2][1].end = shallow(events[definition2][1].end);
        } else {
          events[content2][1] = heading;
        }
        events.push(["exit", heading, context]);
        return events;
      }
      function tokenizeSetextUnderline(effects, ok2, nok) {
        var self2 = this;
        var index2 = self2.events.length;
        var marker;
        var paragraph;
        while (index2--) {
          if (self2.events[index2][1].type !== "lineEnding" && self2.events[index2][1].type !== "linePrefix" && self2.events[index2][1].type !== "content") {
            paragraph = self2.events[index2][1].type === "paragraph";
            break;
          }
        }
        return start;
        function start(code) {
          if (!self2.lazy && (self2.interrupt || paragraph)) {
            effects.enter("setextHeadingLine");
            effects.enter("setextHeadingLineSequence");
            marker = code;
            return closingSequence(code);
          }
          return nok(code);
        }
        function closingSequence(code) {
          if (code === marker) {
            effects.consume(code);
            return closingSequence;
          }
          effects.exit("setextHeadingLineSequence");
          return factorySpace(effects, closingSequenceEnd, "lineSuffix")(code);
        }
        function closingSequenceEnd(code) {
          if (code === null || markdownLineEnding(code)) {
            effects.exit("setextHeadingLine");
            return ok2(code);
          }
          return nok(code);
        }
      }
      var setextUnderline_1 = setextUnderline$1;
      Object.defineProperty(constructs, "__esModule", { value: true });
      var text$1 = text$3;
      var attention = attention_1;
      var autolink = autolink_1;
      var blockQuote = blockQuote_1;
      var characterEscape = characterEscape_1;
      var characterReference = characterReference_1;
      var codeFenced = codeFenced_1;
      var codeIndented = codeIndented_1;
      var codeText = codeText_1;
      var definition = definition_1;
      var hardBreakEscape = hardBreakEscape_1;
      var headingAtx = headingAtx_1;
      var htmlFlow = htmlFlow_1;
      var htmlText = htmlText_1;
      var labelEnd = labelEnd_1;
      var labelStartImage = labelStartImage_1;
      var labelStartLink = labelStartLink_1;
      var lineEnding = lineEnding_1;
      var list = list_1;
      var setextUnderline = setextUnderline_1;
      var thematicBreak = thematicBreak_1;
      var document$1 = {
        42: list,
        43: list,
        45: list,
        48: list,
        49: list,
        50: list,
        51: list,
        52: list,
        53: list,
        54: list,
        55: list,
        56: list,
        57: list,
        62: blockQuote
      };
      var contentInitial = {
        91: definition
      };
      var flowInitial = {
        "-2": codeIndented,
        "-1": codeIndented,
        32: codeIndented
      };
      var flow = {
        35: headingAtx,
        42: thematicBreak,
        45: [setextUnderline, thematicBreak],
        60: htmlFlow,
        61: setextUnderline,
        95: thematicBreak,
        96: codeFenced,
        126: codeFenced
      };
      var string = {
        38: characterReference,
        92: characterEscape
      };
      var text = {
        "-5": lineEnding,
        "-4": lineEnding,
        "-3": lineEnding,
        33: labelStartImage,
        38: characterReference,
        42: attention,
        60: [autolink, htmlText],
        91: labelStartLink,
        92: [hardBreakEscape, characterEscape],
        93: labelEnd,
        95: attention,
        96: codeText
      };
      var insideSpan = {
        null: [attention, text$1.resolver]
      };
      var disable = {
        null: []
      };
      constructs.contentInitial = contentInitial;
      constructs.disable = disable;
      constructs.document = document$1;
      constructs.flow = flow;
      constructs.flowInitial = flowInitial;
      constructs.insideSpan = insideSpan;
      constructs.string = string;
      constructs.text = text;
      var own$2 = {}.hasOwnProperty;
      var unistUtilStringifyPosition = stringify$1;
      function stringify$1(value) {
        if (!value || typeof value !== "object") {
          return "";
        }
        if (own$2.call(value, "position") || own$2.call(value, "type")) {
          return position(value.position);
        }
        if (own$2.call(value, "start") || own$2.call(value, "end")) {
          return position(value);
        }
        if (own$2.call(value, "line") || own$2.call(value, "column")) {
          return point(value);
        }
        return "";
      }
      function point(point2) {
        if (!point2 || typeof point2 !== "object") {
          point2 = {};
        }
        return index$1(point2.line) + ":" + index$1(point2.column);
      }
      function position(pos) {
        if (!pos || typeof pos !== "object") {
          pos = {};
        }
        return point(pos.start) + "-" + point(pos.end);
      }
      function index$1(value) {
        return value && typeof value === "number" ? value : 1;
      }
      var bail_1 = bail$1;
      function bail$1(err) {
        if (err) {
          throw err;
        }
      }
      var isBuffer$6 = function isBuffer2(obj) {
        return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
      };
      var hasOwn = Object.prototype.hasOwnProperty;
      var toStr = Object.prototype.toString;
      var defineProperty$4 = Object.defineProperty;
      var gOPD = Object.getOwnPropertyDescriptor;
      var isArray$f = function isArray22(arr) {
        if (typeof Array.isArray === "function") {
          return Array.isArray(arr);
        }
        return toStr.call(arr) === "[object Array]";
      };
      var isPlainObject$2 = function isPlainObject2(obj) {
        if (!obj || toStr.call(obj) !== "[object Object]") {
          return false;
        }
        var hasOwnConstructor = hasOwn.call(obj, "constructor");
        var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, "isPrototypeOf");
        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
          return false;
        }
        var key;
        for (key in obj) {
        }
        return typeof key === "undefined" || hasOwn.call(obj, key);
      };
      var setProperty = function setProperty2(target, options) {
        if (defineProperty$4 && options.name === "__proto__") {
          defineProperty$4(target, options.name, {
            enumerable: true,
            configurable: true,
            value: options.newValue,
            writable: true
          });
        } else {
          target[options.name] = options.newValue;
        }
      };
      var getProperty = function getProperty2(obj, name2) {
        if (name2 === "__proto__") {
          if (!hasOwn.call(obj, name2)) {
            return void 0;
          } else if (gOPD) {
            return gOPD(obj, name2).value;
          }
        }
        return obj[name2];
      };
      var extend$2 = function extend2() {
        var options, name2, src, copy, copyIsArray, clone2;
        var target = arguments[0];
        var i22 = 1;
        var length = arguments.length;
        var deep = false;
        if (typeof target === "boolean") {
          deep = target;
          target = arguments[1] || {};
          i22 = 2;
        }
        if (target == null || typeof target !== "object" && typeof target !== "function") {
          target = {};
        }
        for (; i22 < length; ++i22) {
          options = arguments[i22];
          if (options != null) {
            for (name2 in options) {
              src = getProperty(target, name2);
              copy = getProperty(options, name2);
              if (target !== copy) {
                if (deep && copy && (isPlainObject$2(copy) || (copyIsArray = isArray$f(copy)))) {
                  if (copyIsArray) {
                    copyIsArray = false;
                    clone2 = src && isArray$f(src) ? src : [];
                  } else {
                    clone2 = src && isPlainObject$2(src) ? src : {};
                  }
                  setProperty(target, { name: name2, newValue: extend2(deep, clone2, copy) });
                } else if (typeof copy !== "undefined") {
                  setProperty(target, { name: name2, newValue: copy });
                }
              }
            }
          }
        }
        return target;
      };
      var isPlainObj = (value) => {
        if (Object.prototype.toString.call(value) !== "[object Object]") {
          return false;
        }
        const prototype = Object.getPrototypeOf(value);
        return prototype === null || prototype === Object.prototype;
      };
      var slice$3 = [].slice;
      var wrap_1 = wrap$1;
      function wrap$1(fn2, callback) {
        var invoked;
        return wrapped;
        function wrapped() {
          var params = slice$3.call(arguments, 0);
          var callback2 = fn2.length > params.length;
          var result;
          if (callback2) {
            params.push(done);
          }
          try {
            result = fn2.apply(null, params);
          } catch (error) {
            if (callback2 && invoked) {
              throw error;
            }
            return done(error);
          }
          if (!callback2) {
            if (result && typeof result.then === "function") {
              result.then(then, done);
            } else if (result instanceof Error) {
              done(result);
            } else {
              then(result);
            }
          }
        }
        function done() {
          if (!invoked) {
            invoked = true;
            callback.apply(null, arguments);
          }
        }
        function then(value) {
          done(null, value);
        }
      }
      var wrap = wrap_1;
      var trough_1 = trough$1;
      trough$1.wrap = wrap;
      var slice$2 = [].slice;
      function trough$1() {
        var fns = [];
        var middleware = {};
        middleware.run = run;
        middleware.use = use2;
        return middleware;
        function run() {
          var index2 = -1;
          var input = slice$2.call(arguments, 0, -1);
          var done = arguments[arguments.length - 1];
          if (typeof done !== "function") {
            throw new Error("Expected function as last argument, not " + done);
          }
          next.apply(null, [null].concat(input));
          function next(err) {
            var fn2 = fns[++index2];
            var params = slice$2.call(arguments, 0);
            var values2 = params.slice(1);
            var length = input.length;
            var pos = -1;
            if (err) {
              done(err);
              return;
            }
            while (++pos < length) {
              if (values2[pos] === null || values2[pos] === void 0) {
                values2[pos] = input[pos];
              }
            }
            input = values2;
            if (fn2) {
              wrap(fn2, next).apply(null, input);
            } else {
              done.apply(null, [null].concat(input));
            }
          }
        }
        function use2(fn2) {
          if (typeof fn2 !== "function") {
            throw new Error("Expected `fn` to be a function, not " + fn2);
          }
          fns.push(fn2);
          return middleware;
        }
      }
      var stringify = unistUtilStringifyPosition;
      var vfileMessage = VMessage$1;
      function VMessagePrototype() {
      }
      VMessagePrototype.prototype = Error.prototype;
      VMessage$1.prototype = new VMessagePrototype();
      var proto$3 = VMessage$1.prototype;
      proto$3.file = "";
      proto$3.name = "";
      proto$3.reason = "";
      proto$3.message = "";
      proto$3.stack = "";
      proto$3.fatal = null;
      proto$3.column = null;
      proto$3.line = null;
      function VMessage$1(reason, position2, origin) {
        var parts;
        var range;
        var location;
        if (typeof position2 === "string") {
          origin = position2;
          position2 = null;
        }
        parts = parseOrigin(origin);
        range = stringify(position2) || "1:1";
        location = {
          start: { line: null, column: null },
          end: { line: null, column: null }
        };
        if (position2 && position2.position) {
          position2 = position2.position;
        }
        if (position2) {
          if (position2.start) {
            location = position2;
            position2 = position2.start;
          } else {
            location.start = position2;
          }
        }
        if (reason.stack) {
          this.stack = reason.stack;
          reason = reason.message;
        }
        this.message = reason;
        this.name = range;
        this.reason = reason;
        this.line = position2 ? position2.line : null;
        this.column = position2 ? position2.column : null;
        this.location = location;
        this.source = parts[0];
        this.ruleId = parts[1];
      }
      function parseOrigin(origin) {
        var result = [null, null];
        var index2;
        if (typeof origin === "string") {
          index2 = origin.indexOf(":");
          if (index2 === -1) {
            result[1] = origin;
          } else {
            result[0] = origin.slice(0, index2);
            result[1] = origin.slice(index2 + 1);
          }
        }
        return result;
      }
      var minpath_browser = {};
      minpath_browser.basename = basename;
      minpath_browser.dirname = dirname$1;
      minpath_browser.extname = extname;
      minpath_browser.join = join$1;
      minpath_browser.sep = "/";
      function basename(path, ext) {
        var start = 0;
        var end = -1;
        var index2;
        var firstNonSlashEnd;
        var seenNonSlash;
        var extIndex;
        if (ext !== void 0 && typeof ext !== "string") {
          throw new TypeError('"ext" argument must be a string');
        }
        assertPath$1(path);
        index2 = path.length;
        if (ext === void 0 || !ext.length || ext.length > path.length) {
          while (index2--) {
            if (path.charCodeAt(index2) === 47) {
              if (seenNonSlash) {
                start = index2 + 1;
                break;
              }
            } else if (end < 0) {
              seenNonSlash = true;
              end = index2 + 1;
            }
          }
          return end < 0 ? "" : path.slice(start, end);
        }
        if (ext === path) {
          return "";
        }
        firstNonSlashEnd = -1;
        extIndex = ext.length - 1;
        while (index2--) {
          if (path.charCodeAt(index2) === 47) {
            if (seenNonSlash) {
              start = index2 + 1;
              break;
            }
          } else {
            if (firstNonSlashEnd < 0) {
              seenNonSlash = true;
              firstNonSlashEnd = index2 + 1;
            }
            if (extIndex > -1) {
              if (path.charCodeAt(index2) === ext.charCodeAt(extIndex--)) {
                if (extIndex < 0) {
                  end = index2;
                }
              } else {
                extIndex = -1;
                end = firstNonSlashEnd;
              }
            }
          }
        }
        if (start === end) {
          end = firstNonSlashEnd;
        } else if (end < 0) {
          end = path.length;
        }
        return path.slice(start, end);
      }
      function dirname$1(path) {
        var end;
        var unmatchedSlash;
        var index2;
        assertPath$1(path);
        if (!path.length) {
          return ".";
        }
        end = -1;
        index2 = path.length;
        while (--index2) {
          if (path.charCodeAt(index2) === 47) {
            if (unmatchedSlash) {
              end = index2;
              break;
            }
          } else if (!unmatchedSlash) {
            unmatchedSlash = true;
          }
        }
        return end < 0 ? path.charCodeAt(0) === 47 ? "/" : "." : end === 1 && path.charCodeAt(0) === 47 ? "//" : path.slice(0, end);
      }
      function extname(path) {
        var startDot = -1;
        var startPart = 0;
        var end = -1;
        var preDotState = 0;
        var unmatchedSlash;
        var code;
        var index2;
        assertPath$1(path);
        index2 = path.length;
        while (index2--) {
          code = path.charCodeAt(index2);
          if (code === 47) {
            if (unmatchedSlash) {
              startPart = index2 + 1;
              break;
            }
            continue;
          }
          if (end < 0) {
            unmatchedSlash = true;
            end = index2 + 1;
          }
          if (code === 46) {
            if (startDot < 0) {
              startDot = index2;
            } else if (preDotState !== 1) {
              preDotState = 1;
            }
          } else if (startDot > -1) {
            preDotState = -1;
          }
        }
        if (startDot < 0 || end < 0 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
          return "";
        }
        return path.slice(startDot, end);
      }
      function join$1() {
        var index2 = -1;
        var joined;
        while (++index2 < arguments.length) {
          assertPath$1(arguments[index2]);
          if (arguments[index2]) {
            joined = joined === void 0 ? arguments[index2] : joined + "/" + arguments[index2];
          }
        }
        return joined === void 0 ? "." : normalize(joined);
      }
      function normalize(path) {
        var absolute;
        var value;
        assertPath$1(path);
        absolute = path.charCodeAt(0) === 47;
        value = normalizeString(path, !absolute);
        if (!value.length && !absolute) {
          value = ".";
        }
        if (value.length && path.charCodeAt(path.length - 1) === 47) {
          value += "/";
        }
        return absolute ? "/" + value : value;
      }
      function normalizeString(path, allowAboveRoot) {
        var result = "";
        var lastSegmentLength = 0;
        var lastSlash = -1;
        var dots = 0;
        var index2 = -1;
        var code;
        var lastSlashIndex;
        while (++index2 <= path.length) {
          if (index2 < path.length) {
            code = path.charCodeAt(index2);
          } else if (code === 47) {
            break;
          } else {
            code = 47;
          }
          if (code === 47) {
            if (lastSlash === index2 - 1 || dots === 1)
              ;
            else if (lastSlash !== index2 - 1 && dots === 2) {
              if (result.length < 2 || lastSegmentLength !== 2 || result.charCodeAt(result.length - 1) !== 46 || result.charCodeAt(result.length - 2) !== 46) {
                if (result.length > 2) {
                  lastSlashIndex = result.lastIndexOf("/");
                  if (lastSlashIndex !== result.length - 1) {
                    if (lastSlashIndex < 0) {
                      result = "";
                      lastSegmentLength = 0;
                    } else {
                      result = result.slice(0, lastSlashIndex);
                      lastSegmentLength = result.length - 1 - result.lastIndexOf("/");
                    }
                    lastSlash = index2;
                    dots = 0;
                    continue;
                  }
                } else if (result.length) {
                  result = "";
                  lastSegmentLength = 0;
                  lastSlash = index2;
                  dots = 0;
                  continue;
                }
              }
              if (allowAboveRoot) {
                result = result.length ? result + "/.." : "..";
                lastSegmentLength = 2;
              }
            } else {
              if (result.length) {
                result += "/" + path.slice(lastSlash + 1, index2);
              } else {
                result = path.slice(lastSlash + 1, index2);
              }
              lastSegmentLength = index2 - lastSlash - 1;
            }
            lastSlash = index2;
            dots = 0;
          } else if (code === 46 && dots > -1) {
            dots++;
          } else {
            dots = -1;
          }
        }
        return result;
      }
      function assertPath$1(path) {
        if (typeof path !== "string") {
          throw new TypeError("Path must be a string. Received " + JSON.stringify(path));
        }
      }
      var minproc_browser = {};
      minproc_browser.cwd = cwd;
      function cwd() {
        return "/";
      }
      var p9 = minpath_browser;
      var proc = minproc_browser;
      var buffer$1 = isBuffer$6;
      var core = VFile$1;
      var own$1 = {}.hasOwnProperty;
      var order = ["history", "path", "basename", "stem", "extname", "dirname"];
      VFile$1.prototype.toString = toString$4;
      Object.defineProperty(VFile$1.prototype, "path", { get: getPath, set: setPath });
      Object.defineProperty(VFile$1.prototype, "dirname", {
        get: getDirname,
        set: setDirname
      });
      Object.defineProperty(VFile$1.prototype, "basename", {
        get: getBasename,
        set: setBasename
      });
      Object.defineProperty(VFile$1.prototype, "extname", {
        get: getExtname,
        set: setExtname
      });
      Object.defineProperty(VFile$1.prototype, "stem", { get: getStem, set: setStem });
      function VFile$1(options) {
        var prop;
        var index2;
        if (!options) {
          options = {};
        } else if (typeof options === "string" || buffer$1(options)) {
          options = { contents: options };
        } else if ("message" in options && "messages" in options) {
          return options;
        }
        if (!(this instanceof VFile$1)) {
          return new VFile$1(options);
        }
        this.data = {};
        this.messages = [];
        this.history = [];
        this.cwd = proc.cwd();
        index2 = -1;
        while (++index2 < order.length) {
          prop = order[index2];
          if (own$1.call(options, prop)) {
            this[prop] = options[prop];
          }
        }
        for (prop in options) {
          if (order.indexOf(prop) < 0) {
            this[prop] = options[prop];
          }
        }
      }
      function getPath() {
        return this.history[this.history.length - 1];
      }
      function setPath(path) {
        assertNonEmpty(path, "path");
        if (this.path !== path) {
          this.history.push(path);
        }
      }
      function getDirname() {
        return typeof this.path === "string" ? p9.dirname(this.path) : void 0;
      }
      function setDirname(dirname2) {
        assertPath(this.path, "dirname");
        this.path = p9.join(dirname2 || "", this.basename);
      }
      function getBasename() {
        return typeof this.path === "string" ? p9.basename(this.path) : void 0;
      }
      function setBasename(basename2) {
        assertNonEmpty(basename2, "basename");
        assertPart(basename2, "basename");
        this.path = p9.join(this.dirname || "", basename2);
      }
      function getExtname() {
        return typeof this.path === "string" ? p9.extname(this.path) : void 0;
      }
      function setExtname(extname2) {
        assertPart(extname2, "extname");
        assertPath(this.path, "extname");
        if (extname2) {
          if (extname2.charCodeAt(0) !== 46) {
            throw new Error("`extname` must start with `.`");
          }
          if (extname2.indexOf(".", 1) > -1) {
            throw new Error("`extname` cannot contain multiple dots");
          }
        }
        this.path = p9.join(this.dirname, this.stem + (extname2 || ""));
      }
      function getStem() {
        return typeof this.path === "string" ? p9.basename(this.path, this.extname) : void 0;
      }
      function setStem(stem) {
        assertNonEmpty(stem, "stem");
        assertPart(stem, "stem");
        this.path = p9.join(this.dirname || "", stem + (this.extname || ""));
      }
      function toString$4(encoding) {
        return (this.contents || "").toString(encoding);
      }
      function assertPart(part, name2) {
        if (part && part.indexOf(p9.sep) > -1) {
          throw new Error("`" + name2 + "` cannot be a path: did not expect `" + p9.sep + "`");
        }
      }
      function assertNonEmpty(part, name2) {
        if (!part) {
          throw new Error("`" + name2 + "` cannot be empty");
        }
      }
      function assertPath(path, name2) {
        if (!path) {
          throw new Error("Setting `" + name2 + "` requires `path` to be set too");
        }
      }
      var VMessage = vfileMessage;
      var VFile = core;
      var lib$3 = VFile;
      VFile.prototype.message = message;
      VFile.prototype.info = info;
      VFile.prototype.fail = fail;
      function message(reason, position2, origin) {
        var message2 = new VMessage(reason, position2, origin);
        if (this.path) {
          message2.name = this.path + ":" + message2.name;
          message2.file = this.path;
        }
        message2.fatal = false;
        this.messages.push(message2);
        return message2;
      }
      function fail() {
        var message2 = this.message.apply(this, arguments);
        message2.fatal = true;
        throw message2;
      }
      function info() {
        var message2 = this.message.apply(this, arguments);
        message2.fatal = null;
        return message2;
      }
      var vfile$1 = lib$3;
      var bail = bail_1;
      var buffer = isBuffer$6;
      var extend$1 = extend$2;
      var plain = isPlainObj;
      var trough = trough_1;
      var vfile = vfile$1;
      unified().freeze();
      var slice$1 = [].slice;
      var own = {}.hasOwnProperty;
      var pipeline = trough().use(pipelineParse).use(pipelineRun).use(pipelineStringify);
      function pipelineParse(p22, ctx) {
        ctx.tree = p22.parse(ctx.file);
      }
      function pipelineRun(p22, ctx, next) {
        p22.run(ctx.tree, ctx.file, done);
        function done(error, tree, file) {
          if (error) {
            next(error);
          } else {
            ctx.tree = tree;
            ctx.file = file;
            next();
          }
        }
      }
      function pipelineStringify(p22, ctx) {
        var result = p22.stringify(ctx.tree, ctx.file);
        if (result === void 0 || result === null)
          ;
        else if (typeof result === "string" || buffer(result)) {
          if ("value" in ctx.file) {
            ctx.file.value = result;
          }
          ctx.file.contents = result;
        } else {
          ctx.file.result = result;
        }
      }
      function unified() {
        var attachers = [];
        var transformers = trough();
        var namespace = {};
        var freezeIndex = -1;
        var frozen;
        processor.data = data;
        processor.freeze = freeze;
        processor.attachers = attachers;
        processor.use = use2;
        processor.parse = parse;
        processor.stringify = stringify2;
        processor.run = run;
        processor.runSync = runSync;
        processor.process = process2;
        processor.processSync = processSync;
        return processor;
        function processor() {
          var destination = unified();
          var index2 = -1;
          while (++index2 < attachers.length) {
            destination.use.apply(null, attachers[index2]);
          }
          destination.data(extend$1(true, {}, namespace));
          return destination;
        }
        function freeze() {
          var values2;
          var transformer;
          if (frozen) {
            return processor;
          }
          while (++freezeIndex < attachers.length) {
            values2 = attachers[freezeIndex];
            if (values2[1] === false) {
              continue;
            }
            if (values2[1] === true) {
              values2[1] = void 0;
            }
            transformer = values2[0].apply(processor, values2.slice(1));
            if (typeof transformer === "function") {
              transformers.use(transformer);
            }
          }
          frozen = true;
          freezeIndex = Infinity;
          return processor;
        }
        function data(key, value) {
          if (typeof key === "string") {
            if (arguments.length === 2) {
              assertUnfrozen("data", frozen);
              namespace[key] = value;
              return processor;
            }
            return own.call(namespace, key) && namespace[key] || null;
          }
          if (key) {
            assertUnfrozen("data", frozen);
            namespace = key;
            return processor;
          }
          return namespace;
        }
        function use2(value) {
          var settings;
          assertUnfrozen("use", frozen);
          if (value === null || value === void 0)
            ;
          else if (typeof value === "function") {
            addPlugin.apply(null, arguments);
          } else if (typeof value === "object") {
            if ("length" in value) {
              addList(value);
            } else {
              addPreset(value);
            }
          } else {
            throw new Error("Expected usable value, not `" + value + "`");
          }
          if (settings) {
            namespace.settings = extend$1(namespace.settings || {}, settings);
          }
          return processor;
          function addPreset(result) {
            addList(result.plugins);
            if (result.settings) {
              settings = extend$1(settings || {}, result.settings);
            }
          }
          function add2(value2) {
            if (typeof value2 === "function") {
              addPlugin(value2);
            } else if (typeof value2 === "object") {
              if ("length" in value2) {
                addPlugin.apply(null, value2);
              } else {
                addPreset(value2);
              }
            } else {
              throw new Error("Expected usable value, not `" + value2 + "`");
            }
          }
          function addList(plugins) {
            var index2 = -1;
            if (plugins === null || plugins === void 0)
              ;
            else if (typeof plugins === "object" && "length" in plugins) {
              while (++index2 < plugins.length) {
                add2(plugins[index2]);
              }
            } else {
              throw new Error("Expected a list of plugins, not `" + plugins + "`");
            }
          }
          function addPlugin(plugin, value2) {
            var entry = find(plugin);
            if (entry) {
              if (plain(entry[1]) && plain(value2)) {
                value2 = extend$1(true, entry[1], value2);
              }
              entry[1] = value2;
            } else {
              attachers.push(slice$1.call(arguments));
            }
          }
        }
        function find(plugin) {
          var index2 = -1;
          while (++index2 < attachers.length) {
            if (attachers[index2][0] === plugin) {
              return attachers[index2];
            }
          }
        }
        function parse(doc) {
          var file = vfile(doc);
          var Parser;
          freeze();
          Parser = processor.Parser;
          assertParser("parse", Parser);
          if (newable(Parser, "parse")) {
            return new Parser(String(file), file).parse();
          }
          return Parser(String(file), file);
        }
        function run(node, file, cb2) {
          assertNode(node);
          freeze();
          if (!cb2 && typeof file === "function") {
            cb2 = file;
            file = null;
          }
          if (!cb2) {
            return new Promise(executor);
          }
          executor(null, cb2);
          function executor(resolve, reject) {
            transformers.run(node, vfile(file), done);
            function done(error, tree, file2) {
              tree = tree || node;
              if (error) {
                reject(error);
              } else if (resolve) {
                resolve(tree);
              } else {
                cb2(null, tree, file2);
              }
            }
          }
        }
        function runSync(node, file) {
          var result;
          var complete;
          run(node, file, done);
          assertDone("runSync", "run", complete);
          return result;
          function done(error, tree) {
            complete = true;
            result = tree;
            bail(error);
          }
        }
        function stringify2(node, doc) {
          var file = vfile(doc);
          var Compiler;
          freeze();
          Compiler = processor.Compiler;
          assertCompiler("stringify", Compiler);
          assertNode(node);
          if (newable(Compiler, "compile")) {
            return new Compiler(node, file).compile();
          }
          return Compiler(node, file);
        }
        function process2(doc, cb2) {
          freeze();
          assertParser("process", processor.Parser);
          assertCompiler("process", processor.Compiler);
          if (!cb2) {
            return new Promise(executor);
          }
          executor(null, cb2);
          function executor(resolve, reject) {
            var file = vfile(doc);
            pipeline.run(processor, { file }, done);
            function done(error) {
              if (error) {
                reject(error);
              } else if (resolve) {
                resolve(file);
              } else {
                cb2(null, file);
              }
            }
          }
        }
        function processSync(doc) {
          var file;
          var complete;
          freeze();
          assertParser("processSync", processor.Parser);
          assertCompiler("processSync", processor.Compiler);
          file = vfile(doc);
          process2(file, done);
          assertDone("processSync", "process", complete);
          return file;
          function done(error) {
            complete = true;
            bail(error);
          }
        }
      }
      function newable(value, name2) {
        return typeof value === "function" && value.prototype && (keys$8(value.prototype) || name2 in value.prototype);
      }
      function keys$8(value) {
        var key;
        for (key in value) {
          return true;
        }
        return false;
      }
      function assertParser(name2, Parser) {
        if (typeof Parser !== "function") {
          throw new Error("Cannot `" + name2 + "` without `Parser`");
        }
      }
      function assertCompiler(name2, Compiler) {
        if (typeof Compiler !== "function") {
          throw new Error("Cannot `" + name2 + "` without `Compiler`");
        }
      }
      function assertUnfrozen(name2, frozen) {
        if (frozen) {
          throw new Error("Cannot invoke `" + name2 + "` on a frozen processor.\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.");
        }
      }
      function assertNode(node) {
        if (!node || typeof node.type !== "string") {
          throw new Error("Expected node, got `" + node + "`");
        }
      }
      function assertDone(name2, asyncName, complete) {
        if (!complete) {
          throw new Error("`" + name2 + "` finished async. Use `" + asyncName + "` instead");
        }
      }
      const MARK_BOLD = "bold";
      const createBoldPlugin = createPluginFactory({
        key: MARK_BOLD,
        isLeaf: true,
        deserializeHtml: {
          rules: [{
            validNodeName: ["STRONG", "B"]
          }, {
            validStyle: {
              fontWeight: ["600", "700", "bold"]
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.fontWeight === "normal")
        },
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+b"
        }
      });
      const MARK_CODE = "code";
      const createCodePlugin = createPluginFactory({
        key: MARK_CODE,
        isLeaf: true,
        deserializeHtml: {
          rules: [{
            validNodeName: ["CODE"]
          }, {
            validStyle: {
              wordWrap: "break-word"
            }
          }, {
            validStyle: {
              fontFamily: "Consolas"
            }
          }],
          query(el2) {
            const blockAbove = findHtmlParentElement(el2, "P");
            if ((blockAbove === null || blockAbove === void 0 ? void 0 : blockAbove.style.fontFamily) === "Consolas")
              return false;
            return !findHtmlParentElement(el2, "PRE");
          }
        },
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+e"
        }
      });
      const MARK_ITALIC = "italic";
      const createItalicPlugin = createPluginFactory({
        key: MARK_ITALIC,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+i"
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["EM", "I"]
          }, {
            validStyle: {
              fontStyle: "italic"
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.fontStyle === "normal")
        }
      });
      const MARK_STRIKETHROUGH = "strikethrough";
      const createStrikethroughPlugin = createPluginFactory({
        key: MARK_STRIKETHROUGH,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+shift+x"
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["S", "DEL", "STRIKE"]
          }, {
            validStyle: {
              textDecoration: "line-through"
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.textDecoration === "none")
        }
      });
      const MARK_SUBSCRIPT$1 = "subscript";
      const MARK_SUPERSCRIPT$1 = "superscript";
      const createSubscriptPlugin = createPluginFactory({
        key: MARK_SUBSCRIPT$1,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+,",
          clear: MARK_SUPERSCRIPT$1
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["SUB"]
          }, {
            validStyle: {
              verticalAlign: "sub"
            }
          }]
        }
      });
      const MARK_SUPERSCRIPT = "superscript";
      const MARK_SUBSCRIPT = "subscript";
      const createSuperscriptPlugin = createPluginFactory({
        key: MARK_SUPERSCRIPT,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+.",
          clear: MARK_SUBSCRIPT
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["SUP"]
          }, {
            validStyle: {
              verticalAlign: "super"
            }
          }]
        }
      });
      const MARK_UNDERLINE = "underline";
      const createUnderlinePlugin = createPluginFactory({
        key: MARK_UNDERLINE,
        isLeaf: true,
        handlers: {
          onKeyDown: onKeyDownToggleMark
        },
        options: {
          hotkey: "mod+u"
        },
        deserializeHtml: {
          rules: [{
            validNodeName: ["U"]
          }, {
            validStyle: {
              textDecoration: ["underline"]
            }
          }],
          query: (el2) => !someHtmlElement(el2, (node) => node.style.textDecoration === "none")
        }
      });
      createPluginFactory({
        key: "basicMarks",
        plugins: [createBoldPlugin(), createCodePlugin(), createItalicPlugin(), createStrikethroughPlugin(), createSubscriptPlugin(), createSuperscriptPlugin(), createUnderlinePlugin()]
      });
      var __extends$1 = function() {
        var extendStatics = function(d22, b22) {
          extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d32, b32) {
            d32.__proto__ = b32;
          } || function(d32, b32) {
            for (var p22 in b32)
              if (Object.prototype.hasOwnProperty.call(b32, p22))
                d32[p22] = b32[p22];
          };
          return extendStatics(d22, b22);
        };
        return function(d22, b22) {
          extendStatics(d22, b22);
          function __() {
            this.constructor = d22;
          }
          d22.prototype = b22 === null ? Object.create(b22) : (__.prototype = b22.prototype, new __());
        };
      }();
      var __assign$1 = function() {
        __assign$1 = Object.assign || function(t22) {
          for (var s22, i22 = 1, n22 = arguments.length; i22 < n22; i22++) {
            s22 = arguments[i22];
            for (var p22 in s22)
              if (Object.prototype.hasOwnProperty.call(s22, p22))
                t22[p22] = s22[p22];
          }
          return t22;
        };
        return __assign$1.apply(this, arguments);
      };
      var rowSizeBase = {
        width: "100%",
        height: "10px",
        top: "0px",
        left: "0px",
        cursor: "row-resize"
      };
      var colSizeBase = {
        width: "10px",
        height: "100%",
        top: "0px",
        left: "0px",
        cursor: "col-resize"
      };
      var edgeBase = {
        width: "20px",
        height: "20px",
        position: "absolute"
      };
      var styles$1 = {
        top: __assign$1(__assign$1({}, rowSizeBase), { top: "-5px" }),
        right: __assign$1(__assign$1({}, colSizeBase), { left: void 0, right: "-5px" }),
        bottom: __assign$1(__assign$1({}, rowSizeBase), { top: void 0, bottom: "-5px" }),
        left: __assign$1(__assign$1({}, colSizeBase), { left: "-5px" }),
        topRight: __assign$1(__assign$1({}, edgeBase), { right: "-10px", top: "-10px", cursor: "ne-resize" }),
        bottomRight: __assign$1(__assign$1({}, edgeBase), { right: "-10px", bottom: "-10px", cursor: "se-resize" }),
        bottomLeft: __assign$1(__assign$1({}, edgeBase), { left: "-10px", bottom: "-10px", cursor: "sw-resize" }),
        topLeft: __assign$1(__assign$1({}, edgeBase), { left: "-10px", top: "-10px", cursor: "nw-resize" })
      };
      var Resizer = function(_super) {
        __extends$1(Resizer2, _super);
        function Resizer2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.onMouseDown = function(e22) {
            _this.props.onResizeStart(e22, _this.props.direction);
          };
          _this.onTouchStart = function(e22) {
            _this.props.onResizeStart(e22, _this.props.direction);
          };
          return _this;
        }
        Resizer2.prototype.render = function() {
          return react.exports.createElement("div", { className: this.props.className || "", style: __assign$1(__assign$1({ position: "absolute", userSelect: "none" }, styles$1[this.props.direction]), this.props.replaceStyles || {}), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children);
        };
        return Resizer2;
      }(react.exports.PureComponent);
      var __extends = function() {
        var extendStatics = function(d22, b22) {
          extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d32, b32) {
            d32.__proto__ = b32;
          } || function(d32, b32) {
            for (var p22 in b32)
              if (Object.prototype.hasOwnProperty.call(b32, p22))
                d32[p22] = b32[p22];
          };
          return extendStatics(d22, b22);
        };
        return function(d22, b22) {
          extendStatics(d22, b22);
          function __() {
            this.constructor = d22;
          }
          d22.prototype = b22 === null ? Object.create(b22) : (__.prototype = b22.prototype, new __());
        };
      }();
      var __assign$2 = function() {
        __assign$2 = Object.assign || function(t22) {
          for (var s22, i22 = 1, n22 = arguments.length; i22 < n22; i22++) {
            s22 = arguments[i22];
            for (var p22 in s22)
              if (Object.prototype.hasOwnProperty.call(s22, p22))
                t22[p22] = s22[p22];
          }
          return t22;
        };
        return __assign$2.apply(this, arguments);
      };
      var DEFAULT_SIZE$2 = {
        width: "auto",
        height: "auto"
      };
      var clamp$1 = function(n22, min2, max2) {
        return Math.max(Math.min(n22, max2), min2);
      };
      var snap = function(n22, size) {
        return Math.round(n22 / size) * size;
      };
      var hasDirection = function(dir, target) {
        return new RegExp(dir, "i").test(target);
      };
      var isTouchEvent = function(event) {
        return Boolean(event.touches && event.touches.length);
      };
      var isMouseEvent = function(event) {
        return Boolean((event.clientX || event.clientX === 0) && (event.clientY || event.clientY === 0));
      };
      var findClosestSnap = function(n22, snapArray, snapGap) {
        if (snapGap === void 0) {
          snapGap = 0;
        }
        var closestGapIndex = snapArray.reduce(function(prev, curr, index2) {
          return Math.abs(curr - n22) < Math.abs(snapArray[prev] - n22) ? index2 : prev;
        }, 0);
        var gap = Math.abs(snapArray[closestGapIndex] - n22);
        return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n22;
      };
      var getStringSize = function(n22) {
        n22 = n22.toString();
        if (n22 === "auto") {
          return n22;
        }
        if (n22.endsWith("px")) {
          return n22;
        }
        if (n22.endsWith("%")) {
          return n22;
        }
        if (n22.endsWith("vh")) {
          return n22;
        }
        if (n22.endsWith("vw")) {
          return n22;
        }
        if (n22.endsWith("vmax")) {
          return n22;
        }
        if (n22.endsWith("vmin")) {
          return n22;
        }
        return n22 + "px";
      };
      var getPixelSize = function(size, parentSize, innerWidth, innerHeight) {
        if (size && typeof size === "string") {
          if (size.endsWith("px")) {
            return Number(size.replace("px", ""));
          }
          if (size.endsWith("%")) {
            var ratio = Number(size.replace("%", "")) / 100;
            return parentSize * ratio;
          }
          if (size.endsWith("vw")) {
            var ratio = Number(size.replace("vw", "")) / 100;
            return innerWidth * ratio;
          }
          if (size.endsWith("vh")) {
            var ratio = Number(size.replace("vh", "")) / 100;
            return innerHeight * ratio;
          }
        }
        return size;
      };
      var calculateNewMax = function(parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {
        maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);
        maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);
        minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);
        minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);
        return {
          maxWidth: typeof maxWidth === "undefined" ? void 0 : Number(maxWidth),
          maxHeight: typeof maxHeight === "undefined" ? void 0 : Number(maxHeight),
          minWidth: typeof minWidth === "undefined" ? void 0 : Number(minWidth),
          minHeight: typeof minHeight === "undefined" ? void 0 : Number(minHeight)
        };
      };
      var definedProps = [
        "as",
        "style",
        "className",
        "grid",
        "snap",
        "bounds",
        "boundsByDirection",
        "size",
        "defaultSize",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "lockAspectRatio",
        "lockAspectRatioExtraWidth",
        "lockAspectRatioExtraHeight",
        "enable",
        "handleStyles",
        "handleClasses",
        "handleWrapperStyle",
        "handleWrapperClass",
        "children",
        "onResizeStart",
        "onResize",
        "onResizeStop",
        "handleComponent",
        "scale",
        "resizeRatio",
        "snapGap"
      ];
      var baseClassName = "__resizable_base__";
      (function(_super) {
        __extends(Resizable, _super);
        function Resizable(props) {
          var _this = _super.call(this, props) || this;
          _this.ratio = 1;
          _this.resizable = null;
          _this.parentLeft = 0;
          _this.parentTop = 0;
          _this.resizableLeft = 0;
          _this.resizableRight = 0;
          _this.resizableTop = 0;
          _this.resizableBottom = 0;
          _this.targetLeft = 0;
          _this.targetTop = 0;
          _this.appendBase = function() {
            if (!_this.resizable || !_this.window) {
              return null;
            }
            var parent2 = _this.parentNode;
            if (!parent2) {
              return null;
            }
            var element = _this.window.document.createElement("div");
            element.style.width = "100%";
            element.style.height = "100%";
            element.style.position = "absolute";
            element.style.transform = "scale(0, 0)";
            element.style.left = "0";
            element.style.flex = "0 0 100%";
            if (element.classList) {
              element.classList.add(baseClassName);
            } else {
              element.className += baseClassName;
            }
            parent2.appendChild(element);
            return element;
          };
          _this.removeBase = function(base) {
            var parent2 = _this.parentNode;
            if (!parent2) {
              return;
            }
            parent2.removeChild(base);
          };
          _this.ref = function(c22) {
            if (c22) {
              _this.resizable = c22;
            }
          };
          _this.state = {
            isResizing: false,
            width: typeof (_this.propsSize && _this.propsSize.width) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.width,
            height: typeof (_this.propsSize && _this.propsSize.height) === "undefined" ? "auto" : _this.propsSize && _this.propsSize.height,
            direction: "right",
            original: {
              x: 0,
              y: 0,
              width: 0,
              height: 0
            },
            backgroundStyle: {
              height: "100%",
              width: "100%",
              backgroundColor: "rgba(0,0,0,0)",
              cursor: "auto",
              opacity: 0,
              position: "fixed",
              zIndex: 9999,
              top: "0",
              left: "0",
              bottom: "0",
              right: "0"
            },
            flexBasis: void 0
          };
          _this.onResizeStart = _this.onResizeStart.bind(_this);
          _this.onMouseMove = _this.onMouseMove.bind(_this);
          _this.onMouseUp = _this.onMouseUp.bind(_this);
          return _this;
        }
        Object.defineProperty(Resizable.prototype, "parentNode", {
          get: function() {
            if (!this.resizable) {
              return null;
            }
            return this.resizable.parentNode;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "window", {
          get: function() {
            if (!this.resizable) {
              return null;
            }
            if (!this.resizable.ownerDocument) {
              return null;
            }
            return this.resizable.ownerDocument.defaultView;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "propsSize", {
          get: function() {
            return this.props.size || this.props.defaultSize || DEFAULT_SIZE$2;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "size", {
          get: function() {
            var width = 0;
            var height = 0;
            if (this.resizable && this.window) {
              var orgWidth = this.resizable.offsetWidth;
              var orgHeight = this.resizable.offsetHeight;
              var orgPosition = this.resizable.style.position;
              if (orgPosition !== "relative") {
                this.resizable.style.position = "relative";
              }
              width = this.resizable.style.width !== "auto" ? this.resizable.offsetWidth : orgWidth;
              height = this.resizable.style.height !== "auto" ? this.resizable.offsetHeight : orgHeight;
              this.resizable.style.position = orgPosition;
            }
            return { width, height };
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Resizable.prototype, "sizeStyle", {
          get: function() {
            var _this = this;
            var size = this.props.size;
            var getSize = function(key) {
              if (typeof _this.state[key] === "undefined" || _this.state[key] === "auto") {
                return "auto";
              }
              if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith("%")) {
                if (_this.state[key].toString().endsWith("%")) {
                  return _this.state[key].toString();
                }
                var parentSize = _this.getParentSize();
                var value = Number(_this.state[key].toString().replace("px", ""));
                var percent = value / parentSize[key] * 100;
                return percent + "%";
              }
              return getStringSize(_this.state[key]);
            };
            var width = size && typeof size.width !== "undefined" && !this.state.isResizing ? getStringSize(size.width) : getSize("width");
            var height = size && typeof size.height !== "undefined" && !this.state.isResizing ? getStringSize(size.height) : getSize("height");
            return { width, height };
          },
          enumerable: false,
          configurable: true
        });
        Resizable.prototype.getParentSize = function() {
          if (!this.parentNode) {
            if (!this.window) {
              return { width: 0, height: 0 };
            }
            return { width: this.window.innerWidth, height: this.window.innerHeight };
          }
          var base = this.appendBase();
          if (!base) {
            return { width: 0, height: 0 };
          }
          var wrapChanged = false;
          var wrap2 = this.parentNode.style.flexWrap;
          if (wrap2 !== "wrap") {
            wrapChanged = true;
            this.parentNode.style.flexWrap = "wrap";
          }
          base.style.position = "relative";
          base.style.minWidth = "100%";
          base.style.minHeight = "100%";
          var size = {
            width: base.offsetWidth,
            height: base.offsetHeight
          };
          if (wrapChanged) {
            this.parentNode.style.flexWrap = wrap2;
          }
          this.removeBase(base);
          return size;
        };
        Resizable.prototype.bindEvents = function() {
          if (this.window) {
            this.window.addEventListener("mouseup", this.onMouseUp);
            this.window.addEventListener("mousemove", this.onMouseMove);
            this.window.addEventListener("mouseleave", this.onMouseUp);
            this.window.addEventListener("touchmove", this.onMouseMove, {
              capture: true,
              passive: false
            });
            this.window.addEventListener("touchend", this.onMouseUp);
          }
        };
        Resizable.prototype.unbindEvents = function() {
          if (this.window) {
            this.window.removeEventListener("mouseup", this.onMouseUp);
            this.window.removeEventListener("mousemove", this.onMouseMove);
            this.window.removeEventListener("mouseleave", this.onMouseUp);
            this.window.removeEventListener("touchmove", this.onMouseMove, true);
            this.window.removeEventListener("touchend", this.onMouseUp);
          }
        };
        Resizable.prototype.componentDidMount = function() {
          if (!this.resizable || !this.window) {
            return;
          }
          var computedStyle = this.window.getComputedStyle(this.resizable);
          this.setState({
            width: this.state.width || this.size.width,
            height: this.state.height || this.size.height,
            flexBasis: computedStyle.flexBasis !== "auto" ? computedStyle.flexBasis : void 0
          });
        };
        Resizable.prototype.componentWillUnmount = function() {
          if (this.window) {
            this.unbindEvents();
          }
        };
        Resizable.prototype.createSizeForCssProperty = function(newSize, kind) {
          var propsSize = this.propsSize && this.propsSize[kind];
          return this.state[kind] === "auto" && this.state.original[kind] === newSize && (typeof propsSize === "undefined" || propsSize === "auto") ? "auto" : newSize;
        };
        Resizable.prototype.calculateNewMaxFromBoundary = function(maxWidth, maxHeight) {
          var boundsByDirection = this.props.boundsByDirection;
          var direction = this.state.direction;
          var widthByDirection = boundsByDirection && hasDirection("left", direction);
          var heightByDirection = boundsByDirection && hasDirection("top", direction);
          var boundWidth;
          var boundHeight;
          if (this.props.bounds === "parent") {
            var parent_1 = this.parentNode;
            if (parent_1) {
              boundWidth = widthByDirection ? this.resizableRight - this.parentLeft : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);
              boundHeight = heightByDirection ? this.resizableBottom - this.parentTop : parent_1.offsetHeight + (this.parentTop - this.resizableTop);
            }
          } else if (this.props.bounds === "window") {
            if (this.window) {
              boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;
              boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;
            }
          } else if (this.props.bounds) {
            boundWidth = widthByDirection ? this.resizableRight - this.targetLeft : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);
            boundHeight = heightByDirection ? this.resizableBottom - this.targetTop : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);
          }
          if (boundWidth && Number.isFinite(boundWidth)) {
            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;
          }
          if (boundHeight && Number.isFinite(boundHeight)) {
            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;
          }
          return { maxWidth, maxHeight };
        };
        Resizable.prototype.calculateNewSizeFromDirection = function(clientX, clientY) {
          var scale = this.props.scale || 1;
          var resizeRatio = this.props.resizeRatio || 1;
          var _a = this.state, direction = _a.direction, original = _a.original;
          var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;
          var newWidth = original.width;
          var newHeight = original.height;
          var extraHeight = lockAspectRatioExtraHeight || 0;
          var extraWidth = lockAspectRatioExtraWidth || 0;
          if (hasDirection("right", direction)) {
            newWidth = original.width + (clientX - original.x) * resizeRatio / scale;
            if (lockAspectRatio) {
              newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
            }
          }
          if (hasDirection("left", direction)) {
            newWidth = original.width - (clientX - original.x) * resizeRatio / scale;
            if (lockAspectRatio) {
              newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;
            }
          }
          if (hasDirection("bottom", direction)) {
            newHeight = original.height + (clientY - original.y) * resizeRatio / scale;
            if (lockAspectRatio) {
              newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
            }
          }
          if (hasDirection("top", direction)) {
            newHeight = original.height - (clientY - original.y) * resizeRatio / scale;
            if (lockAspectRatio) {
              newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;
            }
          }
          return { newWidth, newHeight };
        };
        Resizable.prototype.calculateNewSizeFromAspectRatio = function(newWidth, newHeight, max2, min2) {
          var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;
          var computedMinWidth = typeof min2.width === "undefined" ? 10 : min2.width;
          var computedMaxWidth = typeof max2.width === "undefined" || max2.width < 0 ? newWidth : max2.width;
          var computedMinHeight = typeof min2.height === "undefined" ? 10 : min2.height;
          var computedMaxHeight = typeof max2.height === "undefined" || max2.height < 0 ? newHeight : max2.height;
          var extraHeight = lockAspectRatioExtraHeight || 0;
          var extraWidth = lockAspectRatioExtraWidth || 0;
          if (lockAspectRatio) {
            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;
            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;
            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;
            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;
            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);
            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);
            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);
            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);
            newWidth = clamp$1(newWidth, lockedMinWidth, lockedMaxWidth);
            newHeight = clamp$1(newHeight, lockedMinHeight, lockedMaxHeight);
          } else {
            newWidth = clamp$1(newWidth, computedMinWidth, computedMaxWidth);
            newHeight = clamp$1(newHeight, computedMinHeight, computedMaxHeight);
          }
          return { newWidth, newHeight };
        };
        Resizable.prototype.setBoundingClientRect = function() {
          if (this.props.bounds === "parent") {
            var parent_2 = this.parentNode;
            if (parent_2) {
              var parentRect = parent_2.getBoundingClientRect();
              this.parentLeft = parentRect.left;
              this.parentTop = parentRect.top;
            }
          }
          if (this.props.bounds && typeof this.props.bounds !== "string") {
            var targetRect = this.props.bounds.getBoundingClientRect();
            this.targetLeft = targetRect.left;
            this.targetTop = targetRect.top;
          }
          if (this.resizable) {
            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;
            this.resizableLeft = left;
            this.resizableRight = right;
            this.resizableTop = top_1;
            this.resizableBottom = bottom;
          }
        };
        Resizable.prototype.onResizeStart = function(event, direction) {
          if (!this.resizable || !this.window) {
            return;
          }
          var clientX = 0;
          var clientY = 0;
          if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {
            clientX = event.nativeEvent.clientX;
            clientY = event.nativeEvent.clientY;
          } else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {
            clientX = event.nativeEvent.touches[0].clientX;
            clientY = event.nativeEvent.touches[0].clientY;
          }
          if (this.props.onResizeStart) {
            if (this.resizable) {
              var startResize = this.props.onResizeStart(event, direction, this.resizable);
              if (startResize === false) {
                return;
              }
            }
          }
          if (this.props.size) {
            if (typeof this.props.size.height !== "undefined" && this.props.size.height !== this.state.height) {
              this.setState({ height: this.props.size.height });
            }
            if (typeof this.props.size.width !== "undefined" && this.props.size.width !== this.state.width) {
              this.setState({ width: this.props.size.width });
            }
          }
          this.ratio = typeof this.props.lockAspectRatio === "number" ? this.props.lockAspectRatio : this.size.width / this.size.height;
          var flexBasis;
          var computedStyle = this.window.getComputedStyle(this.resizable);
          if (computedStyle.flexBasis !== "auto") {
            var parent_3 = this.parentNode;
            if (parent_3) {
              var dir = this.window.getComputedStyle(parent_3).flexDirection;
              this.flexDir = dir.startsWith("row") ? "row" : "column";
              flexBasis = computedStyle.flexBasis;
            }
          }
          this.setBoundingClientRect();
          this.bindEvents();
          var state = {
            original: {
              x: clientX,
              y: clientY,
              width: this.size.width,
              height: this.size.height
            },
            isResizing: true,
            backgroundStyle: __assign$2(__assign$2({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || "auto" }),
            direction,
            flexBasis
          };
          this.setState(state);
        };
        Resizable.prototype.onMouseMove = function(event) {
          var _this = this;
          if (!this.state.isResizing || !this.resizable || !this.window) {
            return;
          }
          if (this.window.TouchEvent && isTouchEvent(event)) {
            try {
              event.preventDefault();
              event.stopPropagation();
            } catch (e22) {
            }
          }
          var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;
          var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;
          var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;
          var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;
          var parentSize = this.getParentSize();
          var max2 = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);
          maxWidth = max2.maxWidth;
          maxHeight = max2.maxHeight;
          minWidth = max2.minWidth;
          minHeight = max2.minHeight;
          var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;
          var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);
          if (this.props.snap && this.props.snap.x) {
            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);
          }
          if (this.props.snap && this.props.snap.y) {
            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);
          }
          var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });
          newWidth = newSize.newWidth;
          newHeight = newSize.newHeight;
          if (this.props.grid) {
            var newGridWidth = snap(newWidth, this.props.grid[0]);
            var newGridHeight = snap(newHeight, this.props.grid[1]);
            var gap = this.props.snapGap || 0;
            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;
            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;
          }
          var delta = {
            width: newWidth - original.width,
            height: newHeight - original.height
          };
          if (width && typeof width === "string") {
            if (width.endsWith("%")) {
              var percent = newWidth / parentSize.width * 100;
              newWidth = percent + "%";
            } else if (width.endsWith("vw")) {
              var vw = newWidth / this.window.innerWidth * 100;
              newWidth = vw + "vw";
            } else if (width.endsWith("vh")) {
              var vh2 = newWidth / this.window.innerHeight * 100;
              newWidth = vh2 + "vh";
            }
          }
          if (height && typeof height === "string") {
            if (height.endsWith("%")) {
              var percent = newHeight / parentSize.height * 100;
              newHeight = percent + "%";
            } else if (height.endsWith("vw")) {
              var vw = newHeight / this.window.innerWidth * 100;
              newHeight = vw + "vw";
            } else if (height.endsWith("vh")) {
              var vh2 = newHeight / this.window.innerHeight * 100;
              newHeight = vh2 + "vh";
            }
          }
          var newState = {
            width: this.createSizeForCssProperty(newWidth, "width"),
            height: this.createSizeForCssProperty(newHeight, "height")
          };
          if (this.flexDir === "row") {
            newState.flexBasis = newState.width;
          } else if (this.flexDir === "column") {
            newState.flexBasis = newState.height;
          }
          reactDom.exports.flushSync(function() {
            _this.setState(newState);
          });
          if (this.props.onResize) {
            this.props.onResize(event, direction, this.resizable, delta);
          }
        };
        Resizable.prototype.onMouseUp = function(event) {
          var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;
          if (!isResizing || !this.resizable) {
            return;
          }
          var delta = {
            width: this.size.width - original.width,
            height: this.size.height - original.height
          };
          if (this.props.onResizeStop) {
            this.props.onResizeStop(event, direction, this.resizable, delta);
          }
          if (this.props.size) {
            this.setState(this.props.size);
          }
          this.unbindEvents();
          this.setState({
            isResizing: false,
            backgroundStyle: __assign$2(__assign$2({}, this.state.backgroundStyle), { cursor: "auto" })
          });
        };
        Resizable.prototype.updateSize = function(size) {
          this.setState({ width: size.width, height: size.height });
        };
        Resizable.prototype.renderResizer = function() {
          var _this = this;
          var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;
          if (!enable) {
            return null;
          }
          var resizers = Object.keys(enable).map(function(dir) {
            if (enable[dir] !== false) {
              return react.exports.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null);
            }
            return null;
          });
          return react.exports.createElement("div", { className: handleWrapperClass, style: handleWrapperStyle }, resizers);
        };
        Resizable.prototype.render = function() {
          var _this = this;
          var extendsProps = Object.keys(this.props).reduce(function(acc, key) {
            if (definedProps.indexOf(key) !== -1) {
              return acc;
            }
            acc[key] = _this.props[key];
            return acc;
          }, {});
          var style = __assign$2(__assign$2(__assign$2({ position: "relative", userSelect: this.state.isResizing ? "none" : "auto" }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: "border-box", flexShrink: 0 });
          if (this.state.flexBasis) {
            style.flexBasis = this.state.flexBasis;
          }
          var Wrapper = this.props.as || "div";
          return react.exports.createElement(Wrapper, __assign$2({ ref: this.ref, style, className: this.props.className }, extendsProps), this.state.isResizing && react.exports.createElement("div", { style: this.state.backgroundStyle }), this.props.children, this.renderResizer());
        };
        Resizable.defaultProps = {
          as: "div",
          onResizeStart: function() {
          },
          onResize: function() {
          },
          onResizeStop: function() {
          },
          enable: {
            top: true,
            right: true,
            bottom: true,
            left: true,
            topRight: true,
            bottomRight: true,
            bottomLeft: true,
            topLeft: true
          },
          style: {},
          grid: [1, 1],
          lockAspectRatio: false,
          lockAspectRatioExtraWidth: 0,
          lockAspectRatioExtraHeight: 0,
          scale: 1,
          resizeRatio: 1,
          snapGap: 0
        };
        return Resizable;
      })(react.exports.PureComponent);
      function unwrapExports(x22) {
        return x22 && x22.__esModule && Object.prototype.hasOwnProperty.call(x22, "default") ? x22["default"] : x22;
      }
      function createCommonjsModule(fn2, module2) {
        return module2 = {
          exports: {}
        }, fn2(module2, module2.exports), module2.exports;
      }
      var lib$2 = createCommonjsModule(function(module2, exports3) {
        Object.defineProperty(exports3, "__esModule", {
          value: true
        });
        var IS_MAC2 = () => typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
        var MODIFIERS2 = {
          alt: "altKey",
          control: "ctrlKey",
          meta: "metaKey",
          shift: "shiftKey"
        };
        var ALIASES2 = () => ({
          add: "+",
          break: "pause",
          cmd: "meta",
          command: "meta",
          ctl: "control",
          ctrl: "control",
          del: "delete",
          down: "arrowdown",
          esc: "escape",
          ins: "insert",
          left: "arrowleft",
          mod: IS_MAC2() ? "meta" : "control",
          opt: "alt",
          option: "alt",
          return: "enter",
          right: "arrowright",
          space: " ",
          spacebar: " ",
          up: "arrowup",
          win: "meta",
          windows: "meta"
        });
        var CODES2 = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          control: 17,
          alt: 18,
          pause: 19,
          capslock: 20,
          escape: 27,
          " ": 32,
          pageup: 33,
          pagedown: 34,
          end: 35,
          home: 36,
          arrowleft: 37,
          arrowup: 38,
          arrowright: 39,
          arrowdown: 40,
          insert: 45,
          delete: 46,
          meta: 91,
          numlock: 144,
          scrolllock: 145,
          ";": 186,
          "=": 187,
          ",": 188,
          "-": 189,
          ".": 190,
          "/": 191,
          "`": 192,
          "[": 219,
          "\\": 220,
          "]": 221,
          "'": 222
        };
        for (var f22 = 1; f22 < 20; f22++) {
          CODES2["f" + f22] = 111 + f22;
        }
        function isHotkey2(hotkey, options, event) {
          if (options && !("byKey" in options)) {
            event = options;
            options = null;
          }
          if (!Array.isArray(hotkey)) {
            hotkey = [hotkey];
          }
          var array = hotkey.map(function(string2) {
            return parseHotkey2(string2, options);
          });
          var check = function check2(e22) {
            return array.some(function(object) {
              return compareHotkey2(object, e22);
            });
          };
          var ret = event == null ? check : check(event);
          return ret;
        }
        function isCodeHotkey2(hotkey, event) {
          return isHotkey2(hotkey, event);
        }
        function isKeyHotkey2(hotkey, event) {
          return isHotkey2(hotkey, {
            byKey: true
          }, event);
        }
        function parseHotkey2(hotkey, options) {
          var byKey = options && options.byKey;
          var ret = {};
          hotkey = hotkey.replace("++", "+add");
          var values2 = hotkey.split("+");
          var length = values2.length;
          for (var k22 in MODIFIERS2) {
            ret[MODIFIERS2[k22]] = false;
          }
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = void 0;
          try {
            for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var value = _step.value;
              var optional = value.endsWith("?") && value.length > 1;
              if (optional) {
                value = value.slice(0, -1);
              }
              var name2 = toKeyName2(value);
              var modifier = MODIFIERS2[name2];
              if (length === 1 || !modifier) {
                if (byKey) {
                  ret.key = name2;
                } else {
                  ret.which = toKeyCode2(value);
                }
              }
              if (modifier) {
                ret[modifier] = optional ? null : true;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return ret;
        }
        function compareHotkey2(object, event) {
          for (var key in object) {
            var expected = object[key];
            var actual = void 0;
            if (expected == null) {
              continue;
            }
            if (key === "key" && event.key != null) {
              actual = event.key.toLowerCase();
            } else if (key === "which") {
              actual = expected === 91 && event.which === 93 ? 91 : event.which;
            } else {
              actual = event[key];
            }
            if (actual == null && expected === false) {
              continue;
            }
            if (actual !== expected) {
              return false;
            }
          }
          return true;
        }
        function toKeyCode2(name2) {
          name2 = toKeyName2(name2);
          var code = CODES2[name2] || name2.toUpperCase().charCodeAt(0);
          return code;
        }
        function toKeyName2(name2) {
          name2 = name2.toLowerCase();
          name2 = ALIASES2()[name2] || name2;
          return name2;
        }
        exports3.default = isHotkey2;
        exports3.isHotkey = isHotkey2;
        exports3.isCodeHotkey = isCodeHotkey2;
        exports3.isKeyHotkey = isKeyHotkey2;
        exports3.parseHotkey = parseHotkey2;
        exports3.compareHotkey = compareHotkey2;
        exports3.toKeyCode = toKeyCode2;
        exports3.toKeyName = toKeyName2;
      });
      unwrapExports(lib$2);
      lib$2.isHotkey;
      lib$2.isCodeHotkey;
      lib$2.isKeyHotkey;
      lib$2.parseHotkey;
      lib$2.compareHotkey;
      lib$2.toKeyCode;
      lib$2.toKeyName;
      createAtomStore({
        width: 0
      }, {
        name: "image",
        scope: "img"
      });
      createStore("image")({
        focusEndCaptionPath: null,
        focusStartCaptionPath: null
      });
      const withTrailingBlock = (editor, {
        type,
        options: {
          level,
          ...query
        }
      }) => {
        const {
          normalizeNode
        } = editor;
        editor.normalizeNode = ([currentNode, currentPath]) => {
          if (!currentPath.length) {
            const lastChild = getLastNodeByLevel(editor, level);
            const lastChildNode = lastChild === null || lastChild === void 0 ? void 0 : lastChild[0];
            if (!lastChildNode || lastChildNode.type !== type && queryNode(lastChild, query)) {
              const at = lastChild ? Path.next(lastChild[1]) : [0];
              insertElements(editor, {
                type,
                children: [{
                  text: ""
                }]
              }, {
                at
              });
              return;
            }
          }
          return normalizeNode([currentNode, currentPath]);
        };
        return editor;
      };
      const KEY_TRAILING_BLOCK = "trailingBlock";
      const createTrailingBlockPlugin = createPluginFactory({
        key: KEY_TRAILING_BLOCK,
        withOverrides: withTrailingBlock,
        options: {
          level: 0
        },
        then: (editor) => ({
          type: getPluginType(editor, ELEMENT_DEFAULT)
        })
      });
      function _defineProperty$5(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function ownKeys$3(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly)
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread2$1(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$3(Object(source), true).forEach(function(key) {
              _defineProperty$5(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$3(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      function _objectWithoutPropertiesLoose$2(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i22;
        for (i22 = 0; i22 < sourceKeys.length; i22++) {
          key = sourceKeys[i22];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      function _objectWithoutProperties$3(source, excluded) {
        if (source == null)
          return {};
        var target = _objectWithoutPropertiesLoose$2(source, excluded);
        var key, i22;
        if (Object.getOwnPropertySymbols) {
          var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
          for (i22 = 0; i22 < sourceSymbolKeys.length; i22++) {
            key = sourceSymbolKeys[i22];
            if (excluded.indexOf(key) >= 0)
              continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key))
              continue;
            target[key] = source[key];
          }
        }
        return target;
      }
      function _slicedToArray$2(arr, i22) {
        return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i22) || _unsupportedIterableToArray$2(arr, i22) || _nonIterableRest$2();
      }
      function _arrayWithHoles$2(arr) {
        if (Array.isArray(arr))
          return arr;
      }
      function _iterableToArrayLimit$2(arr, i22) {
        if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
          return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e4 = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i22 && _arr.length === i22)
              break;
          }
        } catch (err) {
          _d = true;
          _e4 = err;
        } finally {
          try {
            if (!_n && _i["return"] != null)
              _i["return"]();
          } finally {
            if (_d)
              throw _e4;
          }
        }
        return _arr;
      }
      function _unsupportedIterableToArray$2(o22, minLen) {
        if (!o22)
          return;
        if (typeof o22 === "string")
          return _arrayLikeToArray$2(o22, minLen);
        var n22 = Object.prototype.toString.call(o22).slice(8, -1);
        if (n22 === "Object" && o22.constructor)
          n22 = o22.constructor.name;
        if (n22 === "Map" || n22 === "Set")
          return Array.from(o22);
        if (n22 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n22))
          return _arrayLikeToArray$2(o22, minLen);
      }
      function _arrayLikeToArray$2(arr, len) {
        if (len == null || len > arr.length)
          len = arr.length;
        for (var i22 = 0, arr2 = new Array(len); i22 < len; i22++)
          arr2[i22] = arr[i22];
        return arr2;
      }
      function _nonIterableRest$2() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _defineProperty$4(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, {
            value,
            enumerable: true,
            configurable: true,
            writable: true
          });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function ownKeys$2(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          if (enumerableOnly)
            symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
          keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread2(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          if (i22 % 2) {
            ownKeys$2(Object(source), true).forEach(function(key) {
              _defineProperty$4(target, key, source[key]);
            });
          } else if (Object.getOwnPropertyDescriptors) {
            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
          } else {
            ownKeys$2(Object(source)).forEach(function(key) {
              Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
            });
          }
        }
        return target;
      }
      function compose$1() {
        for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
          fns[_key] = arguments[_key];
        }
        return function(x22) {
          return fns.reduceRight(function(y22, f22) {
            return f22(y22);
          }, x22);
        };
      }
      function curry$1(fn2) {
        return function curried() {
          var _this = this;
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return args.length >= fn2.length ? fn2.apply(this, args) : function() {
            for (var _len3 = arguments.length, nextArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              nextArgs[_key3] = arguments[_key3];
            }
            return curried.apply(_this, [].concat(args, nextArgs));
          };
        };
      }
      function isObject$a(value) {
        return {}.toString.call(value).includes("Object");
      }
      function isEmpty(obj) {
        return !Object.keys(obj).length;
      }
      function isFunction$5(value) {
        return typeof value === "function";
      }
      function hasOwnProperty$p(object, property2) {
        return Object.prototype.hasOwnProperty.call(object, property2);
      }
      function validateChanges(initial, changes) {
        if (!isObject$a(changes))
          errorHandler$1("changeType");
        if (Object.keys(changes).some(function(field) {
          return !hasOwnProperty$p(initial, field);
        }))
          errorHandler$1("changeField");
        return changes;
      }
      function validateSelector(selector) {
        if (!isFunction$5(selector))
          errorHandler$1("selectorType");
      }
      function validateHandler(handler) {
        if (!(isFunction$5(handler) || isObject$a(handler)))
          errorHandler$1("handlerType");
        if (isObject$a(handler) && Object.values(handler).some(function(_handler) {
          return !isFunction$5(_handler);
        }))
          errorHandler$1("handlersType");
      }
      function validateInitial(initial) {
        if (!initial)
          errorHandler$1("initialIsRequired");
        if (!isObject$a(initial))
          errorHandler$1("initialType");
        if (isEmpty(initial))
          errorHandler$1("initialContent");
      }
      function throwError$1(errorMessages2, type) {
        throw new Error(errorMessages2[type] || errorMessages2["default"]);
      }
      var errorMessages$1 = {
        initialIsRequired: "initial state is required",
        initialType: "initial state should be an object",
        initialContent: "initial state shouldn't be an empty object",
        handlerType: "handler should be an object or a function",
        handlersType: "all handlers should be a functions",
        selectorType: "selector should be a function",
        changeType: "provided value of changes should be an object",
        changeField: 'it seams you want to change a field in the state which is not specified in the "initial" state',
        "default": "an unknown error accured in `state-local` package"
      };
      var errorHandler$1 = curry$1(throwError$1)(errorMessages$1);
      var validators$1 = {
        changes: validateChanges,
        selector: validateSelector,
        handler: validateHandler,
        initial: validateInitial
      };
      function create(initial) {
        var handler = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        validators$1.initial(initial);
        validators$1.handler(handler);
        var state = {
          current: initial
        };
        var didUpdate = curry$1(didStateUpdate)(state, handler);
        var update = curry$1(updateState)(state);
        var validate = curry$1(validators$1.changes)(initial);
        var getChanges = curry$1(extractChanges)(state);
        function getState2() {
          var selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function(state2) {
            return state2;
          };
          validators$1.selector(selector);
          return selector(state.current);
        }
        function setState2(causedChanges) {
          compose$1(didUpdate, update, validate, getChanges)(causedChanges);
        }
        return [getState2, setState2];
      }
      function extractChanges(state, causedChanges) {
        return isFunction$5(causedChanges) ? causedChanges(state.current) : causedChanges;
      }
      function updateState(state, changes) {
        state.current = _objectSpread2(_objectSpread2({}, state.current), changes);
        return changes;
      }
      function didStateUpdate(state, handler, changes) {
        isFunction$5(handler) ? handler(state.current) : Object.keys(changes).forEach(function(field) {
          var _handler$field;
          return (_handler$field = handler[field]) === null || _handler$field === void 0 ? void 0 : _handler$field.call(handler, state.current[field]);
        });
        return changes;
      }
      var index = {
        create
      };
      var config$1 = {
        paths: {
          vs: "https://cdn.jsdelivr.net/npm/monaco-editor@0.33.0/min/vs"
        }
      };
      function curry(fn2) {
        return function curried() {
          var _this = this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return args.length >= fn2.length ? fn2.apply(this, args) : function() {
            for (var _len2 = arguments.length, nextArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              nextArgs[_key2] = arguments[_key2];
            }
            return curried.apply(_this, [].concat(args, nextArgs));
          };
        };
      }
      function isObject$9(value) {
        return {}.toString.call(value).includes("Object");
      }
      function validateConfig(config22) {
        if (!config22)
          errorHandler("configIsRequired");
        if (!isObject$9(config22))
          errorHandler("configType");
        if (config22.urls) {
          informAboutDeprecation();
          return {
            paths: {
              vs: config22.urls.monacoBase
            }
          };
        }
        return config22;
      }
      function informAboutDeprecation() {
        console.warn(errorMessages.deprecation);
      }
      function throwError(errorMessages2, type) {
        throw new Error(errorMessages2[type] || errorMessages2["default"]);
      }
      var errorMessages = {
        configIsRequired: "the configuration object is required",
        configType: "the configuration object should be an object",
        "default": "an unknown error accured in `@monaco-editor/loader` package",
        deprecation: "Deprecation warning!\n    You are using deprecated way of configuration.\n\n    Instead of using\n      monaco.config({ urls: { monacoBase: '...' } })\n    use\n      monaco.config({ paths: { vs: '...' } })\n\n    For more please check the link https://github.com/suren-atoyan/monaco-loader#config\n  "
      };
      var errorHandler = curry(throwError)(errorMessages);
      var validators = {
        config: validateConfig
      };
      var compose = function compose2() {
        for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
          fns[_key] = arguments[_key];
        }
        return function(x22) {
          return fns.reduceRight(function(y22, f22) {
            return f22(y22);
          }, x22);
        };
      };
      function merge$2(target, source) {
        Object.keys(source).forEach(function(key) {
          if (source[key] instanceof Object) {
            if (target[key]) {
              Object.assign(source[key], merge$2(target[key], source[key]));
            }
          }
        });
        return _objectSpread2$1(_objectSpread2$1({}, target), source);
      }
      var CANCELATION_MESSAGE = {
        type: "cancelation",
        msg: "operation is manually canceled"
      };
      function makeCancelable(promise) {
        var hasCanceled_ = false;
        var wrappedPromise = new Promise(function(resolve, reject) {
          promise.then(function(val) {
            return hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val);
          });
          promise["catch"](reject);
        });
        return wrappedPromise.cancel = function() {
          return hasCanceled_ = true;
        }, wrappedPromise;
      }
      var _state$create = index.create({
        config: config$1,
        isInitialized: false,
        resolve: null,
        reject: null,
        monaco: null
      }), _state$create2 = _slicedToArray$2(_state$create, 2), getState = _state$create2[0], setState = _state$create2[1];
      function config2(globalConfig) {
        var _validators$config = validators.config(globalConfig), monaco = _validators$config.monaco, config22 = _objectWithoutProperties$3(_validators$config, ["monaco"]);
        setState(function(state) {
          return {
            config: merge$2(state.config, config22),
            monaco
          };
        });
      }
      function init() {
        var state = getState(function(_ref) {
          var monaco = _ref.monaco, isInitialized = _ref.isInitialized, resolve = _ref.resolve;
          return {
            monaco,
            isInitialized,
            resolve
          };
        });
        if (!state.isInitialized) {
          setState({
            isInitialized: true
          });
          if (state.monaco) {
            state.resolve(state.monaco);
            return makeCancelable(wrapperPromise);
          }
          if (window.monaco && window.monaco.editor) {
            storeMonacoInstance(window.monaco);
            state.resolve(window.monaco);
            return makeCancelable(wrapperPromise);
          }
          compose(injectScripts, getMonacoLoaderScript)(configureLoader);
        }
        return makeCancelable(wrapperPromise);
      }
      function injectScripts(script) {
        return document.body.appendChild(script);
      }
      function createScript(src) {
        var script = document.createElement("script");
        return src && (script.src = src), script;
      }
      function getMonacoLoaderScript(configureLoader2) {
        var state = getState(function(_ref2) {
          var config22 = _ref2.config, reject = _ref2.reject;
          return {
            config: config22,
            reject
          };
        });
        var loaderScript = createScript("".concat(state.config.paths.vs, "/loader.js"));
        loaderScript.onload = function() {
          return configureLoader2();
        };
        loaderScript.onerror = state.reject;
        return loaderScript;
      }
      function configureLoader() {
        var state = getState(function(_ref3) {
          var config22 = _ref3.config, resolve = _ref3.resolve, reject = _ref3.reject;
          return {
            config: config22,
            resolve,
            reject
          };
        });
        var require2 = window.require;
        require2.config(state.config);
        require2(["vs/editor/editor.main"], function(monaco) {
          storeMonacoInstance(monaco);
          state.resolve(monaco);
        }, function(error) {
          state.reject(error);
        });
      }
      function storeMonacoInstance(monaco) {
        if (!getState().monaco) {
          setState({
            monaco
          });
        }
      }
      function __getMonacoInstance() {
        return getState(function(_ref4) {
          var monaco = _ref4.monaco;
          return monaco;
        });
      }
      var wrapperPromise = new Promise(function(resolve, reject) {
        return setState({
          resolve,
          reject
        });
      });
      var loader = {
        config: config2,
        init,
        __getMonacoInstance
      };
      function _extends$f() {
        _extends$f = Object.assign || function(target) {
          for (var i22 = 1; i22 < arguments.length; i22++) {
            var source = arguments[i22];
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }
          return target;
        };
        return _extends$f.apply(this, arguments);
      }
      const loadingStyles = {
        display: "flex",
        height: "100%",
        width: "100%",
        justifyContent: "center",
        alignItems: "center"
      };
      function Loading({
        content: content2
      }) {
        return React__default.createElement("div", {
          style: loadingStyles
        }, content2);
      }
      const styles = {
        wrapper: {
          display: "flex",
          position: "relative",
          textAlign: "initial"
        },
        fullWidth: {
          width: "100%"
        },
        hide: {
          display: "none"
        }
      };
      function MonacoContainer$1({
        width,
        height,
        isEditorReady,
        loading,
        _ref,
        className,
        wrapperProps
      }) {
        return React__default.createElement("section", _extends$f({
          style: {
            ...styles.wrapper,
            width,
            height
          }
        }, wrapperProps), !isEditorReady && React__default.createElement(Loading, {
          content: loading
        }), React__default.createElement("div", {
          ref: _ref,
          style: {
            ...styles.fullWidth,
            ...!isEditorReady && styles.hide
          },
          className
        }));
      }
      MonacoContainer$1.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.number, PropTypes$1.string]).isRequired,
        height: PropTypes$1.oneOfType([PropTypes$1.number, PropTypes$1.string]).isRequired,
        loading: PropTypes$1.oneOfType([PropTypes$1.element, PropTypes$1.string]).isRequired,
        isEditorReady: PropTypes$1.bool.isRequired,
        className: PropTypes$1.string,
        wrapperProps: PropTypes$1.object
      };
      var MonacoContainer = react.exports.memo(MonacoContainer$1);
      function useMount(effect) {
        react.exports.useEffect(effect, []);
      }
      function useUpdate(effect, deps, applyChanges = true) {
        const isInitialMount = react.exports.useRef(true);
        react.exports.useEffect(isInitialMount.current || !applyChanges ? () => {
          isInitialMount.current = false;
        } : effect, deps);
      }
      function noop$1() {
      }
      function getOrCreateModel(monaco, value, language, path) {
        return getModel(monaco, path) || createModel(monaco, value, language, path);
      }
      function getModel(monaco, path) {
        return monaco.editor.getModel(createModelUri(monaco, path));
      }
      function createModel(monaco, value, language, path) {
        return monaco.editor.createModel(value, language, path && createModelUri(monaco, path));
      }
      function createModelUri(monaco, path) {
        return monaco.Uri.parse(path);
      }
      function isUndefined$2(input) {
        return input === void 0;
      }
      function DiffEditor({
        original,
        modified,
        language,
        originalLanguage,
        modifiedLanguage,
        originalModelPath,
        modifiedModelPath,
        keepCurrentOriginalModel,
        keepCurrentModifiedModel,
        theme,
        loading,
        options,
        height,
        width,
        className,
        wrapperProps,
        beforeMount,
        onMount
      }) {
        const [isEditorReady, setIsEditorReady] = react.exports.useState(false);
        const [isMonacoMounting, setIsMonacoMounting] = react.exports.useState(true);
        const editorRef = react.exports.useRef(null);
        const monacoRef = react.exports.useRef(null);
        const containerRef = react.exports.useRef(null);
        const onMountRef = react.exports.useRef(onMount);
        const beforeMountRef = react.exports.useRef(beforeMount);
        useMount(() => {
          const cancelable = loader.init();
          cancelable.then((monaco) => (monacoRef.current = monaco) && setIsMonacoMounting(false)).catch((error) => (error === null || error === void 0 ? void 0 : error.type) !== "cancelation" && console.error("Monaco initialization: error:", error));
          return () => editorRef.current ? disposeEditor() : cancelable.cancel();
        });
        useUpdate(() => {
          const modifiedEditor = editorRef.current.getModifiedEditor();
          if (modifiedEditor.getOption(monacoRef.current.editor.EditorOption.readOnly)) {
            modifiedEditor.setValue(modified);
          } else {
            if (modified !== modifiedEditor.getValue()) {
              modifiedEditor.executeEdits("", [{
                range: modifiedEditor.getModel().getFullModelRange(),
                text: modified,
                forceMoveMarkers: true
              }]);
              modifiedEditor.pushUndoStop();
            }
          }
        }, [modified], isEditorReady);
        useUpdate(() => {
          editorRef.current.getModel().original.setValue(original);
        }, [original], isEditorReady);
        useUpdate(() => {
          const {
            original: original2,
            modified: modified2
          } = editorRef.current.getModel();
          monacoRef.current.editor.setModelLanguage(original2, originalLanguage || language);
          monacoRef.current.editor.setModelLanguage(modified2, modifiedLanguage || language);
        }, [language, originalLanguage, modifiedLanguage], isEditorReady);
        useUpdate(() => {
          monacoRef.current.editor.setTheme(theme);
        }, [theme], isEditorReady);
        useUpdate(() => {
          editorRef.current.updateOptions(options);
        }, [options], isEditorReady);
        const setModels = react.exports.useCallback(() => {
          beforeMountRef.current(monacoRef.current);
          const originalModel = getOrCreateModel(monacoRef.current, original, originalLanguage || language, originalModelPath);
          const modifiedModel = getOrCreateModel(monacoRef.current, modified, modifiedLanguage || language, modifiedModelPath);
          editorRef.current.setModel({
            original: originalModel,
            modified: modifiedModel
          });
        }, [language, modified, modifiedLanguage, original, originalLanguage, originalModelPath, modifiedModelPath]);
        const createEditor2 = react.exports.useCallback(() => {
          editorRef.current = monacoRef.current.editor.createDiffEditor(containerRef.current, {
            automaticLayout: true,
            ...options
          });
          setModels();
          monacoRef.current.editor.setTheme(theme);
          setIsEditorReady(true);
        }, [options, theme, setModels]);
        react.exports.useEffect(() => {
          if (isEditorReady) {
            onMountRef.current(editorRef.current, monacoRef.current);
          }
        }, [isEditorReady]);
        react.exports.useEffect(() => {
          !isMonacoMounting && !isEditorReady && createEditor2();
        }, [isMonacoMounting, isEditorReady, createEditor2]);
        function disposeEditor() {
          const models = editorRef.current.getModel();
          if (!keepCurrentOriginalModel) {
            var _models$original;
            (_models$original = models.original) === null || _models$original === void 0 ? void 0 : _models$original.dispose();
          }
          if (!keepCurrentModifiedModel) {
            var _models$modified;
            (_models$modified = models.modified) === null || _models$modified === void 0 ? void 0 : _models$modified.dispose();
          }
          editorRef.current.dispose();
        }
        return React__default.createElement(MonacoContainer, {
          width,
          height,
          isEditorReady,
          loading,
          _ref: containerRef,
          className,
          wrapperProps
        });
      }
      DiffEditor.propTypes = {
        original: PropTypes$1.string,
        modified: PropTypes$1.string,
        language: PropTypes$1.string,
        originalLanguage: PropTypes$1.string,
        modifiedLanguage: PropTypes$1.string,
        originalModelPath: PropTypes$1.string,
        modifiedModelPath: PropTypes$1.string,
        keepCurrentOriginalModel: PropTypes$1.bool,
        keepCurrentModifiedModel: PropTypes$1.bool,
        theme: PropTypes$1.string,
        loading: PropTypes$1.oneOfType([PropTypes$1.element, PropTypes$1.string]),
        options: PropTypes$1.object,
        width: PropTypes$1.oneOfType([PropTypes$1.number, PropTypes$1.string]),
        height: PropTypes$1.oneOfType([PropTypes$1.number, PropTypes$1.string]),
        className: PropTypes$1.string,
        wrapperProps: PropTypes$1.object,
        beforeMount: PropTypes$1.func,
        onMount: PropTypes$1.func
      };
      DiffEditor.defaultProps = {
        theme: "light",
        loading: "Loading...",
        options: {},
        keepCurrentOriginalModel: false,
        keepCurrentModifiedModel: false,
        width: "100%",
        height: "100%",
        wrapperProps: {},
        beforeMount: noop$1,
        onMount: noop$1
      };
      function usePrevious(value) {
        const ref = react.exports.useRef();
        react.exports.useEffect(() => {
          ref.current = value;
        }, [value]);
        return ref.current;
      }
      const viewStates = /* @__PURE__ */ new Map();
      function Editor({
        defaultValue,
        defaultLanguage,
        defaultPath,
        value,
        language,
        path,
        theme,
        line,
        loading,
        options,
        overrideServices,
        saveViewState,
        keepCurrentModel,
        width,
        height,
        className,
        wrapperProps,
        beforeMount,
        onMount,
        onChange,
        onValidate
      }) {
        const [isEditorReady, setIsEditorReady] = react.exports.useState(false);
        const [isMonacoMounting, setIsMonacoMounting] = react.exports.useState(true);
        const monacoRef = react.exports.useRef(null);
        const editorRef = react.exports.useRef(null);
        const containerRef = react.exports.useRef(null);
        const onMountRef = react.exports.useRef(onMount);
        const beforeMountRef = react.exports.useRef(beforeMount);
        const subscriptionRef = react.exports.useRef(null);
        const valueRef = react.exports.useRef(value);
        const previousPath = usePrevious(path);
        useMount(() => {
          const cancelable = loader.init();
          cancelable.then((monaco) => (monacoRef.current = monaco) && setIsMonacoMounting(false)).catch((error) => (error === null || error === void 0 ? void 0 : error.type) !== "cancelation" && console.error("Monaco initialization: error:", error));
          return () => editorRef.current ? disposeEditor() : cancelable.cancel();
        });
        useUpdate(() => {
          const model = getOrCreateModel(monacoRef.current, defaultValue || value, defaultLanguage || language, path);
          if (model !== editorRef.current.getModel()) {
            saveViewState && viewStates.set(previousPath, editorRef.current.saveViewState());
            editorRef.current.setModel(model);
            saveViewState && editorRef.current.restoreViewState(viewStates.get(path));
          }
        }, [path], isEditorReady);
        useUpdate(() => {
          editorRef.current.updateOptions(options);
        }, [options], isEditorReady);
        useUpdate(() => {
          if (editorRef.current.getOption(monacoRef.current.editor.EditorOption.readOnly)) {
            editorRef.current.setValue(value);
          } else {
            if (value !== editorRef.current.getValue()) {
              editorRef.current.executeEdits("", [{
                range: editorRef.current.getModel().getFullModelRange(),
                text: value,
                forceMoveMarkers: true
              }]);
              editorRef.current.pushUndoStop();
            }
          }
        }, [value], isEditorReady);
        useUpdate(() => {
          monacoRef.current.editor.setModelLanguage(editorRef.current.getModel(), language);
        }, [language], isEditorReady);
        useUpdate(() => {
          if (!isUndefined$2(line)) {
            editorRef.current.revealLine(line);
          }
        }, [line], isEditorReady);
        useUpdate(() => {
          monacoRef.current.editor.setTheme(theme);
        }, [theme], isEditorReady);
        const createEditor2 = react.exports.useCallback(() => {
          beforeMountRef.current(monacoRef.current);
          const autoCreatedModelPath = path || defaultPath;
          const defaultModel = getOrCreateModel(monacoRef.current, value || defaultValue, defaultLanguage || language, autoCreatedModelPath);
          editorRef.current = monacoRef.current.editor.create(containerRef.current, {
            model: defaultModel,
            automaticLayout: true,
            ...options
          }, overrideServices);
          saveViewState && editorRef.current.restoreViewState(viewStates.get(autoCreatedModelPath));
          monacoRef.current.editor.setTheme(theme);
          setIsEditorReady(true);
        }, [defaultValue, defaultLanguage, defaultPath, value, language, path, options, overrideServices, saveViewState, theme]);
        react.exports.useEffect(() => {
          if (isEditorReady) {
            onMountRef.current(editorRef.current, monacoRef.current);
          }
        }, [isEditorReady]);
        react.exports.useEffect(() => {
          !isMonacoMounting && !isEditorReady && createEditor2();
        }, [isMonacoMounting, isEditorReady, createEditor2]);
        valueRef.current = value;
        react.exports.useEffect(() => {
          if (isEditorReady && onChange) {
            var _subscriptionRef$curr, _editorRef$current;
            (_subscriptionRef$curr = subscriptionRef.current) === null || _subscriptionRef$curr === void 0 ? void 0 : _subscriptionRef$curr.dispose();
            subscriptionRef.current = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.onDidChangeModelContent((event) => {
              const editorValue = editorRef.current.getValue();
              if (valueRef.current !== editorValue) {
                onChange(editorValue, event);
              }
            });
          }
        }, [isEditorReady, onChange]);
        react.exports.useEffect(() => {
          if (isEditorReady) {
            const changeMarkersListener = monacoRef.current.editor.onDidChangeMarkers((uris) => {
              var _editorRef$current$ge;
              const editorUri = (_editorRef$current$ge = editorRef.current.getModel()) === null || _editorRef$current$ge === void 0 ? void 0 : _editorRef$current$ge.uri;
              if (editorUri) {
                const currentEditorHasMarkerChanges = uris.find((uri) => uri.path === editorUri.path);
                if (currentEditorHasMarkerChanges) {
                  const markers = monacoRef.current.editor.getModelMarkers({
                    resource: editorUri
                  });
                  onValidate === null || onValidate === void 0 ? void 0 : onValidate(markers);
                }
              }
            });
            return () => {
              changeMarkersListener === null || changeMarkersListener === void 0 ? void 0 : changeMarkersListener.dispose();
            };
          }
        }, [isEditorReady, onValidate]);
        function disposeEditor() {
          var _subscriptionRef$curr2;
          (_subscriptionRef$curr2 = subscriptionRef.current) === null || _subscriptionRef$curr2 === void 0 ? void 0 : _subscriptionRef$curr2.dispose();
          if (keepCurrentModel) {
            saveViewState && viewStates.set(path, editorRef.current.saveViewState());
          } else {
            var _editorRef$current$ge2;
            (_editorRef$current$ge2 = editorRef.current.getModel()) === null || _editorRef$current$ge2 === void 0 ? void 0 : _editorRef$current$ge2.dispose();
          }
          editorRef.current.dispose();
        }
        return React__default.createElement(MonacoContainer, {
          width,
          height,
          isEditorReady,
          loading,
          _ref: containerRef,
          className,
          wrapperProps
        });
      }
      Editor.propTypes = {
        defaultValue: PropTypes$1.string,
        defaultPath: PropTypes$1.string,
        defaultLanguage: PropTypes$1.string,
        value: PropTypes$1.string,
        language: PropTypes$1.string,
        path: PropTypes$1.string,
        theme: PropTypes$1.string,
        line: PropTypes$1.number,
        loading: PropTypes$1.oneOfType([PropTypes$1.element, PropTypes$1.string]),
        options: PropTypes$1.object,
        overrideServices: PropTypes$1.object,
        saveViewState: PropTypes$1.bool,
        keepCurrentModel: PropTypes$1.bool,
        width: PropTypes$1.oneOfType([PropTypes$1.number, PropTypes$1.string]),
        height: PropTypes$1.oneOfType([PropTypes$1.number, PropTypes$1.string]),
        className: PropTypes$1.string,
        wrapperProps: PropTypes$1.object,
        beforeMount: PropTypes$1.func,
        onMount: PropTypes$1.func,
        onChange: PropTypes$1.func,
        onValidate: PropTypes$1.func
      };
      Editor.defaultProps = {
        theme: "light",
        loading: "Loading...",
        options: {},
        overrideServices: {},
        saveViewState: true,
        keepCurrentModel: false,
        width: "100%",
        height: "100%",
        wrapperProps: {},
        beforeMount: noop$1,
        onMount: noop$1,
        onValidate: noop$1
      };
      var fieldSubscriptionItems = ["active", "data", "dirty", "dirtySinceLastSubmit", "error", "initial", "invalid", "length", "modified", "modifiedSinceLastSubmit", "pristine", "submitError", "submitFailed", "submitSucceeded", "submitting", "touched", "valid", "value", "visited", "validating"];
      var formSubscriptionItems = ["active", "dirty", "dirtyFields", "dirtyFieldsSinceLastSubmit", "dirtySinceLastSubmit", "error", "errors", "hasSubmitErrors", "hasValidationErrors", "initialValues", "invalid", "modified", "modifiedSinceLastSubmit", "pristine", "submitting", "submitError", "submitErrors", "submitFailed", "submitSucceeded", "touched", "valid", "validating", "values", "visited"];
      formSubscriptionItems.reduce(function(result, key) {
        result[key] = true;
        return result;
      }, {});
      fieldSubscriptionItems.reduce(function(result, key) {
        result[key] = true;
        return result;
      }, {});
      var propTypes = { exports: {} };
      var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
      var ReactPropTypesSecret = ReactPropTypesSecret_1;
      function emptyFunction() {
      }
      function emptyFunctionWithReset() {
      }
      emptyFunctionWithReset.resetWarningCache = emptyFunction;
      var factoryWithThrowingShims = function() {
        function shim(props, propName, componentName, location, propFullName, secret) {
          if (secret === ReactPropTypesSecret) {
            return;
          }
          var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
          err.name = "Invariant Violation";
          throw err;
        }
        shim.isRequired = shim;
        function getShim() {
          return shim;
        }
        var ReactPropTypes = {
          array: shim,
          bool: shim,
          func: shim,
          number: shim,
          object: shim,
          string: shim,
          symbol: shim,
          any: shim,
          arrayOf: getShim,
          element: shim,
          elementType: shim,
          instanceOf: getShim,
          node: shim,
          objectOf: getShim,
          oneOf: getShim,
          oneOfType: getShim,
          shape: getShim,
          exact: getShim,
          checkPropTypes: emptyFunctionWithReset,
          resetWarningCache: emptyFunction
        };
        ReactPropTypes.PropTypes = ReactPropTypes;
        return ReactPropTypes;
      };
      {
        propTypes.exports = factoryWithThrowingShims();
      }
      var PropTypes = propTypes.exports;
      var lib$1 = {};
      Object.defineProperty(lib$1, "__esModule", {
        value: true
      });
      var IS_MAC = typeof window != "undefined" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
      var MODIFIERS = {
        alt: "altKey",
        control: "ctrlKey",
        meta: "metaKey",
        shift: "shiftKey"
      };
      var ALIASES = {
        add: "+",
        break: "pause",
        cmd: "meta",
        command: "meta",
        ctl: "control",
        ctrl: "control",
        del: "delete",
        down: "arrowdown",
        esc: "escape",
        ins: "insert",
        left: "arrowleft",
        mod: IS_MAC ? "meta" : "control",
        opt: "alt",
        option: "alt",
        return: "enter",
        right: "arrowright",
        space: " ",
        spacebar: " ",
        up: "arrowup",
        win: "meta",
        windows: "meta"
      };
      var CODES = {
        backspace: 8,
        tab: 9,
        enter: 13,
        shift: 16,
        control: 17,
        alt: 18,
        pause: 19,
        capslock: 20,
        escape: 27,
        " ": 32,
        pageup: 33,
        pagedown: 34,
        end: 35,
        home: 36,
        arrowleft: 37,
        arrowup: 38,
        arrowright: 39,
        arrowdown: 40,
        insert: 45,
        delete: 46,
        meta: 91,
        numlock: 144,
        scrolllock: 145,
        ";": 186,
        "=": 187,
        ",": 188,
        "-": 189,
        ".": 190,
        "/": 191,
        "`": 192,
        "[": 219,
        "\\": 220,
        "]": 221,
        "'": 222
      };
      for (var f13 = 1; f13 < 20; f13++) {
        CODES["f" + f13] = 111 + f13;
      }
      function isHotkey(hotkey, options, event) {
        if (options && !("byKey" in options)) {
          event = options;
          options = null;
        }
        if (!Array.isArray(hotkey)) {
          hotkey = [hotkey];
        }
        var array = hotkey.map(function(string2) {
          return parseHotkey(string2, options);
        });
        var check = function check2(e22) {
          return array.some(function(object) {
            return compareHotkey(object, e22);
          });
        };
        var ret = event == null ? check : check(event);
        return ret;
      }
      function isCodeHotkey(hotkey, event) {
        return isHotkey(hotkey, event);
      }
      function isKeyHotkey(hotkey, event) {
        return isHotkey(hotkey, { byKey: true }, event);
      }
      function parseHotkey(hotkey, options) {
        var byKey = options && options.byKey;
        var ret = {};
        hotkey = hotkey.replace("++", "+add");
        var values2 = hotkey.split("+");
        var length = values2.length;
        for (var k22 in MODIFIERS) {
          ret[MODIFIERS[k22]] = false;
        }
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = void 0;
        try {
          for (var _iterator = values2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var value = _step.value;
            var optional = value.endsWith("?") && value.length > 1;
            if (optional) {
              value = value.slice(0, -1);
            }
            var name2 = toKeyName(value);
            var modifier = MODIFIERS[name2];
            if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name2]) {
              throw new TypeError('Unknown modifier: "' + value + '"');
            }
            if (length === 1 || !modifier) {
              if (byKey) {
                ret.key = name2;
              } else {
                ret.which = toKeyCode(value);
              }
            }
            if (modifier) {
              ret[modifier] = optional ? null : true;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return ret;
      }
      function compareHotkey(object, event) {
        for (var key in object) {
          var expected = object[key];
          var actual = void 0;
          if (expected == null) {
            continue;
          }
          if (key === "key" && event.key != null) {
            actual = event.key.toLowerCase();
          } else if (key === "which") {
            actual = expected === 91 && event.which === 93 ? 91 : event.which;
          } else {
            actual = event[key];
          }
          if (actual == null && expected === false) {
            continue;
          }
          if (actual !== expected) {
            return false;
          }
        }
        return true;
      }
      function toKeyCode(name2) {
        name2 = toKeyName(name2);
        var code = CODES[name2] || name2.toUpperCase().charCodeAt(0);
        return code;
      }
      function toKeyName(name2) {
        name2 = name2.toLowerCase();
        name2 = ALIASES[name2] || name2;
        return name2;
      }
      var _default$4 = lib$1.default = isHotkey;
      lib$1.isHotkey = isHotkey;
      lib$1.isCodeHotkey = isCodeHotkey;
      lib$1.isKeyHotkey = isKeyHotkey;
      lib$1.parseHotkey = parseHotkey;
      lib$1.compareHotkey = compareHotkey;
      lib$1.toKeyCode = toKeyCode;
      lib$1.toKeyName = toKeyName;
      var lib = {};
      var flattenNames$1 = {};
      var isArray$e = Array.isArray;
      var isArray_1 = isArray$e;
      var baseGetTag$6 = _baseGetTag$4, isArray$d = isArray_1, isObjectLike$8 = isObjectLike_1$4;
      var stringTag$6 = "[object String]";
      function isString$1(value) {
        return typeof value == "string" || !isArray$d(value) && isObjectLike$8(value) && baseGetTag$6(value) == stringTag$6;
      }
      var isString_1 = isString$1;
      function createBaseFor$2(fromRight) {
        return function(object, iteratee, keysFunc) {
          var index2 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
          while (length--) {
            var key = props[fromRight ? length : ++index2];
            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }
      var _createBaseFor = createBaseFor$2;
      var createBaseFor$1 = _createBaseFor;
      var baseFor$3 = createBaseFor$1();
      var _baseFor = baseFor$3;
      function baseTimes$2(n22, iteratee) {
        var index2 = -1, result = Array(n22);
        while (++index2 < n22) {
          result[index2] = iteratee(index2);
        }
        return result;
      }
      var _baseTimes = baseTimes$2;
      var baseGetTag$5 = _baseGetTag$4, isObjectLike$7 = isObjectLike_1$4;
      var argsTag$6 = "[object Arguments]";
      function baseIsArguments$2(value) {
        return isObjectLike$7(value) && baseGetTag$5(value) == argsTag$6;
      }
      var _baseIsArguments = baseIsArguments$2;
      var baseIsArguments$1 = _baseIsArguments, isObjectLike$6 = isObjectLike_1$4;
      var objectProto$s = Object.prototype;
      var hasOwnProperty$o = objectProto$s.hasOwnProperty;
      var propertyIsEnumerable$3 = objectProto$s.propertyIsEnumerable;
      var isArguments$4 = baseIsArguments$1(function() {
        return arguments;
      }()) ? baseIsArguments$1 : function(value) {
        return isObjectLike$6(value) && hasOwnProperty$o.call(value, "callee") && !propertyIsEnumerable$3.call(value, "callee");
      };
      var isArguments_1 = isArguments$4;
      var isBuffer$5 = { exports: {} };
      function stubFalse$1() {
        return false;
      }
      var stubFalse_1 = stubFalse$1;
      (function(module2, exports3) {
        var root2 = _root$4, stubFalse2 = stubFalse_1;
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? root2.Buffer : void 0;
        var nativeIsBuffer2 = Buffer22 ? Buffer22.isBuffer : void 0;
        var isBuffer2 = nativeIsBuffer2 || stubFalse2;
        module2.exports = isBuffer2;
      })(isBuffer$5, isBuffer$5.exports);
      var MAX_SAFE_INTEGER$3 = 9007199254740991;
      var reIsUint$1 = /^(?:0|[1-9]\d*)$/;
      function isIndex$3(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER$3 : length;
        return !!length && (type == "number" || type != "symbol" && reIsUint$1.test(value)) && (value > -1 && value % 1 == 0 && value < length);
      }
      var _isIndex = isIndex$3;
      var MAX_SAFE_INTEGER$2 = 9007199254740991;
      function isLength$4(value) {
        return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$2;
      }
      var isLength_1 = isLength$4;
      var baseGetTag$4 = _baseGetTag$4, isLength$3 = isLength_1, isObjectLike$5 = isObjectLike_1$4;
      var argsTag$5 = "[object Arguments]", arrayTag$4 = "[object Array]", boolTag$5 = "[object Boolean]", dateTag$5 = "[object Date]", errorTag$4 = "[object Error]", funcTag$4 = "[object Function]", mapTag$8 = "[object Map]", numberTag$5 = "[object Number]", objectTag$8 = "[object Object]", regexpTag$5 = "[object RegExp]", setTag$8 = "[object Set]", stringTag$5 = "[object String]", weakMapTag$4 = "[object WeakMap]";
      var arrayBufferTag$5 = "[object ArrayBuffer]", dataViewTag$7 = "[object DataView]", float32Tag$3 = "[object Float32Array]", float64Tag$3 = "[object Float64Array]", int8Tag$3 = "[object Int8Array]", int16Tag$3 = "[object Int16Array]", int32Tag$3 = "[object Int32Array]", uint8Tag$3 = "[object Uint8Array]", uint8ClampedTag$3 = "[object Uint8ClampedArray]", uint16Tag$3 = "[object Uint16Array]", uint32Tag$3 = "[object Uint32Array]";
      var typedArrayTags$1 = {};
      typedArrayTags$1[float32Tag$3] = typedArrayTags$1[float64Tag$3] = typedArrayTags$1[int8Tag$3] = typedArrayTags$1[int16Tag$3] = typedArrayTags$1[int32Tag$3] = typedArrayTags$1[uint8Tag$3] = typedArrayTags$1[uint8ClampedTag$3] = typedArrayTags$1[uint16Tag$3] = typedArrayTags$1[uint32Tag$3] = true;
      typedArrayTags$1[argsTag$5] = typedArrayTags$1[arrayTag$4] = typedArrayTags$1[arrayBufferTag$5] = typedArrayTags$1[boolTag$5] = typedArrayTags$1[dataViewTag$7] = typedArrayTags$1[dateTag$5] = typedArrayTags$1[errorTag$4] = typedArrayTags$1[funcTag$4] = typedArrayTags$1[mapTag$8] = typedArrayTags$1[numberTag$5] = typedArrayTags$1[objectTag$8] = typedArrayTags$1[regexpTag$5] = typedArrayTags$1[setTag$8] = typedArrayTags$1[stringTag$5] = typedArrayTags$1[weakMapTag$4] = false;
      function baseIsTypedArray$2(value) {
        return isObjectLike$5(value) && isLength$3(value.length) && !!typedArrayTags$1[baseGetTag$4(value)];
      }
      var _baseIsTypedArray = baseIsTypedArray$2;
      function baseUnary$4(func) {
        return function(value) {
          return func(value);
        };
      }
      var _baseUnary = baseUnary$4;
      var _nodeUtil = { exports: {} };
      (function(module2, exports3) {
        var freeGlobal2 = _freeGlobal$4;
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var freeProcess2 = moduleExports2 && freeGlobal2.process;
        var nodeUtil2 = function() {
          try {
            var types = freeModule2 && freeModule2.require && freeModule2.require("util").types;
            if (types) {
              return types;
            }
            return freeProcess2 && freeProcess2.binding && freeProcess2.binding("util");
          } catch (e22) {
          }
        }();
        module2.exports = nodeUtil2;
      })(_nodeUtil, _nodeUtil.exports);
      var baseIsTypedArray$1 = _baseIsTypedArray, baseUnary$3 = _baseUnary, nodeUtil$4 = _nodeUtil.exports;
      var nodeIsTypedArray$1 = nodeUtil$4 && nodeUtil$4.isTypedArray;
      var isTypedArray$4 = nodeIsTypedArray$1 ? baseUnary$3(nodeIsTypedArray$1) : baseIsTypedArray$1;
      var isTypedArray_1 = isTypedArray$4;
      var baseTimes$1 = _baseTimes, isArguments$3 = isArguments_1, isArray$c = isArray_1, isBuffer$4 = isBuffer$5.exports, isIndex$2 = _isIndex, isTypedArray$3 = isTypedArray_1;
      var objectProto$r = Object.prototype;
      var hasOwnProperty$n = objectProto$r.hasOwnProperty;
      function arrayLikeKeys$3(value, inherited) {
        var isArr = isArray$c(value), isArg = !isArr && isArguments$3(value), isBuff = !isArr && !isArg && isBuffer$4(value), isType2 = !isArr && !isArg && !isBuff && isTypedArray$3(value), skipIndexes = isArr || isArg || isBuff || isType2, result = skipIndexes ? baseTimes$1(value.length, String) : [], length = result.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty$n.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType2 && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex$2(key, length)))) {
            result.push(key);
          }
        }
        return result;
      }
      var _arrayLikeKeys = arrayLikeKeys$3;
      var objectProto$q = Object.prototype;
      function isPrototype$4(value) {
        var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$q;
        return value === proto2;
      }
      var _isPrototype = isPrototype$4;
      function overArg$3(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      var _overArg = overArg$3;
      var overArg$2 = _overArg;
      var nativeKeys$3 = overArg$2(Object.keys, Object);
      var _nativeKeys = nativeKeys$3;
      var isPrototype$3 = _isPrototype, nativeKeys$2 = _nativeKeys;
      var objectProto$p = Object.prototype;
      var hasOwnProperty$m = objectProto$p.hasOwnProperty;
      function baseKeys$2(object) {
        if (!isPrototype$3(object)) {
          return nativeKeys$2(object);
        }
        var result = [];
        for (var key in Object(object)) {
          if (hasOwnProperty$m.call(object, key) && key != "constructor") {
            result.push(key);
          }
        }
        return result;
      }
      var _baseKeys = baseKeys$2;
      var baseGetTag$3 = _baseGetTag$4, isObject$8 = isObject_1$4;
      var asyncTag$1 = "[object AsyncFunction]", funcTag$3 = "[object Function]", genTag$2 = "[object GeneratorFunction]", proxyTag$1 = "[object Proxy]";
      function isFunction$4(value) {
        if (!isObject$8(value)) {
          return false;
        }
        var tag = baseGetTag$3(value);
        return tag == funcTag$3 || tag == genTag$2 || tag == asyncTag$1 || tag == proxyTag$1;
      }
      var isFunction_1 = isFunction$4;
      var isFunction$3 = isFunction_1, isLength$2 = isLength_1;
      function isArrayLike$5(value) {
        return value != null && isLength$2(value.length) && !isFunction$3(value);
      }
      var isArrayLike_1 = isArrayLike$5;
      var arrayLikeKeys$2 = _arrayLikeKeys, baseKeys$1 = _baseKeys, isArrayLike$4 = isArrayLike_1;
      function keys$7(object) {
        return isArrayLike$4(object) ? arrayLikeKeys$2(object) : baseKeys$1(object);
      }
      var keys_1 = keys$7;
      var baseFor$2 = _baseFor, keys$6 = keys_1;
      function baseForOwn$3(object, iteratee) {
        return object && baseFor$2(object, iteratee, keys$6);
      }
      var _baseForOwn = baseForOwn$3;
      function identity$3(value) {
        return value;
      }
      var identity_1 = identity$3;
      var identity$2 = identity_1;
      function castFunction$2(value) {
        return typeof value == "function" ? value : identity$2;
      }
      var _castFunction = castFunction$2;
      var baseForOwn$2 = _baseForOwn, castFunction$1 = _castFunction;
      function forOwn(object, iteratee) {
        return object && baseForOwn$2(object, castFunction$1(iteratee));
      }
      var forOwn_1 = forOwn;
      var overArg$1 = _overArg;
      var getPrototype$5 = overArg$1(Object.getPrototypeOf, Object);
      var _getPrototype = getPrototype$5;
      var baseGetTag$2 = _baseGetTag$4, getPrototype$4 = _getPrototype, isObjectLike$4 = isObjectLike_1$4;
      var objectTag$7 = "[object Object]";
      var funcProto$5 = Function.prototype, objectProto$o = Object.prototype;
      var funcToString$5 = funcProto$5.toString;
      var hasOwnProperty$l = objectProto$o.hasOwnProperty;
      var objectCtorString$1 = funcToString$5.call(Object);
      function isPlainObject$1(value) {
        if (!isObjectLike$4(value) || baseGetTag$2(value) != objectTag$7) {
          return false;
        }
        var proto2 = getPrototype$4(value);
        if (proto2 === null) {
          return true;
        }
        var Ctor = hasOwnProperty$l.call(proto2, "constructor") && proto2.constructor;
        return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString$5.call(Ctor) == objectCtorString$1;
      }
      var isPlainObject_1 = isPlainObject$1;
      function arrayMap$3(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index2 < length) {
          result[index2] = iteratee(array[index2], index2, array);
        }
        return result;
      }
      var _arrayMap = arrayMap$3;
      function listCacheClear$2() {
        this.__data__ = [];
        this.size = 0;
      }
      var _listCacheClear = listCacheClear$2;
      function eq$4(value, other) {
        return value === other || value !== value && other !== other;
      }
      var eq_1 = eq$4;
      var eq$3 = eq_1;
      function assocIndexOf$5(array, key) {
        var length = array.length;
        while (length--) {
          if (eq$3(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      var _assocIndexOf = assocIndexOf$5;
      var assocIndexOf$4 = _assocIndexOf;
      var arrayProto$1 = Array.prototype;
      var splice$1 = arrayProto$1.splice;
      function listCacheDelete$2(key) {
        var data = this.__data__, index2 = assocIndexOf$4(data, key);
        if (index2 < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index2 == lastIndex) {
          data.pop();
        } else {
          splice$1.call(data, index2, 1);
        }
        --this.size;
        return true;
      }
      var _listCacheDelete = listCacheDelete$2;
      var assocIndexOf$3 = _assocIndexOf;
      function listCacheGet$2(key) {
        var data = this.__data__, index2 = assocIndexOf$3(data, key);
        return index2 < 0 ? void 0 : data[index2][1];
      }
      var _listCacheGet = listCacheGet$2;
      var assocIndexOf$2 = _assocIndexOf;
      function listCacheHas$2(key) {
        return assocIndexOf$2(this.__data__, key) > -1;
      }
      var _listCacheHas = listCacheHas$2;
      var assocIndexOf$1 = _assocIndexOf;
      function listCacheSet$2(key, value) {
        var data = this.__data__, index2 = assocIndexOf$1(data, key);
        if (index2 < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index2][1] = value;
        }
        return this;
      }
      var _listCacheSet = listCacheSet$2;
      var listCacheClear$1 = _listCacheClear, listCacheDelete$1 = _listCacheDelete, listCacheGet$1 = _listCacheGet, listCacheHas$1 = _listCacheHas, listCacheSet$1 = _listCacheSet;
      function ListCache$5(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      ListCache$5.prototype.clear = listCacheClear$1;
      ListCache$5.prototype["delete"] = listCacheDelete$1;
      ListCache$5.prototype.get = listCacheGet$1;
      ListCache$5.prototype.has = listCacheHas$1;
      ListCache$5.prototype.set = listCacheSet$1;
      var _ListCache = ListCache$5;
      var ListCache$4 = _ListCache;
      function stackClear$2() {
        this.__data__ = new ListCache$4();
        this.size = 0;
      }
      var _stackClear = stackClear$2;
      function stackDelete$2(key) {
        var data = this.__data__, result = data["delete"](key);
        this.size = data.size;
        return result;
      }
      var _stackDelete = stackDelete$2;
      function stackGet$2(key) {
        return this.__data__.get(key);
      }
      var _stackGet = stackGet$2;
      function stackHas$2(key) {
        return this.__data__.has(key);
      }
      var _stackHas = stackHas$2;
      var root$8 = _root$4;
      var coreJsData$3 = root$8["__core-js_shared__"];
      var _coreJsData = coreJsData$3;
      var coreJsData$2 = _coreJsData;
      var maskSrcKey$1 = function() {
        var uid2 = /[^.]+$/.exec(coreJsData$2 && coreJsData$2.keys && coreJsData$2.keys.IE_PROTO || "");
        return uid2 ? "Symbol(src)_1." + uid2 : "";
      }();
      function isMasked$2(func) {
        return !!maskSrcKey$1 && maskSrcKey$1 in func;
      }
      var _isMasked = isMasked$2;
      var funcProto$4 = Function.prototype;
      var funcToString$4 = funcProto$4.toString;
      function toSource$3(func) {
        if (func != null) {
          try {
            return funcToString$4.call(func);
          } catch (e22) {
          }
          try {
            return func + "";
          } catch (e22) {
          }
        }
        return "";
      }
      var _toSource = toSource$3;
      var isFunction$2 = isFunction_1, isMasked$1 = _isMasked, isObject$7 = isObject_1$4, toSource$2 = _toSource;
      var reRegExpChar$1 = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor$1 = /^\[object .+?Constructor\]$/;
      var funcProto$3 = Function.prototype, objectProto$n = Object.prototype;
      var funcToString$3 = funcProto$3.toString;
      var hasOwnProperty$k = objectProto$n.hasOwnProperty;
      var reIsNative$1 = RegExp("^" + funcToString$3.call(hasOwnProperty$k).replace(reRegExpChar$1, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      function baseIsNative$2(value) {
        if (!isObject$7(value) || isMasked$1(value)) {
          return false;
        }
        var pattern = isFunction$2(value) ? reIsNative$1 : reIsHostCtor$1;
        return pattern.test(toSource$2(value));
      }
      var _baseIsNative = baseIsNative$2;
      function getValue$2(object, key) {
        return object == null ? void 0 : object[key];
      }
      var _getValue = getValue$2;
      var baseIsNative$1 = _baseIsNative, getValue$1 = _getValue;
      function getNative$8(object, key) {
        var value = getValue$1(object, key);
        return baseIsNative$1(value) ? value : void 0;
      }
      var _getNative = getNative$8;
      var getNative$7 = _getNative, root$7 = _root$4;
      var Map$6 = getNative$7(root$7, "Map");
      var _Map = Map$6;
      var getNative$6 = _getNative;
      var nativeCreate$6 = getNative$6(Object, "create");
      var _nativeCreate = nativeCreate$6;
      var nativeCreate$5 = _nativeCreate;
      function hashClear$2() {
        this.__data__ = nativeCreate$5 ? nativeCreate$5(null) : {};
        this.size = 0;
      }
      var _hashClear = hashClear$2;
      function hashDelete$2(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }
      var _hashDelete = hashDelete$2;
      var nativeCreate$4 = _nativeCreate;
      var HASH_UNDEFINED$5 = "__lodash_hash_undefined__";
      var objectProto$m = Object.prototype;
      var hasOwnProperty$j = objectProto$m.hasOwnProperty;
      function hashGet$2(key) {
        var data = this.__data__;
        if (nativeCreate$4) {
          var result = data[key];
          return result === HASH_UNDEFINED$5 ? void 0 : result;
        }
        return hasOwnProperty$j.call(data, key) ? data[key] : void 0;
      }
      var _hashGet = hashGet$2;
      var nativeCreate$3 = _nativeCreate;
      var objectProto$l = Object.prototype;
      var hasOwnProperty$i = objectProto$l.hasOwnProperty;
      function hashHas$2(key) {
        var data = this.__data__;
        return nativeCreate$3 ? data[key] !== void 0 : hasOwnProperty$i.call(data, key);
      }
      var _hashHas = hashHas$2;
      var nativeCreate$2 = _nativeCreate;
      var HASH_UNDEFINED$4 = "__lodash_hash_undefined__";
      function hashSet$2(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate$2 && value === void 0 ? HASH_UNDEFINED$4 : value;
        return this;
      }
      var _hashSet = hashSet$2;
      var hashClear$1 = _hashClear, hashDelete$1 = _hashDelete, hashGet$1 = _hashGet, hashHas$1 = _hashHas, hashSet$1 = _hashSet;
      function Hash$2(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      Hash$2.prototype.clear = hashClear$1;
      Hash$2.prototype["delete"] = hashDelete$1;
      Hash$2.prototype.get = hashGet$1;
      Hash$2.prototype.has = hashHas$1;
      Hash$2.prototype.set = hashSet$1;
      var _Hash = Hash$2;
      var Hash$1 = _Hash, ListCache$3 = _ListCache, Map$5 = _Map;
      function mapCacheClear$2() {
        this.size = 0;
        this.__data__ = {
          "hash": new Hash$1(),
          "map": new (Map$5 || ListCache$3)(),
          "string": new Hash$1()
        };
      }
      var _mapCacheClear = mapCacheClear$2;
      function isKeyable$2(value) {
        var type = typeof value;
        return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
      }
      var _isKeyable = isKeyable$2;
      var isKeyable$1 = _isKeyable;
      function getMapData$5(map22, key) {
        var data = map22.__data__;
        return isKeyable$1(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
      }
      var _getMapData = getMapData$5;
      var getMapData$4 = _getMapData;
      function mapCacheDelete$2(key) {
        var result = getMapData$4(this, key)["delete"](key);
        this.size -= result ? 1 : 0;
        return result;
      }
      var _mapCacheDelete = mapCacheDelete$2;
      var getMapData$3 = _getMapData;
      function mapCacheGet$2(key) {
        return getMapData$3(this, key).get(key);
      }
      var _mapCacheGet = mapCacheGet$2;
      var getMapData$2 = _getMapData;
      function mapCacheHas$2(key) {
        return getMapData$2(this, key).has(key);
      }
      var _mapCacheHas = mapCacheHas$2;
      var getMapData$1 = _getMapData;
      function mapCacheSet$2(key, value) {
        var data = getMapData$1(this, key), size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }
      var _mapCacheSet = mapCacheSet$2;
      var mapCacheClear$1 = _mapCacheClear, mapCacheDelete$1 = _mapCacheDelete, mapCacheGet$1 = _mapCacheGet, mapCacheHas$1 = _mapCacheHas, mapCacheSet$1 = _mapCacheSet;
      function MapCache$4(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      MapCache$4.prototype.clear = mapCacheClear$1;
      MapCache$4.prototype["delete"] = mapCacheDelete$1;
      MapCache$4.prototype.get = mapCacheGet$1;
      MapCache$4.prototype.has = mapCacheHas$1;
      MapCache$4.prototype.set = mapCacheSet$1;
      var _MapCache = MapCache$4;
      var ListCache$2 = _ListCache, Map$4 = _Map, MapCache$3 = _MapCache;
      var LARGE_ARRAY_SIZE$1 = 200;
      function stackSet$2(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache$2) {
          var pairs = data.__data__;
          if (!Map$4 || pairs.length < LARGE_ARRAY_SIZE$1 - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new MapCache$3(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }
      var _stackSet = stackSet$2;
      var ListCache$1 = _ListCache, stackClear$1 = _stackClear, stackDelete$1 = _stackDelete, stackGet$1 = _stackGet, stackHas$1 = _stackHas, stackSet$1 = _stackSet;
      function Stack$4(entries) {
        var data = this.__data__ = new ListCache$1(entries);
        this.size = data.size;
      }
      Stack$4.prototype.clear = stackClear$1;
      Stack$4.prototype["delete"] = stackDelete$1;
      Stack$4.prototype.get = stackGet$1;
      Stack$4.prototype.has = stackHas$1;
      Stack$4.prototype.set = stackSet$1;
      var _Stack = Stack$4;
      var HASH_UNDEFINED$3 = "__lodash_hash_undefined__";
      function setCacheAdd$2(value) {
        this.__data__.set(value, HASH_UNDEFINED$3);
        return this;
      }
      var _setCacheAdd = setCacheAdd$2;
      function setCacheHas$2(value) {
        return this.__data__.has(value);
      }
      var _setCacheHas = setCacheHas$2;
      var MapCache$2 = _MapCache, setCacheAdd$1 = _setCacheAdd, setCacheHas$1 = _setCacheHas;
      function SetCache$2(values2) {
        var index2 = -1, length = values2 == null ? 0 : values2.length;
        this.__data__ = new MapCache$2();
        while (++index2 < length) {
          this.add(values2[index2]);
        }
      }
      SetCache$2.prototype.add = SetCache$2.prototype.push = setCacheAdd$1;
      SetCache$2.prototype.has = setCacheHas$1;
      var _SetCache = SetCache$2;
      function arraySome$2(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (predicate(array[index2], index2, array)) {
            return true;
          }
        }
        return false;
      }
      var _arraySome = arraySome$2;
      function cacheHas$2(cache, key) {
        return cache.has(key);
      }
      var _cacheHas = cacheHas$2;
      var SetCache$1 = _SetCache, arraySome$1 = _arraySome, cacheHas$1 = _cacheHas;
      var COMPARE_PARTIAL_FLAG$b = 1, COMPARE_UNORDERED_FLAG$7 = 2;
      function equalArrays$3(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$b, arrLength = array.length, othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$7 ? new SetCache$1() : void 0;
        stack.set(array, other);
        stack.set(other, array);
        while (++index2 < arrLength) {
          var arrValue = array[index2], othValue = other[index2];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
          }
          if (compared !== void 0) {
            if (compared) {
              continue;
            }
            result = false;
            break;
          }
          if (seen) {
            if (!arraySome$1(other, function(othValue2, othIndex) {
              if (!cacheHas$1(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }
        stack["delete"](array);
        stack["delete"](other);
        return result;
      }
      var _equalArrays = equalArrays$3;
      var root$6 = _root$4;
      var Uint8Array$4 = root$6.Uint8Array;
      var _Uint8Array = Uint8Array$4;
      function mapToArray$2(map22) {
        var index2 = -1, result = Array(map22.size);
        map22.forEach(function(value, key) {
          result[++index2] = [key, value];
        });
        return result;
      }
      var _mapToArray = mapToArray$2;
      function setToArray$2(set2) {
        var index2 = -1, result = Array(set2.size);
        set2.forEach(function(value) {
          result[++index2] = value;
        });
        return result;
      }
      var _setToArray = setToArray$2;
      var Symbol$5 = _Symbol$4, Uint8Array$3 = _Uint8Array, eq$2 = eq_1, equalArrays$2 = _equalArrays, mapToArray$1 = _mapToArray, setToArray$1 = _setToArray;
      var COMPARE_PARTIAL_FLAG$a = 1, COMPARE_UNORDERED_FLAG$6 = 2;
      var boolTag$4 = "[object Boolean]", dateTag$4 = "[object Date]", errorTag$3 = "[object Error]", mapTag$7 = "[object Map]", numberTag$4 = "[object Number]", regexpTag$4 = "[object RegExp]", setTag$7 = "[object Set]", stringTag$4 = "[object String]", symbolTag$4 = "[object Symbol]";
      var arrayBufferTag$4 = "[object ArrayBuffer]", dataViewTag$6 = "[object DataView]";
      var symbolProto$4 = Symbol$5 ? Symbol$5.prototype : void 0, symbolValueOf$2 = symbolProto$4 ? symbolProto$4.valueOf : void 0;
      function equalByTag$2(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag$6:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag$4:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$3(object), new Uint8Array$3(other))) {
              return false;
            }
            return true;
          case boolTag$4:
          case dateTag$4:
          case numberTag$4:
            return eq$2(+object, +other);
          case errorTag$3:
            return object.name == other.name && object.message == other.message;
          case regexpTag$4:
          case stringTag$4:
            return object == other + "";
          case mapTag$7:
            var convert = mapToArray$1;
          case setTag$7:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG$a;
            convert || (convert = setToArray$1);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG$6;
            stack.set(object, other);
            var result = equalArrays$2(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack["delete"](object);
            return result;
          case symbolTag$4:
            if (symbolValueOf$2) {
              return symbolValueOf$2.call(object) == symbolValueOf$2.call(other);
            }
        }
        return false;
      }
      var _equalByTag = equalByTag$2;
      function arrayPush$3(array, values2) {
        var index2 = -1, length = values2.length, offset2 = array.length;
        while (++index2 < length) {
          array[offset2 + index2] = values2[index2];
        }
        return array;
      }
      var _arrayPush = arrayPush$3;
      var arrayPush$2 = _arrayPush, isArray$b = isArray_1;
      function baseGetAllKeys$3(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray$b(object) ? result : arrayPush$2(result, symbolsFunc(object));
      }
      var _baseGetAllKeys = baseGetAllKeys$3;
      function arrayFilter$2(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index2 < length) {
          var value = array[index2];
          if (predicate(value, index2, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      var _arrayFilter = arrayFilter$2;
      function stubArray$3() {
        return [];
      }
      var stubArray_1 = stubArray$3;
      var arrayFilter$1 = _arrayFilter, stubArray$2 = stubArray_1;
      var objectProto$k = Object.prototype;
      var propertyIsEnumerable$2 = objectProto$k.propertyIsEnumerable;
      var nativeGetSymbols$2 = Object.getOwnPropertySymbols;
      var getSymbols$5 = !nativeGetSymbols$2 ? stubArray$2 : function(object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return arrayFilter$1(nativeGetSymbols$2(object), function(symbol) {
          return propertyIsEnumerable$2.call(object, symbol);
        });
      };
      var _getSymbols = getSymbols$5;
      var baseGetAllKeys$2 = _baseGetAllKeys, getSymbols$4 = _getSymbols, keys$5 = keys_1;
      function getAllKeys$3(object) {
        return baseGetAllKeys$2(object, keys$5, getSymbols$4);
      }
      var _getAllKeys = getAllKeys$3;
      var getAllKeys$2 = _getAllKeys;
      var COMPARE_PARTIAL_FLAG$9 = 1;
      var objectProto$j = Object.prototype;
      var hasOwnProperty$h = objectProto$j.hasOwnProperty;
      function equalObjects$2(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$9, objProps = getAllKeys$2(object), objLength = objProps.length, othProps = getAllKeys$2(other), othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index2 = objLength;
        while (index2--) {
          var key = objProps[index2];
          if (!(isPartial ? key in other : hasOwnProperty$h.call(other, key))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index2 < objLength) {
          key = objProps[index2];
          var objValue = object[key], othValue = other[key];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }
          if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }
          skipCtor || (skipCtor = key == "constructor");
        }
        if (result && !skipCtor) {
          var objCtor = object.constructor, othCtor = other.constructor;
          if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
            result = false;
          }
        }
        stack["delete"](object);
        stack["delete"](other);
        return result;
      }
      var _equalObjects = equalObjects$2;
      var getNative$5 = _getNative, root$5 = _root$4;
      var DataView$3 = getNative$5(root$5, "DataView");
      var _DataView = DataView$3;
      var getNative$4 = _getNative, root$4 = _root$4;
      var Promise$4 = getNative$4(root$4, "Promise");
      var _Promise = Promise$4;
      var getNative$3 = _getNative, root$3 = _root$4;
      var Set$4 = getNative$3(root$3, "Set");
      var _Set = Set$4;
      var getNative$2 = _getNative, root$2 = _root$4;
      var WeakMap$4 = getNative$2(root$2, "WeakMap");
      var _WeakMap = WeakMap$4;
      var DataView$2 = _DataView, Map$3 = _Map, Promise$3 = _Promise, Set$3 = _Set, WeakMap$3 = _WeakMap, baseGetTag$1 = _baseGetTag$4, toSource$1 = _toSource;
      var mapTag$6 = "[object Map]", objectTag$6 = "[object Object]", promiseTag$1 = "[object Promise]", setTag$6 = "[object Set]", weakMapTag$3 = "[object WeakMap]";
      var dataViewTag$5 = "[object DataView]";
      var dataViewCtorString$1 = toSource$1(DataView$2), mapCtorString$1 = toSource$1(Map$3), promiseCtorString$1 = toSource$1(Promise$3), setCtorString$1 = toSource$1(Set$3), weakMapCtorString$1 = toSource$1(WeakMap$3);
      var getTag$6 = baseGetTag$1;
      if (DataView$2 && getTag$6(new DataView$2(new ArrayBuffer(1))) != dataViewTag$5 || Map$3 && getTag$6(new Map$3()) != mapTag$6 || Promise$3 && getTag$6(Promise$3.resolve()) != promiseTag$1 || Set$3 && getTag$6(new Set$3()) != setTag$6 || WeakMap$3 && getTag$6(new WeakMap$3()) != weakMapTag$3) {
        getTag$6 = function(value) {
          var result = baseGetTag$1(value), Ctor = result == objectTag$6 ? value.constructor : void 0, ctorString = Ctor ? toSource$1(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString$1:
                return dataViewTag$5;
              case mapCtorString$1:
                return mapTag$6;
              case promiseCtorString$1:
                return promiseTag$1;
              case setCtorString$1:
                return setTag$6;
              case weakMapCtorString$1:
                return weakMapTag$3;
            }
          }
          return result;
        };
      }
      var _getTag = getTag$6;
      var Stack$3 = _Stack, equalArrays$1 = _equalArrays, equalByTag$1 = _equalByTag, equalObjects$1 = _equalObjects, getTag$5 = _getTag, isArray$a = isArray_1, isBuffer$3 = isBuffer$5.exports, isTypedArray$2 = isTypedArray_1;
      var COMPARE_PARTIAL_FLAG$8 = 1;
      var argsTag$4 = "[object Arguments]", arrayTag$3 = "[object Array]", objectTag$5 = "[object Object]";
      var objectProto$i = Object.prototype;
      var hasOwnProperty$g = objectProto$i.hasOwnProperty;
      function baseIsEqualDeep$2(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray$a(object), othIsArr = isArray$a(other), objTag = objIsArr ? arrayTag$3 : getTag$5(object), othTag = othIsArr ? arrayTag$3 : getTag$5(other);
        objTag = objTag == argsTag$4 ? objectTag$5 : objTag;
        othTag = othTag == argsTag$4 ? objectTag$5 : othTag;
        var objIsObj = objTag == objectTag$5, othIsObj = othTag == objectTag$5, isSameTag = objTag == othTag;
        if (isSameTag && isBuffer$3(object)) {
          if (!isBuffer$3(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack$3());
          return objIsArr || isTypedArray$2(object) ? equalArrays$1(object, other, bitmask, customizer, equalFunc, stack) : equalByTag$1(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG$8)) {
          var objIsWrapped = objIsObj && hasOwnProperty$g.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$g.call(other, "__wrapped__");
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack$3());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new Stack$3());
        return equalObjects$1(object, other, bitmask, customizer, equalFunc, stack);
      }
      var _baseIsEqualDeep = baseIsEqualDeep$2;
      var baseIsEqualDeep$1 = _baseIsEqualDeep, isObjectLike$3 = isObjectLike_1$4;
      function baseIsEqual$3(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }
        if (value == null || other == null || !isObjectLike$3(value) && !isObjectLike$3(other)) {
          return value !== value && other !== other;
        }
        return baseIsEqualDeep$1(value, other, bitmask, customizer, baseIsEqual$3, stack);
      }
      var _baseIsEqual = baseIsEqual$3;
      var Stack$2 = _Stack, baseIsEqual$2 = _baseIsEqual;
      var COMPARE_PARTIAL_FLAG$7 = 1, COMPARE_UNORDERED_FLAG$5 = 2;
      function baseIsMatch$2(object, source, matchData, customizer) {
        var index2 = matchData.length, length = index2, noCustomizer = !customizer;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (index2--) {
          var data = matchData[index2];
          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }
        while (++index2 < length) {
          data = matchData[index2];
          var key = data[0], objValue = object[key], srcValue = data[1];
          if (noCustomizer && data[2]) {
            if (objValue === void 0 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack$2();
            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }
            if (!(result === void 0 ? baseIsEqual$2(srcValue, objValue, COMPARE_PARTIAL_FLAG$7 | COMPARE_UNORDERED_FLAG$5, customizer, stack) : result)) {
              return false;
            }
          }
        }
        return true;
      }
      var _baseIsMatch = baseIsMatch$2;
      var isObject$6 = isObject_1$4;
      function isStrictComparable$3(value) {
        return value === value && !isObject$6(value);
      }
      var _isStrictComparable = isStrictComparable$3;
      var isStrictComparable$2 = _isStrictComparable, keys$4 = keys_1;
      function getMatchData$2(object) {
        var result = keys$4(object), length = result.length;
        while (length--) {
          var key = result[length], value = object[key];
          result[length] = [key, value, isStrictComparable$2(value)];
        }
        return result;
      }
      var _getMatchData = getMatchData$2;
      function matchesStrictComparable$3(key, srcValue) {
        return function(object) {
          if (object == null) {
            return false;
          }
          return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
        };
      }
      var _matchesStrictComparable = matchesStrictComparable$3;
      var baseIsMatch$1 = _baseIsMatch, getMatchData$1 = _getMatchData, matchesStrictComparable$2 = _matchesStrictComparable;
      function baseMatches$2(source) {
        var matchData = getMatchData$1(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable$2(matchData[0][0], matchData[0][1]);
        }
        return function(object) {
          return object === source || baseIsMatch$1(object, source, matchData);
        };
      }
      var _baseMatches = baseMatches$2;
      var isArray$9 = isArray_1, isSymbol$3 = isSymbol_1$1;
      var reIsDeepProp$1 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp$1 = /^\w*$/;
      function isKey$4(value, object) {
        if (isArray$9(value)) {
          return false;
        }
        var type = typeof value;
        if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol$3(value)) {
          return true;
        }
        return reIsPlainProp$1.test(value) || !reIsDeepProp$1.test(value) || object != null && value in Object(object);
      }
      var _isKey = isKey$4;
      var MapCache$1 = _MapCache;
      var FUNC_ERROR_TEXT$3 = "Expected a function";
      function memoize$2(func, resolver2) {
        if (typeof func != "function" || resolver2 != null && typeof resolver2 != "function") {
          throw new TypeError(FUNC_ERROR_TEXT$3);
        }
        var memoized = function() {
          var args = arguments, key = resolver2 ? resolver2.apply(this, args) : args[0], cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };
        memoized.cache = new (memoize$2.Cache || MapCache$1)();
        return memoized;
      }
      memoize$2.Cache = MapCache$1;
      var memoize_1 = memoize$2;
      var memoize$1 = memoize_1;
      var MAX_MEMOIZE_SIZE$1 = 500;
      function memoizeCapped$2(func) {
        var result = memoize$1(func, function(key) {
          if (cache.size === MAX_MEMOIZE_SIZE$1) {
            cache.clear();
          }
          return key;
        });
        var cache = result.cache;
        return result;
      }
      var _memoizeCapped = memoizeCapped$2;
      var memoizeCapped$1 = _memoizeCapped;
      var rePropName$1 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reEscapeChar$1 = /\\(\\)?/g;
      var stringToPath$3 = memoizeCapped$1(function(string2) {
        var result = [];
        if (string2.charCodeAt(0) === 46) {
          result.push("");
        }
        string2.replace(rePropName$1, function(match5, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar$1, "$1") : number || match5);
        });
        return result;
      });
      var _stringToPath = stringToPath$3;
      var Symbol$4 = _Symbol$4, arrayMap$2 = _arrayMap, isArray$8 = isArray_1, isSymbol$2 = isSymbol_1$1;
      var INFINITY$3 = 1 / 0;
      var symbolProto$3 = Symbol$4 ? Symbol$4.prototype : void 0, symbolToString$1 = symbolProto$3 ? symbolProto$3.toString : void 0;
      function baseToString$2(value) {
        if (typeof value == "string") {
          return value;
        }
        if (isArray$8(value)) {
          return arrayMap$2(value, baseToString$2) + "";
        }
        if (isSymbol$2(value)) {
          return symbolToString$1 ? symbolToString$1.call(value) : "";
        }
        var result = value + "";
        return result == "0" && 1 / value == -INFINITY$3 ? "-0" : result;
      }
      var _baseToString = baseToString$2;
      var baseToString$1 = _baseToString;
      function toString$3(value) {
        return value == null ? "" : baseToString$1(value);
      }
      var toString_1 = toString$3;
      var isArray$7 = isArray_1, isKey$3 = _isKey, stringToPath$2 = _stringToPath, toString$2 = toString_1;
      function castPath$3(value, object) {
        if (isArray$7(value)) {
          return value;
        }
        return isKey$3(value, object) ? [value] : stringToPath$2(toString$2(value));
      }
      var _castPath = castPath$3;
      var isSymbol$1 = isSymbol_1$1;
      var INFINITY$2 = 1 / 0;
      function toKey$5(value) {
        if (typeof value == "string" || isSymbol$1(value)) {
          return value;
        }
        var result = value + "";
        return result == "0" && 1 / value == -INFINITY$2 ? "-0" : result;
      }
      var _toKey = toKey$5;
      var castPath$2 = _castPath, toKey$4 = _toKey;
      function baseGet$3(object, path) {
        path = castPath$2(path, object);
        var index2 = 0, length = path.length;
        while (object != null && index2 < length) {
          object = object[toKey$4(path[index2++])];
        }
        return index2 && index2 == length ? object : void 0;
      }
      var _baseGet = baseGet$3;
      var baseGet$2 = _baseGet;
      function get$6(object, path, defaultValue) {
        var result = object == null ? void 0 : baseGet$2(object, path);
        return result === void 0 ? defaultValue : result;
      }
      var get_1 = get$6;
      function baseHasIn$2(object, key) {
        return object != null && key in Object(object);
      }
      var _baseHasIn = baseHasIn$2;
      var castPath$1 = _castPath, isArguments$2 = isArguments_1, isArray$6 = isArray_1, isIndex$1 = _isIndex, isLength$1 = isLength_1, toKey$3 = _toKey;
      function hasPath$2(object, path, hasFunc) {
        path = castPath$1(path, object);
        var index2 = -1, length = path.length, result = false;
        while (++index2 < length) {
          var key = toKey$3(path[index2]);
          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }
          object = object[key];
        }
        if (result || ++index2 != length) {
          return result;
        }
        length = object == null ? 0 : object.length;
        return !!length && isLength$1(length) && isIndex$1(key, length) && (isArray$6(object) || isArguments$2(object));
      }
      var _hasPath = hasPath$2;
      var baseHasIn$1 = _baseHasIn, hasPath$1 = _hasPath;
      function hasIn$2(object, path) {
        return object != null && hasPath$1(object, path, baseHasIn$1);
      }
      var hasIn_1 = hasIn$2;
      var baseIsEqual$1 = _baseIsEqual, get$5 = get_1, hasIn$1 = hasIn_1, isKey$2 = _isKey, isStrictComparable$1 = _isStrictComparable, matchesStrictComparable$1 = _matchesStrictComparable, toKey$2 = _toKey;
      var COMPARE_PARTIAL_FLAG$6 = 1, COMPARE_UNORDERED_FLAG$4 = 2;
      function baseMatchesProperty$2(path, srcValue) {
        if (isKey$2(path) && isStrictComparable$1(srcValue)) {
          return matchesStrictComparable$1(toKey$2(path), srcValue);
        }
        return function(object) {
          var objValue = get$5(object, path);
          return objValue === void 0 && objValue === srcValue ? hasIn$1(object, path) : baseIsEqual$1(srcValue, objValue, COMPARE_PARTIAL_FLAG$6 | COMPARE_UNORDERED_FLAG$4);
        };
      }
      var _baseMatchesProperty = baseMatchesProperty$2;
      function baseProperty$2(key) {
        return function(object) {
          return object == null ? void 0 : object[key];
        };
      }
      var _baseProperty = baseProperty$2;
      var baseGet$1 = _baseGet;
      function basePropertyDeep$2(path) {
        return function(object) {
          return baseGet$1(object, path);
        };
      }
      var _basePropertyDeep = basePropertyDeep$2;
      var baseProperty$1 = _baseProperty, basePropertyDeep$1 = _basePropertyDeep, isKey$1 = _isKey, toKey$1 = _toKey;
      function property$2(path) {
        return isKey$1(path) ? baseProperty$1(toKey$1(path)) : basePropertyDeep$1(path);
      }
      var property_1 = property$2;
      var baseMatches$1 = _baseMatches, baseMatchesProperty$1 = _baseMatchesProperty, identity$1 = identity_1, isArray$5 = isArray_1, property$1 = property_1;
      function baseIteratee$2(value) {
        if (typeof value == "function") {
          return value;
        }
        if (value == null) {
          return identity$1;
        }
        if (typeof value == "object") {
          return isArray$5(value) ? baseMatchesProperty$1(value[0], value[1]) : baseMatches$1(value);
        }
        return property$1(value);
      }
      var _baseIteratee = baseIteratee$2;
      var isArrayLike$3 = isArrayLike_1;
      function createBaseEach$2(eachFunc, fromRight) {
        return function(collection, iteratee) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike$3(collection)) {
            return eachFunc(collection, iteratee);
          }
          var length = collection.length, index2 = fromRight ? length : -1, iterable = Object(collection);
          while (fromRight ? index2-- : ++index2 < length) {
            if (iteratee(iterable[index2], index2, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }
      var _createBaseEach = createBaseEach$2;
      var baseForOwn$1 = _baseForOwn, createBaseEach$1 = _createBaseEach;
      var baseEach$3 = createBaseEach$1(baseForOwn$1);
      var _baseEach = baseEach$3;
      var baseEach$2 = _baseEach, isArrayLike$2 = isArrayLike_1;
      function baseMap$2(collection, iteratee) {
        var index2 = -1, result = isArrayLike$2(collection) ? Array(collection.length) : [];
        baseEach$2(collection, function(value, key, collection2) {
          result[++index2] = iteratee(value, key, collection2);
        });
        return result;
      }
      var _baseMap = baseMap$2;
      var arrayMap$1 = _arrayMap, baseIteratee$1 = _baseIteratee, baseMap$1 = _baseMap, isArray$4 = isArray_1;
      function map$2(collection, iteratee) {
        var func = isArray$4(collection) ? arrayMap$1 : baseMap$1;
        return func(collection, baseIteratee$1(iteratee));
      }
      var map_1 = map$2;
      Object.defineProperty(flattenNames$1, "__esModule", {
        value: true
      });
      flattenNames$1.flattenNames = void 0;
      var _isString2 = isString_1;
      var _isString3 = _interopRequireDefault$7(_isString2);
      var _forOwn2$2 = forOwn_1;
      var _forOwn3$2 = _interopRequireDefault$7(_forOwn2$2);
      var _isPlainObject2 = isPlainObject_1;
      var _isPlainObject3 = _interopRequireDefault$7(_isPlainObject2);
      var _map2 = map_1;
      var _map3 = _interopRequireDefault$7(_map2);
      function _interopRequireDefault$7(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      var flattenNames = flattenNames$1.flattenNames = function flattenNames2() {
        var things = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        var names = [];
        (0, _map3.default)(things, function(thing) {
          if (Array.isArray(thing)) {
            flattenNames2(thing).map(function(name2) {
              return names.push(name2);
            });
          } else if ((0, _isPlainObject3.default)(thing)) {
            (0, _forOwn3$2.default)(thing, function(value, key) {
              value === true && names.push(key);
              names.push(key + "-" + value);
            });
          } else if ((0, _isString3.default)(thing)) {
            names.push(thing);
          }
        });
        return names;
      };
      flattenNames$1.default = flattenNames;
      var mergeClasses$1 = {};
      function arrayEach$2(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (iteratee(array[index2], index2, array) === false) {
            break;
          }
        }
        return array;
      }
      var _arrayEach = arrayEach$2;
      var getNative$1 = _getNative;
      var defineProperty$3 = function() {
        try {
          var func = getNative$1(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e22) {
        }
      }();
      var _defineProperty$3 = defineProperty$3;
      var defineProperty$2 = _defineProperty$3;
      function baseAssignValue$3(object, key, value) {
        if (key == "__proto__" && defineProperty$2) {
          defineProperty$2(object, key, {
            "configurable": true,
            "enumerable": true,
            "value": value,
            "writable": true
          });
        } else {
          object[key] = value;
        }
      }
      var _baseAssignValue = baseAssignValue$3;
      var baseAssignValue$2 = _baseAssignValue, eq$1 = eq_1;
      var objectProto$h = Object.prototype;
      var hasOwnProperty$f = objectProto$h.hasOwnProperty;
      function assignValue$3(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty$f.call(object, key) && eq$1(objValue, value)) || value === void 0 && !(key in object)) {
          baseAssignValue$2(object, key, value);
        }
      }
      var _assignValue = assignValue$3;
      var assignValue$2 = _assignValue, baseAssignValue$1 = _baseAssignValue;
      function copyObject$5(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index2 = -1, length = props.length;
        while (++index2 < length) {
          var key = props[index2];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
          if (newValue === void 0) {
            newValue = source[key];
          }
          if (isNew) {
            baseAssignValue$1(object, key, newValue);
          } else {
            assignValue$2(object, key, newValue);
          }
        }
        return object;
      }
      var _copyObject = copyObject$5;
      var copyObject$4 = _copyObject, keys$3 = keys_1;
      function baseAssign$1(object, source) {
        return object && copyObject$4(source, keys$3(source), object);
      }
      var _baseAssign = baseAssign$1;
      function nativeKeysIn$2(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }
      var _nativeKeysIn = nativeKeysIn$2;
      var isObject$5 = isObject_1$4, isPrototype$2 = _isPrototype, nativeKeysIn$1 = _nativeKeysIn;
      var objectProto$g = Object.prototype;
      var hasOwnProperty$e = objectProto$g.hasOwnProperty;
      function baseKeysIn$2(object) {
        if (!isObject$5(object)) {
          return nativeKeysIn$1(object);
        }
        var isProto = isPrototype$2(object), result = [];
        for (var key in object) {
          if (!(key == "constructor" && (isProto || !hasOwnProperty$e.call(object, key)))) {
            result.push(key);
          }
        }
        return result;
      }
      var _baseKeysIn = baseKeysIn$2;
      var arrayLikeKeys$1 = _arrayLikeKeys, baseKeysIn$1 = _baseKeysIn, isArrayLike$1 = isArrayLike_1;
      function keysIn$4(object) {
        return isArrayLike$1(object) ? arrayLikeKeys$1(object, true) : baseKeysIn$1(object);
      }
      var keysIn_1 = keysIn$4;
      var copyObject$3 = _copyObject, keysIn$3 = keysIn_1;
      function baseAssignIn$1(object, source) {
        return object && copyObject$3(source, keysIn$3(source), object);
      }
      var _baseAssignIn = baseAssignIn$1;
      var _cloneBuffer = { exports: {} };
      (function(module2, exports3) {
        var root2 = _root$4;
        var freeExports2 = exports3 && !exports3.nodeType && exports3;
        var freeModule2 = freeExports2 && true && module2 && !module2.nodeType && module2;
        var moduleExports2 = freeModule2 && freeModule2.exports === freeExports2;
        var Buffer22 = moduleExports2 ? root2.Buffer : void 0, allocUnsafe2 = Buffer22 ? Buffer22.allocUnsafe : void 0;
        function cloneBuffer2(buffer2, isDeep) {
          if (isDeep) {
            return buffer2.slice();
          }
          var length = buffer2.length, result = allocUnsafe2 ? allocUnsafe2(length) : new buffer2.constructor(length);
          buffer2.copy(result);
          return result;
        }
        module2.exports = cloneBuffer2;
      })(_cloneBuffer, _cloneBuffer.exports);
      function copyArray$2(source, array) {
        var index2 = -1, length = source.length;
        array || (array = Array(length));
        while (++index2 < length) {
          array[index2] = source[index2];
        }
        return array;
      }
      var _copyArray = copyArray$2;
      var copyObject$2 = _copyObject, getSymbols$3 = _getSymbols;
      function copySymbols$1(source, object) {
        return copyObject$2(source, getSymbols$3(source), object);
      }
      var _copySymbols = copySymbols$1;
      var arrayPush$1 = _arrayPush, getPrototype$3 = _getPrototype, getSymbols$2 = _getSymbols, stubArray$1 = stubArray_1;
      var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
      var getSymbolsIn$2 = !nativeGetSymbols$1 ? stubArray$1 : function(object) {
        var result = [];
        while (object) {
          arrayPush$1(result, getSymbols$2(object));
          object = getPrototype$3(object);
        }
        return result;
      };
      var _getSymbolsIn = getSymbolsIn$2;
      var copyObject$1 = _copyObject, getSymbolsIn$1 = _getSymbolsIn;
      function copySymbolsIn$1(source, object) {
        return copyObject$1(source, getSymbolsIn$1(source), object);
      }
      var _copySymbolsIn = copySymbolsIn$1;
      var baseGetAllKeys$1 = _baseGetAllKeys, getSymbolsIn = _getSymbolsIn, keysIn$2 = keysIn_1;
      function getAllKeysIn$1(object) {
        return baseGetAllKeys$1(object, keysIn$2, getSymbolsIn);
      }
      var _getAllKeysIn = getAllKeysIn$1;
      var objectProto$f = Object.prototype;
      var hasOwnProperty$d = objectProto$f.hasOwnProperty;
      function initCloneArray$1(array) {
        var length = array.length, result = new array.constructor(length);
        if (length && typeof array[0] == "string" && hasOwnProperty$d.call(array, "index")) {
          result.index = array.index;
          result.input = array.input;
        }
        return result;
      }
      var _initCloneArray = initCloneArray$1;
      var Uint8Array$2 = _Uint8Array;
      function cloneArrayBuffer$4(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array$2(result).set(new Uint8Array$2(arrayBuffer));
        return result;
      }
      var _cloneArrayBuffer = cloneArrayBuffer$4;
      var cloneArrayBuffer$3 = _cloneArrayBuffer;
      function cloneDataView$1(dataView, isDeep) {
        var buffer2 = isDeep ? cloneArrayBuffer$3(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer2, dataView.byteOffset, dataView.byteLength);
      }
      var _cloneDataView = cloneDataView$1;
      var reFlags = /\w*$/;
      function cloneRegExp$1(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }
      var _cloneRegExp = cloneRegExp$1;
      var Symbol$3 = _Symbol$4;
      var symbolProto$2 = Symbol$3 ? Symbol$3.prototype : void 0, symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : void 0;
      function cloneSymbol$1(symbol) {
        return symbolValueOf$1 ? Object(symbolValueOf$1.call(symbol)) : {};
      }
      var _cloneSymbol = cloneSymbol$1;
      var cloneArrayBuffer$2 = _cloneArrayBuffer;
      function cloneTypedArray$2(typedArray, isDeep) {
        var buffer2 = isDeep ? cloneArrayBuffer$2(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer2, typedArray.byteOffset, typedArray.length);
      }
      var _cloneTypedArray = cloneTypedArray$2;
      var cloneArrayBuffer$1 = _cloneArrayBuffer, cloneDataView = _cloneDataView, cloneRegExp = _cloneRegExp, cloneSymbol = _cloneSymbol, cloneTypedArray$1 = _cloneTypedArray;
      var boolTag$3 = "[object Boolean]", dateTag$3 = "[object Date]", mapTag$5 = "[object Map]", numberTag$3 = "[object Number]", regexpTag$3 = "[object RegExp]", setTag$5 = "[object Set]", stringTag$3 = "[object String]", symbolTag$3 = "[object Symbol]";
      var arrayBufferTag$3 = "[object ArrayBuffer]", dataViewTag$4 = "[object DataView]", float32Tag$2 = "[object Float32Array]", float64Tag$2 = "[object Float64Array]", int8Tag$2 = "[object Int8Array]", int16Tag$2 = "[object Int16Array]", int32Tag$2 = "[object Int32Array]", uint8Tag$2 = "[object Uint8Array]", uint8ClampedTag$2 = "[object Uint8ClampedArray]", uint16Tag$2 = "[object Uint16Array]", uint32Tag$2 = "[object Uint32Array]";
      function initCloneByTag$1(object, tag, isDeep) {
        var Ctor = object.constructor;
        switch (tag) {
          case arrayBufferTag$3:
            return cloneArrayBuffer$1(object);
          case boolTag$3:
          case dateTag$3:
            return new Ctor(+object);
          case dataViewTag$4:
            return cloneDataView(object, isDeep);
          case float32Tag$2:
          case float64Tag$2:
          case int8Tag$2:
          case int16Tag$2:
          case int32Tag$2:
          case uint8Tag$2:
          case uint8ClampedTag$2:
          case uint16Tag$2:
          case uint32Tag$2:
            return cloneTypedArray$1(object, isDeep);
          case mapTag$5:
            return new Ctor();
          case numberTag$3:
          case stringTag$3:
            return new Ctor(object);
          case regexpTag$3:
            return cloneRegExp(object);
          case setTag$5:
            return new Ctor();
          case symbolTag$3:
            return cloneSymbol(object);
        }
      }
      var _initCloneByTag = initCloneByTag$1;
      var isObject$4 = isObject_1$4;
      var objectCreate$1 = Object.create;
      var baseCreate$3 = function() {
        function object() {
        }
        return function(proto2) {
          if (!isObject$4(proto2)) {
            return {};
          }
          if (objectCreate$1) {
            return objectCreate$1(proto2);
          }
          object.prototype = proto2;
          var result = new object();
          object.prototype = void 0;
          return result;
        };
      }();
      var _baseCreate = baseCreate$3;
      var baseCreate$2 = _baseCreate, getPrototype$2 = _getPrototype, isPrototype$1 = _isPrototype;
      function initCloneObject$2(object) {
        return typeof object.constructor == "function" && !isPrototype$1(object) ? baseCreate$2(getPrototype$2(object)) : {};
      }
      var _initCloneObject = initCloneObject$2;
      var getTag$4 = _getTag, isObjectLike$2 = isObjectLike_1$4;
      var mapTag$4 = "[object Map]";
      function baseIsMap$1(value) {
        return isObjectLike$2(value) && getTag$4(value) == mapTag$4;
      }
      var _baseIsMap = baseIsMap$1;
      var baseIsMap = _baseIsMap, baseUnary$2 = _baseUnary, nodeUtil$3 = _nodeUtil.exports;
      var nodeIsMap = nodeUtil$3 && nodeUtil$3.isMap;
      var isMap$1 = nodeIsMap ? baseUnary$2(nodeIsMap) : baseIsMap;
      var isMap_1 = isMap$1;
      var getTag$3 = _getTag, isObjectLike$1 = isObjectLike_1$4;
      var setTag$4 = "[object Set]";
      function baseIsSet$1(value) {
        return isObjectLike$1(value) && getTag$3(value) == setTag$4;
      }
      var _baseIsSet = baseIsSet$1;
      var baseIsSet = _baseIsSet, baseUnary$1 = _baseUnary, nodeUtil$2 = _nodeUtil.exports;
      var nodeIsSet = nodeUtil$2 && nodeUtil$2.isSet;
      var isSet$1 = nodeIsSet ? baseUnary$1(nodeIsSet) : baseIsSet;
      var isSet_1 = isSet$1;
      var Stack$1 = _Stack, arrayEach$1 = _arrayEach, assignValue$1 = _assignValue, baseAssign = _baseAssign, baseAssignIn = _baseAssignIn, cloneBuffer$1 = _cloneBuffer.exports, copyArray$1 = _copyArray, copySymbols = _copySymbols, copySymbolsIn = _copySymbolsIn, getAllKeys$1 = _getAllKeys, getAllKeysIn = _getAllKeysIn, getTag$2 = _getTag, initCloneArray = _initCloneArray, initCloneByTag = _initCloneByTag, initCloneObject$1 = _initCloneObject, isArray$3 = isArray_1, isBuffer$2 = isBuffer$5.exports, isMap = isMap_1, isObject$3 = isObject_1$4, isSet = isSet_1, keys$2 = keys_1, keysIn$1 = keysIn_1;
      var CLONE_DEEP_FLAG$1 = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG$1 = 4;
      var argsTag$3 = "[object Arguments]", arrayTag$2 = "[object Array]", boolTag$2 = "[object Boolean]", dateTag$2 = "[object Date]", errorTag$2 = "[object Error]", funcTag$2 = "[object Function]", genTag$1 = "[object GeneratorFunction]", mapTag$3 = "[object Map]", numberTag$2 = "[object Number]", objectTag$4 = "[object Object]", regexpTag$2 = "[object RegExp]", setTag$3 = "[object Set]", stringTag$2 = "[object String]", symbolTag$2 = "[object Symbol]", weakMapTag$2 = "[object WeakMap]";
      var arrayBufferTag$2 = "[object ArrayBuffer]", dataViewTag$3 = "[object DataView]", float32Tag$1 = "[object Float32Array]", float64Tag$1 = "[object Float64Array]", int8Tag$1 = "[object Int8Array]", int16Tag$1 = "[object Int16Array]", int32Tag$1 = "[object Int32Array]", uint8Tag$1 = "[object Uint8Array]", uint8ClampedTag$1 = "[object Uint8ClampedArray]", uint16Tag$1 = "[object Uint16Array]", uint32Tag$1 = "[object Uint32Array]";
      var cloneableTags = {};
      cloneableTags[argsTag$3] = cloneableTags[arrayTag$2] = cloneableTags[arrayBufferTag$2] = cloneableTags[dataViewTag$3] = cloneableTags[boolTag$2] = cloneableTags[dateTag$2] = cloneableTags[float32Tag$1] = cloneableTags[float64Tag$1] = cloneableTags[int8Tag$1] = cloneableTags[int16Tag$1] = cloneableTags[int32Tag$1] = cloneableTags[mapTag$3] = cloneableTags[numberTag$2] = cloneableTags[objectTag$4] = cloneableTags[regexpTag$2] = cloneableTags[setTag$3] = cloneableTags[stringTag$2] = cloneableTags[symbolTag$2] = cloneableTags[uint8Tag$1] = cloneableTags[uint8ClampedTag$1] = cloneableTags[uint16Tag$1] = cloneableTags[uint32Tag$1] = true;
      cloneableTags[errorTag$2] = cloneableTags[funcTag$2] = cloneableTags[weakMapTag$2] = false;
      function baseClone$1(value, bitmask, customizer, key, object, stack) {
        var result, isDeep = bitmask & CLONE_DEEP_FLAG$1, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG$1;
        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }
        if (result !== void 0) {
          return result;
        }
        if (!isObject$3(value)) {
          return value;
        }
        var isArr = isArray$3(value);
        if (isArr) {
          result = initCloneArray(value);
          if (!isDeep) {
            return copyArray$1(value, result);
          }
        } else {
          var tag = getTag$2(value), isFunc = tag == funcTag$2 || tag == genTag$1;
          if (isBuffer$2(value)) {
            return cloneBuffer$1(value, isDeep);
          }
          if (tag == objectTag$4 || tag == argsTag$3 || isFunc && !object) {
            result = isFlat || isFunc ? {} : initCloneObject$1(value);
            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }
            result = initCloneByTag(value, tag, isDeep);
          }
        }
        stack || (stack = new Stack$1());
        var stacked = stack.get(value);
        if (stacked) {
          return stacked;
        }
        stack.set(value, result);
        if (isSet(value)) {
          value.forEach(function(subValue) {
            result.add(baseClone$1(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap(value)) {
          value.forEach(function(subValue, key2) {
            result.set(key2, baseClone$1(subValue, bitmask, customizer, key2, value, stack));
          });
        }
        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys$1 : isFlat ? keysIn$1 : keys$2;
        var props = isArr ? void 0 : keysFunc(value);
        arrayEach$1(props || value, function(subValue, key2) {
          if (props) {
            key2 = subValue;
            subValue = value[key2];
          }
          assignValue$1(result, key2, baseClone$1(subValue, bitmask, customizer, key2, value, stack));
        });
        return result;
      }
      var _baseClone = baseClone$1;
      var baseClone = _baseClone;
      var CLONE_DEEP_FLAG = 1, CLONE_SYMBOLS_FLAG = 4;
      function cloneDeep(value) {
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
      }
      var cloneDeep_1 = cloneDeep;
      Object.defineProperty(mergeClasses$1, "__esModule", {
        value: true
      });
      mergeClasses$1.mergeClasses = void 0;
      var _forOwn2$1 = forOwn_1;
      var _forOwn3$1 = _interopRequireDefault$6(_forOwn2$1);
      var _cloneDeep2 = cloneDeep_1;
      var _cloneDeep3 = _interopRequireDefault$6(_cloneDeep2);
      var _extends$e = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      function _interopRequireDefault$6(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      var mergeClasses = mergeClasses$1.mergeClasses = function mergeClasses2(classes) {
        var activeNames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
        var styles2 = classes.default && (0, _cloneDeep3.default)(classes.default) || {};
        activeNames.map(function(name2) {
          var toMerge = classes[name2];
          if (toMerge) {
            (0, _forOwn3$1.default)(toMerge, function(value, key) {
              if (!styles2[key]) {
                styles2[key] = {};
              }
              styles2[key] = _extends$e({}, styles2[key], toMerge[key]);
            });
          }
          return name2;
        });
        return styles2;
      };
      mergeClasses$1.default = mergeClasses;
      var autoprefix$1 = {};
      Object.defineProperty(autoprefix$1, "__esModule", {
        value: true
      });
      autoprefix$1.autoprefix = void 0;
      var _forOwn2 = forOwn_1;
      var _forOwn3 = _interopRequireDefault$5(_forOwn2);
      var _extends$d = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      function _interopRequireDefault$5(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      var transforms = {
        borderRadius: function borderRadius(value) {
          return {
            msBorderRadius: value,
            MozBorderRadius: value,
            OBorderRadius: value,
            WebkitBorderRadius: value,
            borderRadius: value
          };
        },
        boxShadow: function boxShadow(value) {
          return {
            msBoxShadow: value,
            MozBoxShadow: value,
            OBoxShadow: value,
            WebkitBoxShadow: value,
            boxShadow: value
          };
        },
        userSelect: function userSelect(value) {
          return {
            WebkitTouchCallout: value,
            KhtmlUserSelect: value,
            MozUserSelect: value,
            msUserSelect: value,
            WebkitUserSelect: value,
            userSelect: value
          };
        },
        flex: function flex(value) {
          return {
            WebkitBoxFlex: value,
            MozBoxFlex: value,
            WebkitFlex: value,
            msFlex: value,
            flex: value
          };
        },
        flexBasis: function flexBasis(value) {
          return {
            WebkitFlexBasis: value,
            flexBasis: value
          };
        },
        justifyContent: function justifyContent(value) {
          return {
            WebkitJustifyContent: value,
            justifyContent: value
          };
        },
        transition: function transition(value) {
          return {
            msTransition: value,
            MozTransition: value,
            OTransition: value,
            WebkitTransition: value,
            transition: value
          };
        },
        transform: function transform(value) {
          return {
            msTransform: value,
            MozTransform: value,
            OTransform: value,
            WebkitTransform: value,
            transform: value
          };
        },
        absolute: function absolute(value) {
          var direction = value && value.split(" ");
          return {
            position: "absolute",
            top: direction && direction[0],
            right: direction && direction[1],
            bottom: direction && direction[2],
            left: direction && direction[3]
          };
        },
        extend: function extend2(name2, otherElementStyles) {
          var otherStyle = otherElementStyles[name2];
          if (otherStyle) {
            return otherStyle;
          }
          return {
            "extend": name2
          };
        }
      };
      var autoprefix = autoprefix$1.autoprefix = function autoprefix2(elements) {
        var prefixed = {};
        (0, _forOwn3.default)(elements, function(styles2, element) {
          var expanded = {};
          (0, _forOwn3.default)(styles2, function(value, key) {
            var transform = transforms[key];
            if (transform) {
              expanded = _extends$d({}, expanded, transform(value));
            } else {
              expanded[key] = value;
            }
          });
          prefixed[element] = expanded;
        });
        return prefixed;
      };
      autoprefix$1.default = autoprefix;
      var hover$1 = {};
      Object.defineProperty(hover$1, "__esModule", {
        value: true
      });
      hover$1.hover = void 0;
      var _extends$c = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _react$3 = react.exports;
      var _react2$3 = _interopRequireDefault$4(_react$3);
      function _interopRequireDefault$4(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      function _classCallCheck$9(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$9(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$9(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var hover = hover$1.hover = function hover2(Component) {
        var Span2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
        return function(_React$Component) {
          _inherits$9(Hover, _React$Component);
          function Hover() {
            var _ref;
            var _temp, _this, _ret;
            _classCallCheck$9(this, Hover);
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            return _ret = (_temp = (_this = _possibleConstructorReturn$9(this, (_ref = Hover.__proto__ || Object.getPrototypeOf(Hover)).call.apply(_ref, [this].concat(args))), _this), _this.state = { hover: false }, _this.handleMouseOver = function() {
              return _this.setState({ hover: true });
            }, _this.handleMouseOut = function() {
              return _this.setState({ hover: false });
            }, _this.render = function() {
              return _react2$3.default.createElement(Span2, { onMouseOver: _this.handleMouseOver, onMouseOut: _this.handleMouseOut }, _react2$3.default.createElement(Component, _extends$c({}, _this.props, _this.state)));
            }, _temp), _possibleConstructorReturn$9(_this, _ret);
          }
          return Hover;
        }(_react2$3.default.Component);
      };
      hover$1.default = hover;
      var active$1 = {};
      Object.defineProperty(active$1, "__esModule", {
        value: true
      });
      active$1.active = void 0;
      var _extends$b = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _react$2 = react.exports;
      var _react2$2 = _interopRequireDefault$3(_react$2);
      function _interopRequireDefault$3(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      function _classCallCheck$8(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$8(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$8(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var active = active$1.active = function active2(Component) {
        var Span2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
        return function(_React$Component) {
          _inherits$8(Active, _React$Component);
          function Active() {
            var _ref;
            var _temp, _this, _ret;
            _classCallCheck$8(this, Active);
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            return _ret = (_temp = (_this = _possibleConstructorReturn$8(this, (_ref = Active.__proto__ || Object.getPrototypeOf(Active)).call.apply(_ref, [this].concat(args))), _this), _this.state = { active: false }, _this.handleMouseDown = function() {
              return _this.setState({ active: true });
            }, _this.handleMouseUp = function() {
              return _this.setState({ active: false });
            }, _this.render = function() {
              return _react2$2.default.createElement(Span2, { onMouseDown: _this.handleMouseDown, onMouseUp: _this.handleMouseUp }, _react2$2.default.createElement(Component, _extends$b({}, _this.props, _this.state)));
            }, _temp), _possibleConstructorReturn$8(_this, _ret);
          }
          return Active;
        }(_react2$2.default.Component);
      };
      active$1.default = active;
      var loop = {};
      Object.defineProperty(loop, "__esModule", {
        value: true
      });
      var loopable = function loopable2(i22, length) {
        var props = {};
        var setProp = function setProp2(name2) {
          var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
          props[name2] = value;
        };
        i22 === 0 && setProp("first-child");
        i22 === length - 1 && setProp("last-child");
        (i22 === 0 || i22 % 2 === 0) && setProp("even");
        Math.abs(i22 % 2) === 1 && setProp("odd");
        setProp("nth-child", i22);
        return props;
      };
      loop.default = loopable;
      Object.defineProperty(lib, "__esModule", {
        value: true
      });
      lib.ReactCSS = lib.loop = lib.handleActive = handleHover = lib.handleHover = lib.hover = void 0;
      var _flattenNames = flattenNames$1;
      var _flattenNames2 = _interopRequireDefault$2(_flattenNames);
      var _mergeClasses = mergeClasses$1;
      var _mergeClasses2 = _interopRequireDefault$2(_mergeClasses);
      var _autoprefix = autoprefix$1;
      var _autoprefix2 = _interopRequireDefault$2(_autoprefix);
      var _hover2 = hover$1;
      var _hover3 = _interopRequireDefault$2(_hover2);
      var _active = active$1;
      var _active2 = _interopRequireDefault$2(_active);
      var _loop2 = loop;
      var _loop3 = _interopRequireDefault$2(_loop2);
      function _interopRequireDefault$2(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      lib.hover = _hover3.default;
      var handleHover = lib.handleHover = _hover3.default;
      lib.handleActive = _active2.default;
      lib.loop = _loop3.default;
      var ReactCSS = lib.ReactCSS = function ReactCSS2(classes) {
        for (var _len = arguments.length, activations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          activations[_key - 1] = arguments[_key];
        }
        var activeNames = (0, _flattenNames2.default)(activations);
        var merged = (0, _mergeClasses2.default)(classes, activeNames);
        return (0, _autoprefix2.default)(merged);
      };
      var _default$3 = lib.default = ReactCSS;
      var calculateChange$2 = function calculateChange2(e22, hsl, direction, initialA, container) {
        var containerWidth = container.clientWidth;
        var containerHeight = container.clientHeight;
        var x22 = typeof e22.pageX === "number" ? e22.pageX : e22.touches[0].pageX;
        var y22 = typeof e22.pageY === "number" ? e22.pageY : e22.touches[0].pageY;
        var left = x22 - (container.getBoundingClientRect().left + window.pageXOffset);
        var top = y22 - (container.getBoundingClientRect().top + window.pageYOffset);
        if (direction === "vertical") {
          var a22 = void 0;
          if (top < 0) {
            a22 = 0;
          } else if (top > containerHeight) {
            a22 = 1;
          } else {
            a22 = Math.round(top * 100 / containerHeight) / 100;
          }
          if (hsl.a !== a22) {
            return {
              h: hsl.h,
              s: hsl.s,
              l: hsl.l,
              a: a22,
              source: "rgb"
            };
          }
        } else {
          var _a = void 0;
          if (left < 0) {
            _a = 0;
          } else if (left > containerWidth) {
            _a = 1;
          } else {
            _a = Math.round(left * 100 / containerWidth) / 100;
          }
          if (initialA !== _a) {
            return {
              h: hsl.h,
              s: hsl.s,
              l: hsl.l,
              a: _a,
              source: "rgb"
            };
          }
        }
        return null;
      };
      var checkboardCache = {};
      var render = function render2(c1, c22, size, serverCanvas) {
        if (typeof document === "undefined" && !serverCanvas) {
          return null;
        }
        var canvas = serverCanvas ? new serverCanvas() : document.createElement("canvas");
        canvas.width = size * 2;
        canvas.height = size * 2;
        var ctx = canvas.getContext("2d");
        if (!ctx) {
          return null;
        }
        ctx.fillStyle = c1;
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = c22;
        ctx.fillRect(0, 0, size, size);
        ctx.translate(size, size);
        ctx.fillRect(0, 0, size, size);
        return canvas.toDataURL();
      };
      var get$4 = function get2(c1, c22, size, serverCanvas) {
        var key = c1 + "-" + c22 + "-" + size + (serverCanvas ? "-server" : "");
        if (checkboardCache[key]) {
          return checkboardCache[key];
        }
        var checkboard = render(c1, c22, size, serverCanvas);
        checkboardCache[key] = checkboard;
        return checkboard;
      };
      var _extends$a = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var Checkboard = function Checkboard2(_ref) {
        var white = _ref.white, grey = _ref.grey, size = _ref.size, renderers = _ref.renderers, borderRadius = _ref.borderRadius, boxShadow = _ref.boxShadow, children = _ref.children;
        var styles2 = _default$3({
          "default": {
            grid: {
              borderRadius,
              boxShadow,
              absolute: "0px 0px 0px 0px",
              background: "url(" + get$4(white, grey, size, renderers.canvas) + ") center left"
            }
          }
        });
        return react.exports.isValidElement(children) ? React__default.cloneElement(children, _extends$a({}, children.props, { style: _extends$a({}, children.props.style, styles2.grid) })) : React__default.createElement("div", { style: styles2.grid });
      };
      Checkboard.defaultProps = {
        size: 8,
        white: "transparent",
        grey: "rgba(0,0,0,.08)",
        renderers: {}
      };
      var _extends$9 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _createClass$7 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck$7(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$7(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$7(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var Alpha = function(_ref) {
        _inherits$7(Alpha2, _ref);
        function Alpha2() {
          var _ref2;
          var _temp, _this, _ret;
          _classCallCheck$7(this, Alpha2);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn$7(this, (_ref2 = Alpha2.__proto__ || Object.getPrototypeOf(Alpha2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e22) {
            var change = calculateChange$2(e22, _this.props.hsl, _this.props.direction, _this.props.a, _this.container);
            change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e22);
          }, _this.handleMouseDown = function(e22) {
            _this.handleChange(e22);
            window.addEventListener("mousemove", _this.handleChange);
            window.addEventListener("mouseup", _this.handleMouseUp);
          }, _this.handleMouseUp = function() {
            _this.unbindEventListeners();
          }, _this.unbindEventListeners = function() {
            window.removeEventListener("mousemove", _this.handleChange);
            window.removeEventListener("mouseup", _this.handleMouseUp);
          }, _temp), _possibleConstructorReturn$7(_this, _ret);
        }
        _createClass$7(Alpha2, [{
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            this.unbindEventListeners();
          }
        }, {
          key: "render",
          value: function render2() {
            var _this2 = this;
            var rgb = this.props.rgb;
            var styles2 = _default$3({
              "default": {
                alpha: {
                  absolute: "0px 0px 0px 0px",
                  borderRadius: this.props.radius
                },
                checkboard: {
                  absolute: "0px 0px 0px 0px",
                  overflow: "hidden",
                  borderRadius: this.props.radius
                },
                gradient: {
                  absolute: "0px 0px 0px 0px",
                  background: "linear-gradient(to right, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)",
                  boxShadow: this.props.shadow,
                  borderRadius: this.props.radius
                },
                container: {
                  position: "relative",
                  height: "100%",
                  margin: "0 3px"
                },
                pointer: {
                  position: "absolute",
                  left: rgb.a * 100 + "%"
                },
                slider: {
                  width: "4px",
                  borderRadius: "1px",
                  height: "8px",
                  boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
                  background: "#fff",
                  marginTop: "1px",
                  transform: "translateX(-2px)"
                }
              },
              "vertical": {
                gradient: {
                  background: "linear-gradient(to bottom, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)"
                },
                pointer: {
                  left: 0,
                  top: rgb.a * 100 + "%"
                }
              },
              "overwrite": _extends$9({}, this.props.style)
            }, {
              vertical: this.props.direction === "vertical",
              overwrite: true
            });
            return React__default.createElement("div", { style: styles2.alpha }, React__default.createElement("div", { style: styles2.checkboard }, React__default.createElement(Checkboard, { renderers: this.props.renderers })), React__default.createElement("div", { style: styles2.gradient }), React__default.createElement("div", {
              style: styles2.container,
              ref: function ref(container) {
                return _this2.container = container;
              },
              onMouseDown: this.handleMouseDown,
              onTouchMove: this.handleChange,
              onTouchStart: this.handleChange
            }, React__default.createElement("div", { style: styles2.pointer }, this.props.pointer ? React__default.createElement(this.props.pointer, this.props) : React__default.createElement("div", { style: styles2.slider }))));
          }
        }]);
        return Alpha2;
      }(react.exports.PureComponent || react.exports.Component);
      var _createClass$6 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _defineProperty$2(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function _classCallCheck$6(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$6(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$6(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var DEFAULT_ARROW_OFFSET = 1;
      var UP_KEY_CODE = 38;
      var DOWN_KEY_CODE = 40;
      var VALID_KEY_CODES = [UP_KEY_CODE, DOWN_KEY_CODE];
      var isValidKeyCode = function isValidKeyCode2(keyCode) {
        return VALID_KEY_CODES.indexOf(keyCode) > -1;
      };
      var getNumberValue = function getNumberValue2(value) {
        return Number(String(value).replace(/%/g, ""));
      };
      var idCounter = 1;
      var EditableInput = function(_ref) {
        _inherits$6(EditableInput2, _ref);
        function EditableInput2(props) {
          _classCallCheck$6(this, EditableInput2);
          var _this = _possibleConstructorReturn$6(this, (EditableInput2.__proto__ || Object.getPrototypeOf(EditableInput2)).call(this));
          _this.handleBlur = function() {
            if (_this.state.blurValue) {
              _this.setState({ value: _this.state.blurValue, blurValue: null });
            }
          };
          _this.handleChange = function(e22) {
            _this.setUpdatedValue(e22.target.value, e22);
          };
          _this.handleKeyDown = function(e22) {
            var value = getNumberValue(e22.target.value);
            if (!isNaN(value) && isValidKeyCode(e22.keyCode)) {
              var offset2 = _this.getArrowOffset();
              var updatedValue = e22.keyCode === UP_KEY_CODE ? value + offset2 : value - offset2;
              _this.setUpdatedValue(updatedValue, e22);
            }
          };
          _this.handleDrag = function(e22) {
            if (_this.props.dragLabel) {
              var newValue = Math.round(_this.props.value + e22.movementX);
              if (newValue >= 0 && newValue <= _this.props.dragMax) {
                _this.props.onChange && _this.props.onChange(_this.getValueObjectWithLabel(newValue), e22);
              }
            }
          };
          _this.handleMouseDown = function(e22) {
            if (_this.props.dragLabel) {
              e22.preventDefault();
              _this.handleDrag(e22);
              window.addEventListener("mousemove", _this.handleDrag);
              window.addEventListener("mouseup", _this.handleMouseUp);
            }
          };
          _this.handleMouseUp = function() {
            _this.unbindEventListeners();
          };
          _this.unbindEventListeners = function() {
            window.removeEventListener("mousemove", _this.handleDrag);
            window.removeEventListener("mouseup", _this.handleMouseUp);
          };
          _this.state = {
            value: String(props.value).toUpperCase(),
            blurValue: String(props.value).toUpperCase()
          };
          _this.inputId = "rc-editable-input-" + idCounter++;
          return _this;
        }
        _createClass$6(EditableInput2, [{
          key: "componentDidUpdate",
          value: function componentDidUpdate(prevProps, prevState) {
            if (this.props.value !== this.state.value && (prevProps.value !== this.props.value || prevState.value !== this.state.value)) {
              if (this.input === document.activeElement) {
                this.setState({ blurValue: String(this.props.value).toUpperCase() });
              } else {
                this.setState({ value: String(this.props.value).toUpperCase(), blurValue: !this.state.blurValue && String(this.props.value).toUpperCase() });
              }
            }
          }
        }, {
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            this.unbindEventListeners();
          }
        }, {
          key: "getValueObjectWithLabel",
          value: function getValueObjectWithLabel(value) {
            return _defineProperty$2({}, this.props.label, value);
          }
        }, {
          key: "getArrowOffset",
          value: function getArrowOffset() {
            return this.props.arrowOffset || DEFAULT_ARROW_OFFSET;
          }
        }, {
          key: "setUpdatedValue",
          value: function setUpdatedValue(value, e22) {
            var onChangeValue = this.props.label ? this.getValueObjectWithLabel(value) : value;
            this.props.onChange && this.props.onChange(onChangeValue, e22);
            this.setState({ value });
          }
        }, {
          key: "render",
          value: function render2() {
            var _this2 = this;
            var styles2 = _default$3({
              "default": {
                wrap: {
                  position: "relative"
                }
              },
              "user-override": {
                wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
                input: this.props.style && this.props.style.input ? this.props.style.input : {},
                label: this.props.style && this.props.style.label ? this.props.style.label : {}
              },
              "dragLabel-true": {
                label: {
                  cursor: "ew-resize"
                }
              }
            }, {
              "user-override": true
            }, this.props);
            return React__default.createElement("div", { style: styles2.wrap }, React__default.createElement("input", {
              id: this.inputId,
              style: styles2.input,
              ref: function ref(input) {
                return _this2.input = input;
              },
              value: this.state.value,
              onKeyDown: this.handleKeyDown,
              onChange: this.handleChange,
              onBlur: this.handleBlur,
              placeholder: this.props.placeholder,
              spellCheck: "false"
            }), this.props.label && !this.props.hideLabel ? React__default.createElement("label", {
              htmlFor: this.inputId,
              style: styles2.label,
              onMouseDown: this.handleMouseDown
            }, this.props.label) : null);
          }
        }]);
        return EditableInput2;
      }(react.exports.PureComponent || react.exports.Component);
      var calculateChange$1 = function calculateChange2(e22, direction, hsl, container) {
        var containerWidth = container.clientWidth;
        var containerHeight = container.clientHeight;
        var x22 = typeof e22.pageX === "number" ? e22.pageX : e22.touches[0].pageX;
        var y22 = typeof e22.pageY === "number" ? e22.pageY : e22.touches[0].pageY;
        var left = x22 - (container.getBoundingClientRect().left + window.pageXOffset);
        var top = y22 - (container.getBoundingClientRect().top + window.pageYOffset);
        if (direction === "vertical") {
          var h22 = void 0;
          if (top < 0) {
            h22 = 359;
          } else if (top > containerHeight) {
            h22 = 0;
          } else {
            var percent = -(top * 100 / containerHeight) + 100;
            h22 = 360 * percent / 100;
          }
          if (hsl.h !== h22) {
            return {
              h: h22,
              s: hsl.s,
              l: hsl.l,
              a: hsl.a,
              source: "hsl"
            };
          }
        } else {
          var _h = void 0;
          if (left < 0) {
            _h = 0;
          } else if (left > containerWidth) {
            _h = 359;
          } else {
            var _percent = left * 100 / containerWidth;
            _h = 360 * _percent / 100;
          }
          if (hsl.h !== _h) {
            return {
              h: _h,
              s: hsl.s,
              l: hsl.l,
              a: hsl.a,
              source: "hsl"
            };
          }
        }
        return null;
      };
      var _createClass$5 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck$5(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$5(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$5(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var Hue = function(_ref) {
        _inherits$5(Hue2, _ref);
        function Hue2() {
          var _ref2;
          var _temp, _this, _ret;
          _classCallCheck$5(this, Hue2);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn$5(this, (_ref2 = Hue2.__proto__ || Object.getPrototypeOf(Hue2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e22) {
            var change = calculateChange$1(e22, _this.props.direction, _this.props.hsl, _this.container);
            change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e22);
          }, _this.handleMouseDown = function(e22) {
            _this.handleChange(e22);
            window.addEventListener("mousemove", _this.handleChange);
            window.addEventListener("mouseup", _this.handleMouseUp);
          }, _this.handleMouseUp = function() {
            _this.unbindEventListeners();
          }, _temp), _possibleConstructorReturn$5(_this, _ret);
        }
        _createClass$5(Hue2, [{
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            this.unbindEventListeners();
          }
        }, {
          key: "unbindEventListeners",
          value: function unbindEventListeners() {
            window.removeEventListener("mousemove", this.handleChange);
            window.removeEventListener("mouseup", this.handleMouseUp);
          }
        }, {
          key: "render",
          value: function render2() {
            var _this2 = this;
            var _props$direction = this.props.direction, direction = _props$direction === void 0 ? "horizontal" : _props$direction;
            var styles2 = _default$3({
              "default": {
                hue: {
                  absolute: "0px 0px 0px 0px",
                  borderRadius: this.props.radius,
                  boxShadow: this.props.shadow
                },
                container: {
                  padding: "0 2px",
                  position: "relative",
                  height: "100%",
                  borderRadius: this.props.radius
                },
                pointer: {
                  position: "absolute",
                  left: this.props.hsl.h * 100 / 360 + "%"
                },
                slider: {
                  marginTop: "1px",
                  width: "4px",
                  borderRadius: "1px",
                  height: "8px",
                  boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
                  background: "#fff",
                  transform: "translateX(-2px)"
                }
              },
              "vertical": {
                pointer: {
                  left: "0px",
                  top: -(this.props.hsl.h * 100 / 360) + 100 + "%"
                }
              }
            }, { vertical: direction === "vertical" });
            return React__default.createElement("div", { style: styles2.hue }, React__default.createElement("div", {
              className: "hue-" + direction,
              style: styles2.container,
              ref: function ref(container) {
                return _this2.container = container;
              },
              onMouseDown: this.handleMouseDown,
              onTouchMove: this.handleChange,
              onTouchStart: this.handleChange
            }, React__default.createElement("style", null, "\n            .hue-horizontal {\n              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to right, #f00 0%, #ff0\n                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n\n            .hue-vertical {\n              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,\n                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n          "), React__default.createElement("div", { style: styles2.pointer }, this.props.pointer ? React__default.createElement(this.props.pointer, this.props) : React__default.createElement("div", { style: styles2.slider }))));
          }
        }]);
        return Hue2;
      }(react.exports.PureComponent || react.exports.Component);
      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }
      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }
      function assocIndexOf(array, key) {
        var length = array.length;
        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }
        return -1;
      }
      var arrayProto = Array.prototype;
      var splice = arrayProto.splice;
      function listCacheDelete(key) {
        var data = this.__data__, index2 = assocIndexOf(data, key);
        if (index2 < 0) {
          return false;
        }
        var lastIndex = data.length - 1;
        if (index2 == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index2, 1);
        }
        --this.size;
        return true;
      }
      function listCacheGet(key) {
        var data = this.__data__, index2 = assocIndexOf(data, key);
        return index2 < 0 ? void 0 : data[index2][1];
      }
      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }
      function listCacheSet(key, value) {
        var data = this.__data__, index2 = assocIndexOf(data, key);
        if (index2 < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index2][1] = value;
        }
        return this;
      }
      function ListCache(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype["delete"] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;
      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }
      function stackDelete(key) {
        var data = this.__data__, result = data["delete"](key);
        this.size = data.size;
        return result;
      }
      function stackGet(key) {
        return this.__data__.get(key);
      }
      function stackHas(key) {
        return this.__data__.has(key);
      }
      var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
      var freeGlobal$1 = freeGlobal;
      var freeSelf = typeof self == "object" && self && self.Object === Object && self;
      var root = freeGlobal$1 || freeSelf || Function("return this")();
      var root$1 = root;
      var Symbol$1 = root$1.Symbol;
      var Symbol$2 = Symbol$1;
      var objectProto$e = Object.prototype;
      var hasOwnProperty$c = objectProto$e.hasOwnProperty;
      var nativeObjectToString$1 = objectProto$e.toString;
      var symToStringTag$1 = Symbol$2 ? Symbol$2.toStringTag : void 0;
      function getRawTag(value) {
        var isOwn = hasOwnProperty$c.call(value, symToStringTag$1), tag = value[symToStringTag$1];
        try {
          value[symToStringTag$1] = void 0;
          var unmasked = true;
        } catch (e22) {
        }
        var result = nativeObjectToString$1.call(value);
        if (unmasked) {
          if (isOwn) {
            value[symToStringTag$1] = tag;
          } else {
            delete value[symToStringTag$1];
          }
        }
        return result;
      }
      var objectProto$d = Object.prototype;
      var nativeObjectToString = objectProto$d.toString;
      function objectToString(value) {
        return nativeObjectToString.call(value);
      }
      var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
      var symToStringTag = Symbol$2 ? Symbol$2.toStringTag : void 0;
      function baseGetTag(value) {
        if (value == null) {
          return value === void 0 ? undefinedTag : nullTag;
        }
        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }
      function isObject$2(value) {
        var type = typeof value;
        return value != null && (type == "object" || type == "function");
      }
      var asyncTag = "[object AsyncFunction]", funcTag$1 = "[object Function]", genTag = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
      function isFunction$1(value) {
        if (!isObject$2(value)) {
          return false;
        }
        var tag = baseGetTag(value);
        return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;
      }
      var coreJsData = root$1["__core-js_shared__"];
      var coreJsData$1 = coreJsData;
      var maskSrcKey = function() {
        var uid2 = /[^.]+$/.exec(coreJsData$1 && coreJsData$1.keys && coreJsData$1.keys.IE_PROTO || "");
        return uid2 ? "Symbol(src)_1." + uid2 : "";
      }();
      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }
      var funcProto$2 = Function.prototype;
      var funcToString$2 = funcProto$2.toString;
      function toSource(func) {
        if (func != null) {
          try {
            return funcToString$2.call(func);
          } catch (e22) {
          }
          try {
            return func + "";
          } catch (e22) {
          }
        }
        return "";
      }
      var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
      var reIsHostCtor = /^\[object .+?Constructor\]$/;
      var funcProto$1 = Function.prototype, objectProto$c = Object.prototype;
      var funcToString$1 = funcProto$1.toString;
      var hasOwnProperty$b = objectProto$c.hasOwnProperty;
      var reIsNative = RegExp("^" + funcToString$1.call(hasOwnProperty$b).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
      function baseIsNative(value) {
        if (!isObject$2(value) || isMasked(value)) {
          return false;
        }
        var pattern = isFunction$1(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }
      function getValue(object, key) {
        return object == null ? void 0 : object[key];
      }
      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : void 0;
      }
      var Map$1 = getNative(root$1, "Map");
      var Map$2 = Map$1;
      var nativeCreate = getNative(Object, "create");
      var nativeCreate$1 = nativeCreate;
      function hashClear() {
        this.__data__ = nativeCreate$1 ? nativeCreate$1(null) : {};
        this.size = 0;
      }
      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }
      var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
      var objectProto$b = Object.prototype;
      var hasOwnProperty$a = objectProto$b.hasOwnProperty;
      function hashGet(key) {
        var data = this.__data__;
        if (nativeCreate$1) {
          var result = data[key];
          return result === HASH_UNDEFINED$2 ? void 0 : result;
        }
        return hasOwnProperty$a.call(data, key) ? data[key] : void 0;
      }
      var objectProto$a = Object.prototype;
      var hasOwnProperty$9 = objectProto$a.hasOwnProperty;
      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate$1 ? data[key] !== void 0 : hasOwnProperty$9.call(data, key);
      }
      var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate$1 && value === void 0 ? HASH_UNDEFINED$1 : value;
        return this;
      }
      function Hash(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      Hash.prototype.clear = hashClear;
      Hash.prototype["delete"] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;
      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          "hash": new Hash(),
          "map": new (Map$2 || ListCache)(),
          "string": new Hash()
        };
      }
      function isKeyable(value) {
        var type = typeof value;
        return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
      }
      function getMapData(map22, key) {
        var data = map22.__data__;
        return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
      }
      function mapCacheDelete(key) {
        var result = getMapData(this, key)["delete"](key);
        this.size -= result ? 1 : 0;
        return result;
      }
      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }
      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }
      function mapCacheSet(key, value) {
        var data = getMapData(this, key), size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }
      function MapCache(entries) {
        var index2 = -1, length = entries == null ? 0 : entries.length;
        this.clear();
        while (++index2 < length) {
          var entry = entries[index2];
          this.set(entry[0], entry[1]);
        }
      }
      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype["delete"] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;
      var LARGE_ARRAY_SIZE = 200;
      function stackSet(key, value) {
        var data = this.__data__;
        if (data instanceof ListCache) {
          var pairs = data.__data__;
          if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }
          data = this.__data__ = new MapCache(pairs);
        }
        data.set(key, value);
        this.size = data.size;
        return this;
      }
      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }
      Stack.prototype.clear = stackClear;
      Stack.prototype["delete"] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;
      var defineProperty = function() {
        try {
          var func = getNative(Object, "defineProperty");
          func({}, "", {});
          return func;
        } catch (e22) {
        }
      }();
      var defineProperty$1 = defineProperty;
      function baseAssignValue(object, key, value) {
        if (key == "__proto__" && defineProperty$1) {
          defineProperty$1(object, key, {
            "configurable": true,
            "enumerable": true,
            "value": value,
            "writable": true
          });
        } else {
          object[key] = value;
        }
      }
      function assignMergeValue(object, key, value) {
        if (value !== void 0 && !eq(object[key], value) || value === void 0 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }
      function createBaseFor(fromRight) {
        return function(object, iteratee, keysFunc) {
          var index2 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
          while (length--) {
            var key = props[fromRight ? length : ++index2];
            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }
          return object;
        };
      }
      var baseFor = createBaseFor();
      var baseFor$1 = baseFor;
      var freeExports$2 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule$2 = freeExports$2 && typeof module == "object" && module && !module.nodeType && module;
      var moduleExports$2 = freeModule$2 && freeModule$2.exports === freeExports$2;
      var Buffer$1 = moduleExports$2 ? root$1.Buffer : void 0, allocUnsafe = Buffer$1 ? Buffer$1.allocUnsafe : void 0;
      function cloneBuffer(buffer2, isDeep) {
        if (isDeep) {
          return buffer2.slice();
        }
        var length = buffer2.length, result = allocUnsafe ? allocUnsafe(length) : new buffer2.constructor(length);
        buffer2.copy(result);
        return result;
      }
      var Uint8Array2 = root$1.Uint8Array;
      var Uint8Array$1 = Uint8Array2;
      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array$1(result).set(new Uint8Array$1(arrayBuffer));
        return result;
      }
      function cloneTypedArray(typedArray, isDeep) {
        var buffer2 = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer2, typedArray.byteOffset, typedArray.length);
      }
      function copyArray(source, array) {
        var index2 = -1, length = source.length;
        array || (array = Array(length));
        while (++index2 < length) {
          array[index2] = source[index2];
        }
        return array;
      }
      var objectCreate = Object.create;
      var baseCreate = function() {
        function object() {
        }
        return function(proto2) {
          if (!isObject$2(proto2)) {
            return {};
          }
          if (objectCreate) {
            return objectCreate(proto2);
          }
          object.prototype = proto2;
          var result = new object();
          object.prototype = void 0;
          return result;
        };
      }();
      var baseCreate$1 = baseCreate;
      function overArg(func, transform) {
        return function(arg) {
          return func(transform(arg));
        };
      }
      var getPrototype = overArg(Object.getPrototypeOf, Object);
      var getPrototype$1 = getPrototype;
      var objectProto$9 = Object.prototype;
      function isPrototype(value) {
        var Ctor = value && value.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$9;
        return value === proto2;
      }
      function initCloneObject(object) {
        return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate$1(getPrototype$1(object)) : {};
      }
      function isObjectLike(value) {
        return value != null && typeof value == "object";
      }
      var argsTag$2 = "[object Arguments]";
      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag$2;
      }
      var objectProto$8 = Object.prototype;
      var hasOwnProperty$8 = objectProto$8.hasOwnProperty;
      var propertyIsEnumerable$1 = objectProto$8.propertyIsEnumerable;
      var isArguments = baseIsArguments(function() {
        return arguments;
      }()) ? baseIsArguments : function(value) {
        return isObjectLike(value) && hasOwnProperty$8.call(value, "callee") && !propertyIsEnumerable$1.call(value, "callee");
      };
      var isArguments$1 = isArguments;
      var isArray$1 = Array.isArray;
      var isArray$2 = isArray$1;
      var MAX_SAFE_INTEGER$1 = 9007199254740991;
      function isLength(value) {
        return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
      }
      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction$1(value);
      }
      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }
      function stubFalse() {
        return false;
      }
      var freeExports$1 = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule$1 = freeExports$1 && typeof module == "object" && module && !module.nodeType && module;
      var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;
      var Buffer2 = moduleExports$1 ? root$1.Buffer : void 0;
      var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
      var isBuffer = nativeIsBuffer || stubFalse;
      var isBuffer$1 = isBuffer;
      var objectTag$3 = "[object Object]";
      var funcProto = Function.prototype, objectProto$7 = Object.prototype;
      var funcToString = funcProto.toString;
      var hasOwnProperty$7 = objectProto$7.hasOwnProperty;
      var objectCtorString = funcToString.call(Object);
      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag$3) {
          return false;
        }
        var proto2 = getPrototype$1(value);
        if (proto2 === null) {
          return true;
        }
        var Ctor = hasOwnProperty$7.call(proto2, "constructor") && proto2.constructor;
        return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }
      var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag$1 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", funcTag = "[object Function]", mapTag$2 = "[object Map]", numberTag$1 = "[object Number]", objectTag$2 = "[object Object]", regexpTag$1 = "[object RegExp]", setTag$2 = "[object Set]", stringTag$1 = "[object String]", weakMapTag$1 = "[object WeakMap]";
      var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
      var typedArrayTags = {};
      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
      typedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag$1] = typedArrayTags[boolTag$1] = typedArrayTags[dataViewTag$2] = typedArrayTags[dateTag$1] = typedArrayTags[errorTag$1] = typedArrayTags[funcTag] = typedArrayTags[mapTag$2] = typedArrayTags[numberTag$1] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag$1] = typedArrayTags[setTag$2] = typedArrayTags[stringTag$1] = typedArrayTags[weakMapTag$1] = false;
      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }
      function baseUnary(func) {
        return function(value) {
          return func(value);
        };
      }
      var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
      var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
      var moduleExports = freeModule && freeModule.exports === freeExports;
      var freeProcess = moduleExports && freeGlobal$1.process;
      var nodeUtil = function() {
        try {
          var types = freeModule && freeModule.require && freeModule.require("util").types;
          if (types) {
            return types;
          }
          return freeProcess && freeProcess.binding && freeProcess.binding("util");
        } catch (e22) {
        }
      }();
      var nodeUtil$1 = nodeUtil;
      var nodeIsTypedArray = nodeUtil$1 && nodeUtil$1.isTypedArray;
      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
      var isTypedArray$1 = isTypedArray;
      function safeGet(object, key) {
        if (key === "constructor" && typeof object[key] === "function") {
          return;
        }
        if (key == "__proto__") {
          return;
        }
        return object[key];
      }
      var objectProto$6 = Object.prototype;
      var hasOwnProperty$6 = objectProto$6.hasOwnProperty;
      function assignValue(object, key, value) {
        var objValue = object[key];
        if (!(hasOwnProperty$6.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }
      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index2 = -1, length = props.length;
        while (++index2 < length) {
          var key = props[index2];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
          if (newValue === void 0) {
            newValue = source[key];
          }
          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }
        return object;
      }
      function baseTimes(n22, iteratee) {
        var index2 = -1, result = Array(n22);
        while (++index2 < n22) {
          result[index2] = iteratee(index2);
        }
        return result;
      }
      var MAX_SAFE_INTEGER = 9007199254740991;
      var reIsUint = /^(?:0|[1-9]\d*)$/;
      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
      }
      var objectProto$5 = Object.prototype;
      var hasOwnProperty$5 = objectProto$5.hasOwnProperty;
      function arrayLikeKeys(value, inherited) {
        var isArr = isArray$2(value), isArg = !isArr && isArguments$1(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType2 = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType2, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
        for (var key in value) {
          if ((inherited || hasOwnProperty$5.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType2 && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
            result.push(key);
          }
        }
        return result;
      }
      function nativeKeysIn(object) {
        var result = [];
        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }
        return result;
      }
      var objectProto$4 = Object.prototype;
      var hasOwnProperty$4 = objectProto$4.hasOwnProperty;
      function baseKeysIn(object) {
        if (!isObject$2(object)) {
          return nativeKeysIn(object);
        }
        var isProto = isPrototype(object), result = [];
        for (var key in object) {
          if (!(key == "constructor" && (isProto || !hasOwnProperty$4.call(object, key)))) {
            result.push(key);
          }
        }
        return result;
      }
      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }
      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }
      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }
        var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
        var isCommon = newValue === void 0;
        if (isCommon) {
          var isArr = isArray$2(srcValue), isBuff = !isArr && isBuffer$1(srcValue), isTyped = !isArr && !isBuff && isTypedArray$1(srcValue);
          newValue = srcValue;
          if (isArr || isBuff || isTyped) {
            if (isArray$2(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments$1(srcValue)) {
            newValue = objValue;
            if (isArguments$1(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject$2(objValue) || isFunction$1(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }
        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack["delete"](srcValue);
        }
        assignMergeValue(object, key, newValue);
      }
      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }
        baseFor$1(source, function(srcValue, key) {
          stack || (stack = new Stack());
          if (isObject$2(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
            if (newValue === void 0) {
              newValue = srcValue;
            }
            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }
      function identity(value) {
        return value;
      }
      function apply(func, thisArg, args) {
        switch (args.length) {
          case 0:
            return func.call(thisArg);
          case 1:
            return func.call(thisArg, args[0]);
          case 2:
            return func.call(thisArg, args[0], args[1]);
          case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
        }
        return func.apply(thisArg, args);
      }
      var nativeMax$1 = Math.max;
      function overRest(func, start, transform) {
        start = nativeMax$1(start === void 0 ? func.length - 1 : start, 0);
        return function() {
          var args = arguments, index2 = -1, length = nativeMax$1(args.length - start, 0), array = Array(length);
          while (++index2 < length) {
            array[index2] = args[start + index2];
          }
          index2 = -1;
          var otherArgs = Array(start + 1);
          while (++index2 < start) {
            otherArgs[index2] = args[index2];
          }
          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }
      function constant(value) {
        return function() {
          return value;
        };
      }
      var baseSetToString = !defineProperty$1 ? identity : function(func, string2) {
        return defineProperty$1(func, "toString", {
          "configurable": true,
          "enumerable": false,
          "value": constant(string2),
          "writable": true
        });
      };
      var baseSetToString$1 = baseSetToString;
      var HOT_COUNT = 800, HOT_SPAN = 16;
      var nativeNow = Date.now;
      function shortOut(func) {
        var count = 0, lastCalled = 0;
        return function() {
          var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;
          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }
          return func.apply(void 0, arguments);
        };
      }
      var setToString = shortOut(baseSetToString$1);
      var setToString$1 = setToString;
      function baseRest(func, start) {
        return setToString$1(overRest(func, start, identity), func + "");
      }
      function isIterateeCall(value, index2, object) {
        if (!isObject$2(object)) {
          return false;
        }
        var type = typeof index2;
        if (type == "number" ? isArrayLike(object) && isIndex(index2, object.length) : type == "string" && index2 in object) {
          return eq(object[index2], value);
        }
        return false;
      }
      function createAssigner(assigner) {
        return baseRest(function(object, sources) {
          var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
          customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? void 0 : customizer;
            length = 1;
          }
          object = Object(object);
          while (++index2 < length) {
            var source = sources[index2];
            if (source) {
              assigner(object, source, index2, customizer);
            }
          }
          return object;
        });
      }
      var merge = createAssigner(function(object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      var merge$1 = merge;
      var Raised = function Raised2(_ref) {
        var zDepth = _ref.zDepth, radius = _ref.radius, background = _ref.background, children = _ref.children, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles;
        var styles2 = _default$3(merge$1({
          "default": {
            wrap: {
              position: "relative",
              display: "inline-block"
            },
            content: {
              position: "relative"
            },
            bg: {
              absolute: "0px 0px 0px 0px",
              boxShadow: "0 " + zDepth + "px " + zDepth * 4 + "px rgba(0,0,0,.24)",
              borderRadius: radius,
              background
            }
          },
          "zDepth-0": {
            bg: {
              boxShadow: "none"
            }
          },
          "zDepth-1": {
            bg: {
              boxShadow: "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)"
            }
          },
          "zDepth-2": {
            bg: {
              boxShadow: "0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2)"
            }
          },
          "zDepth-3": {
            bg: {
              boxShadow: "0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24)"
            }
          },
          "zDepth-4": {
            bg: {
              boxShadow: "0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22)"
            }
          },
          "zDepth-5": {
            bg: {
              boxShadow: "0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2)"
            }
          },
          "square": {
            bg: {
              borderRadius: "0"
            }
          },
          "circle": {
            bg: {
              borderRadius: "50%"
            }
          }
        }, passedStyles), { "zDepth-1": zDepth === 1 });
        return React__default.createElement("div", { style: styles2.wrap }, React__default.createElement("div", { style: styles2.bg }), React__default.createElement("div", { style: styles2.content }, children));
      };
      Raised.propTypes = {
        background: PropTypes$1.string,
        zDepth: PropTypes$1.oneOf([0, 1, 2, 3, 4, 5]),
        radius: PropTypes$1.number,
        styles: PropTypes$1.object
      };
      Raised.defaultProps = {
        background: "#fff",
        zDepth: 1,
        radius: 2,
        styles: {}
      };
      var now$1 = function() {
        return root$1.Date.now();
      };
      var now$2 = now$1;
      var reWhitespace = /\s/;
      function trimmedEndIndex(string2) {
        var index2 = string2.length;
        while (index2-- && reWhitespace.test(string2.charAt(index2))) {
        }
        return index2;
      }
      var reTrimStart = /^\s+/;
      function baseTrim(string2) {
        return string2 ? string2.slice(0, trimmedEndIndex(string2) + 1).replace(reTrimStart, "") : string2;
      }
      var symbolTag$1 = "[object Symbol]";
      function isSymbol(value) {
        return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag$1;
      }
      var NAN = 0 / 0;
      var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
      var reIsBinary = /^0b[01]+$/i;
      var reIsOctal = /^0o[0-7]+$/i;
      var freeParseInt = parseInt;
      function toNumber(value) {
        if (typeof value == "number") {
          return value;
        }
        if (isSymbol(value)) {
          return NAN;
        }
        if (isObject$2(value)) {
          var other = typeof value.valueOf == "function" ? value.valueOf() : value;
          value = isObject$2(other) ? other + "" : other;
        }
        if (typeof value != "string") {
          return value === 0 ? value : +value;
        }
        value = baseTrim(value);
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }
      var FUNC_ERROR_TEXT$2 = "Expected a function";
      var nativeMax = Math.max, nativeMin = Math.min;
      function debounce(func, wait, options) {
        var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
        if (typeof func != "function") {
          throw new TypeError(FUNC_ERROR_TEXT$2);
        }
        wait = toNumber(wait) || 0;
        if (isObject$2(options)) {
          leading = !!options.leading;
          maxing = "maxWait" in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        function invokeFunc(time) {
          var args = lastArgs, thisArg = lastThis;
          lastArgs = lastThis = void 0;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }
        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }
        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }
        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }
        function timerExpired() {
          var time = now$2();
          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }
          timerId = setTimeout(timerExpired, remainingWait(time));
        }
        function trailingEdge(time) {
          timerId = void 0;
          if (trailing && lastArgs) {
            return invokeFunc(time);
          }
          lastArgs = lastThis = void 0;
          return result;
        }
        function cancel() {
          if (timerId !== void 0) {
            clearTimeout(timerId);
          }
          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = void 0;
        }
        function flush() {
          return timerId === void 0 ? result : trailingEdge(now$2());
        }
        function debounced() {
          var time = now$2(), isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;
          if (isInvoking) {
            if (timerId === void 0) {
              return leadingEdge(lastCallTime);
            }
            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }
          if (timerId === void 0) {
            timerId = setTimeout(timerExpired, wait);
          }
          return result;
        }
        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }
      var FUNC_ERROR_TEXT$1 = "Expected a function";
      function throttle(func, wait, options) {
        var leading = true, trailing = true;
        if (typeof func != "function") {
          throw new TypeError(FUNC_ERROR_TEXT$1);
        }
        if (isObject$2(options)) {
          leading = "leading" in options ? !!options.leading : leading;
          trailing = "trailing" in options ? !!options.trailing : trailing;
        }
        return debounce(func, wait, {
          "leading": leading,
          "maxWait": wait,
          "trailing": trailing
        });
      }
      var calculateChange = function calculateChange2(e22, hsl, container) {
        var _container$getBoundin = container.getBoundingClientRect(), containerWidth = _container$getBoundin.width, containerHeight = _container$getBoundin.height;
        var x22 = typeof e22.pageX === "number" ? e22.pageX : e22.touches[0].pageX;
        var y22 = typeof e22.pageY === "number" ? e22.pageY : e22.touches[0].pageY;
        var left = x22 - (container.getBoundingClientRect().left + window.pageXOffset);
        var top = y22 - (container.getBoundingClientRect().top + window.pageYOffset);
        if (left < 0) {
          left = 0;
        } else if (left > containerWidth) {
          left = containerWidth;
        }
        if (top < 0) {
          top = 0;
        } else if (top > containerHeight) {
          top = containerHeight;
        }
        var saturation = left / containerWidth;
        var bright = 1 - top / containerHeight;
        return {
          h: hsl.h,
          s: saturation,
          v: bright,
          a: hsl.a,
          source: "hsv"
        };
      };
      var _createClass$4 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck$4(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$4(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$4(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var Saturation = function(_ref) {
        _inherits$4(Saturation2, _ref);
        function Saturation2(props) {
          _classCallCheck$4(this, Saturation2);
          var _this = _possibleConstructorReturn$4(this, (Saturation2.__proto__ || Object.getPrototypeOf(Saturation2)).call(this, props));
          _this.handleChange = function(e22) {
            typeof _this.props.onChange === "function" && _this.throttle(_this.props.onChange, calculateChange(e22, _this.props.hsl, _this.container), e22);
          };
          _this.handleMouseDown = function(e22) {
            _this.handleChange(e22);
            var renderWindow = _this.getContainerRenderWindow();
            renderWindow.addEventListener("mousemove", _this.handleChange);
            renderWindow.addEventListener("mouseup", _this.handleMouseUp);
          };
          _this.handleMouseUp = function() {
            _this.unbindEventListeners();
          };
          _this.throttle = throttle(function(fn2, data, e22) {
            fn2(data, e22);
          }, 50);
          return _this;
        }
        _createClass$4(Saturation2, [{
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            this.throttle.cancel();
            this.unbindEventListeners();
          }
        }, {
          key: "getContainerRenderWindow",
          value: function getContainerRenderWindow() {
            var container = this.container;
            var renderWindow = window;
            while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {
              renderWindow = renderWindow.parent;
            }
            return renderWindow;
          }
        }, {
          key: "unbindEventListeners",
          value: function unbindEventListeners() {
            var renderWindow = this.getContainerRenderWindow();
            renderWindow.removeEventListener("mousemove", this.handleChange);
            renderWindow.removeEventListener("mouseup", this.handleMouseUp);
          }
        }, {
          key: "render",
          value: function render2() {
            var _this2 = this;
            var _ref2 = this.props.style || {}, color = _ref2.color, white = _ref2.white, black = _ref2.black, pointer = _ref2.pointer, circle = _ref2.circle;
            var styles2 = _default$3({
              "default": {
                color: {
                  absolute: "0px 0px 0px 0px",
                  background: "hsl(" + this.props.hsl.h + ",100%, 50%)",
                  borderRadius: this.props.radius
                },
                white: {
                  absolute: "0px 0px 0px 0px",
                  borderRadius: this.props.radius
                },
                black: {
                  absolute: "0px 0px 0px 0px",
                  boxShadow: this.props.shadow,
                  borderRadius: this.props.radius
                },
                pointer: {
                  position: "absolute",
                  top: -(this.props.hsv.v * 100) + 100 + "%",
                  left: this.props.hsv.s * 100 + "%",
                  cursor: "default"
                },
                circle: {
                  width: "4px",
                  height: "4px",
                  boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)",
                  borderRadius: "50%",
                  cursor: "hand",
                  transform: "translate(-2px, -2px)"
                }
              },
              "custom": {
                color,
                white,
                black,
                pointer,
                circle
              }
            }, { "custom": !!this.props.style });
            return React__default.createElement("div", {
              style: styles2.color,
              ref: function ref(container) {
                return _this2.container = container;
              },
              onMouseDown: this.handleMouseDown,
              onTouchMove: this.handleChange,
              onTouchStart: this.handleChange
            }, React__default.createElement("style", null, "\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        "), React__default.createElement("div", { style: styles2.white, className: "saturation-white" }, React__default.createElement("div", { style: styles2.black, className: "saturation-black" }), React__default.createElement("div", { style: styles2.pointer }, this.props.pointer ? React__default.createElement(this.props.pointer, this.props) : React__default.createElement("div", { style: styles2.circle }))));
          }
        }]);
        return Saturation2;
      }(react.exports.PureComponent || react.exports.Component);
      function arrayEach(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (iteratee(array[index2], index2, array) === false) {
            break;
          }
        }
        return array;
      }
      var nativeKeys = overArg(Object.keys, Object);
      var nativeKeys$1 = nativeKeys;
      var objectProto$3 = Object.prototype;
      var hasOwnProperty$3 = objectProto$3.hasOwnProperty;
      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys$1(object);
        }
        var result = [];
        for (var key in Object(object)) {
          if (hasOwnProperty$3.call(object, key) && key != "constructor") {
            result.push(key);
          }
        }
        return result;
      }
      function keys$1(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }
      function baseForOwn(object, iteratee) {
        return object && baseFor$1(object, iteratee, keys$1);
      }
      function createBaseEach(eachFunc, fromRight) {
        return function(collection, iteratee) {
          if (collection == null) {
            return collection;
          }
          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }
          var length = collection.length, index2 = fromRight ? length : -1, iterable = Object(collection);
          while (fromRight ? index2-- : ++index2 < length) {
            if (iteratee(iterable[index2], index2, iterable) === false) {
              break;
            }
          }
          return collection;
        };
      }
      var baseEach = createBaseEach(baseForOwn);
      var baseEach$1 = baseEach;
      function castFunction(value) {
        return typeof value == "function" ? value : identity;
      }
      function forEach(collection, iteratee) {
        var func = isArray$2(collection) ? arrayEach : baseEach$1;
        return func(collection, castFunction(iteratee));
      }
      var tinycolor$1 = { exports: {} };
      (function(module2) {
        (function(Math2) {
          var trimLeft = /^\s+/, trimRight = /\s+$/, tinyCounter = 0, mathRound = Math2.round, mathMin = Math2.min, mathMax = Math2.max, mathRandom = Math2.random;
          function tinycolor2(color, opts) {
            color = color ? color : "";
            opts = opts || {};
            if (color instanceof tinycolor2) {
              return color;
            }
            if (!(this instanceof tinycolor2)) {
              return new tinycolor2(color, opts);
            }
            var rgb = inputToRGB(color);
            this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;
            this._gradientType = opts.gradientType;
            if (this._r < 1) {
              this._r = mathRound(this._r);
            }
            if (this._g < 1) {
              this._g = mathRound(this._g);
            }
            if (this._b < 1) {
              this._b = mathRound(this._b);
            }
            this._ok = rgb.ok;
            this._tc_id = tinyCounter++;
          }
          tinycolor2.prototype = {
            isDark: function() {
              return this.getBrightness() < 128;
            },
            isLight: function() {
              return !this.isDark();
            },
            isValid: function() {
              return this._ok;
            },
            getOriginalInput: function() {
              return this._originalInput;
            },
            getFormat: function() {
              return this._format;
            },
            getAlpha: function() {
              return this._a;
            },
            getBrightness: function() {
              var rgb = this.toRgb();
              return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
            },
            getLuminance: function() {
              var rgb = this.toRgb();
              var RsRGB, GsRGB, BsRGB, R22, G22, B22;
              RsRGB = rgb.r / 255;
              GsRGB = rgb.g / 255;
              BsRGB = rgb.b / 255;
              if (RsRGB <= 0.03928) {
                R22 = RsRGB / 12.92;
              } else {
                R22 = Math2.pow((RsRGB + 0.055) / 1.055, 2.4);
              }
              if (GsRGB <= 0.03928) {
                G22 = GsRGB / 12.92;
              } else {
                G22 = Math2.pow((GsRGB + 0.055) / 1.055, 2.4);
              }
              if (BsRGB <= 0.03928) {
                B22 = BsRGB / 12.92;
              } else {
                B22 = Math2.pow((BsRGB + 0.055) / 1.055, 2.4);
              }
              return 0.2126 * R22 + 0.7152 * G22 + 0.0722 * B22;
            },
            setAlpha: function(value) {
              this._a = boundAlpha(value);
              this._roundA = mathRound(100 * this._a) / 100;
              return this;
            },
            toHsv: function() {
              var hsv = rgbToHsv(this._r, this._g, this._b);
              return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };
            },
            toHsvString: function() {
              var hsv = rgbToHsv(this._r, this._g, this._b);
              var h22 = mathRound(hsv.h * 360), s22 = mathRound(hsv.s * 100), v22 = mathRound(hsv.v * 100);
              return this._a == 1 ? "hsv(" + h22 + ", " + s22 + "%, " + v22 + "%)" : "hsva(" + h22 + ", " + s22 + "%, " + v22 + "%, " + this._roundA + ")";
            },
            toHsl: function() {
              var hsl = rgbToHsl(this._r, this._g, this._b);
              return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };
            },
            toHslString: function() {
              var hsl = rgbToHsl(this._r, this._g, this._b);
              var h22 = mathRound(hsl.h * 360), s22 = mathRound(hsl.s * 100), l22 = mathRound(hsl.l * 100);
              return this._a == 1 ? "hsl(" + h22 + ", " + s22 + "%, " + l22 + "%)" : "hsla(" + h22 + ", " + s22 + "%, " + l22 + "%, " + this._roundA + ")";
            },
            toHex: function(allow3Char) {
              return rgbToHex(this._r, this._g, this._b, allow3Char);
            },
            toHexString: function(allow3Char) {
              return "#" + this.toHex(allow3Char);
            },
            toHex8: function(allow4Char) {
              return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
            },
            toHex8String: function(allow4Char) {
              return "#" + this.toHex8(allow4Char);
            },
            toRgb: function() {
              return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };
            },
            toRgbString: function() {
              return this._a == 1 ? "rgb(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ")" : "rgba(" + mathRound(this._r) + ", " + mathRound(this._g) + ", " + mathRound(this._b) + ", " + this._roundA + ")";
            },
            toPercentageRgb: function() {
              return { r: mathRound(bound01(this._r, 255) * 100) + "%", g: mathRound(bound01(this._g, 255) * 100) + "%", b: mathRound(bound01(this._b, 255) * 100) + "%", a: this._a };
            },
            toPercentageRgbString: function() {
              return this._a == 1 ? "rgb(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%)" : "rgba(" + mathRound(bound01(this._r, 255) * 100) + "%, " + mathRound(bound01(this._g, 255) * 100) + "%, " + mathRound(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
            },
            toName: function() {
              if (this._a === 0) {
                return "transparent";
              }
              if (this._a < 1) {
                return false;
              }
              return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
            },
            toFilter: function(secondColor) {
              var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
              var secondHex8String = hex8String;
              var gradientType = this._gradientType ? "GradientType = 1, " : "";
              if (secondColor) {
                var s22 = tinycolor2(secondColor);
                secondHex8String = "#" + rgbaToArgbHex(s22._r, s22._g, s22._b, s22._a);
              }
              return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
            },
            toString: function(format2) {
              var formatSet = !!format2;
              format2 = format2 || this._format;
              var formattedString = false;
              var hasAlpha = this._a < 1 && this._a >= 0;
              var needsAlphaFormat = !formatSet && hasAlpha && (format2 === "hex" || format2 === "hex6" || format2 === "hex3" || format2 === "hex4" || format2 === "hex8" || format2 === "name");
              if (needsAlphaFormat) {
                if (format2 === "name" && this._a === 0) {
                  return this.toName();
                }
                return this.toRgbString();
              }
              if (format2 === "rgb") {
                formattedString = this.toRgbString();
              }
              if (format2 === "prgb") {
                formattedString = this.toPercentageRgbString();
              }
              if (format2 === "hex" || format2 === "hex6") {
                formattedString = this.toHexString();
              }
              if (format2 === "hex3") {
                formattedString = this.toHexString(true);
              }
              if (format2 === "hex4") {
                formattedString = this.toHex8String(true);
              }
              if (format2 === "hex8") {
                formattedString = this.toHex8String();
              }
              if (format2 === "name") {
                formattedString = this.toName();
              }
              if (format2 === "hsl") {
                formattedString = this.toHslString();
              }
              if (format2 === "hsv") {
                formattedString = this.toHsvString();
              }
              return formattedString || this.toHexString();
            },
            clone: function() {
              return tinycolor2(this.toString());
            },
            _applyModification: function(fn2, args) {
              var color = fn2.apply(null, [this].concat([].slice.call(args)));
              this._r = color._r;
              this._g = color._g;
              this._b = color._b;
              this.setAlpha(color._a);
              return this;
            },
            lighten: function() {
              return this._applyModification(lighten, arguments);
            },
            brighten: function() {
              return this._applyModification(brighten, arguments);
            },
            darken: function() {
              return this._applyModification(darken, arguments);
            },
            desaturate: function() {
              return this._applyModification(desaturate, arguments);
            },
            saturate: function() {
              return this._applyModification(saturate, arguments);
            },
            greyscale: function() {
              return this._applyModification(greyscale, arguments);
            },
            spin: function() {
              return this._applyModification(spin, arguments);
            },
            _applyCombination: function(fn2, args) {
              return fn2.apply(null, [this].concat([].slice.call(args)));
            },
            analogous: function() {
              return this._applyCombination(analogous, arguments);
            },
            complement: function() {
              return this._applyCombination(complement, arguments);
            },
            monochromatic: function() {
              return this._applyCombination(monochromatic, arguments);
            },
            splitcomplement: function() {
              return this._applyCombination(splitcomplement, arguments);
            },
            triad: function() {
              return this._applyCombination(triad, arguments);
            },
            tetrad: function() {
              return this._applyCombination(tetrad, arguments);
            }
          };
          tinycolor2.fromRatio = function(color, opts) {
            if (typeof color == "object") {
              var newColor = {};
              for (var i22 in color) {
                if (color.hasOwnProperty(i22)) {
                  if (i22 === "a") {
                    newColor[i22] = color[i22];
                  } else {
                    newColor[i22] = convertToPercentage(color[i22]);
                  }
                }
              }
              color = newColor;
            }
            return tinycolor2(color, opts);
          };
          function inputToRGB(color) {
            var rgb = { r: 0, g: 0, b: 0 };
            var a22 = 1;
            var s22 = null;
            var v22 = null;
            var l22 = null;
            var ok2 = false;
            var format2 = false;
            if (typeof color == "string") {
              color = stringInputToObject(color);
            }
            if (typeof color == "object") {
              if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
                rgb = rgbToRgb(color.r, color.g, color.b);
                ok2 = true;
                format2 = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
              } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
                s22 = convertToPercentage(color.s);
                v22 = convertToPercentage(color.v);
                rgb = hsvToRgb(color.h, s22, v22);
                ok2 = true;
                format2 = "hsv";
              } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
                s22 = convertToPercentage(color.s);
                l22 = convertToPercentage(color.l);
                rgb = hslToRgb(color.h, s22, l22);
                ok2 = true;
                format2 = "hsl";
              }
              if (color.hasOwnProperty("a")) {
                a22 = color.a;
              }
            }
            a22 = boundAlpha(a22);
            return {
              ok: ok2,
              format: color.format || format2,
              r: mathMin(255, mathMax(rgb.r, 0)),
              g: mathMin(255, mathMax(rgb.g, 0)),
              b: mathMin(255, mathMax(rgb.b, 0)),
              a: a22
            };
          }
          function rgbToRgb(r22, g22, b22) {
            return {
              r: bound01(r22, 255) * 255,
              g: bound01(g22, 255) * 255,
              b: bound01(b22, 255) * 255
            };
          }
          function rgbToHsl(r22, g22, b22) {
            r22 = bound01(r22, 255);
            g22 = bound01(g22, 255);
            b22 = bound01(b22, 255);
            var max2 = mathMax(r22, g22, b22), min2 = mathMin(r22, g22, b22);
            var h22, s22, l22 = (max2 + min2) / 2;
            if (max2 == min2) {
              h22 = s22 = 0;
            } else {
              var d22 = max2 - min2;
              s22 = l22 > 0.5 ? d22 / (2 - max2 - min2) : d22 / (max2 + min2);
              switch (max2) {
                case r22:
                  h22 = (g22 - b22) / d22 + (g22 < b22 ? 6 : 0);
                  break;
                case g22:
                  h22 = (b22 - r22) / d22 + 2;
                  break;
                case b22:
                  h22 = (r22 - g22) / d22 + 4;
                  break;
              }
              h22 /= 6;
            }
            return { h: h22, s: s22, l: l22 };
          }
          function hslToRgb(h22, s22, l22) {
            var r22, g22, b22;
            h22 = bound01(h22, 360);
            s22 = bound01(s22, 100);
            l22 = bound01(l22, 100);
            function hue2rgb(p32, q32, t22) {
              if (t22 < 0)
                t22 += 1;
              if (t22 > 1)
                t22 -= 1;
              if (t22 < 1 / 6)
                return p32 + (q32 - p32) * 6 * t22;
              if (t22 < 1 / 2)
                return q32;
              if (t22 < 2 / 3)
                return p32 + (q32 - p32) * (2 / 3 - t22) * 6;
              return p32;
            }
            if (s22 === 0) {
              r22 = g22 = b22 = l22;
            } else {
              var q22 = l22 < 0.5 ? l22 * (1 + s22) : l22 + s22 - l22 * s22;
              var p22 = 2 * l22 - q22;
              r22 = hue2rgb(p22, q22, h22 + 1 / 3);
              g22 = hue2rgb(p22, q22, h22);
              b22 = hue2rgb(p22, q22, h22 - 1 / 3);
            }
            return { r: r22 * 255, g: g22 * 255, b: b22 * 255 };
          }
          function rgbToHsv(r22, g22, b22) {
            r22 = bound01(r22, 255);
            g22 = bound01(g22, 255);
            b22 = bound01(b22, 255);
            var max2 = mathMax(r22, g22, b22), min2 = mathMin(r22, g22, b22);
            var h22, s22, v22 = max2;
            var d22 = max2 - min2;
            s22 = max2 === 0 ? 0 : d22 / max2;
            if (max2 == min2) {
              h22 = 0;
            } else {
              switch (max2) {
                case r22:
                  h22 = (g22 - b22) / d22 + (g22 < b22 ? 6 : 0);
                  break;
                case g22:
                  h22 = (b22 - r22) / d22 + 2;
                  break;
                case b22:
                  h22 = (r22 - g22) / d22 + 4;
                  break;
              }
              h22 /= 6;
            }
            return { h: h22, s: s22, v: v22 };
          }
          function hsvToRgb(h22, s22, v22) {
            h22 = bound01(h22, 360) * 6;
            s22 = bound01(s22, 100);
            v22 = bound01(v22, 100);
            var i22 = Math2.floor(h22), f22 = h22 - i22, p22 = v22 * (1 - s22), q22 = v22 * (1 - f22 * s22), t22 = v22 * (1 - (1 - f22) * s22), mod2 = i22 % 6, r22 = [v22, q22, p22, p22, t22, v22][mod2], g22 = [t22, v22, v22, q22, p22, p22][mod2], b22 = [p22, p22, t22, v22, v22, q22][mod2];
            return { r: r22 * 255, g: g22 * 255, b: b22 * 255 };
          }
          function rgbToHex(r22, g22, b22, allow3Char) {
            var hex = [
              pad2(mathRound(r22).toString(16)),
              pad2(mathRound(g22).toString(16)),
              pad2(mathRound(b22).toString(16))
            ];
            if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
              return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
            }
            return hex.join("");
          }
          function rgbaToHex(r22, g22, b22, a22, allow4Char) {
            var hex = [
              pad2(mathRound(r22).toString(16)),
              pad2(mathRound(g22).toString(16)),
              pad2(mathRound(b22).toString(16)),
              pad2(convertDecimalToHex(a22))
            ];
            if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
              return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
            }
            return hex.join("");
          }
          function rgbaToArgbHex(r22, g22, b22, a22) {
            var hex = [
              pad2(convertDecimalToHex(a22)),
              pad2(mathRound(r22).toString(16)),
              pad2(mathRound(g22).toString(16)),
              pad2(mathRound(b22).toString(16))
            ];
            return hex.join("");
          }
          tinycolor2.equals = function(color1, color2) {
            if (!color1 || !color2) {
              return false;
            }
            return tinycolor2(color1).toRgbString() == tinycolor2(color2).toRgbString();
          };
          tinycolor2.random = function() {
            return tinycolor2.fromRatio({
              r: mathRandom(),
              g: mathRandom(),
              b: mathRandom()
            });
          };
          function desaturate(color, amount) {
            amount = amount === 0 ? 0 : amount || 10;
            var hsl = tinycolor2(color).toHsl();
            hsl.s -= amount / 100;
            hsl.s = clamp01(hsl.s);
            return tinycolor2(hsl);
          }
          function saturate(color, amount) {
            amount = amount === 0 ? 0 : amount || 10;
            var hsl = tinycolor2(color).toHsl();
            hsl.s += amount / 100;
            hsl.s = clamp01(hsl.s);
            return tinycolor2(hsl);
          }
          function greyscale(color) {
            return tinycolor2(color).desaturate(100);
          }
          function lighten(color, amount) {
            amount = amount === 0 ? 0 : amount || 10;
            var hsl = tinycolor2(color).toHsl();
            hsl.l += amount / 100;
            hsl.l = clamp01(hsl.l);
            return tinycolor2(hsl);
          }
          function brighten(color, amount) {
            amount = amount === 0 ? 0 : amount || 10;
            var rgb = tinycolor2(color).toRgb();
            rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));
            rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));
            rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));
            return tinycolor2(rgb);
          }
          function darken(color, amount) {
            amount = amount === 0 ? 0 : amount || 10;
            var hsl = tinycolor2(color).toHsl();
            hsl.l -= amount / 100;
            hsl.l = clamp01(hsl.l);
            return tinycolor2(hsl);
          }
          function spin(color, amount) {
            var hsl = tinycolor2(color).toHsl();
            var hue = (hsl.h + amount) % 360;
            hsl.h = hue < 0 ? 360 + hue : hue;
            return tinycolor2(hsl);
          }
          function complement(color) {
            var hsl = tinycolor2(color).toHsl();
            hsl.h = (hsl.h + 180) % 360;
            return tinycolor2(hsl);
          }
          function triad(color) {
            var hsl = tinycolor2(color).toHsl();
            var h22 = hsl.h;
            return [
              tinycolor2(color),
              tinycolor2({ h: (h22 + 120) % 360, s: hsl.s, l: hsl.l }),
              tinycolor2({ h: (h22 + 240) % 360, s: hsl.s, l: hsl.l })
            ];
          }
          function tetrad(color) {
            var hsl = tinycolor2(color).toHsl();
            var h22 = hsl.h;
            return [
              tinycolor2(color),
              tinycolor2({ h: (h22 + 90) % 360, s: hsl.s, l: hsl.l }),
              tinycolor2({ h: (h22 + 180) % 360, s: hsl.s, l: hsl.l }),
              tinycolor2({ h: (h22 + 270) % 360, s: hsl.s, l: hsl.l })
            ];
          }
          function splitcomplement(color) {
            var hsl = tinycolor2(color).toHsl();
            var h22 = hsl.h;
            return [
              tinycolor2(color),
              tinycolor2({ h: (h22 + 72) % 360, s: hsl.s, l: hsl.l }),
              tinycolor2({ h: (h22 + 216) % 360, s: hsl.s, l: hsl.l })
            ];
          }
          function analogous(color, results, slices) {
            results = results || 6;
            slices = slices || 30;
            var hsl = tinycolor2(color).toHsl();
            var part = 360 / slices;
            var ret = [tinycolor2(color)];
            for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
              hsl.h = (hsl.h + part) % 360;
              ret.push(tinycolor2(hsl));
            }
            return ret;
          }
          function monochromatic(color, results) {
            results = results || 6;
            var hsv = tinycolor2(color).toHsv();
            var h22 = hsv.h, s22 = hsv.s, v22 = hsv.v;
            var ret = [];
            var modification = 1 / results;
            while (results--) {
              ret.push(tinycolor2({ h: h22, s: s22, v: v22 }));
              v22 = (v22 + modification) % 1;
            }
            return ret;
          }
          tinycolor2.mix = function(color1, color2, amount) {
            amount = amount === 0 ? 0 : amount || 50;
            var rgb1 = tinycolor2(color1).toRgb();
            var rgb2 = tinycolor2(color2).toRgb();
            var p22 = amount / 100;
            var rgba = {
              r: (rgb2.r - rgb1.r) * p22 + rgb1.r,
              g: (rgb2.g - rgb1.g) * p22 + rgb1.g,
              b: (rgb2.b - rgb1.b) * p22 + rgb1.b,
              a: (rgb2.a - rgb1.a) * p22 + rgb1.a
            };
            return tinycolor2(rgba);
          };
          tinycolor2.readability = function(color1, color2) {
            var c1 = tinycolor2(color1);
            var c22 = tinycolor2(color2);
            return (Math2.max(c1.getLuminance(), c22.getLuminance()) + 0.05) / (Math2.min(c1.getLuminance(), c22.getLuminance()) + 0.05);
          };
          tinycolor2.isReadable = function(color1, color2, wcag2) {
            var readability = tinycolor2.readability(color1, color2);
            var wcag2Parms, out;
            out = false;
            wcag2Parms = validateWCAG2Parms(wcag2);
            switch (wcag2Parms.level + wcag2Parms.size) {
              case "AAsmall":
              case "AAAlarge":
                out = readability >= 4.5;
                break;
              case "AAlarge":
                out = readability >= 3;
                break;
              case "AAAsmall":
                out = readability >= 7;
                break;
            }
            return out;
          };
          tinycolor2.mostReadable = function(baseColor, colorList, args) {
            var bestColor = null;
            var bestScore = 0;
            var readability;
            var includeFallbackColors, level, size;
            args = args || {};
            includeFallbackColors = args.includeFallbackColors;
            level = args.level;
            size = args.size;
            for (var i22 = 0; i22 < colorList.length; i22++) {
              readability = tinycolor2.readability(baseColor, colorList[i22]);
              if (readability > bestScore) {
                bestScore = readability;
                bestColor = tinycolor2(colorList[i22]);
              }
            }
            if (tinycolor2.isReadable(baseColor, bestColor, { "level": level, "size": size }) || !includeFallbackColors) {
              return bestColor;
            } else {
              args.includeFallbackColors = false;
              return tinycolor2.mostReadable(baseColor, ["#fff", "#000"], args);
            }
          };
          var names = tinycolor2.names = {
            aliceblue: "f0f8ff",
            antiquewhite: "faebd7",
            aqua: "0ff",
            aquamarine: "7fffd4",
            azure: "f0ffff",
            beige: "f5f5dc",
            bisque: "ffe4c4",
            black: "000",
            blanchedalmond: "ffebcd",
            blue: "00f",
            blueviolet: "8a2be2",
            brown: "a52a2a",
            burlywood: "deb887",
            burntsienna: "ea7e5d",
            cadetblue: "5f9ea0",
            chartreuse: "7fff00",
            chocolate: "d2691e",
            coral: "ff7f50",
            cornflowerblue: "6495ed",
            cornsilk: "fff8dc",
            crimson: "dc143c",
            cyan: "0ff",
            darkblue: "00008b",
            darkcyan: "008b8b",
            darkgoldenrod: "b8860b",
            darkgray: "a9a9a9",
            darkgreen: "006400",
            darkgrey: "a9a9a9",
            darkkhaki: "bdb76b",
            darkmagenta: "8b008b",
            darkolivegreen: "556b2f",
            darkorange: "ff8c00",
            darkorchid: "9932cc",
            darkred: "8b0000",
            darksalmon: "e9967a",
            darkseagreen: "8fbc8f",
            darkslateblue: "483d8b",
            darkslategray: "2f4f4f",
            darkslategrey: "2f4f4f",
            darkturquoise: "00ced1",
            darkviolet: "9400d3",
            deeppink: "ff1493",
            deepskyblue: "00bfff",
            dimgray: "696969",
            dimgrey: "696969",
            dodgerblue: "1e90ff",
            firebrick: "b22222",
            floralwhite: "fffaf0",
            forestgreen: "228b22",
            fuchsia: "f0f",
            gainsboro: "dcdcdc",
            ghostwhite: "f8f8ff",
            gold: "ffd700",
            goldenrod: "daa520",
            gray: "808080",
            green: "008000",
            greenyellow: "adff2f",
            grey: "808080",
            honeydew: "f0fff0",
            hotpink: "ff69b4",
            indianred: "cd5c5c",
            indigo: "4b0082",
            ivory: "fffff0",
            khaki: "f0e68c",
            lavender: "e6e6fa",
            lavenderblush: "fff0f5",
            lawngreen: "7cfc00",
            lemonchiffon: "fffacd",
            lightblue: "add8e6",
            lightcoral: "f08080",
            lightcyan: "e0ffff",
            lightgoldenrodyellow: "fafad2",
            lightgray: "d3d3d3",
            lightgreen: "90ee90",
            lightgrey: "d3d3d3",
            lightpink: "ffb6c1",
            lightsalmon: "ffa07a",
            lightseagreen: "20b2aa",
            lightskyblue: "87cefa",
            lightslategray: "789",
            lightslategrey: "789",
            lightsteelblue: "b0c4de",
            lightyellow: "ffffe0",
            lime: "0f0",
            limegreen: "32cd32",
            linen: "faf0e6",
            magenta: "f0f",
            maroon: "800000",
            mediumaquamarine: "66cdaa",
            mediumblue: "0000cd",
            mediumorchid: "ba55d3",
            mediumpurple: "9370db",
            mediumseagreen: "3cb371",
            mediumslateblue: "7b68ee",
            mediumspringgreen: "00fa9a",
            mediumturquoise: "48d1cc",
            mediumvioletred: "c71585",
            midnightblue: "191970",
            mintcream: "f5fffa",
            mistyrose: "ffe4e1",
            moccasin: "ffe4b5",
            navajowhite: "ffdead",
            navy: "000080",
            oldlace: "fdf5e6",
            olive: "808000",
            olivedrab: "6b8e23",
            orange: "ffa500",
            orangered: "ff4500",
            orchid: "da70d6",
            palegoldenrod: "eee8aa",
            palegreen: "98fb98",
            paleturquoise: "afeeee",
            palevioletred: "db7093",
            papayawhip: "ffefd5",
            peachpuff: "ffdab9",
            peru: "cd853f",
            pink: "ffc0cb",
            plum: "dda0dd",
            powderblue: "b0e0e6",
            purple: "800080",
            rebeccapurple: "663399",
            red: "f00",
            rosybrown: "bc8f8f",
            royalblue: "4169e1",
            saddlebrown: "8b4513",
            salmon: "fa8072",
            sandybrown: "f4a460",
            seagreen: "2e8b57",
            seashell: "fff5ee",
            sienna: "a0522d",
            silver: "c0c0c0",
            skyblue: "87ceeb",
            slateblue: "6a5acd",
            slategray: "708090",
            slategrey: "708090",
            snow: "fffafa",
            springgreen: "00ff7f",
            steelblue: "4682b4",
            tan: "d2b48c",
            teal: "008080",
            thistle: "d8bfd8",
            tomato: "ff6347",
            turquoise: "40e0d0",
            violet: "ee82ee",
            wheat: "f5deb3",
            white: "fff",
            whitesmoke: "f5f5f5",
            yellow: "ff0",
            yellowgreen: "9acd32"
          };
          var hexNames = tinycolor2.hexNames = flip(names);
          function flip(o22) {
            var flipped = {};
            for (var i22 in o22) {
              if (o22.hasOwnProperty(i22)) {
                flipped[o22[i22]] = i22;
              }
            }
            return flipped;
          }
          function boundAlpha(a22) {
            a22 = parseFloat(a22);
            if (isNaN(a22) || a22 < 0 || a22 > 1) {
              a22 = 1;
            }
            return a22;
          }
          function bound01(n22, max2) {
            if (isOnePointZero(n22)) {
              n22 = "100%";
            }
            var processPercent = isPercentage(n22);
            n22 = mathMin(max2, mathMax(0, parseFloat(n22)));
            if (processPercent) {
              n22 = parseInt(n22 * max2, 10) / 100;
            }
            if (Math2.abs(n22 - max2) < 1e-6) {
              return 1;
            }
            return n22 % max2 / parseFloat(max2);
          }
          function clamp01(val) {
            return mathMin(1, mathMax(0, val));
          }
          function parseIntFromHex(val) {
            return parseInt(val, 16);
          }
          function isOnePointZero(n22) {
            return typeof n22 == "string" && n22.indexOf(".") != -1 && parseFloat(n22) === 1;
          }
          function isPercentage(n22) {
            return typeof n22 === "string" && n22.indexOf("%") != -1;
          }
          function pad2(c22) {
            return c22.length == 1 ? "0" + c22 : "" + c22;
          }
          function convertToPercentage(n22) {
            if (n22 <= 1) {
              n22 = n22 * 100 + "%";
            }
            return n22;
          }
          function convertDecimalToHex(d22) {
            return Math2.round(parseFloat(d22) * 255).toString(16);
          }
          function convertHexToDecimal(h22) {
            return parseIntFromHex(h22) / 255;
          }
          var matchers = function() {
            var CSS_INTEGER = "[-\\+]?\\d+%?";
            var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
            var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
            var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
            var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
            return {
              CSS_UNIT: new RegExp(CSS_UNIT),
              rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
              rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
              hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
              hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
              hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
              hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
              hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
              hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
              hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
              hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
            };
          }();
          function isValidCSSUnit(color) {
            return !!matchers.CSS_UNIT.exec(color);
          }
          function stringInputToObject(color) {
            color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
            var named = false;
            if (names[color]) {
              color = names[color];
              named = true;
            } else if (color == "transparent") {
              return { r: 0, g: 0, b: 0, a: 0, format: "name" };
            }
            var match5;
            if (match5 = matchers.rgb.exec(color)) {
              return { r: match5[1], g: match5[2], b: match5[3] };
            }
            if (match5 = matchers.rgba.exec(color)) {
              return { r: match5[1], g: match5[2], b: match5[3], a: match5[4] };
            }
            if (match5 = matchers.hsl.exec(color)) {
              return { h: match5[1], s: match5[2], l: match5[3] };
            }
            if (match5 = matchers.hsla.exec(color)) {
              return { h: match5[1], s: match5[2], l: match5[3], a: match5[4] };
            }
            if (match5 = matchers.hsv.exec(color)) {
              return { h: match5[1], s: match5[2], v: match5[3] };
            }
            if (match5 = matchers.hsva.exec(color)) {
              return { h: match5[1], s: match5[2], v: match5[3], a: match5[4] };
            }
            if (match5 = matchers.hex8.exec(color)) {
              return {
                r: parseIntFromHex(match5[1]),
                g: parseIntFromHex(match5[2]),
                b: parseIntFromHex(match5[3]),
                a: convertHexToDecimal(match5[4]),
                format: named ? "name" : "hex8"
              };
            }
            if (match5 = matchers.hex6.exec(color)) {
              return {
                r: parseIntFromHex(match5[1]),
                g: parseIntFromHex(match5[2]),
                b: parseIntFromHex(match5[3]),
                format: named ? "name" : "hex"
              };
            }
            if (match5 = matchers.hex4.exec(color)) {
              return {
                r: parseIntFromHex(match5[1] + "" + match5[1]),
                g: parseIntFromHex(match5[2] + "" + match5[2]),
                b: parseIntFromHex(match5[3] + "" + match5[3]),
                a: convertHexToDecimal(match5[4] + "" + match5[4]),
                format: named ? "name" : "hex8"
              };
            }
            if (match5 = matchers.hex3.exec(color)) {
              return {
                r: parseIntFromHex(match5[1] + "" + match5[1]),
                g: parseIntFromHex(match5[2] + "" + match5[2]),
                b: parseIntFromHex(match5[3] + "" + match5[3]),
                format: named ? "name" : "hex"
              };
            }
            return false;
          }
          function validateWCAG2Parms(parms) {
            var level, size;
            parms = parms || { "level": "AA", "size": "small" };
            level = (parms.level || "AA").toUpperCase();
            size = (parms.size || "small").toLowerCase();
            if (level !== "AA" && level !== "AAA") {
              level = "AA";
            }
            if (size !== "small" && size !== "large") {
              size = "small";
            }
            return { "level": level, "size": size };
          }
          if (module2.exports) {
            module2.exports = tinycolor2;
          } else {
            window.tinycolor = tinycolor2;
          }
        })(Math);
      })(tinycolor$1);
      var tinycolor = tinycolor$1.exports;
      var simpleCheckForValidColor = function simpleCheckForValidColor2(data) {
        var keysToCheck = ["r", "g", "b", "a", "h", "s", "l", "v"];
        var checked = 0;
        var passed = 0;
        forEach(keysToCheck, function(letter) {
          if (data[letter]) {
            checked += 1;
            if (!isNaN(data[letter])) {
              passed += 1;
            }
            if (letter === "s" || letter === "l") {
              var percentPatt = /^\d+%$/;
              if (percentPatt.test(data[letter])) {
                passed += 1;
              }
            }
          }
        });
        return checked === passed ? data : false;
      };
      var toState = function toState2(data, oldHue) {
        var color = data.hex ? tinycolor(data.hex) : tinycolor(data);
        var hsl = color.toHsl();
        var hsv = color.toHsv();
        var rgb = color.toRgb();
        var hex = color.toHex();
        if (hsl.s === 0) {
          hsl.h = oldHue || 0;
          hsv.h = oldHue || 0;
        }
        var transparent = hex === "000000" && rgb.a === 0;
        return {
          hsl,
          hex: transparent ? "transparent" : "#" + hex,
          rgb,
          hsv,
          oldHue: data.h || oldHue || hsl.h,
          source: data.source
        };
      };
      var isValidHex = function isValidHex2(hex) {
        if (hex === "transparent") {
          return true;
        }
        var lh2 = String(hex).charAt(0) === "#" ? 1 : 0;
        return hex.length !== 4 + lh2 && hex.length < 7 + lh2 && tinycolor(hex).isValid();
      };
      var getContrastingColor = function getContrastingColor2(data) {
        if (!data) {
          return "#fff";
        }
        var col = toState(data);
        if (col.hex === "transparent") {
          return "rgba(0,0,0,0.4)";
        }
        var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1e3;
        return yiq >= 128 ? "#000" : "#fff";
      };
      var isvalidColorString = function isvalidColorString2(string2, type) {
        var stringWithoutDegree = string2.replace("\xB0", "");
        return tinycolor(type + " (" + stringWithoutDegree + ")")._ok;
      };
      var _extends$8 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _createClass$3 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck$3(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$3(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$3(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var ColorWrap = function ColorWrap2(Picker) {
        var ColorPicker = function(_ref) {
          _inherits$3(ColorPicker2, _ref);
          function ColorPicker2(props) {
            _classCallCheck$3(this, ColorPicker2);
            var _this = _possibleConstructorReturn$3(this, (ColorPicker2.__proto__ || Object.getPrototypeOf(ColorPicker2)).call(this));
            _this.handleChange = function(data, event) {
              var isValidColor = simpleCheckForValidColor(data);
              if (isValidColor) {
                var colors = toState(data, data.h || _this.state.oldHue);
                _this.setState(colors);
                _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, colors, event);
                _this.props.onChange && _this.props.onChange(colors, event);
              }
            };
            _this.handleSwatchHover = function(data, event) {
              var isValidColor = simpleCheckForValidColor(data);
              if (isValidColor) {
                var colors = toState(data, data.h || _this.state.oldHue);
                _this.props.onSwatchHover && _this.props.onSwatchHover(colors, event);
              }
            };
            _this.state = _extends$8({}, toState(props.color, 0));
            _this.debounce = debounce(function(fn2, data, event) {
              fn2(data, event);
            }, 100);
            return _this;
          }
          _createClass$3(ColorPicker2, [{
            key: "render",
            value: function render2() {
              var optionalEvents = {};
              if (this.props.onSwatchHover) {
                optionalEvents.onSwatchHover = this.handleSwatchHover;
              }
              return React__default.createElement(Picker, _extends$8({}, this.props, this.state, {
                onChange: this.handleChange
              }, optionalEvents));
            }
          }], [{
            key: "getDerivedStateFromProps",
            value: function getDerivedStateFromProps(nextProps, state) {
              return _extends$8({}, toState(nextProps.color, state.oldHue));
            }
          }]);
          return ColorPicker2;
        }(react.exports.PureComponent || react.exports.Component);
        ColorPicker.propTypes = _extends$8({}, Picker.propTypes);
        ColorPicker.defaultProps = _extends$8({}, Picker.defaultProps, {
          color: {
            h: 250,
            s: 0.5,
            l: 0.2,
            a: 1
          }
        });
        return ColorPicker;
      };
      var _extends$7 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _createClass$2 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck$2(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$2(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$2(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var handleFocus = function handleFocus2(Component) {
        var Span2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
        return function(_React$Component) {
          _inherits$2(Focus, _React$Component);
          function Focus() {
            var _ref;
            var _temp, _this, _ret;
            _classCallCheck$2(this, Focus);
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            return _ret = (_temp = (_this = _possibleConstructorReturn$2(this, (_ref = Focus.__proto__ || Object.getPrototypeOf(Focus)).call.apply(_ref, [this].concat(args))), _this), _this.state = { focus: false }, _this.handleFocus = function() {
              return _this.setState({ focus: true });
            }, _this.handleBlur = function() {
              return _this.setState({ focus: false });
            }, _temp), _possibleConstructorReturn$2(_this, _ret);
          }
          _createClass$2(Focus, [{
            key: "render",
            value: function render2() {
              return React__default.createElement(Span2, { onFocus: this.handleFocus, onBlur: this.handleBlur }, React__default.createElement(Component, _extends$7({}, this.props, this.state)));
            }
          }]);
          return Focus;
        }(React__default.Component);
      };
      var _extends$6 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var ENTER = 13;
      var Swatch = function Swatch2(_ref) {
        var color = _ref.color, style = _ref.style, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
        } : _ref$onClick, onHover = _ref.onHover, _ref$title = _ref.title, title = _ref$title === void 0 ? color : _ref$title, children = _ref.children, focus = _ref.focus, _ref$focusStyle = _ref.focusStyle, focusStyle = _ref$focusStyle === void 0 ? {} : _ref$focusStyle;
        var transparent = color === "transparent";
        var styles2 = _default$3({
          default: {
            swatch: _extends$6({
              background: color,
              height: "100%",
              width: "100%",
              cursor: "pointer",
              position: "relative",
              outline: "none"
            }, style, focus ? focusStyle : {})
          }
        });
        var handleClick = function handleClick2(e22) {
          return onClick(color, e22);
        };
        var handleKeyDown = function handleKeyDown2(e22) {
          return e22.keyCode === ENTER && onClick(color, e22);
        };
        var handleHover2 = function handleHover3(e22) {
          return onHover(color, e22);
        };
        var optionalEvents = {};
        if (onHover) {
          optionalEvents.onMouseOver = handleHover2;
        }
        return React__default.createElement("div", _extends$6({
          style: styles2.swatch,
          onClick: handleClick,
          title,
          tabIndex: 0,
          onKeyDown: handleKeyDown
        }, optionalEvents), children, transparent && React__default.createElement(Checkboard, {
          borderRadius: styles2.swatch.borderRadius,
          boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
        }));
      };
      var Swatch$1 = handleFocus(Swatch);
      var AlphaPointer = function AlphaPointer2(_ref) {
        var direction = _ref.direction;
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "18px",
              height: "18px",
              borderRadius: "50%",
              transform: "translate(-9px, -1px)",
              backgroundColor: "rgb(248, 248, 248)",
              boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
            }
          },
          "vertical": {
            picker: {
              transform: "translate(-3px, -9px)"
            }
          }
        }, { vertical: direction === "vertical" });
        return React__default.createElement("div", { style: styles2.picker });
      };
      var _extends$5 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var AlphaPicker = function AlphaPicker2(_ref) {
        var rgb = _ref.rgb, hsl = _ref.hsl, width = _ref.width, height = _ref.height, onChange = _ref.onChange, direction = _ref.direction, style = _ref.style, renderers = _ref.renderers, pointer = _ref.pointer, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3({
          "default": {
            picker: {
              position: "relative",
              width,
              height
            },
            alpha: {
              radius: "2px",
              style
            }
          }
        });
        return React__default.createElement("div", { style: styles2.picker, className: "alpha-picker " + className }, React__default.createElement(Alpha, _extends$5({}, styles2.alpha, {
          rgb,
          hsl,
          pointer,
          renderers,
          onChange,
          direction
        })));
      };
      AlphaPicker.defaultProps = {
        width: "316px",
        height: "16px",
        direction: "horizontal",
        pointer: AlphaPointer
      };
      ColorWrap(AlphaPicker);
      function arrayMap(array, iteratee) {
        var index2 = -1, length = array == null ? 0 : array.length, result = Array(length);
        while (++index2 < length) {
          result[index2] = iteratee(array[index2], index2, array);
        }
        return result;
      }
      var HASH_UNDEFINED = "__lodash_hash_undefined__";
      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);
        return this;
      }
      function setCacheHas(value) {
        return this.__data__.has(value);
      }
      function SetCache(values2) {
        var index2 = -1, length = values2 == null ? 0 : values2.length;
        this.__data__ = new MapCache();
        while (++index2 < length) {
          this.add(values2[index2]);
        }
      }
      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;
      function arraySome(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length;
        while (++index2 < length) {
          if (predicate(array[index2], index2, array)) {
            return true;
          }
        }
        return false;
      }
      function cacheHas(cache, key) {
        return cache.has(key);
      }
      var COMPARE_PARTIAL_FLAG$5 = 1, COMPARE_UNORDERED_FLAG$3 = 2;
      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5, arrLength = array.length, othLength = other.length;
        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }
        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);
        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }
        var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$3 ? new SetCache() : void 0;
        stack.set(array, other);
        stack.set(other, array);
        while (++index2 < arrLength) {
          var arrValue = array[index2], othValue = other[index2];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
          }
          if (compared !== void 0) {
            if (compared) {
              continue;
            }
            result = false;
            break;
          }
          if (seen) {
            if (!arraySome(other, function(othValue2, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }
        stack["delete"](array);
        stack["delete"](other);
        return result;
      }
      function mapToArray(map22) {
        var index2 = -1, result = Array(map22.size);
        map22.forEach(function(value, key) {
          result[++index2] = [key, value];
        });
        return result;
      }
      function setToArray(set2) {
        var index2 = -1, result = Array(set2.size);
        set2.forEach(function(value) {
          result[++index2] = value;
        });
        return result;
      }
      var COMPARE_PARTIAL_FLAG$4 = 1, COMPARE_UNORDERED_FLAG$2 = 2;
      var boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", mapTag$1 = "[object Map]", numberTag = "[object Number]", regexpTag = "[object RegExp]", setTag$1 = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]";
      var arrayBufferTag = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]";
      var symbolProto$1 = Symbol$2 ? Symbol$2.prototype : void 0, symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : void 0;
      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag$1:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }
            object = object.buffer;
            other = other.buffer;
          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array$1(object), new Uint8Array$1(other))) {
              return false;
            }
            return true;
          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);
          case errorTag:
            return object.name == other.name && object.message == other.message;
          case regexpTag:
          case stringTag:
            return object == other + "";
          case mapTag$1:
            var convert = mapToArray;
          case setTag$1:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
            convert || (convert = setToArray);
            if (object.size != other.size && !isPartial) {
              return false;
            }
            var stacked = stack.get(object);
            if (stacked) {
              return stacked == other;
            }
            bitmask |= COMPARE_UNORDERED_FLAG$2;
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack["delete"](object);
            return result;
          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
        }
        return false;
      }
      function arrayPush(array, values2) {
        var index2 = -1, length = values2.length, offset2 = array.length;
        while (++index2 < length) {
          array[offset2 + index2] = values2[index2];
        }
        return array;
      }
      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray$2(object) ? result : arrayPush(result, symbolsFunc(object));
      }
      function arrayFilter(array, predicate) {
        var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
        while (++index2 < length) {
          var value = array[index2];
          if (predicate(value, index2, array)) {
            result[resIndex++] = value;
          }
        }
        return result;
      }
      function stubArray() {
        return [];
      }
      var objectProto$2 = Object.prototype;
      var propertyIsEnumerable = objectProto$2.propertyIsEnumerable;
      var nativeGetSymbols = Object.getOwnPropertySymbols;
      var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
        if (object == null) {
          return [];
        }
        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function(symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      var getSymbols$1 = getSymbols;
      function getAllKeys(object) {
        return baseGetAllKeys(object, keys$1, getSymbols$1);
      }
      var COMPARE_PARTIAL_FLAG$3 = 1;
      var objectProto$1 = Object.prototype;
      var hasOwnProperty$2 = objectProto$1.hasOwnProperty;
      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
        if (objLength != othLength && !isPartial) {
          return false;
        }
        var index2 = objLength;
        while (index2--) {
          var key = objProps[index2];
          if (!(isPartial ? key in other : hasOwnProperty$2.call(other, key))) {
            return false;
          }
        }
        var objStacked = stack.get(object);
        var othStacked = stack.get(other);
        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }
        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;
        while (++index2 < objLength) {
          key = objProps[index2];
          var objValue = object[key], othValue = other[key];
          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }
          if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }
          skipCtor || (skipCtor = key == "constructor");
        }
        if (result && !skipCtor) {
          var objCtor = object.constructor, othCtor = other.constructor;
          if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
            result = false;
          }
        }
        stack["delete"](object);
        stack["delete"](other);
        return result;
      }
      var DataView = getNative(root$1, "DataView");
      var DataView$1 = DataView;
      var Promise$1 = getNative(root$1, "Promise");
      var Promise$2 = Promise$1;
      var Set$1 = getNative(root$1, "Set");
      var Set$2 = Set$1;
      var WeakMap$1 = getNative(root$1, "WeakMap");
      var WeakMap$2 = WeakMap$1;
      var mapTag = "[object Map]", objectTag$1 = "[object Object]", promiseTag = "[object Promise]", setTag = "[object Set]", weakMapTag = "[object WeakMap]";
      var dataViewTag = "[object DataView]";
      var dataViewCtorString = toSource(DataView$1), mapCtorString = toSource(Map$2), promiseCtorString = toSource(Promise$2), setCtorString = toSource(Set$2), weakMapCtorString = toSource(WeakMap$2);
      var getTag = baseGetTag;
      if (DataView$1 && getTag(new DataView$1(new ArrayBuffer(1))) != dataViewTag || Map$2 && getTag(new Map$2()) != mapTag || Promise$2 && getTag(Promise$2.resolve()) != promiseTag || Set$2 && getTag(new Set$2()) != setTag || WeakMap$2 && getTag(new WeakMap$2()) != weakMapTag) {
        getTag = function(value) {
          var result = baseGetTag(value), Ctor = result == objectTag$1 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;
              case mapCtorString:
                return mapTag;
              case promiseCtorString:
                return promiseTag;
              case setCtorString:
                return setTag;
              case weakMapCtorString:
                return weakMapTag;
            }
          }
          return result;
        };
      }
      var getTag$1 = getTag;
      var COMPARE_PARTIAL_FLAG$2 = 1;
      var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
      var objectProto = Object.prototype;
      var hasOwnProperty$1 = objectProto.hasOwnProperty;
      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray$2(object), othIsArr = isArray$2(other), objTag = objIsArr ? arrayTag : getTag$1(object), othTag = othIsArr ? arrayTag : getTag$1(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
        if (isSameTag && isBuffer$1(object)) {
          if (!isBuffer$1(other)) {
            return false;
          }
          objIsArr = true;
          objIsObj = false;
        }
        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray$1(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }
        if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
          var objIsWrapped = objIsObj && hasOwnProperty$1.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty$1.call(other, "__wrapped__");
          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }
        if (!isSameTag) {
          return false;
        }
        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }
      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }
        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }
        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }
      var COMPARE_PARTIAL_FLAG$1 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
      function baseIsMatch(object, source, matchData, customizer) {
        var index2 = matchData.length, length = index2, noCustomizer = !customizer;
        if (object == null) {
          return !length;
        }
        object = Object(object);
        while (index2--) {
          var data = matchData[index2];
          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }
        while (++index2 < length) {
          data = matchData[index2];
          var key = data[0], objValue = object[key], srcValue = data[1];
          if (noCustomizer && data[2]) {
            if (objValue === void 0 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();
            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }
            if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {
              return false;
            }
          }
        }
        return true;
      }
      function isStrictComparable(value) {
        return value === value && !isObject$2(value);
      }
      function getMatchData(object) {
        var result = keys$1(object), length = result.length;
        while (length--) {
          var key = result[length], value = object[key];
          result[length] = [key, value, isStrictComparable(value)];
        }
        return result;
      }
      function matchesStrictComparable(key, srcValue) {
        return function(object) {
          if (object == null) {
            return false;
          }
          return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
        };
      }
      function baseMatches(source) {
        var matchData = getMatchData(source);
        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }
        return function(object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }
      var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
      function isKey(value, object) {
        if (isArray$2(value)) {
          return false;
        }
        var type = typeof value;
        if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
          return true;
        }
        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
      }
      var FUNC_ERROR_TEXT = "Expected a function";
      function memoize(func, resolver2) {
        if (typeof func != "function" || resolver2 != null && typeof resolver2 != "function") {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        var memoized = function() {
          var args = arguments, key = resolver2 ? resolver2.apply(this, args) : args[0], cache = memoized.cache;
          if (cache.has(key)) {
            return cache.get(key);
          }
          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };
        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }
      memoize.Cache = MapCache;
      var MAX_MEMOIZE_SIZE = 500;
      function memoizeCapped(func) {
        var result = memoize(func, function(key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }
          return key;
        });
        var cache = result.cache;
        return result;
      }
      var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
      var reEscapeChar = /\\(\\)?/g;
      var stringToPath = memoizeCapped(function(string2) {
        var result = [];
        if (string2.charCodeAt(0) === 46) {
          result.push("");
        }
        string2.replace(rePropName, function(match5, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match5);
        });
        return result;
      });
      var stringToPath$1 = stringToPath;
      var INFINITY$1 = 1 / 0;
      var symbolProto = Symbol$2 ? Symbol$2.prototype : void 0, symbolToString = symbolProto ? symbolProto.toString : void 0;
      function baseToString(value) {
        if (typeof value == "string") {
          return value;
        }
        if (isArray$2(value)) {
          return arrayMap(value, baseToString) + "";
        }
        if (isSymbol(value)) {
          return symbolToString ? symbolToString.call(value) : "";
        }
        var result = value + "";
        return result == "0" && 1 / value == -INFINITY$1 ? "-0" : result;
      }
      function toString$1(value) {
        return value == null ? "" : baseToString(value);
      }
      function castPath(value, object) {
        if (isArray$2(value)) {
          return value;
        }
        return isKey(value, object) ? [value] : stringToPath$1(toString$1(value));
      }
      var INFINITY = 1 / 0;
      function toKey(value) {
        if (typeof value == "string" || isSymbol(value)) {
          return value;
        }
        var result = value + "";
        return result == "0" && 1 / value == -INFINITY ? "-0" : result;
      }
      function baseGet(object, path) {
        path = castPath(path, object);
        var index2 = 0, length = path.length;
        while (object != null && index2 < length) {
          object = object[toKey(path[index2++])];
        }
        return index2 && index2 == length ? object : void 0;
      }
      function get$3(object, path, defaultValue) {
        var result = object == null ? void 0 : baseGet(object, path);
        return result === void 0 ? defaultValue : result;
      }
      function baseHasIn(object, key) {
        return object != null && key in Object(object);
      }
      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index2 = -1, length = path.length, result = false;
        while (++index2 < length) {
          var key = toKey(path[index2]);
          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }
          object = object[key];
        }
        if (result || ++index2 != length) {
          return result;
        }
        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray$2(object) || isArguments$1(object));
      }
      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }
      var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }
        return function(object) {
          var objValue = get$3(object, path);
          return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
        };
      }
      function baseProperty(key) {
        return function(object) {
          return object == null ? void 0 : object[key];
        };
      }
      function basePropertyDeep(path) {
        return function(object) {
          return baseGet(object, path);
        };
      }
      function property(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }
      function baseIteratee(value) {
        if (typeof value == "function") {
          return value;
        }
        if (value == null) {
          return identity;
        }
        if (typeof value == "object") {
          return isArray$2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }
        return property(value);
      }
      function baseMap(collection, iteratee) {
        var index2 = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach$1(collection, function(value, key, collection2) {
          result[++index2] = iteratee(value, key, collection2);
        });
        return result;
      }
      function map$1(collection, iteratee) {
        var func = isArray$2(collection) ? arrayMap : baseMap;
        return func(collection, baseIteratee(iteratee));
      }
      var BlockSwatches = function BlockSwatches2(_ref) {
        var colors = _ref.colors, onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover;
        var styles2 = _default$3({
          "default": {
            swatches: {
              marginRight: "-10px"
            },
            swatch: {
              width: "22px",
              height: "22px",
              float: "left",
              marginRight: "10px",
              marginBottom: "10px",
              borderRadius: "4px"
            },
            clear: {
              clear: "both"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.swatches }, map$1(colors, function(c22) {
          return React__default.createElement(Swatch$1, {
            key: c22,
            color: c22,
            style: styles2.swatch,
            onClick,
            onHover: onSwatchHover,
            focusStyle: {
              boxShadow: "0 0 4px " + c22
            }
          });
        }), React__default.createElement("div", { style: styles2.clear }));
      };
      var Block = function Block2(_ref) {
        var onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, hex = _ref.hex, colors = _ref.colors, width = _ref.width, triangle = _ref.triangle, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var transparent = hex === "transparent";
        var handleChange = function handleChange2(hexCode, e22) {
          isValidHex(hexCode) && onChange({
            hex: hexCode,
            source: "hex"
          }, e22);
        };
        var styles2 = _default$3(merge$1({
          "default": {
            card: {
              width,
              background: "#fff",
              boxShadow: "0 1px rgba(0,0,0,.1)",
              borderRadius: "6px",
              position: "relative"
            },
            head: {
              height: "110px",
              background: hex,
              borderRadius: "6px 6px 0 0",
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              position: "relative"
            },
            body: {
              padding: "10px"
            },
            label: {
              fontSize: "18px",
              color: getContrastingColor(hex),
              position: "relative"
            },
            triangle: {
              width: "0px",
              height: "0px",
              borderStyle: "solid",
              borderWidth: "0 10px 10px 10px",
              borderColor: "transparent transparent " + hex + " transparent",
              position: "absolute",
              top: "-10px",
              left: "50%",
              marginLeft: "-10px"
            },
            input: {
              width: "100%",
              fontSize: "12px",
              color: "#666",
              border: "0px",
              outline: "none",
              height: "22px",
              boxShadow: "inset 0 0 0 1px #ddd",
              borderRadius: "4px",
              padding: "0 7px",
              boxSizing: "border-box"
            }
          },
          "hide-triangle": {
            triangle: {
              display: "none"
            }
          }
        }, passedStyles), { "hide-triangle": triangle === "hide" });
        return React__default.createElement("div", { style: styles2.card, className: "block-picker " + className }, React__default.createElement("div", { style: styles2.triangle }), React__default.createElement("div", { style: styles2.head }, transparent && React__default.createElement(Checkboard, { borderRadius: "6px 6px 0 0" }), React__default.createElement("div", { style: styles2.label }, hex)), React__default.createElement("div", { style: styles2.body }, React__default.createElement(BlockSwatches, { colors, onClick: handleChange, onSwatchHover }), React__default.createElement(EditableInput, {
          style: { input: styles2.input },
          value: hex,
          onChange: handleChange
        })));
      };
      Block.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        colors: PropTypes$1.arrayOf(PropTypes$1.string),
        triangle: PropTypes$1.oneOf(["top", "hide"]),
        styles: PropTypes$1.object
      };
      Block.defaultProps = {
        width: 170,
        colors: ["#D9E3F0", "#F47373", "#697689", "#37D67A", "#2CCCE4", "#555555", "#dce775", "#ff8a65", "#ba68c8"],
        triangle: "top",
        styles: {}
      };
      ColorWrap(Block);
      var red = { "50": "#ffebee", "100": "#ffcdd2", "200": "#ef9a9a", "300": "#e57373", "400": "#ef5350", "500": "#f44336", "600": "#e53935", "700": "#d32f2f", "800": "#c62828", "900": "#b71c1c", "a100": "#ff8a80", "a200": "#ff5252", "a400": "#ff1744", "a700": "#d50000" };
      var pink = { "50": "#fce4ec", "100": "#f8bbd0", "200": "#f48fb1", "300": "#f06292", "400": "#ec407a", "500": "#e91e63", "600": "#d81b60", "700": "#c2185b", "800": "#ad1457", "900": "#880e4f", "a100": "#ff80ab", "a200": "#ff4081", "a400": "#f50057", "a700": "#c51162" };
      var purple = { "50": "#f3e5f5", "100": "#e1bee7", "200": "#ce93d8", "300": "#ba68c8", "400": "#ab47bc", "500": "#9c27b0", "600": "#8e24aa", "700": "#7b1fa2", "800": "#6a1b9a", "900": "#4a148c", "a100": "#ea80fc", "a200": "#e040fb", "a400": "#d500f9", "a700": "#aa00ff" };
      var deepPurple = { "50": "#ede7f6", "100": "#d1c4e9", "200": "#b39ddb", "300": "#9575cd", "400": "#7e57c2", "500": "#673ab7", "600": "#5e35b1", "700": "#512da8", "800": "#4527a0", "900": "#311b92", "a100": "#b388ff", "a200": "#7c4dff", "a400": "#651fff", "a700": "#6200ea" };
      var indigo = { "50": "#e8eaf6", "100": "#c5cae9", "200": "#9fa8da", "300": "#7986cb", "400": "#5c6bc0", "500": "#3f51b5", "600": "#3949ab", "700": "#303f9f", "800": "#283593", "900": "#1a237e", "a100": "#8c9eff", "a200": "#536dfe", "a400": "#3d5afe", "a700": "#304ffe" };
      var blue = { "50": "#e3f2fd", "100": "#bbdefb", "200": "#90caf9", "300": "#64b5f6", "400": "#42a5f5", "500": "#2196f3", "600": "#1e88e5", "700": "#1976d2", "800": "#1565c0", "900": "#0d47a1", "a100": "#82b1ff", "a200": "#448aff", "a400": "#2979ff", "a700": "#2962ff" };
      var lightBlue = { "50": "#e1f5fe", "100": "#b3e5fc", "200": "#81d4fa", "300": "#4fc3f7", "400": "#29b6f6", "500": "#03a9f4", "600": "#039be5", "700": "#0288d1", "800": "#0277bd", "900": "#01579b", "a100": "#80d8ff", "a200": "#40c4ff", "a400": "#00b0ff", "a700": "#0091ea" };
      var cyan = { "50": "#e0f7fa", "100": "#b2ebf2", "200": "#80deea", "300": "#4dd0e1", "400": "#26c6da", "500": "#00bcd4", "600": "#00acc1", "700": "#0097a7", "800": "#00838f", "900": "#006064", "a100": "#84ffff", "a200": "#18ffff", "a400": "#00e5ff", "a700": "#00b8d4" };
      var teal = { "50": "#e0f2f1", "100": "#b2dfdb", "200": "#80cbc4", "300": "#4db6ac", "400": "#26a69a", "500": "#009688", "600": "#00897b", "700": "#00796b", "800": "#00695c", "900": "#004d40", "a100": "#a7ffeb", "a200": "#64ffda", "a400": "#1de9b6", "a700": "#00bfa5" };
      var green = { "50": "#e8f5e9", "100": "#c8e6c9", "200": "#a5d6a7", "300": "#81c784", "400": "#66bb6a", "500": "#4caf50", "600": "#43a047", "700": "#388e3c", "800": "#2e7d32", "900": "#1b5e20", "a100": "#b9f6ca", "a200": "#69f0ae", "a400": "#00e676", "a700": "#00c853" };
      var lightGreen = { "50": "#f1f8e9", "100": "#dcedc8", "200": "#c5e1a5", "300": "#aed581", "400": "#9ccc65", "500": "#8bc34a", "600": "#7cb342", "700": "#689f38", "800": "#558b2f", "900": "#33691e", "a100": "#ccff90", "a200": "#b2ff59", "a400": "#76ff03", "a700": "#64dd17" };
      var lime = { "50": "#f9fbe7", "100": "#f0f4c3", "200": "#e6ee9c", "300": "#dce775", "400": "#d4e157", "500": "#cddc39", "600": "#c0ca33", "700": "#afb42b", "800": "#9e9d24", "900": "#827717", "a100": "#f4ff81", "a200": "#eeff41", "a400": "#c6ff00", "a700": "#aeea00" };
      var yellow = { "50": "#fffde7", "100": "#fff9c4", "200": "#fff59d", "300": "#fff176", "400": "#ffee58", "500": "#ffeb3b", "600": "#fdd835", "700": "#fbc02d", "800": "#f9a825", "900": "#f57f17", "a100": "#ffff8d", "a200": "#ffff00", "a400": "#ffea00", "a700": "#ffd600" };
      var amber = { "50": "#fff8e1", "100": "#ffecb3", "200": "#ffe082", "300": "#ffd54f", "400": "#ffca28", "500": "#ffc107", "600": "#ffb300", "700": "#ffa000", "800": "#ff8f00", "900": "#ff6f00", "a100": "#ffe57f", "a200": "#ffd740", "a400": "#ffc400", "a700": "#ffab00" };
      var orange = { "50": "#fff3e0", "100": "#ffe0b2", "200": "#ffcc80", "300": "#ffb74d", "400": "#ffa726", "500": "#ff9800", "600": "#fb8c00", "700": "#f57c00", "800": "#ef6c00", "900": "#e65100", "a100": "#ffd180", "a200": "#ffab40", "a400": "#ff9100", "a700": "#ff6d00" };
      var deepOrange = { "50": "#fbe9e7", "100": "#ffccbc", "200": "#ffab91", "300": "#ff8a65", "400": "#ff7043", "500": "#ff5722", "600": "#f4511e", "700": "#e64a19", "800": "#d84315", "900": "#bf360c", "a100": "#ff9e80", "a200": "#ff6e40", "a400": "#ff3d00", "a700": "#dd2c00" };
      var brown = { "50": "#efebe9", "100": "#d7ccc8", "200": "#bcaaa4", "300": "#a1887f", "400": "#8d6e63", "500": "#795548", "600": "#6d4c41", "700": "#5d4037", "800": "#4e342e", "900": "#3e2723" };
      var blueGrey = { "50": "#eceff1", "100": "#cfd8dc", "200": "#b0bec5", "300": "#90a4ae", "400": "#78909c", "500": "#607d8b", "600": "#546e7a", "700": "#455a64", "800": "#37474f", "900": "#263238" };
      var CircleSwatch = function CircleSwatch2(_ref) {
        var color = _ref.color, onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover, hover2 = _ref.hover, active2 = _ref.active, circleSize = _ref.circleSize, circleSpacing = _ref.circleSpacing;
        var styles2 = _default$3({
          "default": {
            swatch: {
              width: circleSize,
              height: circleSize,
              marginRight: circleSpacing,
              marginBottom: circleSpacing,
              transform: "scale(1)",
              transition: "100ms transform ease"
            },
            Swatch: {
              borderRadius: "50%",
              background: "transparent",
              boxShadow: "inset 0 0 0 " + (circleSize / 2 + 1) + "px " + color,
              transition: "100ms box-shadow ease"
            }
          },
          "hover": {
            swatch: {
              transform: "scale(1.2)"
            }
          },
          "active": {
            Swatch: {
              boxShadow: "inset 0 0 0 3px " + color
            }
          }
        }, { hover: hover2, active: active2 });
        return React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(Swatch$1, {
          style: styles2.Swatch,
          color,
          onClick,
          onHover: onSwatchHover,
          focusStyle: { boxShadow: styles2.Swatch.boxShadow + ", 0 0 5px " + color }
        }));
      };
      CircleSwatch.defaultProps = {
        circleSize: 28,
        circleSpacing: 14
      };
      var CircleSwatch$1 = handleHover(CircleSwatch);
      var Circle = function Circle2(_ref) {
        var width = _ref.width, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, colors = _ref.colors, hex = _ref.hex, circleSize = _ref.circleSize, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, circleSpacing = _ref.circleSpacing, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            card: {
              width,
              display: "flex",
              flexWrap: "wrap",
              marginRight: -circleSpacing,
              marginBottom: -circleSpacing
            }
          }
        }, passedStyles));
        var handleChange = function handleChange2(hexCode, e22) {
          return onChange({ hex: hexCode, source: "hex" }, e22);
        };
        return React__default.createElement("div", { style: styles2.card, className: "circle-picker " + className }, map$1(colors, function(c22) {
          return React__default.createElement(CircleSwatch$1, {
            key: c22,
            color: c22,
            onClick: handleChange,
            onSwatchHover,
            active: hex === c22.toLowerCase(),
            circleSize,
            circleSpacing
          });
        }));
      };
      Circle.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        circleSize: PropTypes$1.number,
        circleSpacing: PropTypes$1.number,
        styles: PropTypes$1.object
      };
      Circle.defaultProps = {
        width: 252,
        circleSize: 28,
        circleSpacing: 14,
        colors: [red["500"], pink["500"], purple["500"], deepPurple["500"], indigo["500"], blue["500"], lightBlue["500"], cyan["500"], teal["500"], green["500"], lightGreen["500"], lime["500"], yellow["500"], amber["500"], orange["500"], deepOrange["500"], brown["500"], blueGrey["500"]],
        styles: {}
      };
      ColorWrap(Circle);
      function isUndefined$1(value) {
        return value === void 0;
      }
      var UnfoldMoreHorizontalIcon = {};
      Object.defineProperty(UnfoldMoreHorizontalIcon, "__esModule", {
        value: true
      });
      var _extends$4 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _react$1 = react.exports;
      var _react2$1 = _interopRequireDefault$1(_react$1);
      function _interopRequireDefault$1(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      function _objectWithoutProperties$2(obj, keys2) {
        var target = {};
        for (var i22 in obj) {
          if (keys2.indexOf(i22) >= 0)
            continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i22))
            continue;
          target[i22] = obj[i22];
        }
        return target;
      }
      var DEFAULT_SIZE$1 = 24;
      var _default$2 = UnfoldMoreHorizontalIcon.default = function(_ref) {
        var _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "currentColor" : _ref$fill, _ref$width = _ref.width, width = _ref$width === void 0 ? DEFAULT_SIZE$1 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? DEFAULT_SIZE$1 : _ref$height, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, props = _objectWithoutProperties$2(_ref, ["fill", "width", "height", "style"]);
        return _react2$1.default.createElement("svg", _extends$4({
          viewBox: "0 0 " + DEFAULT_SIZE$1 + " " + DEFAULT_SIZE$1,
          style: _extends$4({ fill, width, height }, style)
        }, props), _react2$1.default.createElement("path", { d: "M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z" }));
      };
      var _createClass$1 = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck$1(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn$1(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits$1(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var ChromeFields = function(_React$Component) {
        _inherits$1(ChromeFields2, _React$Component);
        function ChromeFields2(props) {
          _classCallCheck$1(this, ChromeFields2);
          var _this = _possibleConstructorReturn$1(this, (ChromeFields2.__proto__ || Object.getPrototypeOf(ChromeFields2)).call(this));
          _this.toggleViews = function() {
            if (_this.state.view === "hex") {
              _this.setState({ view: "rgb" });
            } else if (_this.state.view === "rgb") {
              _this.setState({ view: "hsl" });
            } else if (_this.state.view === "hsl") {
              if (_this.props.hsl.a === 1) {
                _this.setState({ view: "hex" });
              } else {
                _this.setState({ view: "rgb" });
              }
            }
          };
          _this.handleChange = function(data, e22) {
            if (data.hex) {
              isValidHex(data.hex) && _this.props.onChange({
                hex: data.hex,
                source: "hex"
              }, e22);
            } else if (data.r || data.g || data.b) {
              _this.props.onChange({
                r: data.r || _this.props.rgb.r,
                g: data.g || _this.props.rgb.g,
                b: data.b || _this.props.rgb.b,
                source: "rgb"
              }, e22);
            } else if (data.a) {
              if (data.a < 0) {
                data.a = 0;
              } else if (data.a > 1) {
                data.a = 1;
              }
              _this.props.onChange({
                h: _this.props.hsl.h,
                s: _this.props.hsl.s,
                l: _this.props.hsl.l,
                a: Math.round(data.a * 100) / 100,
                source: "rgb"
              }, e22);
            } else if (data.h || data.s || data.l) {
              if (typeof data.s === "string" && data.s.includes("%")) {
                data.s = data.s.replace("%", "");
              }
              if (typeof data.l === "string" && data.l.includes("%")) {
                data.l = data.l.replace("%", "");
              }
              if (data.s == 1) {
                data.s = 0.01;
              } else if (data.l == 1) {
                data.l = 0.01;
              }
              _this.props.onChange({
                h: data.h || _this.props.hsl.h,
                s: Number(!isUndefined$1(data.s) ? data.s : _this.props.hsl.s),
                l: Number(!isUndefined$1(data.l) ? data.l : _this.props.hsl.l),
                source: "hsl"
              }, e22);
            }
          };
          _this.showHighlight = function(e22) {
            e22.currentTarget.style.background = "#eee";
          };
          _this.hideHighlight = function(e22) {
            e22.currentTarget.style.background = "transparent";
          };
          if (props.hsl.a !== 1 && props.view === "hex") {
            _this.state = {
              view: "rgb"
            };
          } else {
            _this.state = {
              view: props.view
            };
          }
          return _this;
        }
        _createClass$1(ChromeFields2, [{
          key: "render",
          value: function render2() {
            var _this2 = this;
            var styles2 = _default$3({
              "default": {
                wrap: {
                  paddingTop: "16px",
                  display: "flex"
                },
                fields: {
                  flex: "1",
                  display: "flex",
                  marginLeft: "-6px"
                },
                field: {
                  paddingLeft: "6px",
                  width: "100%"
                },
                alpha: {
                  paddingLeft: "6px",
                  width: "100%"
                },
                toggle: {
                  width: "32px",
                  textAlign: "right",
                  position: "relative"
                },
                icon: {
                  marginRight: "-4px",
                  marginTop: "12px",
                  cursor: "pointer",
                  position: "relative"
                },
                iconHighlight: {
                  position: "absolute",
                  width: "24px",
                  height: "28px",
                  background: "#eee",
                  borderRadius: "4px",
                  top: "10px",
                  left: "12px",
                  display: "none"
                },
                input: {
                  fontSize: "11px",
                  color: "#333",
                  width: "100%",
                  borderRadius: "2px",
                  border: "none",
                  boxShadow: "inset 0 0 0 1px #dadada",
                  height: "21px",
                  textAlign: "center"
                },
                label: {
                  textTransform: "uppercase",
                  fontSize: "11px",
                  lineHeight: "11px",
                  color: "#969696",
                  textAlign: "center",
                  display: "block",
                  marginTop: "12px"
                },
                svg: {
                  fill: "#333",
                  width: "24px",
                  height: "24px",
                  border: "1px transparent solid",
                  borderRadius: "5px"
                }
              },
              "disableAlpha": {
                alpha: {
                  display: "none"
                }
              }
            }, this.props, this.state);
            var fields = void 0;
            if (this.state.view === "hex") {
              fields = React__default.createElement("div", { style: styles2.fields, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "hex",
                value: this.props.hex,
                onChange: this.handleChange
              })));
            } else if (this.state.view === "rgb") {
              fields = React__default.createElement("div", { style: styles2.fields, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "r",
                value: this.props.rgb.r,
                onChange: this.handleChange
              })), React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "g",
                value: this.props.rgb.g,
                onChange: this.handleChange
              })), React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "b",
                value: this.props.rgb.b,
                onChange: this.handleChange
              })), React__default.createElement("div", { style: styles2.alpha }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "a",
                value: this.props.rgb.a,
                arrowOffset: 0.01,
                onChange: this.handleChange
              })));
            } else if (this.state.view === "hsl") {
              fields = React__default.createElement("div", { style: styles2.fields, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "h",
                value: Math.round(this.props.hsl.h),
                onChange: this.handleChange
              })), React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "s",
                value: Math.round(this.props.hsl.s * 100) + "%",
                onChange: this.handleChange
              })), React__default.createElement("div", { style: styles2.field }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "l",
                value: Math.round(this.props.hsl.l * 100) + "%",
                onChange: this.handleChange
              })), React__default.createElement("div", { style: styles2.alpha }, React__default.createElement(EditableInput, {
                style: { input: styles2.input, label: styles2.label },
                label: "a",
                value: this.props.hsl.a,
                arrowOffset: 0.01,
                onChange: this.handleChange
              })));
            }
            return React__default.createElement("div", { style: styles2.wrap, className: "flexbox-fix" }, fields, React__default.createElement("div", { style: styles2.toggle }, React__default.createElement("div", { style: styles2.icon, onClick: this.toggleViews, ref: function ref(icon) {
              return _this2.icon = icon;
            } }, React__default.createElement(_default$2, {
              style: styles2.svg,
              onMouseOver: this.showHighlight,
              onMouseEnter: this.showHighlight,
              onMouseOut: this.hideHighlight
            }))));
          }
        }], [{
          key: "getDerivedStateFromProps",
          value: function getDerivedStateFromProps(nextProps, state) {
            if (nextProps.hsl.a !== 1 && state.view === "hex") {
              return { view: "rgb" };
            }
            return null;
          }
        }]);
        return ChromeFields2;
      }(React__default.Component);
      ChromeFields.defaultProps = {
        view: "hex"
      };
      var ChromePointer = function ChromePointer2() {
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "12px",
              height: "12px",
              borderRadius: "6px",
              transform: "translate(-6px, -1px)",
              backgroundColor: "rgb(248, 248, 248)",
              boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.picker });
      };
      var ChromePointerCircle = function ChromePointerCircle2() {
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "12px",
              height: "12px",
              borderRadius: "6px",
              boxShadow: "inset 0 0 0 1px #fff",
              transform: "translate(-6px, -6px)"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.picker });
      };
      var Chrome = function Chrome2(_ref) {
        var width = _ref.width, onChange = _ref.onChange, disableAlpha = _ref.disableAlpha, rgb = _ref.rgb, hsl = _ref.hsl, hsv = _ref.hsv, hex = _ref.hex, renderers = _ref.renderers, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, defaultView = _ref.defaultView;
        var styles2 = _default$3(merge$1({
          "default": {
            picker: {
              width,
              background: "#fff",
              borderRadius: "2px",
              boxShadow: "0 0 2px rgba(0,0,0,.3), 0 4px 8px rgba(0,0,0,.3)",
              boxSizing: "initial",
              fontFamily: "Menlo"
            },
            saturation: {
              width: "100%",
              paddingBottom: "55%",
              position: "relative",
              borderRadius: "2px 2px 0 0",
              overflow: "hidden"
            },
            Saturation: {
              radius: "2px 2px 0 0"
            },
            body: {
              padding: "16px 16px 12px"
            },
            controls: {
              display: "flex"
            },
            color: {
              width: "32px"
            },
            swatch: {
              marginTop: "6px",
              width: "16px",
              height: "16px",
              borderRadius: "8px",
              position: "relative",
              overflow: "hidden"
            },
            active: {
              absolute: "0px 0px 0px 0px",
              borderRadius: "8px",
              boxShadow: "inset 0 0 0 1px rgba(0,0,0,.1)",
              background: "rgba(" + rgb.r + ", " + rgb.g + ", " + rgb.b + ", " + rgb.a + ")",
              zIndex: "2"
            },
            toggles: {
              flex: "1"
            },
            hue: {
              height: "10px",
              position: "relative",
              marginBottom: "8px"
            },
            Hue: {
              radius: "2px"
            },
            alpha: {
              height: "10px",
              position: "relative"
            },
            Alpha: {
              radius: "2px"
            }
          },
          "disableAlpha": {
            color: {
              width: "22px"
            },
            alpha: {
              display: "none"
            },
            hue: {
              marginBottom: "0px"
            },
            swatch: {
              width: "10px",
              height: "10px",
              marginTop: "0px"
            }
          }
        }, passedStyles), { disableAlpha });
        return React__default.createElement("div", { style: styles2.picker, className: "chrome-picker " + className }, React__default.createElement("div", { style: styles2.saturation }, React__default.createElement(Saturation, {
          style: styles2.Saturation,
          hsl,
          hsv,
          pointer: ChromePointerCircle,
          onChange
        })), React__default.createElement("div", { style: styles2.body }, React__default.createElement("div", { style: styles2.controls, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.color }, React__default.createElement("div", { style: styles2.swatch }, React__default.createElement("div", { style: styles2.active }), React__default.createElement(Checkboard, { renderers }))), React__default.createElement("div", { style: styles2.toggles }, React__default.createElement("div", { style: styles2.hue }, React__default.createElement(Hue, {
          style: styles2.Hue,
          hsl,
          pointer: ChromePointer,
          onChange
        })), React__default.createElement("div", { style: styles2.alpha }, React__default.createElement(Alpha, {
          style: styles2.Alpha,
          rgb,
          hsl,
          pointer: ChromePointer,
          renderers,
          onChange
        })))), React__default.createElement(ChromeFields, {
          rgb,
          hsl,
          hex,
          view: defaultView,
          onChange,
          disableAlpha
        })));
      };
      Chrome.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        disableAlpha: PropTypes$1.bool,
        styles: PropTypes$1.object,
        defaultView: PropTypes$1.oneOf(["hex", "rgb", "hsl"])
      };
      Chrome.defaultProps = {
        width: 225,
        disableAlpha: false,
        styles: {}
      };
      ColorWrap(Chrome);
      var CompactColor = function CompactColor2(_ref) {
        var color = _ref.color, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
        } : _ref$onClick, onSwatchHover = _ref.onSwatchHover, active2 = _ref.active;
        var styles2 = _default$3({
          "default": {
            color: {
              background: color,
              width: "15px",
              height: "15px",
              float: "left",
              marginRight: "5px",
              marginBottom: "5px",
              position: "relative",
              cursor: "pointer"
            },
            dot: {
              absolute: "5px 5px 5px 5px",
              background: getContrastingColor(color),
              borderRadius: "50%",
              opacity: "0"
            }
          },
          "active": {
            dot: {
              opacity: "1"
            }
          },
          "color-#FFFFFF": {
            color: {
              boxShadow: "inset 0 0 0 1px #ddd"
            },
            dot: {
              background: "#000"
            }
          },
          "transparent": {
            dot: {
              background: "#000"
            }
          }
        }, { active: active2, "color-#FFFFFF": color === "#FFFFFF", "transparent": color === "transparent" });
        return React__default.createElement(Swatch$1, {
          style: styles2.color,
          color,
          onClick,
          onHover: onSwatchHover,
          focusStyle: { boxShadow: "0 0 4px " + color }
        }, React__default.createElement("div", { style: styles2.dot }));
      };
      var CompactFields = function CompactFields2(_ref) {
        var hex = _ref.hex, rgb = _ref.rgb, onChange = _ref.onChange;
        var styles2 = _default$3({
          "default": {
            fields: {
              display: "flex",
              paddingBottom: "6px",
              paddingRight: "5px",
              position: "relative"
            },
            active: {
              position: "absolute",
              top: "6px",
              left: "5px",
              height: "9px",
              width: "9px",
              background: hex
            },
            HEXwrap: {
              flex: "6",
              position: "relative"
            },
            HEXinput: {
              width: "80%",
              padding: "0px",
              paddingLeft: "20%",
              border: "none",
              outline: "none",
              background: "none",
              fontSize: "12px",
              color: "#333",
              height: "16px"
            },
            HEXlabel: {
              display: "none"
            },
            RGBwrap: {
              flex: "3",
              position: "relative"
            },
            RGBinput: {
              width: "70%",
              padding: "0px",
              paddingLeft: "30%",
              border: "none",
              outline: "none",
              background: "none",
              fontSize: "12px",
              color: "#333",
              height: "16px"
            },
            RGBlabel: {
              position: "absolute",
              top: "3px",
              left: "0px",
              lineHeight: "16px",
              textTransform: "uppercase",
              fontSize: "12px",
              color: "#999"
            }
          }
        });
        var handleChange = function handleChange2(data, e22) {
          if (data.r || data.g || data.b) {
            onChange({
              r: data.r || rgb.r,
              g: data.g || rgb.g,
              b: data.b || rgb.b,
              source: "rgb"
            }, e22);
          } else {
            onChange({
              hex: data.hex,
              source: "hex"
            }, e22);
          }
        };
        return React__default.createElement("div", { style: styles2.fields, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.active }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.HEXwrap, input: styles2.HEXinput, label: styles2.HEXlabel },
          label: "hex",
          value: hex,
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "r",
          value: rgb.r,
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "g",
          value: rgb.g,
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "b",
          value: rgb.b,
          onChange: handleChange
        }));
      };
      var Compact = function Compact2(_ref) {
        var onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, colors = _ref.colors, hex = _ref.hex, rgb = _ref.rgb, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            Compact: {
              background: "#f6f6f6",
              radius: "4px"
            },
            compact: {
              paddingTop: "5px",
              paddingLeft: "5px",
              boxSizing: "initial",
              width: "240px"
            },
            clear: {
              clear: "both"
            }
          }
        }, passedStyles));
        var handleChange = function handleChange2(data, e22) {
          if (data.hex) {
            isValidHex(data.hex) && onChange({
              hex: data.hex,
              source: "hex"
            }, e22);
          } else {
            onChange(data, e22);
          }
        };
        return React__default.createElement(Raised, { style: styles2.Compact, styles: passedStyles }, React__default.createElement("div", { style: styles2.compact, className: "compact-picker " + className }, React__default.createElement("div", null, map$1(colors, function(c22) {
          return React__default.createElement(CompactColor, {
            key: c22,
            color: c22,
            active: c22.toLowerCase() === hex,
            onClick: handleChange,
            onSwatchHover
          });
        }), React__default.createElement("div", { style: styles2.clear })), React__default.createElement(CompactFields, { hex, rgb, onChange: handleChange })));
      };
      Compact.propTypes = {
        colors: PropTypes$1.arrayOf(PropTypes$1.string),
        styles: PropTypes$1.object
      };
      Compact.defaultProps = {
        colors: ["#4D4D4D", "#999999", "#FFFFFF", "#F44E3B", "#FE9200", "#FCDC00", "#DBDF00", "#A4DD00", "#68CCCA", "#73D8FF", "#AEA1FF", "#FDA1FF", "#333333", "#808080", "#cccccc", "#D33115", "#E27300", "#FCC400", "#B0BC00", "#68BC00", "#16A5A5", "#009CE0", "#7B64FF", "#FA28FF", "#000000", "#666666", "#B3B3B3", "#9F0500", "#C45100", "#FB9E00", "#808900", "#194D33", "#0C797D", "#0062B1", "#653294", "#AB149E"],
        styles: {}
      };
      ColorWrap(Compact);
      var GithubSwatch = function GithubSwatch2(_ref) {
        var hover2 = _ref.hover, color = _ref.color, onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover;
        var hoverSwatch = {
          position: "relative",
          zIndex: "2",
          outline: "2px solid #fff",
          boxShadow: "0 0 5px 2px rgba(0,0,0,0.25)"
        };
        var styles2 = _default$3({
          "default": {
            swatch: {
              width: "25px",
              height: "25px",
              fontSize: "0"
            }
          },
          "hover": {
            swatch: hoverSwatch
          }
        }, { hover: hover2 });
        return React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(Swatch$1, {
          color,
          onClick,
          onHover: onSwatchHover,
          focusStyle: hoverSwatch
        }));
      };
      var GithubSwatch$1 = handleHover(GithubSwatch);
      var Github = function Github2(_ref) {
        var width = _ref.width, colors = _ref.colors, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, triangle = _ref.triangle, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            card: {
              width,
              background: "#fff",
              border: "1px solid rgba(0,0,0,0.2)",
              boxShadow: "0 3px 12px rgba(0,0,0,0.15)",
              borderRadius: "4px",
              position: "relative",
              padding: "5px",
              display: "flex",
              flexWrap: "wrap"
            },
            triangle: {
              position: "absolute",
              border: "7px solid transparent",
              borderBottomColor: "#fff"
            },
            triangleShadow: {
              position: "absolute",
              border: "8px solid transparent",
              borderBottomColor: "rgba(0,0,0,0.15)"
            }
          },
          "hide-triangle": {
            triangle: {
              display: "none"
            },
            triangleShadow: {
              display: "none"
            }
          },
          "top-left-triangle": {
            triangle: {
              top: "-14px",
              left: "10px"
            },
            triangleShadow: {
              top: "-16px",
              left: "9px"
            }
          },
          "top-right-triangle": {
            triangle: {
              top: "-14px",
              right: "10px"
            },
            triangleShadow: {
              top: "-16px",
              right: "9px"
            }
          },
          "bottom-left-triangle": {
            triangle: {
              top: "35px",
              left: "10px",
              transform: "rotate(180deg)"
            },
            triangleShadow: {
              top: "37px",
              left: "9px",
              transform: "rotate(180deg)"
            }
          },
          "bottom-right-triangle": {
            triangle: {
              top: "35px",
              right: "10px",
              transform: "rotate(180deg)"
            },
            triangleShadow: {
              top: "37px",
              right: "9px",
              transform: "rotate(180deg)"
            }
          }
        }, passedStyles), {
          "hide-triangle": triangle === "hide",
          "top-left-triangle": triangle === "top-left",
          "top-right-triangle": triangle === "top-right",
          "bottom-left-triangle": triangle === "bottom-left",
          "bottom-right-triangle": triangle === "bottom-right"
        });
        var handleChange = function handleChange2(hex, e22) {
          return onChange({ hex, source: "hex" }, e22);
        };
        return React__default.createElement("div", { style: styles2.card, className: "github-picker " + className }, React__default.createElement("div", { style: styles2.triangleShadow }), React__default.createElement("div", { style: styles2.triangle }), map$1(colors, function(c22) {
          return React__default.createElement(GithubSwatch$1, {
            color: c22,
            key: c22,
            onClick: handleChange,
            onSwatchHover
          });
        }));
      };
      Github.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        colors: PropTypes$1.arrayOf(PropTypes$1.string),
        triangle: PropTypes$1.oneOf(["hide", "top-left", "top-right", "bottom-left", "bottom-right"]),
        styles: PropTypes$1.object
      };
      Github.defaultProps = {
        width: 200,
        colors: ["#B80000", "#DB3E00", "#FCCB00", "#008B02", "#006B76", "#1273DE", "#004DCF", "#5300EB", "#EB9694", "#FAD0C3", "#FEF3BD", "#C1E1C5", "#BEDADC", "#C4DEF6", "#BED3F3", "#D4C4FB"],
        triangle: "top-left",
        styles: {}
      };
      ColorWrap(Github);
      var SliderPointer$1 = function SliderPointer2(_ref) {
        var direction = _ref.direction;
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "18px",
              height: "18px",
              borderRadius: "50%",
              transform: "translate(-9px, -1px)",
              backgroundColor: "rgb(248, 248, 248)",
              boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
            }
          },
          "vertical": {
            picker: {
              transform: "translate(-3px, -9px)"
            }
          }
        }, { vertical: direction === "vertical" });
        return React__default.createElement("div", { style: styles2.picker });
      };
      var _extends$3 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var HuePicker = function HuePicker2(_ref) {
        var width = _ref.width, height = _ref.height, onChange = _ref.onChange, hsl = _ref.hsl, direction = _ref.direction, pointer = _ref.pointer, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            picker: {
              position: "relative",
              width,
              height
            },
            hue: {
              radius: "2px"
            }
          }
        }, passedStyles));
        var handleChange = function handleChange2(data) {
          return onChange({ a: 1, h: data.h, l: 0.5, s: 1 });
        };
        return React__default.createElement("div", { style: styles2.picker, className: "hue-picker " + className }, React__default.createElement(Hue, _extends$3({}, styles2.hue, {
          hsl,
          pointer,
          onChange: handleChange,
          direction
        })));
      };
      HuePicker.propTypes = {
        styles: PropTypes$1.object
      };
      HuePicker.defaultProps = {
        width: "316px",
        height: "16px",
        direction: "horizontal",
        pointer: SliderPointer$1,
        styles: {}
      };
      ColorWrap(HuePicker);
      var Material = function Material2(_ref) {
        var onChange = _ref.onChange, hex = _ref.hex, rgb = _ref.rgb, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            material: {
              width: "98px",
              height: "98px",
              padding: "16px",
              fontFamily: "Roboto"
            },
            HEXwrap: {
              position: "relative"
            },
            HEXinput: {
              width: "100%",
              marginTop: "12px",
              fontSize: "15px",
              color: "#333",
              padding: "0px",
              border: "0px",
              borderBottom: "2px solid " + hex,
              outline: "none",
              height: "30px"
            },
            HEXlabel: {
              position: "absolute",
              top: "0px",
              left: "0px",
              fontSize: "11px",
              color: "#999999",
              textTransform: "capitalize"
            },
            Hex: {
              style: {}
            },
            RGBwrap: {
              position: "relative"
            },
            RGBinput: {
              width: "100%",
              marginTop: "12px",
              fontSize: "15px",
              color: "#333",
              padding: "0px",
              border: "0px",
              borderBottom: "1px solid #eee",
              outline: "none",
              height: "30px"
            },
            RGBlabel: {
              position: "absolute",
              top: "0px",
              left: "0px",
              fontSize: "11px",
              color: "#999999",
              textTransform: "capitalize"
            },
            split: {
              display: "flex",
              marginRight: "-10px",
              paddingTop: "11px"
            },
            third: {
              flex: "1",
              paddingRight: "10px"
            }
          }
        }, passedStyles));
        var handleChange = function handleChange2(data, e22) {
          if (data.hex) {
            isValidHex(data.hex) && onChange({
              hex: data.hex,
              source: "hex"
            }, e22);
          } else if (data.r || data.g || data.b) {
            onChange({
              r: data.r || rgb.r,
              g: data.g || rgb.g,
              b: data.b || rgb.b,
              source: "rgb"
            }, e22);
          }
        };
        return React__default.createElement(Raised, { styles: passedStyles }, React__default.createElement("div", { style: styles2.material, className: "material-picker " + className }, React__default.createElement(EditableInput, {
          style: { wrap: styles2.HEXwrap, input: styles2.HEXinput, label: styles2.HEXlabel },
          label: "hex",
          value: hex,
          onChange: handleChange
        }), React__default.createElement("div", { style: styles2.split, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.third }, React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "r",
          value: rgb.r,
          onChange: handleChange
        })), React__default.createElement("div", { style: styles2.third }, React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "g",
          value: rgb.g,
          onChange: handleChange
        })), React__default.createElement("div", { style: styles2.third }, React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "b",
          value: rgb.b,
          onChange: handleChange
        })))));
      };
      ColorWrap(Material);
      var PhotoshopPicker = function PhotoshopPicker2(_ref) {
        var onChange = _ref.onChange, rgb = _ref.rgb, hsv = _ref.hsv, hex = _ref.hex;
        var styles2 = _default$3({
          "default": {
            fields: {
              paddingTop: "5px",
              paddingBottom: "9px",
              width: "80px",
              position: "relative"
            },
            divider: {
              height: "5px"
            },
            RGBwrap: {
              position: "relative"
            },
            RGBinput: {
              marginLeft: "40%",
              width: "40%",
              height: "18px",
              border: "1px solid #888888",
              boxShadow: "inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC",
              marginBottom: "5px",
              fontSize: "13px",
              paddingLeft: "3px",
              marginRight: "10px"
            },
            RGBlabel: {
              left: "0px",
              top: "0px",
              width: "34px",
              textTransform: "uppercase",
              fontSize: "13px",
              height: "18px",
              lineHeight: "22px",
              position: "absolute"
            },
            HEXwrap: {
              position: "relative"
            },
            HEXinput: {
              marginLeft: "20%",
              width: "80%",
              height: "18px",
              border: "1px solid #888888",
              boxShadow: "inset 0 1px 1px rgba(0,0,0,.1), 0 1px 0 0 #ECECEC",
              marginBottom: "6px",
              fontSize: "13px",
              paddingLeft: "3px"
            },
            HEXlabel: {
              position: "absolute",
              top: "0px",
              left: "0px",
              width: "14px",
              textTransform: "uppercase",
              fontSize: "13px",
              height: "18px",
              lineHeight: "22px"
            },
            fieldSymbols: {
              position: "absolute",
              top: "5px",
              right: "-7px",
              fontSize: "13px"
            },
            symbol: {
              height: "20px",
              lineHeight: "22px",
              paddingBottom: "7px"
            }
          }
        });
        var handleChange = function handleChange2(data, e22) {
          if (data["#"]) {
            isValidHex(data["#"]) && onChange({
              hex: data["#"],
              source: "hex"
            }, e22);
          } else if (data.r || data.g || data.b) {
            onChange({
              r: data.r || rgb.r,
              g: data.g || rgb.g,
              b: data.b || rgb.b,
              source: "rgb"
            }, e22);
          } else if (data.h || data.s || data.v) {
            onChange({
              h: data.h || hsv.h,
              s: data.s || hsv.s,
              v: data.v || hsv.v,
              source: "hsv"
            }, e22);
          }
        };
        return React__default.createElement("div", { style: styles2.fields }, React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "h",
          value: Math.round(hsv.h),
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "s",
          value: Math.round(hsv.s * 100),
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "v",
          value: Math.round(hsv.v * 100),
          onChange: handleChange
        }), React__default.createElement("div", { style: styles2.divider }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "r",
          value: rgb.r,
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "g",
          value: rgb.g,
          onChange: handleChange
        }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.RGBwrap, input: styles2.RGBinput, label: styles2.RGBlabel },
          label: "b",
          value: rgb.b,
          onChange: handleChange
        }), React__default.createElement("div", { style: styles2.divider }), React__default.createElement(EditableInput, {
          style: { wrap: styles2.HEXwrap, input: styles2.HEXinput, label: styles2.HEXlabel },
          label: "#",
          value: hex.replace("#", ""),
          onChange: handleChange
        }), React__default.createElement("div", { style: styles2.fieldSymbols }, React__default.createElement("div", { style: styles2.symbol }, "\xB0"), React__default.createElement("div", { style: styles2.symbol }, "%"), React__default.createElement("div", { style: styles2.symbol }, "%")));
      };
      var PhotoshopPointerCircle$1 = function PhotoshopPointerCircle2(_ref) {
        var hsl = _ref.hsl;
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "12px",
              height: "12px",
              borderRadius: "6px",
              boxShadow: "inset 0 0 0 1px #fff",
              transform: "translate(-6px, -6px)"
            }
          },
          "black-outline": {
            picker: {
              boxShadow: "inset 0 0 0 1px #000"
            }
          }
        }, { "black-outline": hsl.l > 0.5 });
        return React__default.createElement("div", { style: styles2.picker });
      };
      var PhotoshopPointerCircle = function PhotoshopPointerCircle2() {
        var styles2 = _default$3({
          "default": {
            triangle: {
              width: 0,
              height: 0,
              borderStyle: "solid",
              borderWidth: "4px 0 4px 6px",
              borderColor: "transparent transparent transparent #fff",
              position: "absolute",
              top: "1px",
              left: "1px"
            },
            triangleBorder: {
              width: 0,
              height: 0,
              borderStyle: "solid",
              borderWidth: "5px 0 5px 8px",
              borderColor: "transparent transparent transparent #555"
            },
            left: {
              Extend: "triangleBorder",
              transform: "translate(-13px, -4px)"
            },
            leftInside: {
              Extend: "triangle",
              transform: "translate(-8px, -5px)"
            },
            right: {
              Extend: "triangleBorder",
              transform: "translate(20px, -14px) rotate(180deg)"
            },
            rightInside: {
              Extend: "triangle",
              transform: "translate(-8px, -5px)"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.pointer }, React__default.createElement("div", { style: styles2.left }, React__default.createElement("div", { style: styles2.leftInside })), React__default.createElement("div", { style: styles2.right }, React__default.createElement("div", { style: styles2.rightInside })));
      };
      var PhotoshopButton = function PhotoshopButton2(_ref) {
        var onClick = _ref.onClick, label2 = _ref.label, children = _ref.children, active2 = _ref.active;
        var styles2 = _default$3({
          "default": {
            button: {
              backgroundImage: "linear-gradient(-180deg, #FFFFFF 0%, #E6E6E6 100%)",
              border: "1px solid #878787",
              borderRadius: "2px",
              height: "20px",
              boxShadow: "0 1px 0 0 #EAEAEA",
              fontSize: "14px",
              color: "#000",
              lineHeight: "20px",
              textAlign: "center",
              marginBottom: "10px",
              cursor: "pointer"
            }
          },
          "active": {
            button: {
              boxShadow: "0 0 0 1px #878787"
            }
          }
        }, { active: active2 });
        return React__default.createElement("div", { style: styles2.button, onClick }, label2 || children);
      };
      var PhotoshopPreviews = function PhotoshopPreviews2(_ref) {
        var rgb = _ref.rgb, currentColor = _ref.currentColor;
        var styles2 = _default$3({
          "default": {
            swatches: {
              border: "1px solid #B3B3B3",
              borderBottom: "1px solid #F0F0F0",
              marginBottom: "2px",
              marginTop: "1px"
            },
            new: {
              height: "34px",
              background: "rgb(" + rgb.r + "," + rgb.g + ", " + rgb.b + ")",
              boxShadow: "inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 1px 0 #000"
            },
            current: {
              height: "34px",
              background: currentColor,
              boxShadow: "inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 -1px 0 #000"
            },
            label: {
              fontSize: "14px",
              color: "#000",
              textAlign: "center"
            }
          }
        });
        return React__default.createElement("div", null, React__default.createElement("div", { style: styles2.label }, "new"), React__default.createElement("div", { style: styles2.swatches }, React__default.createElement("div", { style: styles2.new }), React__default.createElement("div", { style: styles2.current })), React__default.createElement("div", { style: styles2.label }, "current"));
      };
      var _createClass = function() {
        function defineProperties(target, props) {
          for (var i22 = 0; i22 < props.length; i22++) {
            var descriptor = props[i22];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor)
              descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }
        return function(Constructor, protoProps, staticProps) {
          if (protoProps)
            defineProperties(Constructor.prototype, protoProps);
          if (staticProps)
            defineProperties(Constructor, staticProps);
          return Constructor;
        };
      }();
      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }
      function _possibleConstructorReturn(self2, call) {
        if (!self2) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self2;
      }
      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
        if (superClass)
          Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }
      var Photoshop = function(_React$Component) {
        _inherits(Photoshop2, _React$Component);
        function Photoshop2(props) {
          _classCallCheck(this, Photoshop2);
          var _this = _possibleConstructorReturn(this, (Photoshop2.__proto__ || Object.getPrototypeOf(Photoshop2)).call(this));
          _this.state = {
            currentColor: props.hex
          };
          return _this;
        }
        _createClass(Photoshop2, [{
          key: "render",
          value: function render2() {
            var _props = this.props, _props$styles = _props.styles, passedStyles = _props$styles === void 0 ? {} : _props$styles, _props$className = _props.className, className = _props$className === void 0 ? "" : _props$className;
            var styles2 = _default$3(merge$1({
              "default": {
                picker: {
                  background: "#DCDCDC",
                  borderRadius: "4px",
                  boxShadow: "0 0 0 1px rgba(0,0,0,.25), 0 8px 16px rgba(0,0,0,.15)",
                  boxSizing: "initial",
                  width: "513px"
                },
                head: {
                  backgroundImage: "linear-gradient(-180deg, #F0F0F0 0%, #D4D4D4 100%)",
                  borderBottom: "1px solid #B1B1B1",
                  boxShadow: "inset 0 1px 0 0 rgba(255,255,255,.2), inset 0 -1px 0 0 rgba(0,0,0,.02)",
                  height: "23px",
                  lineHeight: "24px",
                  borderRadius: "4px 4px 0 0",
                  fontSize: "13px",
                  color: "#4D4D4D",
                  textAlign: "center"
                },
                body: {
                  padding: "15px 15px 0",
                  display: "flex"
                },
                saturation: {
                  width: "256px",
                  height: "256px",
                  position: "relative",
                  border: "2px solid #B3B3B3",
                  borderBottom: "2px solid #F0F0F0",
                  overflow: "hidden"
                },
                hue: {
                  position: "relative",
                  height: "256px",
                  width: "19px",
                  marginLeft: "10px",
                  border: "2px solid #B3B3B3",
                  borderBottom: "2px solid #F0F0F0"
                },
                controls: {
                  width: "180px",
                  marginLeft: "10px"
                },
                top: {
                  display: "flex"
                },
                previews: {
                  width: "60px"
                },
                actions: {
                  flex: "1",
                  marginLeft: "20px"
                }
              }
            }, passedStyles));
            return React__default.createElement("div", { style: styles2.picker, className: "photoshop-picker " + className }, React__default.createElement("div", { style: styles2.head }, this.props.header), React__default.createElement("div", { style: styles2.body, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.saturation }, React__default.createElement(Saturation, {
              hsl: this.props.hsl,
              hsv: this.props.hsv,
              pointer: PhotoshopPointerCircle$1,
              onChange: this.props.onChange
            })), React__default.createElement("div", { style: styles2.hue }, React__default.createElement(Hue, {
              direction: "vertical",
              hsl: this.props.hsl,
              pointer: PhotoshopPointerCircle,
              onChange: this.props.onChange
            })), React__default.createElement("div", { style: styles2.controls }, React__default.createElement("div", { style: styles2.top, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.previews }, React__default.createElement(PhotoshopPreviews, {
              rgb: this.props.rgb,
              currentColor: this.state.currentColor
            })), React__default.createElement("div", { style: styles2.actions }, React__default.createElement(PhotoshopButton, { label: "OK", onClick: this.props.onAccept, active: true }), React__default.createElement(PhotoshopButton, { label: "Cancel", onClick: this.props.onCancel }), React__default.createElement(PhotoshopPicker, {
              onChange: this.props.onChange,
              rgb: this.props.rgb,
              hsv: this.props.hsv,
              hex: this.props.hex
            }))))));
          }
        }]);
        return Photoshop2;
      }(React__default.Component);
      Photoshop.propTypes = {
        header: PropTypes$1.string,
        styles: PropTypes$1.object
      };
      Photoshop.defaultProps = {
        header: "Color Picker",
        styles: {}
      };
      ColorWrap(Photoshop);
      var SketchFields = function SketchFields2(_ref) {
        var onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hex = _ref.hex, disableAlpha = _ref.disableAlpha;
        var styles2 = _default$3({
          "default": {
            fields: {
              display: "flex",
              paddingTop: "4px"
            },
            single: {
              flex: "1",
              paddingLeft: "6px"
            },
            alpha: {
              flex: "1",
              paddingLeft: "6px"
            },
            double: {
              flex: "2"
            },
            input: {
              width: "80%",
              padding: "4px 10% 3px",
              border: "none",
              boxShadow: "inset 0 0 0 1px #ccc",
              fontSize: "11px"
            },
            label: {
              display: "block",
              textAlign: "center",
              fontSize: "11px",
              color: "#222",
              paddingTop: "3px",
              paddingBottom: "4px",
              textTransform: "capitalize"
            }
          },
          "disableAlpha": {
            alpha: {
              display: "none"
            }
          }
        }, { disableAlpha });
        var handleChange = function handleChange2(data, e22) {
          if (data.hex) {
            isValidHex(data.hex) && onChange({
              hex: data.hex,
              source: "hex"
            }, e22);
          } else if (data.r || data.g || data.b) {
            onChange({
              r: data.r || rgb.r,
              g: data.g || rgb.g,
              b: data.b || rgb.b,
              a: rgb.a,
              source: "rgb"
            }, e22);
          } else if (data.a) {
            if (data.a < 0) {
              data.a = 0;
            } else if (data.a > 100) {
              data.a = 100;
            }
            data.a /= 100;
            onChange({
              h: hsl.h,
              s: hsl.s,
              l: hsl.l,
              a: data.a,
              source: "rgb"
            }, e22);
          }
        };
        return React__default.createElement("div", { style: styles2.fields, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.double }, React__default.createElement(EditableInput, {
          style: { input: styles2.input, label: styles2.label },
          label: "hex",
          value: hex.replace("#", ""),
          onChange: handleChange
        })), React__default.createElement("div", { style: styles2.single }, React__default.createElement(EditableInput, {
          style: { input: styles2.input, label: styles2.label },
          label: "r",
          value: rgb.r,
          onChange: handleChange,
          dragLabel: "true",
          dragMax: "255"
        })), React__default.createElement("div", { style: styles2.single }, React__default.createElement(EditableInput, {
          style: { input: styles2.input, label: styles2.label },
          label: "g",
          value: rgb.g,
          onChange: handleChange,
          dragLabel: "true",
          dragMax: "255"
        })), React__default.createElement("div", { style: styles2.single }, React__default.createElement(EditableInput, {
          style: { input: styles2.input, label: styles2.label },
          label: "b",
          value: rgb.b,
          onChange: handleChange,
          dragLabel: "true",
          dragMax: "255"
        })), React__default.createElement("div", { style: styles2.alpha }, React__default.createElement(EditableInput, {
          style: { input: styles2.input, label: styles2.label },
          label: "a",
          value: Math.round(rgb.a * 100),
          onChange: handleChange,
          dragLabel: "true",
          dragMax: "100"
        })));
      };
      var _extends$2 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var SketchPresetColors = function SketchPresetColors2(_ref) {
        var colors = _ref.colors, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
        } : _ref$onClick, onSwatchHover = _ref.onSwatchHover;
        var styles2 = _default$3({
          "default": {
            colors: {
              margin: "0 -10px",
              padding: "10px 0 0 10px",
              borderTop: "1px solid #eee",
              display: "flex",
              flexWrap: "wrap",
              position: "relative"
            },
            swatchWrap: {
              width: "16px",
              height: "16px",
              margin: "0 10px 10px 0"
            },
            swatch: {
              borderRadius: "3px",
              boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)"
            }
          },
          "no-presets": {
            colors: {
              display: "none"
            }
          }
        }, {
          "no-presets": !colors || !colors.length
        });
        var handleClick = function handleClick2(hex, e22) {
          onClick({
            hex,
            source: "hex"
          }, e22);
        };
        return React__default.createElement("div", { style: styles2.colors, className: "flexbox-fix" }, colors.map(function(colorObjOrString) {
          var c22 = typeof colorObjOrString === "string" ? { color: colorObjOrString } : colorObjOrString;
          var key = "" + c22.color + (c22.title || "");
          return React__default.createElement("div", { key, style: styles2.swatchWrap }, React__default.createElement(Swatch$1, _extends$2({}, c22, {
            style: styles2.swatch,
            onClick: handleClick,
            onHover: onSwatchHover,
            focusStyle: {
              boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px " + c22.color
            }
          })));
        }));
      };
      SketchPresetColors.propTypes = {
        colors: PropTypes$1.arrayOf(PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.shape({
          color: PropTypes$1.string,
          title: PropTypes$1.string
        })])).isRequired
      };
      var _extends$1 = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var Sketch = function Sketch2(_ref) {
        var width = _ref.width, rgb = _ref.rgb, hex = _ref.hex, hsv = _ref.hsv, hsl = _ref.hsl, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, disableAlpha = _ref.disableAlpha, presetColors = _ref.presetColors, renderers = _ref.renderers, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": _extends$1({
            picker: {
              width,
              padding: "10px 10px 0",
              boxSizing: "initial",
              background: "#fff",
              borderRadius: "4px",
              boxShadow: "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)"
            },
            saturation: {
              width: "100%",
              paddingBottom: "75%",
              position: "relative",
              overflow: "hidden"
            },
            Saturation: {
              radius: "3px",
              shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
            },
            controls: {
              display: "flex"
            },
            sliders: {
              padding: "4px 0",
              flex: "1"
            },
            color: {
              width: "24px",
              height: "24px",
              position: "relative",
              marginTop: "4px",
              marginLeft: "4px",
              borderRadius: "3px"
            },
            activeColor: {
              absolute: "0px 0px 0px 0px",
              borderRadius: "2px",
              background: "rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + "," + rgb.a + ")",
              boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
            },
            hue: {
              position: "relative",
              height: "10px",
              overflow: "hidden"
            },
            Hue: {
              radius: "2px",
              shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
            },
            alpha: {
              position: "relative",
              height: "10px",
              marginTop: "4px",
              overflow: "hidden"
            },
            Alpha: {
              radius: "2px",
              shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)"
            }
          }, passedStyles),
          "disableAlpha": {
            color: {
              height: "10px"
            },
            hue: {
              height: "10px"
            },
            alpha: {
              display: "none"
            }
          }
        }, passedStyles), { disableAlpha });
        return React__default.createElement("div", { style: styles2.picker, className: "sketch-picker " + className }, React__default.createElement("div", { style: styles2.saturation }, React__default.createElement(Saturation, {
          style: styles2.Saturation,
          hsl,
          hsv,
          onChange
        })), React__default.createElement("div", { style: styles2.controls, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.sliders }, React__default.createElement("div", { style: styles2.hue }, React__default.createElement(Hue, {
          style: styles2.Hue,
          hsl,
          onChange
        })), React__default.createElement("div", { style: styles2.alpha }, React__default.createElement(Alpha, {
          style: styles2.Alpha,
          rgb,
          hsl,
          renderers,
          onChange
        }))), React__default.createElement("div", { style: styles2.color }, React__default.createElement(Checkboard, null), React__default.createElement("div", { style: styles2.activeColor }))), React__default.createElement(SketchFields, {
          rgb,
          hsl,
          hex,
          onChange,
          disableAlpha
        }), React__default.createElement(SketchPresetColors, {
          colors: presetColors,
          onClick: onChange,
          onSwatchHover
        }));
      };
      Sketch.propTypes = {
        disableAlpha: PropTypes$1.bool,
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        styles: PropTypes$1.object
      };
      Sketch.defaultProps = {
        disableAlpha: false,
        width: 200,
        styles: {},
        presetColors: ["#D0021B", "#F5A623", "#F8E71C", "#8B572A", "#7ED321", "#417505", "#BD10E0", "#9013FE", "#4A90E2", "#50E3C2", "#B8E986", "#000000", "#4A4A4A", "#9B9B9B", "#FFFFFF"]
      };
      ColorWrap(Sketch);
      var SliderSwatch = function SliderSwatch2(_ref) {
        var hsl = _ref.hsl, offset2 = _ref.offset, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
        } : _ref$onClick, active2 = _ref.active, first = _ref.first, last2 = _ref.last;
        var styles2 = _default$3({
          "default": {
            swatch: {
              height: "12px",
              background: "hsl(" + hsl.h + ", 50%, " + offset2 * 100 + "%)",
              cursor: "pointer"
            }
          },
          "first": {
            swatch: {
              borderRadius: "2px 0 0 2px"
            }
          },
          "last": {
            swatch: {
              borderRadius: "0 2px 2px 0"
            }
          },
          "active": {
            swatch: {
              transform: "scaleY(1.8)",
              borderRadius: "3.6px/2px"
            }
          }
        }, { active: active2, first, last: last2 });
        var handleClick = function handleClick2(e22) {
          return onClick({
            h: hsl.h,
            s: 0.5,
            l: offset2,
            source: "hsl"
          }, e22);
        };
        return React__default.createElement("div", { style: styles2.swatch, onClick: handleClick });
      };
      var SliderSwatches = function SliderSwatches2(_ref) {
        var onClick = _ref.onClick, hsl = _ref.hsl;
        var styles2 = _default$3({
          "default": {
            swatches: {
              marginTop: "20px"
            },
            swatch: {
              boxSizing: "border-box",
              width: "20%",
              paddingRight: "1px",
              float: "left"
            },
            clear: {
              clear: "both"
            }
          }
        });
        var epsilon = 0.1;
        return React__default.createElement("div", { style: styles2.swatches }, React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(SliderSwatch, {
          hsl,
          offset: ".80",
          active: Math.abs(hsl.l - 0.8) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
          onClick,
          first: true
        })), React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(SliderSwatch, {
          hsl,
          offset: ".65",
          active: Math.abs(hsl.l - 0.65) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
          onClick
        })), React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(SliderSwatch, {
          hsl,
          offset: ".50",
          active: Math.abs(hsl.l - 0.5) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
          onClick
        })), React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(SliderSwatch, {
          hsl,
          offset: ".35",
          active: Math.abs(hsl.l - 0.35) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
          onClick
        })), React__default.createElement("div", { style: styles2.swatch }, React__default.createElement(SliderSwatch, {
          hsl,
          offset: ".20",
          active: Math.abs(hsl.l - 0.2) < epsilon && Math.abs(hsl.s - 0.5) < epsilon,
          onClick,
          last: true
        })), React__default.createElement("div", { style: styles2.clear }));
      };
      var SliderPointer = function SliderPointer2() {
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "14px",
              height: "14px",
              borderRadius: "6px",
              transform: "translate(-7px, -1px)",
              backgroundColor: "rgb(248, 248, 248)",
              boxShadow: "0 1px 4px 0 rgba(0, 0, 0, 0.37)"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.picker });
      };
      var Slider = function Slider2(_ref) {
        var hsl = _ref.hsl, onChange = _ref.onChange, pointer = _ref.pointer, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            hue: {
              height: "12px",
              position: "relative"
            },
            Hue: {
              radius: "2px"
            }
          }
        }, passedStyles));
        return React__default.createElement("div", { style: styles2.wrap || {}, className: "slider-picker " + className }, React__default.createElement("div", { style: styles2.hue }, React__default.createElement(Hue, {
          style: styles2.Hue,
          hsl,
          pointer,
          onChange
        })), React__default.createElement("div", { style: styles2.swatches }, React__default.createElement(SliderSwatches, { hsl, onClick: onChange })));
      };
      Slider.propTypes = {
        styles: PropTypes$1.object
      };
      Slider.defaultProps = {
        pointer: SliderPointer,
        styles: {}
      };
      ColorWrap(Slider);
      var CheckIcon2 = {};
      Object.defineProperty(CheckIcon2, "__esModule", {
        value: true
      });
      var _extends = Object.assign || function(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      var _react = react.exports;
      var _react2 = _interopRequireDefault(_react);
      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }
      function _objectWithoutProperties$1(obj, keys2) {
        var target = {};
        for (var i22 in obj) {
          if (keys2.indexOf(i22) >= 0)
            continue;
          if (!Object.prototype.hasOwnProperty.call(obj, i22))
            continue;
          target[i22] = obj[i22];
        }
        return target;
      }
      var DEFAULT_SIZE = 24;
      var _default$1 = CheckIcon2.default = function(_ref) {
        var _ref$fill = _ref.fill, fill = _ref$fill === void 0 ? "currentColor" : _ref$fill, _ref$width = _ref.width, width = _ref$width === void 0 ? DEFAULT_SIZE : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? DEFAULT_SIZE : _ref$height, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style, props = _objectWithoutProperties$1(_ref, ["fill", "width", "height", "style"]);
        return _react2.default.createElement("svg", _extends({
          viewBox: "0 0 " + DEFAULT_SIZE + " " + DEFAULT_SIZE,
          style: _extends({ fill, width, height }, style)
        }, props), _react2.default.createElement("path", { d: "M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" }));
      };
      var SwatchesColor = function SwatchesColor2(_ref) {
        var color = _ref.color, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
        } : _ref$onClick, onSwatchHover = _ref.onSwatchHover, first = _ref.first, last2 = _ref.last, active2 = _ref.active;
        var styles2 = _default$3({
          "default": {
            color: {
              width: "40px",
              height: "24px",
              cursor: "pointer",
              background: color,
              marginBottom: "1px"
            },
            check: {
              color: getContrastingColor(color),
              marginLeft: "8px",
              display: "none"
            }
          },
          "first": {
            color: {
              overflow: "hidden",
              borderRadius: "2px 2px 0 0"
            }
          },
          "last": {
            color: {
              overflow: "hidden",
              borderRadius: "0 0 2px 2px"
            }
          },
          "active": {
            check: {
              display: "block"
            }
          },
          "color-#FFFFFF": {
            color: {
              boxShadow: "inset 0 0 0 1px #ddd"
            },
            check: {
              color: "#333"
            }
          },
          "transparent": {
            check: {
              color: "#333"
            }
          }
        }, {
          first,
          last: last2,
          active: active2,
          "color-#FFFFFF": color === "#FFFFFF",
          "transparent": color === "transparent"
        });
        return React__default.createElement(Swatch$1, {
          color,
          style: styles2.color,
          onClick,
          onHover: onSwatchHover,
          focusStyle: { boxShadow: "0 0 4px " + color }
        }, React__default.createElement("div", { style: styles2.check }, React__default.createElement(_default$1, null)));
      };
      var SwatchesGroup = function SwatchesGroup2(_ref) {
        var onClick = _ref.onClick, onSwatchHover = _ref.onSwatchHover, group = _ref.group, active2 = _ref.active;
        var styles2 = _default$3({
          "default": {
            group: {
              paddingBottom: "10px",
              width: "40px",
              float: "left",
              marginRight: "10px"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.group }, map$1(group, function(color, i22) {
          return React__default.createElement(SwatchesColor, {
            key: color,
            color,
            active: color.toLowerCase() === active2,
            first: i22 === 0,
            last: i22 === group.length - 1,
            onClick,
            onSwatchHover
          });
        }));
      };
      var Swatches = function Swatches2(_ref) {
        var width = _ref.width, height = _ref.height, onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, colors = _ref.colors, hex = _ref.hex, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            picker: {
              width,
              height
            },
            overflow: {
              height,
              overflowY: "scroll"
            },
            body: {
              padding: "16px 0 6px 16px"
            },
            clear: {
              clear: "both"
            }
          }
        }, passedStyles));
        var handleChange = function handleChange2(data, e22) {
          return onChange({ hex: data, source: "hex" }, e22);
        };
        return React__default.createElement("div", { style: styles2.picker, className: "swatches-picker " + className }, React__default.createElement(Raised, null, React__default.createElement("div", { style: styles2.overflow }, React__default.createElement("div", { style: styles2.body }, map$1(colors, function(group) {
          return React__default.createElement(SwatchesGroup, {
            key: group.toString(),
            group,
            active: hex,
            onClick: handleChange,
            onSwatchHover
          });
        }), React__default.createElement("div", { style: styles2.clear })))));
      };
      Swatches.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        height: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        colors: PropTypes$1.arrayOf(PropTypes$1.arrayOf(PropTypes$1.string)),
        styles: PropTypes$1.object
      };
      Swatches.defaultProps = {
        width: 320,
        height: 240,
        colors: [[red["900"], red["700"], red["500"], red["300"], red["100"]], [pink["900"], pink["700"], pink["500"], pink["300"], pink["100"]], [purple["900"], purple["700"], purple["500"], purple["300"], purple["100"]], [deepPurple["900"], deepPurple["700"], deepPurple["500"], deepPurple["300"], deepPurple["100"]], [indigo["900"], indigo["700"], indigo["500"], indigo["300"], indigo["100"]], [blue["900"], blue["700"], blue["500"], blue["300"], blue["100"]], [lightBlue["900"], lightBlue["700"], lightBlue["500"], lightBlue["300"], lightBlue["100"]], [cyan["900"], cyan["700"], cyan["500"], cyan["300"], cyan["100"]], [teal["900"], teal["700"], teal["500"], teal["300"], teal["100"]], ["#194D33", green["700"], green["500"], green["300"], green["100"]], [lightGreen["900"], lightGreen["700"], lightGreen["500"], lightGreen["300"], lightGreen["100"]], [lime["900"], lime["700"], lime["500"], lime["300"], lime["100"]], [yellow["900"], yellow["700"], yellow["500"], yellow["300"], yellow["100"]], [amber["900"], amber["700"], amber["500"], amber["300"], amber["100"]], [orange["900"], orange["700"], orange["500"], orange["300"], orange["100"]], [deepOrange["900"], deepOrange["700"], deepOrange["500"], deepOrange["300"], deepOrange["100"]], [brown["900"], brown["700"], brown["500"], brown["300"], brown["100"]], [blueGrey["900"], blueGrey["700"], blueGrey["500"], blueGrey["300"], blueGrey["100"]], ["#000000", "#525252", "#969696", "#D9D9D9", "#FFFFFF"]],
        styles: {}
      };
      ColorWrap(Swatches);
      var Twitter = function Twitter2(_ref) {
        var onChange = _ref.onChange, onSwatchHover = _ref.onSwatchHover, hex = _ref.hex, colors = _ref.colors, width = _ref.width, triangle = _ref.triangle, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            card: {
              width,
              background: "#fff",
              border: "0 solid rgba(0,0,0,0.25)",
              boxShadow: "0 1px 4px rgba(0,0,0,0.25)",
              borderRadius: "4px",
              position: "relative"
            },
            body: {
              padding: "15px 9px 9px 15px"
            },
            label: {
              fontSize: "18px",
              color: "#fff"
            },
            triangle: {
              width: "0px",
              height: "0px",
              borderStyle: "solid",
              borderWidth: "0 9px 10px 9px",
              borderColor: "transparent transparent #fff transparent",
              position: "absolute"
            },
            triangleShadow: {
              width: "0px",
              height: "0px",
              borderStyle: "solid",
              borderWidth: "0 9px 10px 9px",
              borderColor: "transparent transparent rgba(0,0,0,.1) transparent",
              position: "absolute"
            },
            hash: {
              background: "#F0F0F0",
              height: "30px",
              width: "30px",
              borderRadius: "4px 0 0 4px",
              float: "left",
              color: "#98A1A4",
              display: "flex",
              alignItems: "center",
              justifyContent: "center"
            },
            input: {
              width: "100px",
              fontSize: "14px",
              color: "#666",
              border: "0px",
              outline: "none",
              height: "28px",
              boxShadow: "inset 0 0 0 1px #F0F0F0",
              boxSizing: "content-box",
              borderRadius: "0 4px 4px 0",
              float: "left",
              paddingLeft: "8px"
            },
            swatch: {
              width: "30px",
              height: "30px",
              float: "left",
              borderRadius: "4px",
              margin: "0 6px 6px 0"
            },
            clear: {
              clear: "both"
            }
          },
          "hide-triangle": {
            triangle: {
              display: "none"
            },
            triangleShadow: {
              display: "none"
            }
          },
          "top-left-triangle": {
            triangle: {
              top: "-10px",
              left: "12px"
            },
            triangleShadow: {
              top: "-11px",
              left: "12px"
            }
          },
          "top-right-triangle": {
            triangle: {
              top: "-10px",
              right: "12px"
            },
            triangleShadow: {
              top: "-11px",
              right: "12px"
            }
          }
        }, passedStyles), {
          "hide-triangle": triangle === "hide",
          "top-left-triangle": triangle === "top-left",
          "top-right-triangle": triangle === "top-right"
        });
        var handleChange = function handleChange2(hexcode, e22) {
          isValidHex(hexcode) && onChange({
            hex: hexcode,
            source: "hex"
          }, e22);
        };
        return React__default.createElement("div", { style: styles2.card, className: "twitter-picker " + className }, React__default.createElement("div", { style: styles2.triangleShadow }), React__default.createElement("div", { style: styles2.triangle }), React__default.createElement("div", { style: styles2.body }, map$1(colors, function(c22, i22) {
          return React__default.createElement(Swatch$1, {
            key: i22,
            color: c22,
            hex: c22,
            style: styles2.swatch,
            onClick: handleChange,
            onHover: onSwatchHover,
            focusStyle: {
              boxShadow: "0 0 4px " + c22
            }
          });
        }), React__default.createElement("div", { style: styles2.hash }, "#"), React__default.createElement(EditableInput, {
          label: null,
          style: { input: styles2.input },
          value: hex.replace("#", ""),
          onChange: handleChange
        }), React__default.createElement("div", { style: styles2.clear })));
      };
      Twitter.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        triangle: PropTypes$1.oneOf(["hide", "top-left", "top-right"]),
        colors: PropTypes$1.arrayOf(PropTypes$1.string),
        styles: PropTypes$1.object
      };
      Twitter.defaultProps = {
        width: 276,
        colors: ["#FF6900", "#FCB900", "#7BDCB5", "#00D084", "#8ED1FC", "#0693E3", "#ABB8C3", "#EB144C", "#F78DA7", "#9900EF"],
        triangle: "top-left",
        styles: {}
      };
      ColorWrap(Twitter);
      var GooglePointerCircle = function GooglePointerCircle2(props) {
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "20px",
              height: "20px",
              borderRadius: "22px",
              border: "2px #fff solid",
              transform: "translate(-12px, -13px)",
              background: "hsl(" + Math.round(props.hsl.h) + ", " + Math.round(props.hsl.s * 100) + "%, " + Math.round(props.hsl.l * 100) + "%)"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.picker });
      };
      GooglePointerCircle.propTypes = {
        hsl: PropTypes$1.shape({
          h: PropTypes$1.number,
          s: PropTypes$1.number,
          l: PropTypes$1.number,
          a: PropTypes$1.number
        })
      };
      GooglePointerCircle.defaultProps = {
        hsl: { a: 1, h: 249.94, l: 0.2, s: 0.5 }
      };
      var GooglePointer = function GooglePointer2(props) {
        var styles2 = _default$3({
          "default": {
            picker: {
              width: "20px",
              height: "20px",
              borderRadius: "22px",
              transform: "translate(-10px, -7px)",
              background: "hsl(" + Math.round(props.hsl.h) + ", 100%, 50%)",
              border: "2px white solid"
            }
          }
        });
        return React__default.createElement("div", { style: styles2.picker });
      };
      GooglePointer.propTypes = {
        hsl: PropTypes$1.shape({
          h: PropTypes$1.number,
          s: PropTypes$1.number,
          l: PropTypes$1.number,
          a: PropTypes$1.number
        })
      };
      GooglePointer.defaultProps = {
        hsl: { a: 1, h: 249.94, l: 0.2, s: 0.5 }
      };
      var GoogleFields = function GoogleFields2(_ref) {
        var onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hex = _ref.hex, hsv = _ref.hsv;
        var handleChange = function handleChange2(data, e22) {
          if (data.hex) {
            isValidHex(data.hex) && onChange({
              hex: data.hex,
              source: "hex"
            }, e22);
          } else if (data.rgb) {
            var values2 = data.rgb.split(",");
            isvalidColorString(data.rgb, "rgb") && onChange({
              r: values2[0],
              g: values2[1],
              b: values2[2],
              a: 1,
              source: "rgb"
            }, e22);
          } else if (data.hsv) {
            var _values = data.hsv.split(",");
            if (isvalidColorString(data.hsv, "hsv")) {
              _values[2] = _values[2].replace("%", "");
              _values[1] = _values[1].replace("%", "");
              _values[0] = _values[0].replace("\xB0", "");
              if (_values[1] == 1) {
                _values[1] = 0.01;
              } else if (_values[2] == 1) {
                _values[2] = 0.01;
              }
              onChange({
                h: Number(_values[0]),
                s: Number(_values[1]),
                v: Number(_values[2]),
                source: "hsv"
              }, e22);
            }
          } else if (data.hsl) {
            var _values2 = data.hsl.split(",");
            if (isvalidColorString(data.hsl, "hsl")) {
              _values2[2] = _values2[2].replace("%", "");
              _values2[1] = _values2[1].replace("%", "");
              _values2[0] = _values2[0].replace("\xB0", "");
              if (hsvValue[1] == 1) {
                hsvValue[1] = 0.01;
              } else if (hsvValue[2] == 1) {
                hsvValue[2] = 0.01;
              }
              onChange({
                h: Number(_values2[0]),
                s: Number(_values2[1]),
                v: Number(_values2[2]),
                source: "hsl"
              }, e22);
            }
          }
        };
        var styles2 = _default$3({
          "default": {
            wrap: {
              display: "flex",
              height: "100px",
              marginTop: "4px"
            },
            fields: {
              width: "100%"
            },
            column: {
              paddingTop: "10px",
              display: "flex",
              justifyContent: "space-between"
            },
            double: {
              padding: "0px 4.4px",
              boxSizing: "border-box"
            },
            input: {
              width: "100%",
              height: "38px",
              boxSizing: "border-box",
              padding: "4px 10% 3px",
              textAlign: "center",
              border: "1px solid #dadce0",
              fontSize: "11px",
              textTransform: "lowercase",
              borderRadius: "5px",
              outline: "none",
              fontFamily: "Roboto,Arial,sans-serif"
            },
            input2: {
              height: "38px",
              width: "100%",
              border: "1px solid #dadce0",
              boxSizing: "border-box",
              fontSize: "11px",
              textTransform: "lowercase",
              borderRadius: "5px",
              outline: "none",
              paddingLeft: "10px",
              fontFamily: "Roboto,Arial,sans-serif"
            },
            label: {
              textAlign: "center",
              fontSize: "12px",
              background: "#fff",
              position: "absolute",
              textTransform: "uppercase",
              color: "#3c4043",
              width: "35px",
              top: "-6px",
              left: "0",
              right: "0",
              marginLeft: "auto",
              marginRight: "auto",
              fontFamily: "Roboto,Arial,sans-serif"
            },
            label2: {
              left: "10px",
              textAlign: "center",
              fontSize: "12px",
              background: "#fff",
              position: "absolute",
              textTransform: "uppercase",
              color: "#3c4043",
              width: "32px",
              top: "-6px",
              fontFamily: "Roboto,Arial,sans-serif"
            },
            single: {
              flexGrow: "1",
              margin: "0px 4.4px"
            }
          }
        });
        var rgbValue = rgb.r + ", " + rgb.g + ", " + rgb.b;
        var hslValue = Math.round(hsl.h) + "\xB0, " + Math.round(hsl.s * 100) + "%, " + Math.round(hsl.l * 100) + "%";
        var hsvValue = Math.round(hsv.h) + "\xB0, " + Math.round(hsv.s * 100) + "%, " + Math.round(hsv.v * 100) + "%";
        return React__default.createElement("div", { style: styles2.wrap, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.fields }, React__default.createElement("div", { style: styles2.double }, React__default.createElement(EditableInput, {
          style: { input: styles2.input, label: styles2.label },
          label: "hex",
          value: hex,
          onChange: handleChange
        })), React__default.createElement("div", { style: styles2.column }, React__default.createElement("div", { style: styles2.single }, React__default.createElement(EditableInput, {
          style: { input: styles2.input2, label: styles2.label2 },
          label: "rgb",
          value: rgbValue,
          onChange: handleChange
        })), React__default.createElement("div", { style: styles2.single }, React__default.createElement(EditableInput, {
          style: { input: styles2.input2, label: styles2.label2 },
          label: "hsv",
          value: hsvValue,
          onChange: handleChange
        })), React__default.createElement("div", { style: styles2.single }, React__default.createElement(EditableInput, {
          style: { input: styles2.input2, label: styles2.label2 },
          label: "hsl",
          value: hslValue,
          onChange: handleChange
        })))));
      };
      var Google = function Google2(_ref) {
        var width = _ref.width, onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hsv = _ref.hsv, hex = _ref.hex, header = _ref.header, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className;
        var styles2 = _default$3(merge$1({
          "default": {
            picker: {
              width,
              background: "#fff",
              border: "1px solid #dfe1e5",
              boxSizing: "initial",
              display: "flex",
              flexWrap: "wrap",
              borderRadius: "8px 8px 0px 0px"
            },
            head: {
              height: "57px",
              width: "100%",
              paddingTop: "16px",
              paddingBottom: "16px",
              paddingLeft: "16px",
              fontSize: "20px",
              boxSizing: "border-box",
              fontFamily: "Roboto-Regular,HelveticaNeue,Arial,sans-serif"
            },
            saturation: {
              width: "70%",
              padding: "0px",
              position: "relative",
              overflow: "hidden"
            },
            swatch: {
              width: "30%",
              height: "228px",
              padding: "0px",
              background: "rgba(" + rgb.r + ", " + rgb.g + ", " + rgb.b + ", 1)",
              position: "relative",
              overflow: "hidden"
            },
            body: {
              margin: "auto",
              width: "95%"
            },
            controls: {
              display: "flex",
              boxSizing: "border-box",
              height: "52px",
              paddingTop: "22px"
            },
            color: {
              width: "32px"
            },
            hue: {
              height: "8px",
              position: "relative",
              margin: "0px 16px 0px 16px",
              width: "100%"
            },
            Hue: {
              radius: "2px"
            }
          }
        }, passedStyles));
        return React__default.createElement("div", { style: styles2.picker, className: "google-picker " + className }, React__default.createElement("div", { style: styles2.head }, header), React__default.createElement("div", { style: styles2.swatch }), React__default.createElement("div", { style: styles2.saturation }, React__default.createElement(Saturation, {
          hsl,
          hsv,
          pointer: GooglePointerCircle,
          onChange
        })), React__default.createElement("div", { style: styles2.body }, React__default.createElement("div", { style: styles2.controls, className: "flexbox-fix" }, React__default.createElement("div", { style: styles2.hue }, React__default.createElement(Hue, {
          style: styles2.Hue,
          hsl,
          radius: "4px",
          pointer: GooglePointer,
          onChange
        }))), React__default.createElement(GoogleFields, {
          rgb,
          hsl,
          hex,
          hsv,
          onChange
        })));
      };
      Google.propTypes = {
        width: PropTypes$1.oneOfType([PropTypes$1.string, PropTypes$1.number]),
        styles: PropTypes$1.object,
        header: PropTypes$1.string
      };
      Google.defaultProps = {
        width: 652,
        styles: {},
        header: "Color picker"
      };
      ColorWrap(Google);
      var colorName = {
        "aliceblue": [240, 248, 255],
        "antiquewhite": [250, 235, 215],
        "aqua": [0, 255, 255],
        "aquamarine": [127, 255, 212],
        "azure": [240, 255, 255],
        "beige": [245, 245, 220],
        "bisque": [255, 228, 196],
        "black": [0, 0, 0],
        "blanchedalmond": [255, 235, 205],
        "blue": [0, 0, 255],
        "blueviolet": [138, 43, 226],
        "brown": [165, 42, 42],
        "burlywood": [222, 184, 135],
        "cadetblue": [95, 158, 160],
        "chartreuse": [127, 255, 0],
        "chocolate": [210, 105, 30],
        "coral": [255, 127, 80],
        "cornflowerblue": [100, 149, 237],
        "cornsilk": [255, 248, 220],
        "crimson": [220, 20, 60],
        "cyan": [0, 255, 255],
        "darkblue": [0, 0, 139],
        "darkcyan": [0, 139, 139],
        "darkgoldenrod": [184, 134, 11],
        "darkgray": [169, 169, 169],
        "darkgreen": [0, 100, 0],
        "darkgrey": [169, 169, 169],
        "darkkhaki": [189, 183, 107],
        "darkmagenta": [139, 0, 139],
        "darkolivegreen": [85, 107, 47],
        "darkorange": [255, 140, 0],
        "darkorchid": [153, 50, 204],
        "darkred": [139, 0, 0],
        "darksalmon": [233, 150, 122],
        "darkseagreen": [143, 188, 143],
        "darkslateblue": [72, 61, 139],
        "darkslategray": [47, 79, 79],
        "darkslategrey": [47, 79, 79],
        "darkturquoise": [0, 206, 209],
        "darkviolet": [148, 0, 211],
        "deeppink": [255, 20, 147],
        "deepskyblue": [0, 191, 255],
        "dimgray": [105, 105, 105],
        "dimgrey": [105, 105, 105],
        "dodgerblue": [30, 144, 255],
        "firebrick": [178, 34, 34],
        "floralwhite": [255, 250, 240],
        "forestgreen": [34, 139, 34],
        "fuchsia": [255, 0, 255],
        "gainsboro": [220, 220, 220],
        "ghostwhite": [248, 248, 255],
        "gold": [255, 215, 0],
        "goldenrod": [218, 165, 32],
        "gray": [128, 128, 128],
        "green": [0, 128, 0],
        "greenyellow": [173, 255, 47],
        "grey": [128, 128, 128],
        "honeydew": [240, 255, 240],
        "hotpink": [255, 105, 180],
        "indianred": [205, 92, 92],
        "indigo": [75, 0, 130],
        "ivory": [255, 255, 240],
        "khaki": [240, 230, 140],
        "lavender": [230, 230, 250],
        "lavenderblush": [255, 240, 245],
        "lawngreen": [124, 252, 0],
        "lemonchiffon": [255, 250, 205],
        "lightblue": [173, 216, 230],
        "lightcoral": [240, 128, 128],
        "lightcyan": [224, 255, 255],
        "lightgoldenrodyellow": [250, 250, 210],
        "lightgray": [211, 211, 211],
        "lightgreen": [144, 238, 144],
        "lightgrey": [211, 211, 211],
        "lightpink": [255, 182, 193],
        "lightsalmon": [255, 160, 122],
        "lightseagreen": [32, 178, 170],
        "lightskyblue": [135, 206, 250],
        "lightslategray": [119, 136, 153],
        "lightslategrey": [119, 136, 153],
        "lightsteelblue": [176, 196, 222],
        "lightyellow": [255, 255, 224],
        "lime": [0, 255, 0],
        "limegreen": [50, 205, 50],
        "linen": [250, 240, 230],
        "magenta": [255, 0, 255],
        "maroon": [128, 0, 0],
        "mediumaquamarine": [102, 205, 170],
        "mediumblue": [0, 0, 205],
        "mediumorchid": [186, 85, 211],
        "mediumpurple": [147, 112, 219],
        "mediumseagreen": [60, 179, 113],
        "mediumslateblue": [123, 104, 238],
        "mediumspringgreen": [0, 250, 154],
        "mediumturquoise": [72, 209, 204],
        "mediumvioletred": [199, 21, 133],
        "midnightblue": [25, 25, 112],
        "mintcream": [245, 255, 250],
        "mistyrose": [255, 228, 225],
        "moccasin": [255, 228, 181],
        "navajowhite": [255, 222, 173],
        "navy": [0, 0, 128],
        "oldlace": [253, 245, 230],
        "olive": [128, 128, 0],
        "olivedrab": [107, 142, 35],
        "orange": [255, 165, 0],
        "orangered": [255, 69, 0],
        "orchid": [218, 112, 214],
        "palegoldenrod": [238, 232, 170],
        "palegreen": [152, 251, 152],
        "paleturquoise": [175, 238, 238],
        "palevioletred": [219, 112, 147],
        "papayawhip": [255, 239, 213],
        "peachpuff": [255, 218, 185],
        "peru": [205, 133, 63],
        "pink": [255, 192, 203],
        "plum": [221, 160, 221],
        "powderblue": [176, 224, 230],
        "purple": [128, 0, 128],
        "rebeccapurple": [102, 51, 153],
        "red": [255, 0, 0],
        "rosybrown": [188, 143, 143],
        "royalblue": [65, 105, 225],
        "saddlebrown": [139, 69, 19],
        "salmon": [250, 128, 114],
        "sandybrown": [244, 164, 96],
        "seagreen": [46, 139, 87],
        "seashell": [255, 245, 238],
        "sienna": [160, 82, 45],
        "silver": [192, 192, 192],
        "skyblue": [135, 206, 235],
        "slateblue": [106, 90, 205],
        "slategray": [112, 128, 144],
        "slategrey": [112, 128, 144],
        "snow": [255, 250, 250],
        "springgreen": [0, 255, 127],
        "steelblue": [70, 130, 180],
        "tan": [210, 180, 140],
        "teal": [0, 128, 128],
        "thistle": [216, 191, 216],
        "tomato": [255, 99, 71],
        "turquoise": [64, 224, 208],
        "violet": [238, 130, 238],
        "wheat": [245, 222, 179],
        "white": [255, 255, 255],
        "whitesmoke": [245, 245, 245],
        "yellow": [255, 255, 0],
        "yellowgreen": [154, 205, 50]
      };
      var simpleSwizzle = { exports: {} };
      var isArrayish$1 = function isArrayish2(obj) {
        if (!obj || typeof obj === "string") {
          return false;
        }
        return obj instanceof Array || Array.isArray(obj) || obj.length >= 0 && (obj.splice instanceof Function || Object.getOwnPropertyDescriptor(obj, obj.length - 1) && obj.constructor.name !== "String");
      };
      var isArrayish = isArrayish$1;
      var concat = Array.prototype.concat;
      var slice = Array.prototype.slice;
      var swizzle$1 = simpleSwizzle.exports = function swizzle2(args) {
        var results = [];
        for (var i22 = 0, len = args.length; i22 < len; i22++) {
          var arg = args[i22];
          if (isArrayish(arg)) {
            results = concat.call(results, slice.call(arg));
          } else {
            results.push(arg);
          }
        }
        return results;
      };
      swizzle$1.wrap = function(fn2) {
        return function() {
          return fn2(swizzle$1(arguments));
        };
      };
      var colorNames = colorName;
      var swizzle = simpleSwizzle.exports;
      var hasOwnProperty = Object.hasOwnProperty;
      var reverseNames = /* @__PURE__ */ Object.create(null);
      for (var name in colorNames) {
        if (hasOwnProperty.call(colorNames, name)) {
          reverseNames[colorNames[name]] = name;
        }
      }
      var cs = {
        to: {},
        get: {}
      };
      cs.get = function(string2) {
        var prefix = string2.substring(0, 3).toLowerCase();
        var val;
        var model;
        switch (prefix) {
          case "hsl":
            val = cs.get.hsl(string2);
            model = "hsl";
            break;
          case "hwb":
            val = cs.get.hwb(string2);
            model = "hwb";
            break;
          default:
            val = cs.get.rgb(string2);
            model = "rgb";
            break;
        }
        if (!val) {
          return null;
        }
        return { model, value: val };
      };
      cs.get.rgb = function(string2) {
        if (!string2) {
          return null;
        }
        var abbr = /^#([a-f0-9]{3,4})$/i;
        var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
        var rgba = /^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
        var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/;
        var keyword = /^(\w+)$/;
        var rgb = [0, 0, 0, 1];
        var match5;
        var i22;
        var hexAlpha;
        if (match5 = string2.match(hex)) {
          hexAlpha = match5[2];
          match5 = match5[1];
          for (i22 = 0; i22 < 3; i22++) {
            var i222 = i22 * 2;
            rgb[i22] = parseInt(match5.slice(i222, i222 + 2), 16);
          }
          if (hexAlpha) {
            rgb[3] = parseInt(hexAlpha, 16) / 255;
          }
        } else if (match5 = string2.match(abbr)) {
          match5 = match5[1];
          hexAlpha = match5[3];
          for (i22 = 0; i22 < 3; i22++) {
            rgb[i22] = parseInt(match5[i22] + match5[i22], 16);
          }
          if (hexAlpha) {
            rgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;
          }
        } else if (match5 = string2.match(rgba)) {
          for (i22 = 0; i22 < 3; i22++) {
            rgb[i22] = parseInt(match5[i22 + 1], 0);
          }
          if (match5[4]) {
            if (match5[5]) {
              rgb[3] = parseFloat(match5[4]) * 0.01;
            } else {
              rgb[3] = parseFloat(match5[4]);
            }
          }
        } else if (match5 = string2.match(per)) {
          for (i22 = 0; i22 < 3; i22++) {
            rgb[i22] = Math.round(parseFloat(match5[i22 + 1]) * 2.55);
          }
          if (match5[4]) {
            if (match5[5]) {
              rgb[3] = parseFloat(match5[4]) * 0.01;
            } else {
              rgb[3] = parseFloat(match5[4]);
            }
          }
        } else if (match5 = string2.match(keyword)) {
          if (match5[1] === "transparent") {
            return [0, 0, 0, 0];
          }
          if (!hasOwnProperty.call(colorNames, match5[1])) {
            return null;
          }
          rgb = colorNames[match5[1]];
          rgb[3] = 1;
          return rgb;
        } else {
          return null;
        }
        for (i22 = 0; i22 < 3; i22++) {
          rgb[i22] = clamp(rgb[i22], 0, 255);
        }
        rgb[3] = clamp(rgb[3], 0, 1);
        return rgb;
      };
      cs.get.hsl = function(string2) {
        if (!string2) {
          return null;
        }
        var hsl = /^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
        var match5 = string2.match(hsl);
        if (match5) {
          var alpha = parseFloat(match5[4]);
          var h22 = (parseFloat(match5[1]) % 360 + 360) % 360;
          var s22 = clamp(parseFloat(match5[2]), 0, 100);
          var l22 = clamp(parseFloat(match5[3]), 0, 100);
          var a22 = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
          return [h22, s22, l22, a22];
        }
        return null;
      };
      cs.get.hwb = function(string2) {
        if (!string2) {
          return null;
        }
        var hwb = /^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/;
        var match5 = string2.match(hwb);
        if (match5) {
          var alpha = parseFloat(match5[4]);
          var h22 = (parseFloat(match5[1]) % 360 + 360) % 360;
          var w22 = clamp(parseFloat(match5[2]), 0, 100);
          var b22 = clamp(parseFloat(match5[3]), 0, 100);
          var a22 = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
          return [h22, w22, b22, a22];
        }
        return null;
      };
      cs.to.hex = function() {
        var rgba = swizzle(arguments);
        return "#" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : "");
      };
      cs.to.rgb = function() {
        var rgba = swizzle(arguments);
        return rgba.length < 4 || rgba[3] === 1 ? "rgb(" + Math.round(rgba[0]) + ", " + Math.round(rgba[1]) + ", " + Math.round(rgba[2]) + ")" : "rgba(" + Math.round(rgba[0]) + ", " + Math.round(rgba[1]) + ", " + Math.round(rgba[2]) + ", " + rgba[3] + ")";
      };
      cs.to.rgb.percent = function() {
        var rgba = swizzle(arguments);
        var r22 = Math.round(rgba[0] / 255 * 100);
        var g22 = Math.round(rgba[1] / 255 * 100);
        var b22 = Math.round(rgba[2] / 255 * 100);
        return rgba.length < 4 || rgba[3] === 1 ? "rgb(" + r22 + "%, " + g22 + "%, " + b22 + "%)" : "rgba(" + r22 + "%, " + g22 + "%, " + b22 + "%, " + rgba[3] + ")";
      };
      cs.to.hsl = function() {
        var hsla = swizzle(arguments);
        return hsla.length < 4 || hsla[3] === 1 ? "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)" : "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, " + hsla[3] + ")";
      };
      cs.to.hwb = function() {
        var hwba = swizzle(arguments);
        var a22 = "";
        if (hwba.length >= 4 && hwba[3] !== 1) {
          a22 = ", " + hwba[3];
        }
        return "hwb(" + hwba[0] + ", " + hwba[1] + "%, " + hwba[2] + "%" + a22 + ")";
      };
      cs.to.keyword = function(rgb) {
        return reverseNames[rgb.slice(0, 3)];
      };
      function clamp(num, min2, max2) {
        return Math.min(Math.max(min2, num), max2);
      }
      function hexDouble(num) {
        var str = Math.round(num).toString(16).toUpperCase();
        return str.length < 2 ? "0" + str : str;
      }
      var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
        ["aac", "audio/aac"],
        ["abw", "application/x-abiword"],
        ["arc", "application/x-freearc"],
        ["avif", "image/avif"],
        ["avi", "video/x-msvideo"],
        ["azw", "application/vnd.amazon.ebook"],
        ["bin", "application/octet-stream"],
        ["bmp", "image/bmp"],
        ["bz", "application/x-bzip"],
        ["bz2", "application/x-bzip2"],
        ["cda", "application/x-cdf"],
        ["csh", "application/x-csh"],
        ["css", "text/css"],
        ["csv", "text/csv"],
        ["doc", "application/msword"],
        ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
        ["eot", "application/vnd.ms-fontobject"],
        ["epub", "application/epub+zip"],
        ["gz", "application/gzip"],
        ["gif", "image/gif"],
        ["heic", "image/heic"],
        ["heif", "image/heif"],
        ["htm", "text/html"],
        ["html", "text/html"],
        ["ico", "image/vnd.microsoft.icon"],
        ["ics", "text/calendar"],
        ["jar", "application/java-archive"],
        ["jpeg", "image/jpeg"],
        ["jpg", "image/jpeg"],
        ["js", "text/javascript"],
        ["json", "application/json"],
        ["jsonld", "application/ld+json"],
        ["mid", "audio/midi"],
        ["midi", "audio/midi"],
        ["mjs", "text/javascript"],
        ["mp3", "audio/mpeg"],
        ["mp4", "video/mp4"],
        ["mpeg", "video/mpeg"],
        ["mpkg", "application/vnd.apple.installer+xml"],
        ["odp", "application/vnd.oasis.opendocument.presentation"],
        ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
        ["odt", "application/vnd.oasis.opendocument.text"],
        ["oga", "audio/ogg"],
        ["ogv", "video/ogg"],
        ["ogx", "application/ogg"],
        ["opus", "audio/opus"],
        ["otf", "font/otf"],
        ["png", "image/png"],
        ["pdf", "application/pdf"],
        ["php", "application/x-httpd-php"],
        ["ppt", "application/vnd.ms-powerpoint"],
        ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
        ["rar", "application/vnd.rar"],
        ["rtf", "application/rtf"],
        ["sh", "application/x-sh"],
        ["svg", "image/svg+xml"],
        ["swf", "application/x-shockwave-flash"],
        ["tar", "application/x-tar"],
        ["tif", "image/tiff"],
        ["tiff", "image/tiff"],
        ["ts", "video/mp2t"],
        ["ttf", "font/ttf"],
        ["txt", "text/plain"],
        ["vsd", "application/vnd.visio"],
        ["wav", "audio/wav"],
        ["weba", "audio/webm"],
        ["webm", "video/webm"],
        ["webp", "image/webp"],
        ["woff", "font/woff"],
        ["woff2", "font/woff2"],
        ["xhtml", "application/xhtml+xml"],
        ["xls", "application/vnd.ms-excel"],
        ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
        ["xml", "application/xml"],
        ["xul", "application/vnd.mozilla.xul+xml"],
        ["zip", "application/zip"],
        ["7z", "application/x-7z-compressed"],
        ["mkv", "video/x-matroska"],
        ["mov", "video/quicktime"],
        ["msg", "application/vnd.ms-outlook"]
      ]);
      function toFileWithPath(file, path) {
        var f22 = withMimeType(file);
        if (typeof f22.path !== "string") {
          var webkitRelativePath = file.webkitRelativePath;
          Object.defineProperty(f22, "path", {
            value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
            writable: false,
            configurable: false,
            enumerable: true
          });
        }
        return f22;
      }
      function withMimeType(file) {
        var name2 = file.name;
        var hasExtension = name2 && name2.lastIndexOf(".") !== -1;
        if (hasExtension && !file.type) {
          var ext = name2.split(".").pop().toLowerCase();
          var type = COMMON_MIME_TYPES.get(ext);
          if (type) {
            Object.defineProperty(file, "type", {
              value: type,
              writable: false,
              configurable: false,
              enumerable: true
            });
          }
        }
        return file;
      }
      var FILES_TO_IGNORE = [
        ".DS_Store",
        "Thumbs.db"
      ];
      function fromEvent(evt) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            if (isObject$1(evt) && isDataTransfer(evt.dataTransfer)) {
              return [2, getDataTransferFiles(evt.dataTransfer, evt.type)];
            } else if (isChangeEvt(evt)) {
              return [2, getInputFiles(evt)];
            } else if (Array.isArray(evt) && evt.every(function(item) {
              return "getFile" in item && typeof item.getFile === "function";
            })) {
              return [2, getFsHandleFiles(evt)];
            }
            return [2, []];
          });
        });
      }
      function isDataTransfer(value) {
        return isObject$1(value);
      }
      function isChangeEvt(value) {
        return isObject$1(value) && isObject$1(value.target);
      }
      function isObject$1(v22) {
        return typeof v22 === "object" && v22 !== null;
      }
      function getInputFiles(evt) {
        return fromList(evt.target.files).map(function(file) {
          return toFileWithPath(file);
        });
      }
      function getFsHandleFiles(handles) {
        return __awaiter(this, void 0, void 0, function() {
          var files;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, Promise.all(handles.map(function(h22) {
                  return h22.getFile();
                }))];
              case 1:
                files = _a.sent();
                return [2, files.map(function(file) {
                  return toFileWithPath(file);
                })];
            }
          });
        });
      }
      function getDataTransferFiles(dt, type) {
        return __awaiter(this, void 0, void 0, function() {
          var items, files;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!dt.items)
                  return [3, 2];
                items = fromList(dt.items).filter(function(item) {
                  return item.kind === "file";
                });
                if (type !== "drop") {
                  return [2, items];
                }
                return [4, Promise.all(items.map(toFilePromises))];
              case 1:
                files = _a.sent();
                return [2, noIgnoredFiles(flatten(files))];
              case 2:
                return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
                  return toFileWithPath(file);
                }))];
            }
          });
        });
      }
      function noIgnoredFiles(files) {
        return files.filter(function(file) {
          return FILES_TO_IGNORE.indexOf(file.name) === -1;
        });
      }
      function fromList(items) {
        if (items === null) {
          return [];
        }
        var files = [];
        for (var i22 = 0; i22 < items.length; i22++) {
          var file = items[i22];
          files.push(file);
        }
        return files;
      }
      function toFilePromises(item) {
        if (typeof item.webkitGetAsEntry !== "function") {
          return fromDataTransferItem(item);
        }
        var entry = item.webkitGetAsEntry();
        if (entry && entry.isDirectory) {
          return fromDirEntry(entry);
        }
        return fromDataTransferItem(item);
      }
      function flatten(items) {
        return items.reduce(function(acc, files) {
          return __spreadArray(__spreadArray([], __read(acc), false), __read(Array.isArray(files) ? flatten(files) : [files]), false);
        }, []);
      }
      function fromDataTransferItem(item) {
        var file = item.getAsFile();
        if (!file) {
          return Promise.reject("".concat(item, " is not a File"));
        }
        var fwp = toFileWithPath(file);
        return Promise.resolve(fwp);
      }
      function fromEntry(entry) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
          });
        });
      }
      function fromDirEntry(entry) {
        var reader = entry.createReader();
        return new Promise(function(resolve, reject) {
          var entries = [];
          function readEntries() {
            var _this = this;
            reader.readEntries(function(batch) {
              return __awaiter(_this, void 0, void 0, function() {
                var files, err_1, items;
                return __generator(this, function(_a) {
                  switch (_a.label) {
                    case 0:
                      if (!!batch.length)
                        return [3, 5];
                      _a.label = 1;
                    case 1:
                      _a.trys.push([1, 3, , 4]);
                      return [4, Promise.all(entries)];
                    case 2:
                      files = _a.sent();
                      resolve(files);
                      return [3, 4];
                    case 3:
                      err_1 = _a.sent();
                      reject(err_1);
                      return [3, 4];
                    case 4:
                      return [3, 6];
                    case 5:
                      items = Promise.all(batch.map(fromEntry));
                      entries.push(items);
                      readEntries();
                      _a.label = 6;
                    case 6:
                      return [2];
                  }
                });
              });
            }, function(err) {
              reject(err);
            });
          }
          readEntries();
        });
      }
      function fromFileEntry(entry) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, new Promise(function(resolve, reject) {
              entry.file(function(file) {
                var fwp = toFileWithPath(file, entry.fullPath);
                resolve(fwp);
              }, function(err) {
                reject(err);
              });
            })];
          });
        });
      }
      var _default = function(file, acceptedFiles) {
        if (file && acceptedFiles) {
          var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
          var fileName = file.name || "";
          var mimeType = (file.type || "").toLowerCase();
          var baseMimeType = mimeType.replace(/\/.*$/, "");
          return acceptedFilesArray.some(function(type) {
            var validType = type.trim().toLowerCase();
            if (validType.charAt(0) === ".") {
              return fileName.toLowerCase().endsWith(validType);
            } else if (validType.endsWith("/*")) {
              return baseMimeType === validType.replace(/\/.*$/, "");
            }
            return mimeType === validType;
          });
        }
        return true;
      };
      function _toConsumableArray$1(arr) {
        return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread$1();
      }
      function _nonIterableSpread$1() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _iterableToArray$1(iter) {
        if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
          return Array.from(iter);
      }
      function _arrayWithoutHoles$1(arr) {
        if (Array.isArray(arr))
          return _arrayLikeToArray$1(arr);
      }
      function ownKeys$1(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          })), keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread$1(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          i22 % 2 ? ownKeys$1(Object(source), true).forEach(function(key) {
            _defineProperty$1(target, key, source[key]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
        return target;
      }
      function _defineProperty$1(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function _slicedToArray$1(arr, i22) {
        return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i22) || _unsupportedIterableToArray$1(arr, i22) || _nonIterableRest$1();
      }
      function _nonIterableRest$1() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _unsupportedIterableToArray$1(o22, minLen) {
        if (!o22)
          return;
        if (typeof o22 === "string")
          return _arrayLikeToArray$1(o22, minLen);
        var n22 = Object.prototype.toString.call(o22).slice(8, -1);
        if (n22 === "Object" && o22.constructor)
          n22 = o22.constructor.name;
        if (n22 === "Map" || n22 === "Set")
          return Array.from(o22);
        if (n22 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n22))
          return _arrayLikeToArray$1(o22, minLen);
      }
      function _arrayLikeToArray$1(arr, len) {
        if (len == null || len > arr.length)
          len = arr.length;
        for (var i22 = 0, arr2 = new Array(len); i22 < len; i22++) {
          arr2[i22] = arr[i22];
        }
        return arr2;
      }
      function _iterableToArrayLimit$1(arr, i22) {
        var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
        if (_i == null)
          return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _s, _e4;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i22 && _arr.length === i22)
              break;
          }
        } catch (err) {
          _d = true;
          _e4 = err;
        } finally {
          try {
            if (!_n && _i["return"] != null)
              _i["return"]();
          } finally {
            if (_d)
              throw _e4;
          }
        }
        return _arr;
      }
      function _arrayWithHoles$1(arr) {
        if (Array.isArray(arr))
          return arr;
      }
      var FILE_INVALID_TYPE = "file-invalid-type";
      var FILE_TOO_LARGE = "file-too-large";
      var FILE_TOO_SMALL = "file-too-small";
      var TOO_MANY_FILES = "too-many-files";
      var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr2(accept) {
        accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
        var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(", ")) : accept;
        return {
          code: FILE_INVALID_TYPE,
          message: "File type must be ".concat(messageSuffix)
        };
      };
      var getTooLargeRejectionErr = function getTooLargeRejectionErr2(maxSize) {
        return {
          code: FILE_TOO_LARGE,
          message: "File is larger than ".concat(maxSize, " ").concat(maxSize === 1 ? "byte" : "bytes")
        };
      };
      var getTooSmallRejectionErr = function getTooSmallRejectionErr2(minSize) {
        return {
          code: FILE_TOO_SMALL,
          message: "File is smaller than ".concat(minSize, " ").concat(minSize === 1 ? "byte" : "bytes")
        };
      };
      var TOO_MANY_FILES_REJECTION = {
        code: TOO_MANY_FILES,
        message: "Too many files"
      };
      function fileAccepted(file, accept) {
        var isAcceptable = file.type === "application/x-moz-file" || _default(file, accept);
        return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
      }
      function fileMatchSize(file, minSize, maxSize) {
        if (isDefined(file.size)) {
          if (isDefined(minSize) && isDefined(maxSize)) {
            if (file.size > maxSize)
              return [false, getTooLargeRejectionErr(maxSize)];
            if (file.size < minSize)
              return [false, getTooSmallRejectionErr(minSize)];
          } else if (isDefined(minSize) && file.size < minSize)
            return [false, getTooSmallRejectionErr(minSize)];
          else if (isDefined(maxSize) && file.size > maxSize)
            return [false, getTooLargeRejectionErr(maxSize)];
        }
        return [true, null];
      }
      function isDefined(value) {
        return value !== void 0 && value !== null;
      }
      function allFilesAccepted(_ref) {
        var files = _ref.files, accept = _ref.accept, minSize = _ref.minSize, maxSize = _ref.maxSize, multiple = _ref.multiple, maxFiles = _ref.maxFiles, validator = _ref.validator;
        if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
          return false;
        }
        return files.every(function(file) {
          var _fileAccepted = fileAccepted(file, accept), _fileAccepted2 = _slicedToArray$1(_fileAccepted, 1), accepted = _fileAccepted2[0];
          var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray$1(_fileMatchSize, 1), sizeMatch = _fileMatchSize2[0];
          var customErrors = validator ? validator(file) : null;
          return accepted && sizeMatch && !customErrors;
        });
      }
      function isPropagationStopped(event) {
        if (typeof event.isPropagationStopped === "function") {
          return event.isPropagationStopped();
        } else if (typeof event.cancelBubble !== "undefined") {
          return event.cancelBubble;
        }
        return false;
      }
      function isEvtWithFiles(event) {
        if (!event.dataTransfer) {
          return !!event.target && !!event.target.files;
        }
        return Array.prototype.some.call(event.dataTransfer.types, function(type) {
          return type === "Files" || type === "application/x-moz-file";
        });
      }
      function onDocumentDragOver(event) {
        event.preventDefault();
      }
      function isIe(userAgent) {
        return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
      }
      function isEdge(userAgent) {
        return userAgent.indexOf("Edge/") !== -1;
      }
      function isIeOrEdge() {
        var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
        return isIe(userAgent) || isEdge(userAgent);
      }
      function composeEventHandlers() {
        for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
          fns[_key] = arguments[_key];
        }
        return function(event) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }
          return fns.some(function(fn2) {
            if (!isPropagationStopped(event) && fn2) {
              fn2.apply(void 0, [event].concat(args));
            }
            return isPropagationStopped(event);
          });
        };
      }
      function canUseFileSystemAccessAPI() {
        return "showOpenFilePicker" in window;
      }
      function pickerOptionsFromAccept(accept) {
        if (isDefined(accept)) {
          var acceptForPicker = Object.entries(accept).filter(function(_ref2) {
            var _ref3 = _slicedToArray$1(_ref2, 2), mimeType = _ref3[0], ext = _ref3[1];
            var ok2 = true;
            if (!isMIMEType(mimeType)) {
              console.warn('Skipped "'.concat(mimeType, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.'));
              ok2 = false;
            }
            if (!Array.isArray(ext) || !ext.every(isExt)) {
              console.warn('Skipped "'.concat(mimeType, '" because an invalid file extension was provided.'));
              ok2 = false;
            }
            return ok2;
          }).reduce(function(agg, _ref4) {
            var _ref5 = _slicedToArray$1(_ref4, 2), mimeType = _ref5[0], ext = _ref5[1];
            return _objectSpread$1(_objectSpread$1({}, agg), {}, _defineProperty$1({}, mimeType, ext));
          }, {});
          return [{
            description: "Files",
            accept: acceptForPicker
          }];
        }
        return accept;
      }
      function acceptPropAsAcceptAttr(accept) {
        if (isDefined(accept)) {
          return Object.entries(accept).reduce(function(a22, _ref6) {
            var _ref7 = _slicedToArray$1(_ref6, 2), mimeType = _ref7[0], ext = _ref7[1];
            return [].concat(_toConsumableArray$1(a22), [mimeType], _toConsumableArray$1(ext));
          }, []).filter(function(v22) {
            return isMIMEType(v22) || isExt(v22);
          }).join(",");
        }
        return void 0;
      }
      function isAbort(v22) {
        return v22 instanceof DOMException && (v22.name === "AbortError" || v22.code === v22.ABORT_ERR);
      }
      function isSecurityError(v22) {
        return v22 instanceof DOMException && (v22.name === "SecurityError" || v22.code === v22.SECURITY_ERR);
      }
      function isMIMEType(v22) {
        return v22 === "audio/*" || v22 === "video/*" || v22 === "image/*" || v22 === "text/*" || /\w+\/[-+.\w]+/g.test(v22);
      }
      function isExt(v22) {
        return /^.*\.[\w]+$/.test(v22);
      }
      var _excluded = ["children"], _excluded2 = ["open"], _excluded3 = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"], _excluded4 = ["refKey", "onChange", "onClick"];
      function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
      }
      function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _iterableToArray(iter) {
        if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
          return Array.from(iter);
      }
      function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr))
          return _arrayLikeToArray(arr);
      }
      function _slicedToArray(arr, i22) {
        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i22) || _unsupportedIterableToArray(arr, i22) || _nonIterableRest();
      }
      function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _unsupportedIterableToArray(o22, minLen) {
        if (!o22)
          return;
        if (typeof o22 === "string")
          return _arrayLikeToArray(o22, minLen);
        var n22 = Object.prototype.toString.call(o22).slice(8, -1);
        if (n22 === "Object" && o22.constructor)
          n22 = o22.constructor.name;
        if (n22 === "Map" || n22 === "Set")
          return Array.from(o22);
        if (n22 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n22))
          return _arrayLikeToArray(o22, minLen);
      }
      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length)
          len = arr.length;
        for (var i22 = 0, arr2 = new Array(len); i22 < len; i22++) {
          arr2[i22] = arr[i22];
        }
        return arr2;
      }
      function _iterableToArrayLimit(arr, i22) {
        var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
        if (_i == null)
          return;
        var _arr = [];
        var _n = true;
        var _d = false;
        var _s, _e4;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i22 && _arr.length === i22)
              break;
          }
        } catch (err) {
          _d = true;
          _e4 = err;
        } finally {
          try {
            if (!_n && _i["return"] != null)
              _i["return"]();
          } finally {
            if (_d)
              throw _e4;
          }
        }
        return _arr;
      }
      function _arrayWithHoles(arr) {
        if (Array.isArray(arr))
          return arr;
      }
      function ownKeys(object, enumerableOnly) {
        var keys2 = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          enumerableOnly && (symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
          })), keys2.push.apply(keys2, symbols);
        }
        return keys2;
      }
      function _objectSpread(target) {
        for (var i22 = 1; i22 < arguments.length; i22++) {
          var source = arguments[i22] != null ? arguments[i22] : {};
          i22 % 2 ? ownKeys(Object(source), true).forEach(function(key) {
            _defineProperty(target, key, source[key]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
        return target;
      }
      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }
        return obj;
      }
      function _objectWithoutProperties(source, excluded) {
        if (source == null)
          return {};
        var target = _objectWithoutPropertiesLoose$1(source, excluded);
        var key, i22;
        if (Object.getOwnPropertySymbols) {
          var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
          for (i22 = 0; i22 < sourceSymbolKeys.length; i22++) {
            key = sourceSymbolKeys[i22];
            if (excluded.indexOf(key) >= 0)
              continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key))
              continue;
            target[key] = source[key];
          }
        }
        return target;
      }
      function _objectWithoutPropertiesLoose$1(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i22;
        for (i22 = 0; i22 < sourceKeys.length; i22++) {
          key = sourceKeys[i22];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      var Dropzone = react.exports.forwardRef(function(_ref, ref) {
        var children = _ref.children, params = _objectWithoutProperties(_ref, _excluded);
        var _useDropzone = useDropzone(params), open = _useDropzone.open, props = _objectWithoutProperties(_useDropzone, _excluded2);
        react.exports.useImperativeHandle(ref, function() {
          return {
            open
          };
        }, [open]);
        return React__default.createElement(react.exports.Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {
          open
        })));
      });
      Dropzone.displayName = "Dropzone";
      var defaultProps = {
        disabled: false,
        getFilesFromEvent: fromEvent,
        maxSize: Infinity,
        minSize: 0,
        multiple: true,
        maxFiles: 0,
        preventDropOnDocument: true,
        noClick: false,
        noKeyboard: false,
        noDrag: false,
        noDragEventsBubbling: false,
        validator: null,
        useFsAccessApi: true,
        autoFocus: false
      };
      Dropzone.defaultProps = defaultProps;
      Dropzone.propTypes = {
        children: PropTypes$1.func,
        accept: PropTypes$1.objectOf(PropTypes$1.arrayOf(PropTypes$1.string)),
        multiple: PropTypes$1.bool,
        preventDropOnDocument: PropTypes$1.bool,
        noClick: PropTypes$1.bool,
        noKeyboard: PropTypes$1.bool,
        noDrag: PropTypes$1.bool,
        noDragEventsBubbling: PropTypes$1.bool,
        minSize: PropTypes$1.number,
        maxSize: PropTypes$1.number,
        maxFiles: PropTypes$1.number,
        disabled: PropTypes$1.bool,
        getFilesFromEvent: PropTypes$1.func,
        onFileDialogCancel: PropTypes$1.func,
        onFileDialogOpen: PropTypes$1.func,
        useFsAccessApi: PropTypes$1.bool,
        autoFocus: PropTypes$1.bool,
        onDragEnter: PropTypes$1.func,
        onDragLeave: PropTypes$1.func,
        onDragOver: PropTypes$1.func,
        onDrop: PropTypes$1.func,
        onDropAccepted: PropTypes$1.func,
        onDropRejected: PropTypes$1.func,
        onError: PropTypes$1.func,
        validator: PropTypes$1.func
      };
      var initialState = {
        isFocused: false,
        isFileDialogActive: false,
        isDragActive: false,
        isDragAccept: false,
        isDragReject: false,
        acceptedFiles: [],
        fileRejections: []
      };
      function useDropzone() {
        var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var _defaultProps$props = _objectSpread(_objectSpread({}, defaultProps), props), accept = _defaultProps$props.accept, disabled = _defaultProps$props.disabled, getFilesFromEvent = _defaultProps$props.getFilesFromEvent, maxSize = _defaultProps$props.maxSize, minSize = _defaultProps$props.minSize, multiple = _defaultProps$props.multiple, maxFiles = _defaultProps$props.maxFiles, onDragEnter = _defaultProps$props.onDragEnter, onDragLeave = _defaultProps$props.onDragLeave, onDragOver = _defaultProps$props.onDragOver, onDrop = _defaultProps$props.onDrop, onDropAccepted = _defaultProps$props.onDropAccepted, onDropRejected = _defaultProps$props.onDropRejected, onFileDialogCancel = _defaultProps$props.onFileDialogCancel, onFileDialogOpen = _defaultProps$props.onFileDialogOpen, useFsAccessApi = _defaultProps$props.useFsAccessApi, autoFocus = _defaultProps$props.autoFocus, preventDropOnDocument = _defaultProps$props.preventDropOnDocument, noClick = _defaultProps$props.noClick, noKeyboard = _defaultProps$props.noKeyboard, noDrag = _defaultProps$props.noDrag, noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling, onError = _defaultProps$props.onError, validator = _defaultProps$props.validator;
        var acceptAttr = react.exports.useMemo(function() {
          return acceptPropAsAcceptAttr(accept);
        }, [accept]);
        var pickerTypes = react.exports.useMemo(function() {
          return pickerOptionsFromAccept(accept);
        }, [accept]);
        var onFileDialogOpenCb = react.exports.useMemo(function() {
          return typeof onFileDialogOpen === "function" ? onFileDialogOpen : noop;
        }, [onFileDialogOpen]);
        var onFileDialogCancelCb = react.exports.useMemo(function() {
          return typeof onFileDialogCancel === "function" ? onFileDialogCancel : noop;
        }, [onFileDialogCancel]);
        var rootRef = react.exports.useRef(null);
        var inputRef = react.exports.useRef(null);
        var _useReducer = react.exports.useReducer(reducer, initialState), _useReducer2 = _slicedToArray(_useReducer, 2), state = _useReducer2[0], dispatch = _useReducer2[1];
        var isFocused = state.isFocused, isFileDialogActive = state.isFileDialogActive;
        var fsAccessApiWorksRef = react.exports.useRef(typeof window !== "undefined" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI());
        var onWindowFocus = function onWindowFocus2() {
          if (!fsAccessApiWorksRef.current && isFileDialogActive) {
            setTimeout(function() {
              if (inputRef.current) {
                var files = inputRef.current.files;
                if (!files.length) {
                  dispatch({
                    type: "closeDialog"
                  });
                  onFileDialogCancelCb();
                }
              }
            }, 300);
          }
        };
        react.exports.useEffect(function() {
          window.addEventListener("focus", onWindowFocus, false);
          return function() {
            window.removeEventListener("focus", onWindowFocus, false);
          };
        }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);
        var dragTargetsRef = react.exports.useRef([]);
        var onDocumentDrop = function onDocumentDrop2(event) {
          if (rootRef.current && rootRef.current.contains(event.target)) {
            return;
          }
          event.preventDefault();
          dragTargetsRef.current = [];
        };
        react.exports.useEffect(function() {
          if (preventDropOnDocument) {
            document.addEventListener("dragover", onDocumentDragOver, false);
            document.addEventListener("drop", onDocumentDrop, false);
          }
          return function() {
            if (preventDropOnDocument) {
              document.removeEventListener("dragover", onDocumentDragOver);
              document.removeEventListener("drop", onDocumentDrop);
            }
          };
        }, [rootRef, preventDropOnDocument]);
        react.exports.useEffect(function() {
          if (!disabled && autoFocus && rootRef.current) {
            rootRef.current.focus();
          }
          return function() {
          };
        }, [rootRef, autoFocus, disabled]);
        var onErrCb = react.exports.useCallback(function(e22) {
          if (onError) {
            onError(e22);
          } else {
            console.error(e22);
          }
        }, [onError]);
        var onDragEnterCb = react.exports.useCallback(function(event) {
          event.preventDefault();
          event.persist();
          stopPropagation(event);
          dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);
          if (isEvtWithFiles(event)) {
            Promise.resolve(getFilesFromEvent(event)).then(function(files) {
              if (isPropagationStopped(event) && !noDragEventsBubbling) {
                return;
              }
              var fileCount = files.length;
              var isDragAccept = fileCount > 0 && allFilesAccepted({
                files,
                accept: acceptAttr,
                minSize,
                maxSize,
                multiple,
                maxFiles,
                validator
              });
              var isDragReject = fileCount > 0 && !isDragAccept;
              dispatch({
                isDragAccept,
                isDragReject,
                isDragActive: true,
                type: "setDraggedFiles"
              });
              if (onDragEnter) {
                onDragEnter(event);
              }
            }).catch(function(e22) {
              return onErrCb(e22);
            });
          }
        }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);
        var onDragOverCb = react.exports.useCallback(function(event) {
          event.preventDefault();
          event.persist();
          stopPropagation(event);
          var hasFiles = isEvtWithFiles(event);
          if (hasFiles && event.dataTransfer) {
            try {
              event.dataTransfer.dropEffect = "copy";
            } catch (_unused) {
            }
          }
          if (hasFiles && onDragOver) {
            onDragOver(event);
          }
          return false;
        }, [onDragOver, noDragEventsBubbling]);
        var onDragLeaveCb = react.exports.useCallback(function(event) {
          event.preventDefault();
          event.persist();
          stopPropagation(event);
          var targets = dragTargetsRef.current.filter(function(target) {
            return rootRef.current && rootRef.current.contains(target);
          });
          var targetIdx = targets.indexOf(event.target);
          if (targetIdx !== -1) {
            targets.splice(targetIdx, 1);
          }
          dragTargetsRef.current = targets;
          if (targets.length > 0) {
            return;
          }
          dispatch({
            type: "setDraggedFiles",
            isDragActive: false,
            isDragAccept: false,
            isDragReject: false
          });
          if (isEvtWithFiles(event) && onDragLeave) {
            onDragLeave(event);
          }
        }, [rootRef, onDragLeave, noDragEventsBubbling]);
        var setFiles = react.exports.useCallback(function(files, event) {
          var acceptedFiles = [];
          var fileRejections = [];
          files.forEach(function(file) {
            var _fileAccepted = fileAccepted(file, acceptAttr), _fileAccepted2 = _slicedToArray(_fileAccepted, 2), accepted = _fileAccepted2[0], acceptError = _fileAccepted2[1];
            var _fileMatchSize = fileMatchSize(file, minSize, maxSize), _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2), sizeMatch = _fileMatchSize2[0], sizeError = _fileMatchSize2[1];
            var customErrors = validator ? validator(file) : null;
            if (accepted && sizeMatch && !customErrors) {
              acceptedFiles.push(file);
            } else {
              var errors = [acceptError, sizeError];
              if (customErrors) {
                errors = errors.concat(customErrors);
              }
              fileRejections.push({
                file,
                errors: errors.filter(function(e22) {
                  return e22;
                })
              });
            }
          });
          if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
            acceptedFiles.forEach(function(file) {
              fileRejections.push({
                file,
                errors: [TOO_MANY_FILES_REJECTION]
              });
            });
            acceptedFiles.splice(0);
          }
          dispatch({
            acceptedFiles,
            fileRejections,
            type: "setFiles"
          });
          if (onDrop) {
            onDrop(acceptedFiles, fileRejections, event);
          }
          if (fileRejections.length > 0 && onDropRejected) {
            onDropRejected(fileRejections, event);
          }
          if (acceptedFiles.length > 0 && onDropAccepted) {
            onDropAccepted(acceptedFiles, event);
          }
        }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);
        var onDropCb = react.exports.useCallback(function(event) {
          event.preventDefault();
          event.persist();
          stopPropagation(event);
          dragTargetsRef.current = [];
          if (isEvtWithFiles(event)) {
            Promise.resolve(getFilesFromEvent(event)).then(function(files) {
              if (isPropagationStopped(event) && !noDragEventsBubbling) {
                return;
              }
              setFiles(files, event);
            }).catch(function(e22) {
              return onErrCb(e22);
            });
          }
          dispatch({
            type: "reset"
          });
        }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]);
        var openFileDialog = react.exports.useCallback(function() {
          if (fsAccessApiWorksRef.current) {
            dispatch({
              type: "openDialog"
            });
            onFileDialogOpenCb();
            var opts = {
              multiple,
              types: pickerTypes
            };
            window.showOpenFilePicker(opts).then(function(handles) {
              return getFilesFromEvent(handles);
            }).then(function(files) {
              setFiles(files, null);
              dispatch({
                type: "closeDialog"
              });
            }).catch(function(e22) {
              if (isAbort(e22)) {
                onFileDialogCancelCb(e22);
                dispatch({
                  type: "closeDialog"
                });
              } else if (isSecurityError(e22)) {
                fsAccessApiWorksRef.current = false;
                if (inputRef.current) {
                  inputRef.current.value = null;
                  inputRef.current.click();
                } else {
                  onErrCb(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."));
                }
              } else {
                onErrCb(e22);
              }
            });
            return;
          }
          if (inputRef.current) {
            dispatch({
              type: "openDialog"
            });
            onFileDialogOpenCb();
            inputRef.current.value = null;
            inputRef.current.click();
          }
        }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]);
        var onKeyDownCb = react.exports.useCallback(function(event) {
          if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
            return;
          }
          if (event.key === " " || event.key === "Enter" || event.keyCode === 32 || event.keyCode === 13) {
            event.preventDefault();
            openFileDialog();
          }
        }, [rootRef, openFileDialog]);
        var onFocusCb = react.exports.useCallback(function() {
          dispatch({
            type: "focus"
          });
        }, []);
        var onBlurCb = react.exports.useCallback(function() {
          dispatch({
            type: "blur"
          });
        }, []);
        var onClickCb = react.exports.useCallback(function() {
          if (noClick) {
            return;
          }
          if (isIeOrEdge()) {
            setTimeout(openFileDialog, 0);
          } else {
            openFileDialog();
          }
        }, [noClick, openFileDialog]);
        var composeHandler = function composeHandler2(fn2) {
          return disabled ? null : fn2;
        };
        var composeKeyboardHandler = function composeKeyboardHandler2(fn2) {
          return noKeyboard ? null : composeHandler(fn2);
        };
        var composeDragHandler = function composeDragHandler2(fn2) {
          return noDrag ? null : composeHandler(fn2);
        };
        var stopPropagation = function stopPropagation2(event) {
          if (noDragEventsBubbling) {
            event.stopPropagation();
          }
        };
        var getRootProps = react.exports.useMemo(function() {
          return function() {
            var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, role = _ref2.role, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragEnter2 = _ref2.onDragEnter, onDragOver2 = _ref2.onDragOver, onDragLeave2 = _ref2.onDragLeave, onDrop2 = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, _excluded3);
            return _objectSpread(_objectSpread(_defineProperty({
              onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
              onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
              onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
              onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
              onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter2, onDragEnterCb)),
              onDragOver: composeDragHandler(composeEventHandlers(onDragOver2, onDragOverCb)),
              onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave2, onDragLeaveCb)),
              onDrop: composeDragHandler(composeEventHandlers(onDrop2, onDropCb)),
              role: typeof role === "string" && role !== "" ? role : "presentation"
            }, refKey, rootRef), !disabled && !noKeyboard ? {
              tabIndex: 0
            } : {}), rest);
          };
        }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
        var onInputElementClick = react.exports.useCallback(function(event) {
          event.stopPropagation();
        }, []);
        var getInputProps = react.exports.useMemo(function() {
          return function() {
            var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, _excluded4);
            var inputProps = _defineProperty({
              accept: acceptAttr,
              multiple,
              type: "file",
              style: {
                display: "none"
              },
              onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
              onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
              tabIndex: -1
            }, refKey, inputRef);
            return _objectSpread(_objectSpread({}, inputProps), rest);
          };
        }, [inputRef, accept, multiple, onDropCb, disabled]);
        return _objectSpread(_objectSpread({}, state), {}, {
          isFocused: isFocused && !disabled,
          getRootProps,
          getInputProps,
          rootRef,
          inputRef,
          open: composeHandler(openFileDialog)
        });
      }
      function reducer(state, action) {
        switch (action.type) {
          case "focus":
            return _objectSpread(_objectSpread({}, state), {}, {
              isFocused: true
            });
          case "blur":
            return _objectSpread(_objectSpread({}, state), {}, {
              isFocused: false
            });
          case "openDialog":
            return _objectSpread(_objectSpread({}, initialState), {}, {
              isFileDialogActive: true
            });
          case "closeDialog":
            return _objectSpread(_objectSpread({}, state), {}, {
              isFileDialogActive: false
            });
          case "setDraggedFiles":
            return _objectSpread(_objectSpread({}, state), {}, {
              isDragActive: action.isDragActive,
              isDragAccept: action.isDragAccept,
              isDragReject: action.isDragReject
            });
          case "setFiles":
            return _objectSpread(_objectSpread({}, state), {}, {
              acceptedFiles: action.acceptedFiles,
              fileRejections: action.fileRejections
            });
          case "reset":
            return _objectSpread({}, initialState);
          default:
            return state;
        }
      }
      function noop() {
      }
      var hookCallback;
      function hooks() {
        return hookCallback.apply(null, arguments);
      }
      function setHookCallback(callback) {
        hookCallback = callback;
      }
      function isArray2(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
      }
      function isObject2(input) {
        return input != null && Object.prototype.toString.call(input) === "[object Object]";
      }
      function hasOwnProp(a22, b22) {
        return Object.prototype.hasOwnProperty.call(a22, b22);
      }
      function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
          return Object.getOwnPropertyNames(obj).length === 0;
        } else {
          var k22;
          for (k22 in obj) {
            if (hasOwnProp(obj, k22)) {
              return false;
            }
          }
          return true;
        }
      }
      function isUndefined(input) {
        return input === void 0;
      }
      function isNumber2(input) {
        return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
      }
      function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
      }
      function map2(arr, fn2) {
        var res = [], i22, arrLen = arr.length;
        for (i22 = 0; i22 < arrLen; ++i22) {
          res.push(fn2(arr[i22], i22));
        }
        return res;
      }
      function extend(a22, b22) {
        for (var i22 in b22) {
          if (hasOwnProp(b22, i22)) {
            a22[i22] = b22[i22];
          }
        }
        if (hasOwnProp(b22, "toString")) {
          a22.toString = b22.toString;
        }
        if (hasOwnProp(b22, "valueOf")) {
          a22.valueOf = b22.valueOf;
        }
        return a22;
      }
      function createUTC(input, format2, locale2, strict) {
        return createLocalOrUTC(input, format2, locale2, strict, true).utc();
      }
      function defaultParsingFlags() {
        return {
          empty: false,
          unusedTokens: [],
          unusedInput: [],
          overflow: -2,
          charsLeftOver: 0,
          nullInput: false,
          invalidEra: null,
          invalidMonth: null,
          invalidFormat: false,
          userInvalidated: false,
          iso: false,
          parsedDateParts: [],
          era: null,
          meridiem: null,
          rfc2822: false,
          weekdayMismatch: false
        };
      }
      function getParsingFlags(m22) {
        if (m22._pf == null) {
          m22._pf = defaultParsingFlags();
        }
        return m22._pf;
      }
      var some;
      if (Array.prototype.some) {
        some = Array.prototype.some;
      } else {
        some = function(fun) {
          var t22 = Object(this), len = t22.length >>> 0, i22;
          for (i22 = 0; i22 < len; i22++) {
            if (i22 in t22 && fun.call(this, t22[i22], i22, t22)) {
              return true;
            }
          }
          return false;
        };
      }
      function isValid(m22) {
        if (m22._isValid == null) {
          var flags = getParsingFlags(m22), parsedParts = some.call(flags.parsedDateParts, function(i22) {
            return i22 != null;
          }), isNowValid = !isNaN(m22._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
          if (m22._strict) {
            isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
          }
          if (Object.isFrozen == null || !Object.isFrozen(m22)) {
            m22._isValid = isNowValid;
          } else {
            return isNowValid;
          }
        }
        return m22._isValid;
      }
      function createInvalid(flags) {
        var m22 = createUTC(NaN);
        if (flags != null) {
          extend(getParsingFlags(m22), flags);
        } else {
          getParsingFlags(m22).userInvalidated = true;
        }
        return m22;
      }
      var momentProperties = hooks.momentProperties = [], updateInProgress = false;
      function copyConfig(to22, from2) {
        var i22, prop, val, momentPropertiesLen = momentProperties.length;
        if (!isUndefined(from2._isAMomentObject)) {
          to22._isAMomentObject = from2._isAMomentObject;
        }
        if (!isUndefined(from2._i)) {
          to22._i = from2._i;
        }
        if (!isUndefined(from2._f)) {
          to22._f = from2._f;
        }
        if (!isUndefined(from2._l)) {
          to22._l = from2._l;
        }
        if (!isUndefined(from2._strict)) {
          to22._strict = from2._strict;
        }
        if (!isUndefined(from2._tzm)) {
          to22._tzm = from2._tzm;
        }
        if (!isUndefined(from2._isUTC)) {
          to22._isUTC = from2._isUTC;
        }
        if (!isUndefined(from2._offset)) {
          to22._offset = from2._offset;
        }
        if (!isUndefined(from2._pf)) {
          to22._pf = getParsingFlags(from2);
        }
        if (!isUndefined(from2._locale)) {
          to22._locale = from2._locale;
        }
        if (momentPropertiesLen > 0) {
          for (i22 = 0; i22 < momentPropertiesLen; i22++) {
            prop = momentProperties[i22];
            val = from2[prop];
            if (!isUndefined(val)) {
              to22[prop] = val;
            }
          }
        }
        return to22;
      }
      function Moment(config22) {
        copyConfig(this, config22);
        this._d = new Date(config22._d != null ? config22._d.getTime() : NaN);
        if (!this.isValid()) {
          this._d = new Date(NaN);
        }
        if (updateInProgress === false) {
          updateInProgress = true;
          hooks.updateOffset(this);
          updateInProgress = false;
        }
      }
      function isMoment(obj) {
        return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
      }
      function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
          console.warn("Deprecation warning: " + msg);
        }
      }
      function deprecate(msg, fn2) {
        var firstTime = true;
        return extend(function() {
          if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
          }
          if (firstTime) {
            var args = [], arg, i22, key, argLen = arguments.length;
            for (i22 = 0; i22 < argLen; i22++) {
              arg = "";
              if (typeof arguments[i22] === "object") {
                arg += "\n[" + i22 + "] ";
                for (key in arguments[0]) {
                  if (hasOwnProp(arguments[0], key)) {
                    arg += key + ": " + arguments[0][key] + ", ";
                  }
                }
                arg = arg.slice(0, -2);
              } else {
                arg = arguments[i22];
              }
              args.push(arg);
            }
            warn(msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack);
            firstTime = false;
          }
          return fn2.apply(this, arguments);
        }, fn2);
      }
      var deprecations = {};
      function deprecateSimple(name2, msg) {
        if (hooks.deprecationHandler != null) {
          hooks.deprecationHandler(name2, msg);
        }
        if (!deprecations[name2]) {
          warn(msg);
          deprecations[name2] = true;
        }
      }
      hooks.suppressDeprecationWarnings = false;
      hooks.deprecationHandler = null;
      function isFunction(input) {
        return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
      }
      function set(config22) {
        var prop, i22;
        for (i22 in config22) {
          if (hasOwnProp(config22, i22)) {
            prop = config22[i22];
            if (isFunction(prop)) {
              this[i22] = prop;
            } else {
              this["_" + i22] = prop;
            }
          }
        }
        this._config = config22;
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
      }
      function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
          if (hasOwnProp(childConfig, prop)) {
            if (isObject2(parentConfig[prop]) && isObject2(childConfig[prop])) {
              res[prop] = {};
              extend(res[prop], parentConfig[prop]);
              extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
              res[prop] = childConfig[prop];
            } else {
              delete res[prop];
            }
          }
        }
        for (prop in parentConfig) {
          if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject2(parentConfig[prop])) {
            res[prop] = extend({}, res[prop]);
          }
        }
        return res;
      }
      function Locale(config22) {
        if (config22 != null) {
          this.set(config22);
        }
      }
      var keys;
      if (Object.keys) {
        keys = Object.keys;
      } else {
        keys = function(obj) {
          var i22, res = [];
          for (i22 in obj) {
            if (hasOwnProp(obj, i22)) {
              res.push(i22);
            }
          }
          return res;
        };
      }
      var defaultCalendar = {
        sameDay: "[Today at] LT",
        nextDay: "[Tomorrow at] LT",
        nextWeek: "dddd [at] LT",
        lastDay: "[Yesterday at] LT",
        lastWeek: "[Last] dddd [at] LT",
        sameElse: "L"
      };
      function calendar(key, mom, now2) {
        var output = this._calendar[key] || this._calendar["sameElse"];
        return isFunction(output) ? output.call(mom, now2) : output;
      }
      function zeroFill(number, targetLength, forceSign) {
        var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign2 = number >= 0;
        return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
      }
      var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
      function addFormatToken(token2, padded, ordinal2, callback) {
        var func = callback;
        if (typeof callback === "string") {
          func = function() {
            return this[callback]();
          };
        }
        if (token2) {
          formatTokenFunctions[token2] = func;
        }
        if (padded) {
          formatTokenFunctions[padded[0]] = function() {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
          };
        }
        if (ordinal2) {
          formatTokenFunctions[ordinal2] = function() {
            return this.localeData().ordinal(func.apply(this, arguments), token2);
          };
        }
      }
      function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
          return input.replace(/^\[|\]$/g, "");
        }
        return input.replace(/\\/g, "");
      }
      function makeFormatFunction(format2) {
        var array = format2.match(formattingTokens), i22, length;
        for (i22 = 0, length = array.length; i22 < length; i22++) {
          if (formatTokenFunctions[array[i22]]) {
            array[i22] = formatTokenFunctions[array[i22]];
          } else {
            array[i22] = removeFormattingTokens(array[i22]);
          }
        }
        return function(mom) {
          var output = "", i32;
          for (i32 = 0; i32 < length; i32++) {
            output += isFunction(array[i32]) ? array[i32].call(mom, format2) : array[i32];
          }
          return output;
        };
      }
      function formatMoment(m22, format2) {
        if (!m22.isValid()) {
          return m22.localeData().invalidDate();
        }
        format2 = expandFormat(format2, m22.localeData());
        formatFunctions[format2] = formatFunctions[format2] || makeFormatFunction(format2);
        return formatFunctions[format2](m22);
      }
      function expandFormat(format2, locale2) {
        var i22 = 5;
        function replaceLongDateFormatTokens(input) {
          return locale2.longDateFormat(input) || input;
        }
        localFormattingTokens.lastIndex = 0;
        while (i22 >= 0 && localFormattingTokens.test(format2)) {
          format2 = format2.replace(localFormattingTokens, replaceLongDateFormatTokens);
          localFormattingTokens.lastIndex = 0;
          i22 -= 1;
        }
        return format2;
      }
      var defaultLongDateFormat = {
        LTS: "h:mm:ss A",
        LT: "h:mm A",
        L: "MM/DD/YYYY",
        LL: "MMMM D, YYYY",
        LLL: "MMMM D, YYYY h:mm A",
        LLLL: "dddd, MMMM D, YYYY h:mm A"
      };
      function longDateFormat(key) {
        var format2 = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
        if (format2 || !formatUpper) {
          return format2;
        }
        this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
          if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
            return tok.slice(1);
          }
          return tok;
        }).join("");
        return this._longDateFormat[key];
      }
      var defaultInvalidDate = "Invalid date";
      function invalidDate() {
        return this._invalidDate;
      }
      var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
      function ordinal(number) {
        return this._ordinal.replace("%d", number);
      }
      var defaultRelativeTime = {
        future: "in %s",
        past: "%s ago",
        s: "a few seconds",
        ss: "%d seconds",
        m: "a minute",
        mm: "%d minutes",
        h: "an hour",
        hh: "%d hours",
        d: "a day",
        dd: "%d days",
        w: "a week",
        ww: "%d weeks",
        M: "a month",
        MM: "%d months",
        y: "a year",
        yy: "%d years"
      };
      function relativeTime(number, withoutSuffix, string2, isFuture) {
        var output = this._relativeTime[string2];
        return isFunction(output) ? output(number, withoutSuffix, string2, isFuture) : output.replace(/%d/i, number);
      }
      function pastFuture(diff2, output) {
        var format2 = this._relativeTime[diff2 > 0 ? "future" : "past"];
        return isFunction(format2) ? format2(output) : format2.replace(/%s/i, output);
      }
      var aliases = {};
      function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + "s"] = aliases[shorthand] = unit;
      }
      function normalizeUnits(units) {
        return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
      }
      function normalizeObjectUnits(inputObject) {
        var normalizedInput = {}, normalizedProp, prop;
        for (prop in inputObject) {
          if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
              normalizedInput[normalizedProp] = inputObject[prop];
            }
          }
        }
        return normalizedInput;
      }
      var priorities = {};
      function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
      }
      function getPrioritizedUnits(unitsObj) {
        var units = [], u22;
        for (u22 in unitsObj) {
          if (hasOwnProp(unitsObj, u22)) {
            units.push({ unit: u22, priority: priorities[u22] });
          }
        }
        units.sort(function(a22, b22) {
          return a22.priority - b22.priority;
        });
        return units;
      }
      function isLeapYear(year) {
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
      }
      function absFloor(number) {
        if (number < 0) {
          return Math.ceil(number) || 0;
        } else {
          return Math.floor(number);
        }
      }
      function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion, value = 0;
        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
          value = absFloor(coercedNumber);
        }
        return value;
      }
      function makeGetSet(unit, keepTime) {
        return function(value) {
          if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
          } else {
            return get(this, unit);
          }
        };
      }
      function get(mom, unit) {
        return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN;
      }
      function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
          if (unit === "FullYear" && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            value = toInt(value);
            mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value, mom.month(), daysInMonth(value, mom.month()));
          } else {
            mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value);
          }
        }
      }
      function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
          return this[units]();
        }
        return this;
      }
      function stringSet(units, value) {
        if (typeof units === "object") {
          units = normalizeObjectUnits(units);
          var prioritized = getPrioritizedUnits(units), i22, prioritizedLen = prioritized.length;
          for (i22 = 0; i22 < prioritizedLen; i22++) {
            this[prioritized[i22].unit](units[prioritized[i22].unit]);
          }
        } else {
          units = normalizeUnits(units);
          if (isFunction(this[units])) {
            return this[units](value);
          }
        }
        return this;
      }
      var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, regexes;
      regexes = {};
      function addRegexToken(token2, regex, strictRegex) {
        regexes[token2] = isFunction(regex) ? regex : function(isStrict, localeData2) {
          return isStrict && strictRegex ? strictRegex : regex;
        };
      }
      function getParseRegexForToken(token2, config22) {
        if (!hasOwnProp(regexes, token2)) {
          return new RegExp(unescapeFormat(token2));
        }
        return regexes[token2](config22._strict, config22._locale);
      }
      function unescapeFormat(s22) {
        return regexEscape(s22.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p22, p32, p42) {
          return p1 || p22 || p32 || p42;
        }));
      }
      function regexEscape(s22) {
        return s22.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
      }
      var tokens = {};
      function addParseToken(token2, callback) {
        var i22, func = callback, tokenLen;
        if (typeof token2 === "string") {
          token2 = [token2];
        }
        if (isNumber2(callback)) {
          func = function(input, array) {
            array[callback] = toInt(input);
          };
        }
        tokenLen = token2.length;
        for (i22 = 0; i22 < tokenLen; i22++) {
          tokens[token2[i22]] = func;
        }
      }
      function addWeekParseToken(token2, callback) {
        addParseToken(token2, function(input, array, config22, token3) {
          config22._w = config22._w || {};
          callback(input, config22._w, config22, token3);
        });
      }
      function addTimeToArrayFromToken(token2, input, config22) {
        if (input != null && hasOwnProp(tokens, token2)) {
          tokens[token2](input, config22._a, config22, token2);
        }
      }
      var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
      function mod(n22, x22) {
        return (n22 % x22 + x22) % x22;
      }
      var indexOf;
      if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
      } else {
        indexOf = function(o22) {
          var i22;
          for (i22 = 0; i22 < this.length; ++i22) {
            if (this[i22] === o22) {
              return i22;
            }
          }
          return -1;
        };
      }
      function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
          return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
      }
      addFormatToken("M", ["MM", 2], "Mo", function() {
        return this.month() + 1;
      });
      addFormatToken("MMM", 0, 0, function(format2) {
        return this.localeData().monthsShort(this, format2);
      });
      addFormatToken("MMMM", 0, 0, function(format2) {
        return this.localeData().months(this, format2);
      });
      addUnitAlias("month", "M");
      addUnitPriority("month", 8);
      addRegexToken("M", match1to2);
      addRegexToken("MM", match1to2, match2);
      addRegexToken("MMM", function(isStrict, locale2) {
        return locale2.monthsShortRegex(isStrict);
      });
      addRegexToken("MMMM", function(isStrict, locale2) {
        return locale2.monthsRegex(isStrict);
      });
      addParseToken(["M", "MM"], function(input, array) {
        array[MONTH] = toInt(input) - 1;
      });
      addParseToken(["MMM", "MMMM"], function(input, array, config22, token2) {
        var month = config22._locale.monthsParse(input, token2, config22._strict);
        if (month != null) {
          array[MONTH] = month;
        } else {
          getParsingFlags(config22).invalidMonth = input;
        }
      });
      var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
      function localeMonths(m22, format2) {
        if (!m22) {
          return isArray2(this._months) ? this._months : this._months["standalone"];
        }
        return isArray2(this._months) ? this._months[m22.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format2) ? "format" : "standalone"][m22.month()];
      }
      function localeMonthsShort(m22, format2) {
        if (!m22) {
          return isArray2(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
        }
        return isArray2(this._monthsShort) ? this._monthsShort[m22.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format2) ? "format" : "standalone"][m22.month()];
      }
      function handleStrictParse(monthName, format2, strict) {
        var i22, ii2, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
          for (i22 = 0; i22 < 12; ++i22) {
            mom = createUTC([2e3, i22]);
            this._shortMonthsParse[i22] = this.monthsShort(mom, "").toLocaleLowerCase();
            this._longMonthsParse[i22] = this.months(mom, "").toLocaleLowerCase();
          }
        }
        if (strict) {
          if (format2 === "MMM") {
            ii2 = indexOf.call(this._shortMonthsParse, llc);
            return ii2 !== -1 ? ii2 : null;
          } else {
            ii2 = indexOf.call(this._longMonthsParse, llc);
            return ii2 !== -1 ? ii2 : null;
          }
        } else {
          if (format2 === "MMM") {
            ii2 = indexOf.call(this._shortMonthsParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._longMonthsParse, llc);
            return ii2 !== -1 ? ii2 : null;
          } else {
            ii2 = indexOf.call(this._longMonthsParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._shortMonthsParse, llc);
            return ii2 !== -1 ? ii2 : null;
          }
        }
      }
      function localeMonthsParse(monthName, format2, strict) {
        var i22, mom, regex;
        if (this._monthsParseExact) {
          return handleStrictParse.call(this, monthName, format2, strict);
        }
        if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
        }
        for (i22 = 0; i22 < 12; i22++) {
          mom = createUTC([2e3, i22]);
          if (strict && !this._longMonthsParse[i22]) {
            this._longMonthsParse[i22] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i");
            this._shortMonthsParse[i22] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i");
          }
          if (!strict && !this._monthsParse[i22]) {
            regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
            this._monthsParse[i22] = new RegExp(regex.replace(".", ""), "i");
          }
          if (strict && format2 === "MMMM" && this._longMonthsParse[i22].test(monthName)) {
            return i22;
          } else if (strict && format2 === "MMM" && this._shortMonthsParse[i22].test(monthName)) {
            return i22;
          } else if (!strict && this._monthsParse[i22].test(monthName)) {
            return i22;
          }
        }
      }
      function setMonth(mom, value) {
        var dayOfMonth;
        if (!mom.isValid()) {
          return mom;
        }
        if (typeof value === "string") {
          if (/^\d+$/.test(value)) {
            value = toInt(value);
          } else {
            value = mom.localeData().monthsParse(value);
            if (!isNumber2(value)) {
              return mom;
            }
          }
        }
        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d["set" + (mom._isUTC ? "UTC" : "") + "Month"](value, dayOfMonth);
        return mom;
      }
      function getSetMonth(value) {
        if (value != null) {
          setMonth(this, value);
          hooks.updateOffset(this, true);
          return this;
        } else {
          return get(this, "Month");
        }
      }
      function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
      }
      function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, "_monthsRegex")) {
            computeMonthsParse.call(this);
          }
          if (isStrict) {
            return this._monthsShortStrictRegex;
          } else {
            return this._monthsShortRegex;
          }
        } else {
          if (!hasOwnProp(this, "_monthsShortRegex")) {
            this._monthsShortRegex = defaultMonthsShortRegex;
          }
          return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
        }
      }
      function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
          if (!hasOwnProp(this, "_monthsRegex")) {
            computeMonthsParse.call(this);
          }
          if (isStrict) {
            return this._monthsStrictRegex;
          } else {
            return this._monthsRegex;
          }
        } else {
          if (!hasOwnProp(this, "_monthsRegex")) {
            this._monthsRegex = defaultMonthsRegex;
          }
          return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
        }
      }
      function computeMonthsParse() {
        function cmpLenRev(a22, b22) {
          return b22.length - a22.length;
        }
        var shortPieces = [], longPieces = [], mixedPieces = [], i22, mom;
        for (i22 = 0; i22 < 12; i22++) {
          mom = createUTC([2e3, i22]);
          shortPieces.push(this.monthsShort(mom, ""));
          longPieces.push(this.months(mom, ""));
          mixedPieces.push(this.months(mom, ""));
          mixedPieces.push(this.monthsShort(mom, ""));
        }
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i22 = 0; i22 < 12; i22++) {
          shortPieces[i22] = regexEscape(shortPieces[i22]);
          longPieces[i22] = regexEscape(longPieces[i22]);
        }
        for (i22 = 0; i22 < 24; i22++) {
          mixedPieces[i22] = regexEscape(mixedPieces[i22]);
        }
        this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
        this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
      }
      addFormatToken("Y", 0, 0, function() {
        var y22 = this.year();
        return y22 <= 9999 ? zeroFill(y22, 4) : "+" + y22;
      });
      addFormatToken(0, ["YY", 2], 0, function() {
        return this.year() % 100;
      });
      addFormatToken(0, ["YYYY", 4], 0, "year");
      addFormatToken(0, ["YYYYY", 5], 0, "year");
      addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
      addUnitAlias("year", "y");
      addUnitPriority("year", 1);
      addRegexToken("Y", matchSigned);
      addRegexToken("YY", match1to2, match2);
      addRegexToken("YYYY", match1to4, match4);
      addRegexToken("YYYYY", match1to6, match6);
      addRegexToken("YYYYYY", match1to6, match6);
      addParseToken(["YYYYY", "YYYYYY"], YEAR);
      addParseToken("YYYY", function(input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
      });
      addParseToken("YY", function(input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
      });
      addParseToken("Y", function(input, array) {
        array[YEAR] = parseInt(input, 10);
      });
      function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
      }
      hooks.parseTwoDigitYear = function(input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
      };
      var getSetYear = makeGetSet("FullYear", true);
      function getIsLeapYear() {
        return isLeapYear(this.year());
      }
      function createDate(y22, m22, d22, h22, M22, s22, ms) {
        var date;
        if (y22 < 100 && y22 >= 0) {
          date = new Date(y22 + 400, m22, d22, h22, M22, s22, ms);
          if (isFinite(date.getFullYear())) {
            date.setFullYear(y22);
          }
        } else {
          date = new Date(y22, m22, d22, h22, M22, s22, ms);
        }
        return date;
      }
      function createUTCDate(y22) {
        var date, args;
        if (y22 < 100 && y22 >= 0) {
          args = Array.prototype.slice.call(arguments);
          args[0] = y22 + 400;
          date = new Date(Date.UTC.apply(null, args));
          if (isFinite(date.getUTCFullYear())) {
            date.setUTCFullYear(y22);
          }
        } else {
          date = new Date(Date.UTC.apply(null, arguments));
        }
        return date;
      }
      function firstWeekOffset(year, dow, doy) {
        var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
      }
      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
        if (dayOfYear <= 0) {
          resYear = year - 1;
          resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
          resYear = year + 1;
          resDayOfYear = dayOfYear - daysInYear(year);
        } else {
          resYear = year;
          resDayOfYear = dayOfYear;
        }
        return {
          year: resYear,
          dayOfYear: resDayOfYear
        };
      }
      function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
        if (week < 1) {
          resYear = mom.year() - 1;
          resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
          resWeek = week - weeksInYear(mom.year(), dow, doy);
          resYear = mom.year() + 1;
        } else {
          resYear = mom.year();
          resWeek = week;
        }
        return {
          week: resWeek,
          year: resYear
        };
      }
      function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
      }
      addFormatToken("w", ["ww", 2], "wo", "week");
      addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
      addUnitAlias("week", "w");
      addUnitAlias("isoWeek", "W");
      addUnitPriority("week", 5);
      addUnitPriority("isoWeek", 5);
      addRegexToken("w", match1to2);
      addRegexToken("ww", match1to2, match2);
      addRegexToken("W", match1to2);
      addRegexToken("WW", match1to2, match2);
      addWeekParseToken(["w", "ww", "W", "WW"], function(input, week, config22, token2) {
        week[token2.substr(0, 1)] = toInt(input);
      });
      function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
      }
      var defaultLocaleWeek = {
        dow: 0,
        doy: 6
      };
      function localeFirstDayOfWeek() {
        return this._week.dow;
      }
      function localeFirstDayOfYear() {
        return this._week.doy;
      }
      function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, "d");
      }
      function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, "d");
      }
      addFormatToken("d", 0, "do", "day");
      addFormatToken("dd", 0, 0, function(format2) {
        return this.localeData().weekdaysMin(this, format2);
      });
      addFormatToken("ddd", 0, 0, function(format2) {
        return this.localeData().weekdaysShort(this, format2);
      });
      addFormatToken("dddd", 0, 0, function(format2) {
        return this.localeData().weekdays(this, format2);
      });
      addFormatToken("e", 0, 0, "weekday");
      addFormatToken("E", 0, 0, "isoWeekday");
      addUnitAlias("day", "d");
      addUnitAlias("weekday", "e");
      addUnitAlias("isoWeekday", "E");
      addUnitPriority("day", 11);
      addUnitPriority("weekday", 11);
      addUnitPriority("isoWeekday", 11);
      addRegexToken("d", match1to2);
      addRegexToken("e", match1to2);
      addRegexToken("E", match1to2);
      addRegexToken("dd", function(isStrict, locale2) {
        return locale2.weekdaysMinRegex(isStrict);
      });
      addRegexToken("ddd", function(isStrict, locale2) {
        return locale2.weekdaysShortRegex(isStrict);
      });
      addRegexToken("dddd", function(isStrict, locale2) {
        return locale2.weekdaysRegex(isStrict);
      });
      addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config22, token2) {
        var weekday = config22._locale.weekdaysParse(input, token2, config22._strict);
        if (weekday != null) {
          week.d = weekday;
        } else {
          getParsingFlags(config22).invalidWeekday = input;
        }
      });
      addWeekParseToken(["d", "e", "E"], function(input, week, config22, token2) {
        week[token2] = toInt(input);
      });
      function parseWeekday(input, locale2) {
        if (typeof input !== "string") {
          return input;
        }
        if (!isNaN(input)) {
          return parseInt(input, 10);
        }
        input = locale2.weekdaysParse(input);
        if (typeof input === "number") {
          return input;
        }
        return null;
      }
      function parseIsoWeekday(input, locale2) {
        if (typeof input === "string") {
          return locale2.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
      }
      function shiftWeekdays(ws, n22) {
        return ws.slice(n22, 7).concat(ws.slice(0, n22));
      }
      var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
      function localeWeekdays(m22, format2) {
        var weekdays = isArray2(this._weekdays) ? this._weekdays : this._weekdays[m22 && m22 !== true && this._weekdays.isFormat.test(format2) ? "format" : "standalone"];
        return m22 === true ? shiftWeekdays(weekdays, this._week.dow) : m22 ? weekdays[m22.day()] : weekdays;
      }
      function localeWeekdaysShort(m22) {
        return m22 === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m22 ? this._weekdaysShort[m22.day()] : this._weekdaysShort;
      }
      function localeWeekdaysMin(m22) {
        return m22 === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m22 ? this._weekdaysMin[m22.day()] : this._weekdaysMin;
      }
      function handleStrictParse$1(weekdayName, format2, strict) {
        var i22, ii2, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];
          for (i22 = 0; i22 < 7; ++i22) {
            mom = createUTC([2e3, 1]).day(i22);
            this._minWeekdaysParse[i22] = this.weekdaysMin(mom, "").toLocaleLowerCase();
            this._shortWeekdaysParse[i22] = this.weekdaysShort(mom, "").toLocaleLowerCase();
            this._weekdaysParse[i22] = this.weekdays(mom, "").toLocaleLowerCase();
          }
        }
        if (strict) {
          if (format2 === "dddd") {
            ii2 = indexOf.call(this._weekdaysParse, llc);
            return ii2 !== -1 ? ii2 : null;
          } else if (format2 === "ddd") {
            ii2 = indexOf.call(this._shortWeekdaysParse, llc);
            return ii2 !== -1 ? ii2 : null;
          } else {
            ii2 = indexOf.call(this._minWeekdaysParse, llc);
            return ii2 !== -1 ? ii2 : null;
          }
        } else {
          if (format2 === "dddd") {
            ii2 = indexOf.call(this._weekdaysParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._minWeekdaysParse, llc);
            return ii2 !== -1 ? ii2 : null;
          } else if (format2 === "ddd") {
            ii2 = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._weekdaysParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._minWeekdaysParse, llc);
            return ii2 !== -1 ? ii2 : null;
          } else {
            ii2 = indexOf.call(this._minWeekdaysParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._weekdaysParse, llc);
            if (ii2 !== -1) {
              return ii2;
            }
            ii2 = indexOf.call(this._shortWeekdaysParse, llc);
            return ii2 !== -1 ? ii2 : null;
          }
        }
      }
      function localeWeekdaysParse(weekdayName, format2, strict) {
        var i22, mom, regex;
        if (this._weekdaysParseExact) {
          return handleStrictParse$1.call(this, weekdayName, format2, strict);
        }
        if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
        }
        for (i22 = 0; i22 < 7; i22++) {
          mom = createUTC([2e3, 1]).day(i22);
          if (strict && !this._fullWeekdaysParse[i22]) {
            this._fullWeekdaysParse[i22] = new RegExp("^" + this.weekdays(mom, "").replace(".", "\\.?") + "$", "i");
            this._shortWeekdaysParse[i22] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$", "i");
            this._minWeekdaysParse[i22] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$", "i");
          }
          if (!this._weekdaysParse[i22]) {
            regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
            this._weekdaysParse[i22] = new RegExp(regex.replace(".", ""), "i");
          }
          if (strict && format2 === "dddd" && this._fullWeekdaysParse[i22].test(weekdayName)) {
            return i22;
          } else if (strict && format2 === "ddd" && this._shortWeekdaysParse[i22].test(weekdayName)) {
            return i22;
          } else if (strict && format2 === "dd" && this._minWeekdaysParse[i22].test(weekdayName)) {
            return i22;
          } else if (!strict && this._weekdaysParse[i22].test(weekdayName)) {
            return i22;
          }
        }
      }
      function getSetDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
          input = parseWeekday(input, this.localeData());
          return this.add(input - day, "d");
        } else {
          return day;
        }
      }
      function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, "d");
      }
      function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        if (input != null) {
          var weekday = parseIsoWeekday(input, this.localeData());
          return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
          return this.day() || 7;
        }
      }
      function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysStrictRegex;
          } else {
            return this._weekdaysRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            this._weekdaysRegex = defaultWeekdaysRegex;
          }
          return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
        }
      }
      function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysShortStrictRegex;
          } else {
            return this._weekdaysShortRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysShortRegex")) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
          }
          return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
      }
      function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, "_weekdaysRegex")) {
            computeWeekdaysParse.call(this);
          }
          if (isStrict) {
            return this._weekdaysMinStrictRegex;
          } else {
            return this._weekdaysMinRegex;
          }
        } else {
          if (!hasOwnProp(this, "_weekdaysMinRegex")) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
          }
          return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
      }
      function computeWeekdaysParse() {
        function cmpLenRev(a22, b22) {
          return b22.length - a22.length;
        }
        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i22, mom, minp, shortp, longp;
        for (i22 = 0; i22 < 7; i22++) {
          mom = createUTC([2e3, 1]).day(i22);
          minp = regexEscape(this.weekdaysMin(mom, ""));
          shortp = regexEscape(this.weekdaysShort(mom, ""));
          longp = regexEscape(this.weekdays(mom, ""));
          minPieces.push(minp);
          shortPieces.push(shortp);
          longPieces.push(longp);
          mixedPieces.push(minp);
          mixedPieces.push(shortp);
          mixedPieces.push(longp);
        }
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;
        this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
        this._weekdaysShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
        this._weekdaysMinStrictRegex = new RegExp("^(" + minPieces.join("|") + ")", "i");
      }
      function hFormat() {
        return this.hours() % 12 || 12;
      }
      function kFormat() {
        return this.hours() || 24;
      }
      addFormatToken("H", ["HH", 2], 0, "hour");
      addFormatToken("h", ["hh", 2], 0, hFormat);
      addFormatToken("k", ["kk", 2], 0, kFormat);
      addFormatToken("hmm", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
      });
      addFormatToken("hmmss", 0, 0, function() {
        return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      addFormatToken("Hmm", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2);
      });
      addFormatToken("Hmmss", 0, 0, function() {
        return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
      });
      function meridiem(token2, lowercase) {
        addFormatToken(token2, 0, 0, function() {
          return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
      }
      meridiem("a", true);
      meridiem("A", false);
      addUnitAlias("hour", "h");
      addUnitPriority("hour", 13);
      function matchMeridiem(isStrict, locale2) {
        return locale2._meridiemParse;
      }
      addRegexToken("a", matchMeridiem);
      addRegexToken("A", matchMeridiem);
      addRegexToken("H", match1to2);
      addRegexToken("h", match1to2);
      addRegexToken("k", match1to2);
      addRegexToken("HH", match1to2, match2);
      addRegexToken("hh", match1to2, match2);
      addRegexToken("kk", match1to2, match2);
      addRegexToken("hmm", match3to4);
      addRegexToken("hmmss", match5to6);
      addRegexToken("Hmm", match3to4);
      addRegexToken("Hmmss", match5to6);
      addParseToken(["H", "HH"], HOUR);
      addParseToken(["k", "kk"], function(input, array, config22) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
      });
      addParseToken(["a", "A"], function(input, array, config22) {
        config22._isPm = config22._locale.isPM(input);
        config22._meridiem = input;
      });
      addParseToken(["h", "hh"], function(input, array, config22) {
        array[HOUR] = toInt(input);
        getParsingFlags(config22).bigHour = true;
      });
      addParseToken("hmm", function(input, array, config22) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config22).bigHour = true;
      });
      addParseToken("hmmss", function(input, array, config22) {
        var pos1 = input.length - 4, pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config22).bigHour = true;
      });
      addParseToken("Hmm", function(input, array, config22) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
      });
      addParseToken("Hmmss", function(input, array, config22) {
        var pos1 = input.length - 4, pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
      });
      function localeIsPM(input) {
        return (input + "").toLowerCase().charAt(0) === "p";
      }
      var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", true);
      function localeMeridiem(hours2, minutes2, isLower) {
        if (hours2 > 11) {
          return isLower ? "pm" : "PM";
        } else {
          return isLower ? "am" : "AM";
        }
      }
      var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,
        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,
        week: defaultLocaleWeek,
        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,
        meridiemParse: defaultLocaleMeridiemParse
      };
      var locales = {}, localeFamilies = {}, globalLocale;
      function commonPrefix(arr1, arr2) {
        var i22, minl = Math.min(arr1.length, arr2.length);
        for (i22 = 0; i22 < minl; i22 += 1) {
          if (arr1[i22] !== arr2[i22]) {
            return i22;
          }
        }
        return minl;
      }
      function normalizeLocale(key) {
        return key ? key.toLowerCase().replace("_", "-") : key;
      }
      function chooseLocale(names) {
        var i22 = 0, j22, next, locale2, split;
        while (i22 < names.length) {
          split = normalizeLocale(names[i22]).split("-");
          j22 = split.length;
          next = normalizeLocale(names[i22 + 1]);
          next = next ? next.split("-") : null;
          while (j22 > 0) {
            locale2 = loadLocale(split.slice(0, j22).join("-"));
            if (locale2) {
              return locale2;
            }
            if (next && next.length >= j22 && commonPrefix(split, next) >= j22 - 1) {
              break;
            }
            j22--;
          }
          i22++;
        }
        return globalLocale;
      }
      function isLocaleNameSane(name2) {
        return name2.match("^[^/\\\\]*$") != null;
      }
      function loadLocale(name2) {
        var oldLocale = null, aliasedRequire;
        if (locales[name2] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(name2)) {
          try {
            oldLocale = globalLocale._abbr;
            aliasedRequire = __require;
            aliasedRequire("./locale/" + name2);
            getSetGlobalLocale(oldLocale);
          } catch (e22) {
            locales[name2] = null;
          }
        }
        return locales[name2];
      }
      function getSetGlobalLocale(key, values2) {
        var data;
        if (key) {
          if (isUndefined(values2)) {
            data = getLocale(key);
          } else {
            data = defineLocale(key, values2);
          }
          if (data) {
            globalLocale = data;
          } else {
            if (typeof console !== "undefined" && console.warn) {
              console.warn("Locale " + key + " not found. Did you forget to load it?");
            }
          }
        }
        return globalLocale._abbr;
      }
      function defineLocale(name2, config22) {
        if (config22 !== null) {
          var locale2, parentConfig = baseConfig;
          config22.abbr = name2;
          if (locales[name2] != null) {
            deprecateSimple("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
            parentConfig = locales[name2]._config;
          } else if (config22.parentLocale != null) {
            if (locales[config22.parentLocale] != null) {
              parentConfig = locales[config22.parentLocale]._config;
            } else {
              locale2 = loadLocale(config22.parentLocale);
              if (locale2 != null) {
                parentConfig = locale2._config;
              } else {
                if (!localeFamilies[config22.parentLocale]) {
                  localeFamilies[config22.parentLocale] = [];
                }
                localeFamilies[config22.parentLocale].push({
                  name: name2,
                  config: config22
                });
                return null;
              }
            }
          }
          locales[name2] = new Locale(mergeConfigs(parentConfig, config22));
          if (localeFamilies[name2]) {
            localeFamilies[name2].forEach(function(x22) {
              defineLocale(x22.name, x22.config);
            });
          }
          getSetGlobalLocale(name2);
          return locales[name2];
        } else {
          delete locales[name2];
          return null;
        }
      }
      function updateLocale(name2, config22) {
        if (config22 != null) {
          var locale2, tmpLocale, parentConfig = baseConfig;
          if (locales[name2] != null && locales[name2].parentLocale != null) {
            locales[name2].set(mergeConfigs(locales[name2]._config, config22));
          } else {
            tmpLocale = loadLocale(name2);
            if (tmpLocale != null) {
              parentConfig = tmpLocale._config;
            }
            config22 = mergeConfigs(parentConfig, config22);
            if (tmpLocale == null) {
              config22.abbr = name2;
            }
            locale2 = new Locale(config22);
            locale2.parentLocale = locales[name2];
            locales[name2] = locale2;
          }
          getSetGlobalLocale(name2);
        } else {
          if (locales[name2] != null) {
            if (locales[name2].parentLocale != null) {
              locales[name2] = locales[name2].parentLocale;
              if (name2 === getSetGlobalLocale()) {
                getSetGlobalLocale(name2);
              }
            } else if (locales[name2] != null) {
              delete locales[name2];
            }
          }
        }
        return locales[name2];
      }
      function getLocale(key) {
        var locale2;
        if (key && key._locale && key._locale._abbr) {
          key = key._locale._abbr;
        }
        if (!key) {
          return globalLocale;
        }
        if (!isArray2(key)) {
          locale2 = loadLocale(key);
          if (locale2) {
            return locale2;
          }
          key = [key];
        }
        return chooseLocale(key);
      }
      function listLocales() {
        return keys(locales);
      }
      function checkOverflow(m22) {
        var overflow, a22 = m22._a;
        if (a22 && getParsingFlags(m22).overflow === -2) {
          overflow = a22[MONTH] < 0 || a22[MONTH] > 11 ? MONTH : a22[DATE] < 1 || a22[DATE] > daysInMonth(a22[YEAR], a22[MONTH]) ? DATE : a22[HOUR] < 0 || a22[HOUR] > 24 || a22[HOUR] === 24 && (a22[MINUTE] !== 0 || a22[SECOND] !== 0 || a22[MILLISECOND] !== 0) ? HOUR : a22[MINUTE] < 0 || a22[MINUTE] > 59 ? MINUTE : a22[SECOND] < 0 || a22[SECOND] > 59 ? SECOND : a22[MILLISECOND] < 0 || a22[MILLISECOND] > 999 ? MILLISECOND : -1;
          if (getParsingFlags(m22)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
          }
          if (getParsingFlags(m22)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
          }
          if (getParsingFlags(m22)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
          }
          getParsingFlags(m22).overflow = overflow;
        }
        return m22;
      }
      var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
        ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
        ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
        ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
        ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
        ["YYYY-DDD", /\d{4}-\d{3}/],
        ["YYYY-MM", /\d{4}-\d\d/, false],
        ["YYYYYYMMDD", /[+-]\d{10}/],
        ["YYYYMMDD", /\d{8}/],
        ["GGGG[W]WWE", /\d{4}W\d{3}/],
        ["GGGG[W]WW", /\d{4}W\d{2}/, false],
        ["YYYYDDD", /\d{7}/],
        ["YYYYMM", /\d{6}/, false],
        ["YYYY", /\d{4}/, false]
      ], isoTimes = [
        ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
        ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
        ["HH:mm:ss", /\d\d:\d\d:\d\d/],
        ["HH:mm", /\d\d:\d\d/],
        ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
        ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
        ["HHmmss", /\d\d\d\d\d\d/],
        ["HHmm", /\d\d\d\d/],
        ["HH", /\d\d/]
      ], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
      };
      function configFromISO(config22) {
        var i22, l22, string2 = config22._i, match5 = extendedIsoRegex.exec(string2) || basicIsoRegex.exec(string2), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
        if (match5) {
          getParsingFlags(config22).iso = true;
          for (i22 = 0, l22 = isoDatesLen; i22 < l22; i22++) {
            if (isoDates[i22][1].exec(match5[1])) {
              dateFormat = isoDates[i22][0];
              allowTime = isoDates[i22][2] !== false;
              break;
            }
          }
          if (dateFormat == null) {
            config22._isValid = false;
            return;
          }
          if (match5[3]) {
            for (i22 = 0, l22 = isoTimesLen; i22 < l22; i22++) {
              if (isoTimes[i22][1].exec(match5[3])) {
                timeFormat = (match5[2] || " ") + isoTimes[i22][0];
                break;
              }
            }
            if (timeFormat == null) {
              config22._isValid = false;
              return;
            }
          }
          if (!allowTime && timeFormat != null) {
            config22._isValid = false;
            return;
          }
          if (match5[4]) {
            if (tzRegex.exec(match5[4])) {
              tzFormat = "Z";
            } else {
              config22._isValid = false;
              return;
            }
          }
          config22._f = dateFormat + (timeFormat || "") + (tzFormat || "");
          configFromStringAndFormat(config22);
        } else {
          config22._isValid = false;
        }
      }
      function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
          untruncateYear(yearStr),
          defaultLocaleMonthsShort.indexOf(monthStr),
          parseInt(dayStr, 10),
          parseInt(hourStr, 10),
          parseInt(minuteStr, 10)
        ];
        if (secondStr) {
          result.push(parseInt(secondStr, 10));
        }
        return result;
      }
      function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
          return 2e3 + year;
        } else if (year <= 999) {
          return 1900 + year;
        }
        return year;
      }
      function preprocessRFC2822(s22) {
        return s22.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
      }
      function checkWeekday(weekdayStr, parsedInput, config22) {
        if (weekdayStr) {
          var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
          if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config22).weekdayMismatch = true;
            config22._isValid = false;
            return false;
          }
        }
        return true;
      }
      function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
          return obsOffsets[obsOffset];
        } else if (militaryOffset) {
          return 0;
        } else {
          var hm = parseInt(numOffset, 10), m22 = hm % 100, h22 = (hm - m22) / 100;
          return h22 * 60 + m22;
        }
      }
      function configFromRFC2822(config22) {
        var match5 = rfc2822.exec(preprocessRFC2822(config22._i)), parsedArray;
        if (match5) {
          parsedArray = extractFromRFC2822Strings(match5[4], match5[3], match5[2], match5[5], match5[6], match5[7]);
          if (!checkWeekday(match5[1], parsedArray, config22)) {
            return;
          }
          config22._a = parsedArray;
          config22._tzm = calculateOffset(match5[8], match5[9], match5[10]);
          config22._d = createUTCDate.apply(null, config22._a);
          config22._d.setUTCMinutes(config22._d.getUTCMinutes() - config22._tzm);
          getParsingFlags(config22).rfc2822 = true;
        } else {
          config22._isValid = false;
        }
      }
      function configFromString(config22) {
        var matched = aspNetJsonRegex.exec(config22._i);
        if (matched !== null) {
          config22._d = new Date(+matched[1]);
          return;
        }
        configFromISO(config22);
        if (config22._isValid === false) {
          delete config22._isValid;
        } else {
          return;
        }
        configFromRFC2822(config22);
        if (config22._isValid === false) {
          delete config22._isValid;
        } else {
          return;
        }
        if (config22._strict) {
          config22._isValid = false;
        } else {
          hooks.createFromInputFallback(config22);
        }
      }
      hooks.createFromInputFallback = deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(config22) {
        config22._d = new Date(config22._i + (config22._useUTC ? " UTC" : ""));
      });
      function defaults(a22, b22, c22) {
        if (a22 != null) {
          return a22;
        }
        if (b22 != null) {
          return b22;
        }
        return c22;
      }
      function currentDateArray(config22) {
        var nowValue = new Date(hooks.now());
        if (config22._useUTC) {
          return [
            nowValue.getUTCFullYear(),
            nowValue.getUTCMonth(),
            nowValue.getUTCDate()
          ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
      }
      function configFromArray(config22) {
        var i22, date, input = [], currentDate, expectedWeekday, yearToUse;
        if (config22._d) {
          return;
        }
        currentDate = currentDateArray(config22);
        if (config22._w && config22._a[DATE] == null && config22._a[MONTH] == null) {
          dayOfYearFromWeekInfo(config22);
        }
        if (config22._dayOfYear != null) {
          yearToUse = defaults(config22._a[YEAR], currentDate[YEAR]);
          if (config22._dayOfYear > daysInYear(yearToUse) || config22._dayOfYear === 0) {
            getParsingFlags(config22)._overflowDayOfYear = true;
          }
          date = createUTCDate(yearToUse, 0, config22._dayOfYear);
          config22._a[MONTH] = date.getUTCMonth();
          config22._a[DATE] = date.getUTCDate();
        }
        for (i22 = 0; i22 < 3 && config22._a[i22] == null; ++i22) {
          config22._a[i22] = input[i22] = currentDate[i22];
        }
        for (; i22 < 7; i22++) {
          config22._a[i22] = input[i22] = config22._a[i22] == null ? i22 === 2 ? 1 : 0 : config22._a[i22];
        }
        if (config22._a[HOUR] === 24 && config22._a[MINUTE] === 0 && config22._a[SECOND] === 0 && config22._a[MILLISECOND] === 0) {
          config22._nextDay = true;
          config22._a[HOUR] = 0;
        }
        config22._d = (config22._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config22._useUTC ? config22._d.getUTCDay() : config22._d.getDay();
        if (config22._tzm != null) {
          config22._d.setUTCMinutes(config22._d.getUTCMinutes() - config22._tzm);
        }
        if (config22._nextDay) {
          config22._a[HOUR] = 24;
        }
        if (config22._w && typeof config22._w.d !== "undefined" && config22._w.d !== expectedWeekday) {
          getParsingFlags(config22).weekdayMismatch = true;
        }
      }
      function dayOfYearFromWeekInfo(config22) {
        var w22, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
        w22 = config22._w;
        if (w22.GG != null || w22.W != null || w22.E != null) {
          dow = 1;
          doy = 4;
          weekYear = defaults(w22.GG, config22._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
          week = defaults(w22.W, 1);
          weekday = defaults(w22.E, 1);
          if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
          }
        } else {
          dow = config22._locale._week.dow;
          doy = config22._locale._week.doy;
          curWeek = weekOfYear(createLocal(), dow, doy);
          weekYear = defaults(w22.gg, config22._a[YEAR], curWeek.year);
          week = defaults(w22.w, curWeek.week);
          if (w22.d != null) {
            weekday = w22.d;
            if (weekday < 0 || weekday > 6) {
              weekdayOverflow = true;
            }
          } else if (w22.e != null) {
            weekday = w22.e + dow;
            if (w22.e < 0 || w22.e > 6) {
              weekdayOverflow = true;
            }
          } else {
            weekday = dow;
          }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
          getParsingFlags(config22)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
          getParsingFlags(config22)._overflowWeekday = true;
        } else {
          temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
          config22._a[YEAR] = temp.year;
          config22._dayOfYear = temp.dayOfYear;
        }
      }
      hooks.ISO_8601 = function() {
      };
      hooks.RFC_2822 = function() {
      };
      function configFromStringAndFormat(config22) {
        if (config22._f === hooks.ISO_8601) {
          configFromISO(config22);
          return;
        }
        if (config22._f === hooks.RFC_2822) {
          configFromRFC2822(config22);
          return;
        }
        config22._a = [];
        getParsingFlags(config22).empty = true;
        var string2 = "" + config22._i, i22, parsedInput, tokens2, token2, skipped, stringLength = string2.length, totalParsedInputLength = 0, era, tokenLen;
        tokens2 = expandFormat(config22._f, config22._locale).match(formattingTokens) || [];
        tokenLen = tokens2.length;
        for (i22 = 0; i22 < tokenLen; i22++) {
          token2 = tokens2[i22];
          parsedInput = (string2.match(getParseRegexForToken(token2, config22)) || [])[0];
          if (parsedInput) {
            skipped = string2.substr(0, string2.indexOf(parsedInput));
            if (skipped.length > 0) {
              getParsingFlags(config22).unusedInput.push(skipped);
            }
            string2 = string2.slice(string2.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
          }
          if (formatTokenFunctions[token2]) {
            if (parsedInput) {
              getParsingFlags(config22).empty = false;
            } else {
              getParsingFlags(config22).unusedTokens.push(token2);
            }
            addTimeToArrayFromToken(token2, parsedInput, config22);
          } else if (config22._strict && !parsedInput) {
            getParsingFlags(config22).unusedTokens.push(token2);
          }
        }
        getParsingFlags(config22).charsLeftOver = stringLength - totalParsedInputLength;
        if (string2.length > 0) {
          getParsingFlags(config22).unusedInput.push(string2);
        }
        if (config22._a[HOUR] <= 12 && getParsingFlags(config22).bigHour === true && config22._a[HOUR] > 0) {
          getParsingFlags(config22).bigHour = void 0;
        }
        getParsingFlags(config22).parsedDateParts = config22._a.slice(0);
        getParsingFlags(config22).meridiem = config22._meridiem;
        config22._a[HOUR] = meridiemFixWrap(config22._locale, config22._a[HOUR], config22._meridiem);
        era = getParsingFlags(config22).era;
        if (era !== null) {
          config22._a[YEAR] = config22._locale.erasConvertYear(era, config22._a[YEAR]);
        }
        configFromArray(config22);
        checkOverflow(config22);
      }
      function meridiemFixWrap(locale2, hour, meridiem2) {
        var isPm;
        if (meridiem2 == null) {
          return hour;
        }
        if (locale2.meridiemHour != null) {
          return locale2.meridiemHour(hour, meridiem2);
        } else if (locale2.isPM != null) {
          isPm = locale2.isPM(meridiem2);
          if (isPm && hour < 12) {
            hour += 12;
          }
          if (!isPm && hour === 12) {
            hour = 0;
          }
          return hour;
        } else {
          return hour;
        }
      }
      function configFromStringAndArray(config22) {
        var tempConfig, bestMoment, scoreToBeat, i22, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config22._f.length;
        if (configfLen === 0) {
          getParsingFlags(config22).invalidFormat = true;
          config22._d = new Date(NaN);
          return;
        }
        for (i22 = 0; i22 < configfLen; i22++) {
          currentScore = 0;
          validFormatFound = false;
          tempConfig = copyConfig({}, config22);
          if (config22._useUTC != null) {
            tempConfig._useUTC = config22._useUTC;
          }
          tempConfig._f = config22._f[i22];
          configFromStringAndFormat(tempConfig);
          if (isValid(tempConfig)) {
            validFormatFound = true;
          }
          currentScore += getParsingFlags(tempConfig).charsLeftOver;
          currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
          getParsingFlags(tempConfig).score = currentScore;
          if (!bestFormatIsValid) {
            if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
              if (validFormatFound) {
                bestFormatIsValid = true;
              }
            }
          } else {
            if (currentScore < scoreToBeat) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
            }
          }
        }
        extend(config22, bestMoment || tempConfig);
      }
      function configFromObject(config22) {
        if (config22._d) {
          return;
        }
        var i22 = normalizeObjectUnits(config22._i), dayOrDate = i22.day === void 0 ? i22.date : i22.day;
        config22._a = map2([i22.year, i22.month, dayOrDate, i22.hour, i22.minute, i22.second, i22.millisecond], function(obj) {
          return obj && parseInt(obj, 10);
        });
        configFromArray(config22);
      }
      function createFromConfig(config22) {
        var res = new Moment(checkOverflow(prepareConfig(config22)));
        if (res._nextDay) {
          res.add(1, "d");
          res._nextDay = void 0;
        }
        return res;
      }
      function prepareConfig(config22) {
        var input = config22._i, format2 = config22._f;
        config22._locale = config22._locale || getLocale(config22._l);
        if (input === null || format2 === void 0 && input === "") {
          return createInvalid({ nullInput: true });
        }
        if (typeof input === "string") {
          config22._i = input = config22._locale.preparse(input);
        }
        if (isMoment(input)) {
          return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
          config22._d = input;
        } else if (isArray2(format2)) {
          configFromStringAndArray(config22);
        } else if (format2) {
          configFromStringAndFormat(config22);
        } else {
          configFromInput(config22);
        }
        if (!isValid(config22)) {
          config22._d = null;
        }
        return config22;
      }
      function configFromInput(config22) {
        var input = config22._i;
        if (isUndefined(input)) {
          config22._d = new Date(hooks.now());
        } else if (isDate(input)) {
          config22._d = new Date(input.valueOf());
        } else if (typeof input === "string") {
          configFromString(config22);
        } else if (isArray2(input)) {
          config22._a = map2(input.slice(0), function(obj) {
            return parseInt(obj, 10);
          });
          configFromArray(config22);
        } else if (isObject2(input)) {
          configFromObject(config22);
        } else if (isNumber2(input)) {
          config22._d = new Date(input);
        } else {
          hooks.createFromInputFallback(config22);
        }
      }
      function createLocalOrUTC(input, format2, locale2, strict, isUTC) {
        var c22 = {};
        if (format2 === true || format2 === false) {
          strict = format2;
          format2 = void 0;
        }
        if (locale2 === true || locale2 === false) {
          strict = locale2;
          locale2 = void 0;
        }
        if (isObject2(input) && isObjectEmpty(input) || isArray2(input) && input.length === 0) {
          input = void 0;
        }
        c22._isAMomentObject = true;
        c22._useUTC = c22._isUTC = isUTC;
        c22._l = locale2;
        c22._i = input;
        c22._f = format2;
        c22._strict = strict;
        return createFromConfig(c22);
      }
      function createLocal(input, format2, locale2, strict) {
        return createLocalOrUTC(input, format2, locale2, strict, false);
      }
      var prototypeMin = deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other < this ? this : other;
        } else {
          return createInvalid();
        }
      }), prototypeMax = deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
          return other > this ? this : other;
        } else {
          return createInvalid();
        }
      });
      function pickBy(fn2, moments) {
        var res, i22;
        if (moments.length === 1 && isArray2(moments[0])) {
          moments = moments[0];
        }
        if (!moments.length) {
          return createLocal();
        }
        res = moments[0];
        for (i22 = 1; i22 < moments.length; ++i22) {
          if (!moments[i22].isValid() || moments[i22][fn2](res)) {
            res = moments[i22];
          }
        }
        return res;
      }
      function min() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isBefore", args);
      }
      function max() {
        var args = [].slice.call(arguments, 0);
        return pickBy("isAfter", args);
      }
      var now = function() {
        return Date.now ? Date.now() : +new Date();
      };
      var ordering = [
        "year",
        "quarter",
        "month",
        "week",
        "day",
        "hour",
        "minute",
        "second",
        "millisecond"
      ];
      function isDurationValid(m22) {
        var key, unitHasDecimal = false, i22, orderLen = ordering.length;
        for (key in m22) {
          if (hasOwnProp(m22, key) && !(indexOf.call(ordering, key) !== -1 && (m22[key] == null || !isNaN(m22[key])))) {
            return false;
          }
        }
        for (i22 = 0; i22 < orderLen; ++i22) {
          if (m22[ordering[i22]]) {
            if (unitHasDecimal) {
              return false;
            }
            if (parseFloat(m22[ordering[i22]]) !== toInt(m22[ordering[i22]])) {
              unitHasDecimal = true;
            }
          }
        }
        return true;
      }
      function isValid$1() {
        return this._isValid;
      }
      function createInvalid$1() {
        return createDuration(NaN);
      }
      function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration), years2 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months2 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
        this._isValid = isDurationValid(normalizedInput);
        this._milliseconds = +milliseconds2 + seconds2 * 1e3 + minutes2 * 6e4 + hours2 * 1e3 * 60 * 60;
        this._days = +days2 + weeks2 * 7;
        this._months = +months2 + quarters * 3 + years2 * 12;
        this._data = {};
        this._locale = getLocale();
        this._bubble();
      }
      function isDuration(obj) {
        return obj instanceof Duration;
      }
      function absRound(number) {
        if (number < 0) {
          return Math.round(-1 * number) * -1;
        } else {
          return Math.round(number);
        }
      }
      function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i22;
        for (i22 = 0; i22 < len; i22++) {
          if (dontConvert && array1[i22] !== array2[i22] || !dontConvert && toInt(array1[i22]) !== toInt(array2[i22])) {
            diffs++;
          }
        }
        return diffs + lengthDiff;
      }
      function offset(token2, separator) {
        addFormatToken(token2, 0, 0, function() {
          var offset2 = this.utcOffset(), sign2 = "+";
          if (offset2 < 0) {
            offset2 = -offset2;
            sign2 = "-";
          }
          return sign2 + zeroFill(~~(offset2 / 60), 2) + separator + zeroFill(~~offset2 % 60, 2);
        });
      }
      offset("Z", ":");
      offset("ZZ", "");
      addRegexToken("Z", matchShortOffset);
      addRegexToken("ZZ", matchShortOffset);
      addParseToken(["Z", "ZZ"], function(input, array, config22) {
        config22._useUTC = true;
        config22._tzm = offsetFromString(matchShortOffset, input);
      });
      var chunkOffset = /([\+\-]|\d\d)/gi;
      function offsetFromString(matcher, string2) {
        var matches = (string2 || "").match(matcher), chunk, parts, minutes2;
        if (matches === null) {
          return null;
        }
        chunk = matches[matches.length - 1] || [];
        parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
        minutes2 = +(parts[1] * 60) + toInt(parts[2]);
        return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
      }
      function cloneWithOffset(input, model) {
        var res, diff2;
        if (model._isUTC) {
          res = model.clone();
          diff2 = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
          res._d.setTime(res._d.valueOf() + diff2);
          hooks.updateOffset(res, false);
          return res;
        } else {
          return createLocal(input).local();
        }
      }
      function getDateOffset(m22) {
        return -Math.round(m22._d.getTimezoneOffset());
      }
      hooks.updateOffset = function() {
      };
      function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset2 = this._offset || 0, localAdjust;
        if (!this.isValid()) {
          return input != null ? this : NaN;
        }
        if (input != null) {
          if (typeof input === "string") {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
              return this;
            }
          } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
          }
          if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
          }
          this._offset = input;
          this._isUTC = true;
          if (localAdjust != null) {
            this.add(localAdjust, "m");
          }
          if (offset2 !== input) {
            if (!keepLocalTime || this._changeInProgress) {
              addSubtract(this, createDuration(input - offset2, "m"), 1, false);
            } else if (!this._changeInProgress) {
              this._changeInProgress = true;
              hooks.updateOffset(this, true);
              this._changeInProgress = null;
            }
          }
          return this;
        } else {
          return this._isUTC ? offset2 : getDateOffset(this);
        }
      }
      function getSetZone(input, keepLocalTime) {
        if (input != null) {
          if (typeof input !== "string") {
            input = -input;
          }
          this.utcOffset(input, keepLocalTime);
          return this;
        } else {
          return -this.utcOffset();
        }
      }
      function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
      }
      function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
          this.utcOffset(0, keepLocalTime);
          this._isUTC = false;
          if (keepLocalTime) {
            this.subtract(getDateOffset(this), "m");
          }
        }
        return this;
      }
      function setOffsetToParsedOffset() {
        if (this._tzm != null) {
          this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === "string") {
          var tZone = offsetFromString(matchOffset, this._i);
          if (tZone != null) {
            this.utcOffset(tZone);
          } else {
            this.utcOffset(0, true);
          }
        }
        return this;
      }
      function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
          return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;
        return (this.utcOffset() - input) % 60 === 0;
      }
      function isDaylightSavingTime() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
      }
      function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
          return this._isDSTShifted;
        }
        var c22 = {}, other;
        copyConfig(c22, this);
        c22 = prepareConfig(c22);
        if (c22._a) {
          other = c22._isUTC ? createUTC(c22._a) : createLocal(c22._a);
          this._isDSTShifted = this.isValid() && compareArrays(c22._a, other.toArray()) > 0;
        } else {
          this._isDSTShifted = false;
        }
        return this._isDSTShifted;
      }
      function isLocal() {
        return this.isValid() ? !this._isUTC : false;
      }
      function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
      }
      function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
      }
      var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
      function createDuration(input, key) {
        var duration = input, match5 = null, sign2, ret, diffRes;
        if (isDuration(input)) {
          duration = {
            ms: input._milliseconds,
            d: input._days,
            M: input._months
          };
        } else if (isNumber2(input) || !isNaN(+input)) {
          duration = {};
          if (key) {
            duration[key] = +input;
          } else {
            duration.milliseconds = +input;
          }
        } else if (match5 = aspNetRegex.exec(input)) {
          sign2 = match5[1] === "-" ? -1 : 1;
          duration = {
            y: 0,
            d: toInt(match5[DATE]) * sign2,
            h: toInt(match5[HOUR]) * sign2,
            m: toInt(match5[MINUTE]) * sign2,
            s: toInt(match5[SECOND]) * sign2,
            ms: toInt(absRound(match5[MILLISECOND] * 1e3)) * sign2
          };
        } else if (match5 = isoRegex.exec(input)) {
          sign2 = match5[1] === "-" ? -1 : 1;
          duration = {
            y: parseIso(match5[2], sign2),
            M: parseIso(match5[3], sign2),
            w: parseIso(match5[4], sign2),
            d: parseIso(match5[5], sign2),
            h: parseIso(match5[6], sign2),
            m: parseIso(match5[7], sign2),
            s: parseIso(match5[8], sign2)
          };
        } else if (duration == null) {
          duration = {};
        } else if (typeof duration === "object" && ("from" in duration || "to" in duration)) {
          diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
          duration = {};
          duration.ms = diffRes.milliseconds;
          duration.M = diffRes.months;
        }
        ret = new Duration(duration);
        if (isDuration(input) && hasOwnProp(input, "_locale")) {
          ret._locale = input._locale;
        }
        if (isDuration(input) && hasOwnProp(input, "_isValid")) {
          ret._isValid = input._isValid;
        }
        return ret;
      }
      createDuration.fn = Duration.prototype;
      createDuration.invalid = createInvalid$1;
      function parseIso(inp, sign2) {
        var res = inp && parseFloat(inp.replace(",", "."));
        return (isNaN(res) ? 0 : res) * sign2;
      }
      function positiveMomentsDifference(base, other) {
        var res = {};
        res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, "M").isAfter(other)) {
          --res.months;
        }
        res.milliseconds = +other - +base.clone().add(res.months, "M");
        return res;
      }
      function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
          return { milliseconds: 0, months: 0 };
        }
        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
          res = positiveMomentsDifference(base, other);
        } else {
          res = positiveMomentsDifference(other, base);
          res.milliseconds = -res.milliseconds;
          res.months = -res.months;
        }
        return res;
      }
      function createAdder(direction, name2) {
        return function(val, period) {
          var dur, tmp;
          if (period !== null && !isNaN(+period)) {
            deprecateSimple(name2, "moment()." + name2 + "(period, number) is deprecated. Please use moment()." + name2 + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
            tmp = val;
            val = period;
            period = tmp;
          }
          dur = createDuration(val, period);
          addSubtract(this, dur, direction);
          return this;
        };
      }
      function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds2 = duration._milliseconds, days2 = absRound(duration._days), months2 = absRound(duration._months);
        if (!mom.isValid()) {
          return;
        }
        updateOffset = updateOffset == null ? true : updateOffset;
        if (months2) {
          setMonth(mom, get(mom, "Month") + months2 * isAdding);
        }
        if (days2) {
          set$1(mom, "Date", get(mom, "Date") + days2 * isAdding);
        }
        if (milliseconds2) {
          mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
        }
        if (updateOffset) {
          hooks.updateOffset(mom, days2 || months2);
        }
      }
      var add = createAdder(1, "add"), subtract = createAdder(-1, "subtract");
      function isString2(input) {
        return typeof input === "string" || input instanceof String;
      }
      function isMomentInput(input) {
        return isMoment(input) || isDate(input) || isString2(input) || isNumber2(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
      }
      function isMomentInputObject(input) {
        var objectTest = isObject2(input) && !isObjectEmpty(input), propertyTest = false, properties = [
          "years",
          "year",
          "y",
          "months",
          "month",
          "M",
          "days",
          "day",
          "d",
          "dates",
          "date",
          "D",
          "hours",
          "hour",
          "h",
          "minutes",
          "minute",
          "m",
          "seconds",
          "second",
          "s",
          "milliseconds",
          "millisecond",
          "ms"
        ], i22, property2, propertyLen = properties.length;
        for (i22 = 0; i22 < propertyLen; i22 += 1) {
          property2 = properties[i22];
          propertyTest = propertyTest || hasOwnProp(input, property2);
        }
        return objectTest && propertyTest;
      }
      function isNumberOrStringArray(input) {
        var arrayTest = isArray2(input), dataTypeTest = false;
        if (arrayTest) {
          dataTypeTest = input.filter(function(item) {
            return !isNumber2(item) && isString2(input);
          }).length === 0;
        }
        return arrayTest && dataTypeTest;
      }
      function isCalendarSpec(input) {
        var objectTest = isObject2(input) && !isObjectEmpty(input), propertyTest = false, properties = [
          "sameDay",
          "nextDay",
          "lastDay",
          "nextWeek",
          "lastWeek",
          "sameElse"
        ], i22, property2;
        for (i22 = 0; i22 < properties.length; i22 += 1) {
          property2 = properties[i22];
          propertyTest = propertyTest || hasOwnProp(input, property2);
        }
        return objectTest && propertyTest;
      }
      function getCalendarFormat(myMoment, now2) {
        var diff2 = myMoment.diff(now2, "days", true);
        return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
      }
      function calendar$1(time, formats) {
        if (arguments.length === 1) {
          if (!arguments[0]) {
            time = void 0;
            formats = void 0;
          } else if (isMomentInput(arguments[0])) {
            time = arguments[0];
            formats = void 0;
          } else if (isCalendarSpec(arguments[0])) {
            formats = arguments[0];
            time = void 0;
          }
        }
        var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format2 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction(formats[format2]) ? formats[format2].call(this, now2) : formats[format2]);
        return this.format(output || this.localeData().calendar(format2, this, createLocal(now2)));
      }
      function clone() {
        return new Moment(this);
      }
      function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units = normalizeUnits(units) || "millisecond";
        if (units === "millisecond") {
          return this.valueOf() > localInput.valueOf();
        } else {
          return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
      }
      function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units = normalizeUnits(units) || "millisecond";
        if (units === "millisecond") {
          return this.valueOf() < localInput.valueOf();
        } else {
          return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
      }
      function isBetween(from2, to22, units, inclusivity) {
        var localFrom = isMoment(from2) ? from2 : createLocal(from2), localTo = isMoment(to22) ? to22 : createLocal(to22);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
          return false;
        }
        inclusivity = inclusivity || "()";
        return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
      }
      function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input), inputMs;
        if (!(this.isValid() && localInput.isValid())) {
          return false;
        }
        units = normalizeUnits(units) || "millisecond";
        if (units === "millisecond") {
          return this.valueOf() === localInput.valueOf();
        } else {
          inputMs = localInput.valueOf();
          return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
      }
      function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
      }
      function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
      }
      function diff(input, units, asFloat) {
        var that, zoneDelta, output;
        if (!this.isValid()) {
          return NaN;
        }
        that = cloneWithOffset(input, this);
        if (!that.isValid()) {
          return NaN;
        }
        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
        units = normalizeUnits(units);
        switch (units) {
          case "year":
            output = monthDiff(this, that) / 12;
            break;
          case "month":
            output = monthDiff(this, that);
            break;
          case "quarter":
            output = monthDiff(this, that) / 3;
            break;
          case "second":
            output = (this - that) / 1e3;
            break;
          case "minute":
            output = (this - that) / 6e4;
            break;
          case "hour":
            output = (this - that) / 36e5;
            break;
          case "day":
            output = (this - that - zoneDelta) / 864e5;
            break;
          case "week":
            output = (this - that - zoneDelta) / 6048e5;
            break;
          default:
            output = this - that;
        }
        return asFloat ? output : absFloor(output);
      }
      function monthDiff(a22, b22) {
        if (a22.date() < b22.date()) {
          return -monthDiff(b22, a22);
        }
        var wholeMonthDiff = (b22.year() - a22.year()) * 12 + (b22.month() - a22.month()), anchor = a22.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
        if (b22 - anchor < 0) {
          anchor2 = a22.clone().add(wholeMonthDiff - 1, "months");
          adjust = (b22 - anchor) / (anchor - anchor2);
        } else {
          anchor2 = a22.clone().add(wholeMonthDiff + 1, "months");
          adjust = (b22 - anchor) / (anchor2 - anchor);
        }
        return -(wholeMonthDiff + adjust) || 0;
      }
      hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
      hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
      function toString() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
      }
      function toISOString(keepOffset) {
        if (!this.isValid()) {
          return null;
        }
        var utc = keepOffset !== true, m22 = utc ? this.clone().utc() : this;
        if (m22.year() < 0 || m22.year() > 9999) {
          return formatMoment(m22, utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");
        }
        if (isFunction(Date.prototype.toISOString)) {
          if (utc) {
            return this.toDate().toISOString();
          } else {
            return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m22, "Z"));
          }
        }
        return formatMoment(m22, utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
      }
      function inspect() {
        if (!this.isValid()) {
          return "moment.invalid(/* " + this._i + " */)";
        }
        var func = "moment", zone = "", prefix, year, datetime, suffix;
        if (!this.isLocal()) {
          func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
          zone = "Z";
        }
        prefix = "[" + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
        datetime = "-MM-DD[T]HH:mm:ss.SSS";
        suffix = zone + '[")]';
        return this.format(prefix + year + datetime + suffix);
      }
      function format(inputString) {
        if (!inputString) {
          inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
      }
      function from(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
      }
      function to2(time, withoutSuffix) {
        if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
          return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
        } else {
          return this.localeData().invalidDate();
        }
      }
      function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
      }
      function locale(key) {
        var newLocaleData;
        if (key === void 0) {
          return this._locale._abbr;
        } else {
          newLocaleData = getLocale(key);
          if (newLocaleData != null) {
            this._locale = newLocaleData;
          }
          return this;
        }
      }
      var lang = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(key) {
        if (key === void 0) {
          return this.localeData();
        } else {
          return this.locale(key);
        }
      });
      function localeData() {
        return this._locale;
      }
      var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
      function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
      }
      function localStartOfDate(y22, m22, d22) {
        if (y22 < 100 && y22 >= 0) {
          return new Date(y22 + 400, m22, d22) - MS_PER_400_YEARS;
        } else {
          return new Date(y22, m22, d22).valueOf();
        }
      }
      function utcStartOfDate(y22, m22, d22) {
        if (y22 < 100 && y22 >= 0) {
          return Date.UTC(y22 + 400, m22, d22) - MS_PER_400_YEARS;
        } else {
          return Date.UTC(y22, m22, d22);
        }
      }
      function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === void 0 || units === "millisecond" || !this.isValid()) {
          return this;
        }
        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
        switch (units) {
          case "year":
            time = startOfDate(this.year(), 0, 1);
            break;
          case "quarter":
            time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
            break;
          case "month":
            time = startOfDate(this.year(), this.month(), 1);
            break;
          case "week":
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
            break;
          case "isoWeek":
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;
          case "day":
          case "date":
            time = startOfDate(this.year(), this.month(), this.date());
            break;
          case "hour":
            time = this._d.valueOf();
            time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
            break;
          case "minute":
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_MINUTE);
            break;
          case "second":
            time = this._d.valueOf();
            time -= mod$1(time, MS_PER_SECOND);
            break;
        }
        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
      }
      function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === void 0 || units === "millisecond" || !this.isValid()) {
          return this;
        }
        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
        switch (units) {
          case "year":
            time = startOfDate(this.year() + 1, 0, 1) - 1;
            break;
          case "quarter":
            time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;
          case "month":
            time = startOfDate(this.year(), this.month() + 1, 1) - 1;
            break;
          case "week":
            time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;
          case "isoWeek":
            time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;
          case "day":
          case "date":
            time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
            break;
          case "hour":
            time = this._d.valueOf();
            time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
            break;
          case "minute":
            time = this._d.valueOf();
            time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
            break;
          case "second":
            time = this._d.valueOf();
            time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
            break;
        }
        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
      }
      function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 6e4;
      }
      function unix() {
        return Math.floor(this.valueOf() / 1e3);
      }
      function toDate() {
        return new Date(this.valueOf());
      }
      function toArray() {
        var m22 = this;
        return [
          m22.year(),
          m22.month(),
          m22.date(),
          m22.hour(),
          m22.minute(),
          m22.second(),
          m22.millisecond()
        ];
      }
      function toObject() {
        var m22 = this;
        return {
          years: m22.year(),
          months: m22.month(),
          date: m22.date(),
          hours: m22.hours(),
          minutes: m22.minutes(),
          seconds: m22.seconds(),
          milliseconds: m22.milliseconds()
        };
      }
      function toJSON() {
        return this.isValid() ? this.toISOString() : null;
      }
      function isValid$2() {
        return isValid(this);
      }
      function parsingFlags() {
        return extend({}, getParsingFlags(this));
      }
      function invalidAt() {
        return getParsingFlags(this).overflow;
      }
      function creationData() {
        return {
          input: this._i,
          format: this._f,
          locale: this._locale,
          isUTC: this._isUTC,
          strict: this._strict
        };
      }
      addFormatToken("N", 0, 0, "eraAbbr");
      addFormatToken("NN", 0, 0, "eraAbbr");
      addFormatToken("NNN", 0, 0, "eraAbbr");
      addFormatToken("NNNN", 0, 0, "eraName");
      addFormatToken("NNNNN", 0, 0, "eraNarrow");
      addFormatToken("y", ["y", 1], "yo", "eraYear");
      addFormatToken("y", ["yy", 2], 0, "eraYear");
      addFormatToken("y", ["yyy", 3], 0, "eraYear");
      addFormatToken("y", ["yyyy", 4], 0, "eraYear");
      addRegexToken("N", matchEraAbbr);
      addRegexToken("NN", matchEraAbbr);
      addRegexToken("NNN", matchEraAbbr);
      addRegexToken("NNNN", matchEraName);
      addRegexToken("NNNNN", matchEraNarrow);
      addParseToken(["N", "NN", "NNN", "NNNN", "NNNNN"], function(input, array, config22, token2) {
        var era = config22._locale.erasParse(input, token2, config22._strict);
        if (era) {
          getParsingFlags(config22).era = era;
        } else {
          getParsingFlags(config22).invalidEra = input;
        }
      });
      addRegexToken("y", matchUnsigned);
      addRegexToken("yy", matchUnsigned);
      addRegexToken("yyy", matchUnsigned);
      addRegexToken("yyyy", matchUnsigned);
      addRegexToken("yo", matchEraYearOrdinal);
      addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
      addParseToken(["yo"], function(input, array, config22, token2) {
        var match5;
        if (config22._locale._eraYearOrdinalRegex) {
          match5 = input.match(config22._locale._eraYearOrdinalRegex);
        }
        if (config22._locale.eraYearOrdinalParse) {
          array[YEAR] = config22._locale.eraYearOrdinalParse(input, match5);
        } else {
          array[YEAR] = parseInt(input, 10);
        }
      });
      function localeEras(m22, format2) {
        var i22, l22, date, eras = this._eras || getLocale("en")._eras;
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          switch (typeof eras[i22].since) {
            case "string":
              date = hooks(eras[i22].since).startOf("day");
              eras[i22].since = date.valueOf();
              break;
          }
          switch (typeof eras[i22].until) {
            case "undefined":
              eras[i22].until = Infinity;
              break;
            case "string":
              date = hooks(eras[i22].until).startOf("day").valueOf();
              eras[i22].until = date.valueOf();
              break;
          }
        }
        return eras;
      }
      function localeErasParse(eraName, format2, strict) {
        var i22, l22, eras = this.eras(), name2, abbr, narrow;
        eraName = eraName.toUpperCase();
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          name2 = eras[i22].name.toUpperCase();
          abbr = eras[i22].abbr.toUpperCase();
          narrow = eras[i22].narrow.toUpperCase();
          if (strict) {
            switch (format2) {
              case "N":
              case "NN":
              case "NNN":
                if (abbr === eraName) {
                  return eras[i22];
                }
                break;
              case "NNNN":
                if (name2 === eraName) {
                  return eras[i22];
                }
                break;
              case "NNNNN":
                if (narrow === eraName) {
                  return eras[i22];
                }
                break;
            }
          } else if ([name2, abbr, narrow].indexOf(eraName) >= 0) {
            return eras[i22];
          }
        }
      }
      function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? 1 : -1;
        if (year === void 0) {
          return hooks(era.since).year();
        } else {
          return hooks(era.since).year() + (year - era.offset) * dir;
        }
      }
      function getEraName() {
        var i22, l22, val, eras = this.localeData().eras();
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i22].since <= val && val <= eras[i22].until) {
            return eras[i22].name;
          }
          if (eras[i22].until <= val && val <= eras[i22].since) {
            return eras[i22].name;
          }
        }
        return "";
      }
      function getEraNarrow() {
        var i22, l22, val, eras = this.localeData().eras();
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i22].since <= val && val <= eras[i22].until) {
            return eras[i22].narrow;
          }
          if (eras[i22].until <= val && val <= eras[i22].since) {
            return eras[i22].narrow;
          }
        }
        return "";
      }
      function getEraAbbr() {
        var i22, l22, val, eras = this.localeData().eras();
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          val = this.clone().startOf("day").valueOf();
          if (eras[i22].since <= val && val <= eras[i22].until) {
            return eras[i22].abbr;
          }
          if (eras[i22].until <= val && val <= eras[i22].since) {
            return eras[i22].abbr;
          }
        }
        return "";
      }
      function getEraYear() {
        var i22, l22, dir, val, eras = this.localeData().eras();
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          dir = eras[i22].since <= eras[i22].until ? 1 : -1;
          val = this.clone().startOf("day").valueOf();
          if (eras[i22].since <= val && val <= eras[i22].until || eras[i22].until <= val && val <= eras[i22].since) {
            return (this.year() - hooks(eras[i22].since).year()) * dir + eras[i22].offset;
          }
        }
        return this.year();
      }
      function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, "_erasNameRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
      }
      function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, "_erasAbbrRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
      }
      function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, "_erasNarrowRegex")) {
          computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
      }
      function matchEraAbbr(isStrict, locale2) {
        return locale2.erasAbbrRegex(isStrict);
      }
      function matchEraName(isStrict, locale2) {
        return locale2.erasNameRegex(isStrict);
      }
      function matchEraNarrow(isStrict, locale2) {
        return locale2.erasNarrowRegex(isStrict);
      }
      function matchEraYearOrdinal(isStrict, locale2) {
        return locale2._eraYearOrdinalRegex || matchUnsigned;
      }
      function computeErasParse() {
        var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i22, l22, eras = this.eras();
        for (i22 = 0, l22 = eras.length; i22 < l22; ++i22) {
          namePieces.push(regexEscape(eras[i22].name));
          abbrPieces.push(regexEscape(eras[i22].abbr));
          narrowPieces.push(regexEscape(eras[i22].narrow));
          mixedPieces.push(regexEscape(eras[i22].name));
          mixedPieces.push(regexEscape(eras[i22].abbr));
          mixedPieces.push(regexEscape(eras[i22].narrow));
        }
        this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
        this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
        this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
        this._erasNarrowRegex = new RegExp("^(" + narrowPieces.join("|") + ")", "i");
      }
      addFormatToken(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100;
      });
      addFormatToken(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100;
      });
      function addWeekYearFormatToken(token2, getter) {
        addFormatToken(0, [token2, token2.length], 0, getter);
      }
      addWeekYearFormatToken("gggg", "weekYear");
      addWeekYearFormatToken("ggggg", "weekYear");
      addWeekYearFormatToken("GGGG", "isoWeekYear");
      addWeekYearFormatToken("GGGGG", "isoWeekYear");
      addUnitAlias("weekYear", "gg");
      addUnitAlias("isoWeekYear", "GG");
      addUnitPriority("weekYear", 1);
      addUnitPriority("isoWeekYear", 1);
      addRegexToken("G", matchSigned);
      addRegexToken("g", matchSigned);
      addRegexToken("GG", match1to2, match2);
      addRegexToken("gg", match1to2, match2);
      addRegexToken("GGGG", match1to4, match4);
      addRegexToken("gggg", match1to4, match4);
      addRegexToken("GGGGG", match1to6, match6);
      addRegexToken("ggggg", match1to6, match6);
      addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(input, week, config22, token2) {
        week[token2.substr(0, 2)] = toInt(input);
      });
      addWeekParseToken(["gg", "GG"], function(input, week, config22, token2) {
        week[token2] = hooks.parseTwoDigitYear(input);
      });
      function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
      }
      function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
      }
      function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
      }
      function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
      }
      function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
      }
      function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
      }
      function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
          return weekOfYear(this, dow, doy).year;
        } else {
          weeksTarget = weeksInYear(input, dow, doy);
          if (week > weeksTarget) {
            week = weeksTarget;
          }
          return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
      }
      function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
      }
      addFormatToken("Q", 0, "Qo", "quarter");
      addUnitAlias("quarter", "Q");
      addUnitPriority("quarter", 7);
      addRegexToken("Q", match1);
      addParseToken("Q", function(input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
      });
      function getSetQuarter(input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
      }
      addFormatToken("D", ["DD", 2], "Do", "date");
      addUnitAlias("date", "D");
      addUnitPriority("date", 9);
      addRegexToken("D", match1to2);
      addRegexToken("DD", match1to2, match2);
      addRegexToken("Do", function(isStrict, locale2) {
        return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
      });
      addParseToken(["D", "DD"], DATE);
      addParseToken("Do", function(input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
      });
      var getSetDayOfMonth = makeGetSet("Date", true);
      addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
      addUnitAlias("dayOfYear", "DDD");
      addUnitPriority("dayOfYear", 4);
      addRegexToken("DDD", match1to3);
      addRegexToken("DDDD", match3);
      addParseToken(["DDD", "DDDD"], function(input, array, config22) {
        config22._dayOfYear = toInt(input);
      });
      function getSetDayOfYear(input) {
        var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
      }
      addFormatToken("m", ["mm", 2], 0, "minute");
      addUnitAlias("minute", "m");
      addUnitPriority("minute", 14);
      addRegexToken("m", match1to2);
      addRegexToken("mm", match1to2, match2);
      addParseToken(["m", "mm"], MINUTE);
      var getSetMinute = makeGetSet("Minutes", false);
      addFormatToken("s", ["ss", 2], 0, "second");
      addUnitAlias("second", "s");
      addUnitPriority("second", 15);
      addRegexToken("s", match1to2);
      addRegexToken("ss", match1to2, match2);
      addParseToken(["s", "ss"], SECOND);
      var getSetSecond = makeGetSet("Seconds", false);
      addFormatToken("S", 0, 0, function() {
        return ~~(this.millisecond() / 100);
      });
      addFormatToken(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10);
      });
      addFormatToken(0, ["SSS", 3], 0, "millisecond");
      addFormatToken(0, ["SSSS", 4], 0, function() {
        return this.millisecond() * 10;
      });
      addFormatToken(0, ["SSSSS", 5], 0, function() {
        return this.millisecond() * 100;
      });
      addFormatToken(0, ["SSSSSS", 6], 0, function() {
        return this.millisecond() * 1e3;
      });
      addFormatToken(0, ["SSSSSSS", 7], 0, function() {
        return this.millisecond() * 1e4;
      });
      addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
        return this.millisecond() * 1e5;
      });
      addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
        return this.millisecond() * 1e6;
      });
      addUnitAlias("millisecond", "ms");
      addUnitPriority("millisecond", 16);
      addRegexToken("S", match1to3, match1);
      addRegexToken("SS", match1to3, match2);
      addRegexToken("SSS", match1to3, match3);
      var token, getSetMillisecond;
      for (token = "SSSS"; token.length <= 9; token += "S") {
        addRegexToken(token, matchUnsigned);
      }
      function parseMs(input, array) {
        array[MILLISECOND] = toInt(("0." + input) * 1e3);
      }
      for (token = "S"; token.length <= 9; token += "S") {
        addParseToken(token, parseMs);
      }
      getSetMillisecond = makeGetSet("Milliseconds", false);
      addFormatToken("z", 0, 0, "zoneAbbr");
      addFormatToken("zz", 0, 0, "zoneName");
      function getZoneAbbr() {
        return this._isUTC ? "UTC" : "";
      }
      function getZoneName() {
        return this._isUTC ? "Coordinated Universal Time" : "";
      }
      var proto = Moment.prototype;
      proto.add = add;
      proto.calendar = calendar$1;
      proto.clone = clone;
      proto.diff = diff;
      proto.endOf = endOf;
      proto.format = format;
      proto.from = from;
      proto.fromNow = fromNow;
      proto.to = to2;
      proto.toNow = toNow;
      proto.get = stringGet;
      proto.invalidAt = invalidAt;
      proto.isAfter = isAfter;
      proto.isBefore = isBefore;
      proto.isBetween = isBetween;
      proto.isSame = isSame;
      proto.isSameOrAfter = isSameOrAfter;
      proto.isSameOrBefore = isSameOrBefore;
      proto.isValid = isValid$2;
      proto.lang = lang;
      proto.locale = locale;
      proto.localeData = localeData;
      proto.max = prototypeMax;
      proto.min = prototypeMin;
      proto.parsingFlags = parsingFlags;
      proto.set = stringSet;
      proto.startOf = startOf;
      proto.subtract = subtract;
      proto.toArray = toArray;
      proto.toObject = toObject;
      proto.toDate = toDate;
      proto.toISOString = toISOString;
      proto.inspect = inspect;
      if (typeof Symbol !== "undefined" && Symbol.for != null) {
        proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
          return "Moment<" + this.format() + ">";
        };
      }
      proto.toJSON = toJSON;
      proto.toString = toString;
      proto.unix = unix;
      proto.valueOf = valueOf;
      proto.creationData = creationData;
      proto.eraName = getEraName;
      proto.eraNarrow = getEraNarrow;
      proto.eraAbbr = getEraAbbr;
      proto.eraYear = getEraYear;
      proto.year = getSetYear;
      proto.isLeapYear = getIsLeapYear;
      proto.weekYear = getSetWeekYear;
      proto.isoWeekYear = getSetISOWeekYear;
      proto.quarter = proto.quarters = getSetQuarter;
      proto.month = getSetMonth;
      proto.daysInMonth = getDaysInMonth;
      proto.week = proto.weeks = getSetWeek;
      proto.isoWeek = proto.isoWeeks = getSetISOWeek;
      proto.weeksInYear = getWeeksInYear;
      proto.weeksInWeekYear = getWeeksInWeekYear;
      proto.isoWeeksInYear = getISOWeeksInYear;
      proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
      proto.date = getSetDayOfMonth;
      proto.day = proto.days = getSetDayOfWeek;
      proto.weekday = getSetLocaleDayOfWeek;
      proto.isoWeekday = getSetISODayOfWeek;
      proto.dayOfYear = getSetDayOfYear;
      proto.hour = proto.hours = getSetHour;
      proto.minute = proto.minutes = getSetMinute;
      proto.second = proto.seconds = getSetSecond;
      proto.millisecond = proto.milliseconds = getSetMillisecond;
      proto.utcOffset = getSetOffset;
      proto.utc = setOffsetToUTC;
      proto.local = setOffsetToLocal;
      proto.parseZone = setOffsetToParsedOffset;
      proto.hasAlignedHourOffset = hasAlignedHourOffset;
      proto.isDST = isDaylightSavingTime;
      proto.isLocal = isLocal;
      proto.isUtcOffset = isUtcOffset;
      proto.isUtc = isUtc;
      proto.isUTC = isUtc;
      proto.zoneAbbr = getZoneAbbr;
      proto.zoneName = getZoneName;
      proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth);
      proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth);
      proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear);
      proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", getSetZone);
      proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", isDaylightSavingTimeShifted);
      function createUnix(input) {
        return createLocal(input * 1e3);
      }
      function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
      }
      function preParsePostFormat(string2) {
        return string2;
      }
      var proto$1 = Locale.prototype;
      proto$1.calendar = calendar;
      proto$1.longDateFormat = longDateFormat;
      proto$1.invalidDate = invalidDate;
      proto$1.ordinal = ordinal;
      proto$1.preparse = preParsePostFormat;
      proto$1.postformat = preParsePostFormat;
      proto$1.relativeTime = relativeTime;
      proto$1.pastFuture = pastFuture;
      proto$1.set = set;
      proto$1.eras = localeEras;
      proto$1.erasParse = localeErasParse;
      proto$1.erasConvertYear = localeErasConvertYear;
      proto$1.erasAbbrRegex = erasAbbrRegex;
      proto$1.erasNameRegex = erasNameRegex;
      proto$1.erasNarrowRegex = erasNarrowRegex;
      proto$1.months = localeMonths;
      proto$1.monthsShort = localeMonthsShort;
      proto$1.monthsParse = localeMonthsParse;
      proto$1.monthsRegex = monthsRegex;
      proto$1.monthsShortRegex = monthsShortRegex;
      proto$1.week = localeWeek;
      proto$1.firstDayOfYear = localeFirstDayOfYear;
      proto$1.firstDayOfWeek = localeFirstDayOfWeek;
      proto$1.weekdays = localeWeekdays;
      proto$1.weekdaysMin = localeWeekdaysMin;
      proto$1.weekdaysShort = localeWeekdaysShort;
      proto$1.weekdaysParse = localeWeekdaysParse;
      proto$1.weekdaysRegex = weekdaysRegex;
      proto$1.weekdaysShortRegex = weekdaysShortRegex;
      proto$1.weekdaysMinRegex = weekdaysMinRegex;
      proto$1.isPM = localeIsPM;
      proto$1.meridiem = localeMeridiem;
      function get$1(format2, index2, field, setter) {
        var locale2 = getLocale(), utc = createUTC().set(setter, index2);
        return locale2[field](utc, format2);
      }
      function listMonthsImpl(format2, index2, field) {
        if (isNumber2(format2)) {
          index2 = format2;
          format2 = void 0;
        }
        format2 = format2 || "";
        if (index2 != null) {
          return get$1(format2, index2, field, "month");
        }
        var i22, out = [];
        for (i22 = 0; i22 < 12; i22++) {
          out[i22] = get$1(format2, i22, field, "month");
        }
        return out;
      }
      function listWeekdaysImpl(localeSorted, format2, index2, field) {
        if (typeof localeSorted === "boolean") {
          if (isNumber2(format2)) {
            index2 = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
        } else {
          format2 = localeSorted;
          index2 = format2;
          localeSorted = false;
          if (isNumber2(format2)) {
            index2 = format2;
            format2 = void 0;
          }
          format2 = format2 || "";
        }
        var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0, i22, out = [];
        if (index2 != null) {
          return get$1(format2, (index2 + shift) % 7, field, "day");
        }
        for (i22 = 0; i22 < 7; i22++) {
          out[i22] = get$1(format2, (i22 + shift) % 7, field, "day");
        }
        return out;
      }
      function listMonths(format2, index2) {
        return listMonthsImpl(format2, index2, "months");
      }
      function listMonthsShort(format2, index2) {
        return listMonthsImpl(format2, index2, "monthsShort");
      }
      function listWeekdays(localeSorted, format2, index2) {
        return listWeekdaysImpl(localeSorted, format2, index2, "weekdays");
      }
      function listWeekdaysShort(localeSorted, format2, index2) {
        return listWeekdaysImpl(localeSorted, format2, index2, "weekdaysShort");
      }
      function listWeekdaysMin(localeSorted, format2, index2) {
        return listWeekdaysImpl(localeSorted, format2, index2, "weekdaysMin");
      }
      getSetGlobalLocale("en", {
        eras: [
          {
            since: "0001-01-01",
            until: Infinity,
            offset: 1,
            name: "Anno Domini",
            narrow: "AD",
            abbr: "AD"
          },
          {
            since: "0000-12-31",
            until: -Infinity,
            offset: 1,
            name: "Before Christ",
            narrow: "BC",
            abbr: "BC"
          }
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(number) {
          var b22 = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b22 === 1 ? "st" : b22 === 2 ? "nd" : b22 === 3 ? "rd" : "th";
          return number + output;
        }
      });
      hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale);
      hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale);
      var mathAbs2 = Math.abs;
      function abs() {
        var data = this._data;
        this._milliseconds = mathAbs2(this._milliseconds);
        this._days = mathAbs2(this._days);
        this._months = mathAbs2(this._months);
        data.milliseconds = mathAbs2(data.milliseconds);
        data.seconds = mathAbs2(data.seconds);
        data.minutes = mathAbs2(data.minutes);
        data.hours = mathAbs2(data.hours);
        data.months = mathAbs2(data.months);
        data.years = mathAbs2(data.years);
        return this;
      }
      function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);
        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;
        return duration._bubble();
      }
      function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
      }
      function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
      }
      function absCeil(number) {
        if (number < 0) {
          return Math.floor(number);
        } else {
          return Math.ceil(number);
        }
      }
      function bubble() {
        var milliseconds2 = this._milliseconds, days2 = this._days, months2 = this._months, data = this._data, seconds2, minutes2, hours2, years2, monthsFromDays;
        if (!(milliseconds2 >= 0 && days2 >= 0 && months2 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months2 <= 0)) {
          milliseconds2 += absCeil(monthsToDays(months2) + days2) * 864e5;
          days2 = 0;
          months2 = 0;
        }
        data.milliseconds = milliseconds2 % 1e3;
        seconds2 = absFloor(milliseconds2 / 1e3);
        data.seconds = seconds2 % 60;
        minutes2 = absFloor(seconds2 / 60);
        data.minutes = minutes2 % 60;
        hours2 = absFloor(minutes2 / 60);
        data.hours = hours2 % 24;
        days2 += absFloor(hours2 / 24);
        monthsFromDays = absFloor(daysToMonths(days2));
        months2 += monthsFromDays;
        days2 -= absCeil(monthsToDays(monthsFromDays));
        years2 = absFloor(months2 / 12);
        months2 %= 12;
        data.days = days2;
        data.months = months2;
        data.years = years2;
        return this;
      }
      function daysToMonths(days2) {
        return days2 * 4800 / 146097;
      }
      function monthsToDays(months2) {
        return months2 * 146097 / 4800;
      }
      function as(units) {
        if (!this.isValid()) {
          return NaN;
        }
        var days2, months2, milliseconds2 = this._milliseconds;
        units = normalizeUnits(units);
        if (units === "month" || units === "quarter" || units === "year") {
          days2 = this._days + milliseconds2 / 864e5;
          months2 = this._months + daysToMonths(days2);
          switch (units) {
            case "month":
              return months2;
            case "quarter":
              return months2 / 3;
            case "year":
              return months2 / 12;
          }
        } else {
          days2 = this._days + Math.round(monthsToDays(this._months));
          switch (units) {
            case "week":
              return days2 / 7 + milliseconds2 / 6048e5;
            case "day":
              return days2 + milliseconds2 / 864e5;
            case "hour":
              return days2 * 24 + milliseconds2 / 36e5;
            case "minute":
              return days2 * 1440 + milliseconds2 / 6e4;
            case "second":
              return days2 * 86400 + milliseconds2 / 1e3;
            case "millisecond":
              return Math.floor(days2 * 864e5) + milliseconds2;
            default:
              throw new Error("Unknown unit " + units);
          }
        }
      }
      function valueOf$1() {
        if (!this.isValid()) {
          return NaN;
        }
        return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
      }
      function makeAs(alias) {
        return function() {
          return this.as(alias);
        };
      }
      var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y");
      function clone$1() {
        return createDuration(this);
      }
      function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + "s"]() : NaN;
      }
      function makeGetter(name2) {
        return function() {
          return this.isValid() ? this._data[name2] : NaN;
        };
      }
      var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
      function weeks() {
        return absFloor(this.days() / 7);
      }
      var round2 = Math.round, thresholds = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        w: null,
        M: 11
      };
      function substituteTimeAgo(string2, number, withoutSuffix, isFuture, locale2) {
        return locale2.relativeTime(number || 1, !!withoutSuffix, string2, isFuture);
      }
      function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
        var duration = createDuration(posNegDuration).abs(), seconds2 = round2(duration.as("s")), minutes2 = round2(duration.as("m")), hours2 = round2(duration.as("h")), days2 = round2(duration.as("d")), months2 = round2(duration.as("M")), weeks2 = round2(duration.as("w")), years2 = round2(duration.as("y")), a22 = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
        if (thresholds2.w != null) {
          a22 = a22 || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
        }
        a22 = a22 || months2 <= 1 && ["M"] || months2 < thresholds2.M && ["MM", months2] || years2 <= 1 && ["y"] || ["yy", years2];
        a22[2] = withoutSuffix;
        a22[3] = +posNegDuration > 0;
        a22[4] = locale2;
        return substituteTimeAgo.apply(null, a22);
      }
      function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === void 0) {
          return round2;
        }
        if (typeof roundingFunction === "function") {
          round2 = roundingFunction;
          return true;
        }
        return false;
      }
      function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === void 0) {
          return false;
        }
        if (limit === void 0) {
          return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === "s") {
          thresholds.ss = limit - 1;
        }
        return true;
      }
      function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var withSuffix = false, th2 = thresholds, locale2, output;
        if (typeof argWithSuffix === "object") {
          argThresholds = argWithSuffix;
          argWithSuffix = false;
        }
        if (typeof argWithSuffix === "boolean") {
          withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === "object") {
          th2 = Object.assign({}, thresholds, argThresholds);
          if (argThresholds.s != null && argThresholds.ss == null) {
            th2.ss = argThresholds.s - 1;
          }
        }
        locale2 = this.localeData();
        output = relativeTime$1(this, !withSuffix, th2, locale2);
        if (withSuffix) {
          output = locale2.pastFuture(+this, output);
        }
        return locale2.postformat(output);
      }
      var abs$1 = Math.abs;
      function sign(x22) {
        return (x22 > 0) - (x22 < 0) || +x22;
      }
      function toISOString$1() {
        if (!this.isValid()) {
          return this.localeData().invalidDate();
        }
        var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months2 = abs$1(this._months), minutes2, hours2, years2, s22, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
        if (!total) {
          return "P0D";
        }
        minutes2 = absFloor(seconds2 / 60);
        hours2 = absFloor(minutes2 / 60);
        seconds2 %= 60;
        minutes2 %= 60;
        years2 = absFloor(months2 / 12);
        months2 %= 12;
        s22 = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
        totalSign = total < 0 ? "-" : "";
        ymSign = sign(this._months) !== sign(total) ? "-" : "";
        daysSign = sign(this._days) !== sign(total) ? "-" : "";
        hmsSign = sign(this._milliseconds) !== sign(total) ? "-" : "";
        return totalSign + "P" + (years2 ? ymSign + years2 + "Y" : "") + (months2 ? ymSign + months2 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s22 + "S" : "");
      }
      var proto$2 = Duration.prototype;
      proto$2.isValid = isValid$1;
      proto$2.abs = abs;
      proto$2.add = add$1;
      proto$2.subtract = subtract$1;
      proto$2.as = as;
      proto$2.asMilliseconds = asMilliseconds;
      proto$2.asSeconds = asSeconds;
      proto$2.asMinutes = asMinutes;
      proto$2.asHours = asHours;
      proto$2.asDays = asDays;
      proto$2.asWeeks = asWeeks;
      proto$2.asMonths = asMonths;
      proto$2.asQuarters = asQuarters;
      proto$2.asYears = asYears;
      proto$2.valueOf = valueOf$1;
      proto$2._bubble = bubble;
      proto$2.clone = clone$1;
      proto$2.get = get$2;
      proto$2.milliseconds = milliseconds;
      proto$2.seconds = seconds;
      proto$2.minutes = minutes;
      proto$2.hours = hours;
      proto$2.days = days;
      proto$2.weeks = weeks;
      proto$2.months = months;
      proto$2.years = years;
      proto$2.humanize = humanize;
      proto$2.toISOString = toISOString$1;
      proto$2.toString = toISOString$1;
      proto$2.toJSON = toISOString$1;
      proto$2.locale = locale;
      proto$2.localeData = localeData;
      proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1);
      proto$2.lang = lang;
      addFormatToken("X", 0, 0, "unix");
      addFormatToken("x", 0, 0, "valueOf");
      addRegexToken("x", matchSigned);
      addRegexToken("X", matchTimestamp);
      addParseToken("X", function(input, array, config22) {
        config22._d = new Date(parseFloat(input) * 1e3);
      });
      addParseToken("x", function(input, array, config22) {
        config22._d = new Date(toInt(input));
      });
      hooks.version = "2.29.4";
      setHookCallback(createLocal);
      hooks.fn = proto;
      hooks.min = min;
      hooks.max = max;
      hooks.now = now;
      hooks.utc = createUTC;
      hooks.unix = createUnix;
      hooks.months = listMonths;
      hooks.isDate = isDate;
      hooks.locale = getSetGlobalLocale;
      hooks.invalid = createInvalid;
      hooks.duration = createDuration;
      hooks.isMoment = isMoment;
      hooks.weekdays = listWeekdays;
      hooks.parseZone = createInZone;
      hooks.localeData = getLocale;
      hooks.isDuration = isDuration;
      hooks.monthsShort = listMonthsShort;
      hooks.weekdaysMin = listWeekdaysMin;
      hooks.defineLocale = defineLocale;
      hooks.updateLocale = updateLocale;
      hooks.locales = listLocales;
      hooks.weekdaysShort = listWeekdaysShort;
      hooks.normalizeUnits = normalizeUnits;
      hooks.relativeTimeRounding = getSetRelativeTimeRounding;
      hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
      hooks.calendarFormat = getCalendarFormat;
      hooks.prototype = proto;
      hooks.HTML5_FMT = {
        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
        DATE: "YYYY-MM-DD",
        TIME: "HH:mm",
        TIME_SECONDS: "HH:mm:ss",
        TIME_MS: "HH:mm:ss.SSS",
        WEEK: "GGGG-[W]WW",
        MONTH: "YYYY-MM"
      };
      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        _setPrototypeOf(subClass, superClass);
      }
      function _setPrototypeOf(o22, p22) {
        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o32, p32) {
          o32.__proto__ = p32;
          return o32;
        };
        return _setPrototypeOf(o22, p22);
      }
      function _objectWithoutPropertiesLoose(source, excluded) {
        if (source == null)
          return {};
        var target = {};
        var sourceKeys = Object.keys(source);
        var key, i22;
        for (i22 = 0; i22 < sourceKeys.length; i22++) {
          key = sourceKeys[i22];
          if (excluded.indexOf(key) >= 0)
            continue;
          target[key] = source[key];
        }
        return target;
      }
      function _assertThisInitialized(self2) {
        if (self2 === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return self2;
      }
      function isNodeFound(current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        }
        if (current.correspondingElement) {
          return current.correspondingElement.classList.contains(ignoreClass);
        }
        return current.classList.contains(ignoreClass);
      }
      function findHighest(current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        }
        while (current.parentNode || current.host) {
          if (current.parentNode && isNodeFound(current, componentNode, ignoreClass)) {
            return true;
          }
          current = current.parentNode || current.host;
        }
        return current;
      }
      function clickedScrollbar(evt) {
        return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
      }
      var testPassiveEventSupport = function testPassiveEventSupport2() {
        if (typeof window === "undefined" || typeof window.addEventListener !== "function") {
          return;
        }
        var passive = false;
        var options = Object.defineProperty({}, "passive", {
          get: function get2() {
            passive = true;
          }
        });
        var noop2 = function noop3() {
        };
        window.addEventListener("testPassiveEventSupport", noop2, options);
        window.removeEventListener("testPassiveEventSupport", noop2, options);
        return passive;
      };
      function autoInc(seed) {
        if (seed === void 0) {
          seed = 0;
        }
        return function() {
          return ++seed;
        };
      }
      var uid = autoInc();
      var passiveEventSupport;
      var handlersMap = {};
      var enabledInstances = {};
      var touchEvents = ["touchstart", "touchmove"];
      var IGNORE_CLASS_NAME = "ignore-react-onclickoutside";
      function getEventHandlerOptions(instance, eventName) {
        var handlerOptions = null;
        var isTouchEvent2 = touchEvents.indexOf(eventName) !== -1;
        if (isTouchEvent2 && passiveEventSupport) {
          handlerOptions = {
            passive: !instance.props.preventDefault
          };
        }
        return handlerOptions;
      }
      function onClickOutsideHOC(WrappedComponent, config22) {
        var _class, _temp;
        var componentName = WrappedComponent.displayName || WrappedComponent.name || "Component";
        return _temp = _class = function(_Component) {
          _inheritsLoose(onClickOutside, _Component);
          function onClickOutside(props) {
            var _this;
            _this = _Component.call(this, props) || this;
            _this.__outsideClickHandler = function(event) {
              if (typeof _this.__clickOutsideHandlerProp === "function") {
                _this.__clickOutsideHandlerProp(event);
                return;
              }
              var instance = _this.getInstance();
              if (typeof instance.props.handleClickOutside === "function") {
                instance.props.handleClickOutside(event);
                return;
              }
              if (typeof instance.handleClickOutside === "function") {
                instance.handleClickOutside(event);
                return;
              }
              throw new Error("WrappedComponent: " + componentName + " lacks a handleClickOutside(event) function for processing outside click events.");
            };
            _this.__getComponentNode = function() {
              var instance = _this.getInstance();
              if (config22 && typeof config22.setClickOutsideRef === "function") {
                return config22.setClickOutsideRef()(instance);
              }
              if (typeof instance.setClickOutsideRef === "function") {
                return instance.setClickOutsideRef();
              }
              return reactDom.exports.findDOMNode(instance);
            };
            _this.enableOnClickOutside = function() {
              if (typeof document === "undefined" || enabledInstances[_this._uid]) {
                return;
              }
              if (typeof passiveEventSupport === "undefined") {
                passiveEventSupport = testPassiveEventSupport();
              }
              enabledInstances[_this._uid] = true;
              var events = _this.props.eventTypes;
              if (!events.forEach) {
                events = [events];
              }
              handlersMap[_this._uid] = function(event) {
                if (_this.componentNode === null)
                  return;
                if (_this.props.preventDefault) {
                  event.preventDefault();
                }
                if (_this.props.stopPropagation) {
                  event.stopPropagation();
                }
                if (_this.props.excludeScrollbar && clickedScrollbar(event))
                  return;
                var current = event.composed && event.composedPath && event.composedPath().shift() || event.target;
                if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {
                  return;
                }
                _this.__outsideClickHandler(event);
              };
              events.forEach(function(eventName) {
                document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_assertThisInitialized(_this), eventName));
              });
            };
            _this.disableOnClickOutside = function() {
              delete enabledInstances[_this._uid];
              var fn2 = handlersMap[_this._uid];
              if (fn2 && typeof document !== "undefined") {
                var events = _this.props.eventTypes;
                if (!events.forEach) {
                  events = [events];
                }
                events.forEach(function(eventName) {
                  return document.removeEventListener(eventName, fn2, getEventHandlerOptions(_assertThisInitialized(_this), eventName));
                });
                delete handlersMap[_this._uid];
              }
            };
            _this.getRef = function(ref) {
              return _this.instanceRef = ref;
            };
            _this._uid = uid();
            return _this;
          }
          var _proto = onClickOutside.prototype;
          _proto.getInstance = function getInstance() {
            if (WrappedComponent.prototype && !WrappedComponent.prototype.isReactComponent) {
              return this;
            }
            var ref = this.instanceRef;
            return ref.getInstance ? ref.getInstance() : ref;
          };
          _proto.componentDidMount = function componentDidMount() {
            if (typeof document === "undefined" || !document.createElement) {
              return;
            }
            var instance = this.getInstance();
            if (config22 && typeof config22.handleClickOutside === "function") {
              this.__clickOutsideHandlerProp = config22.handleClickOutside(instance);
              if (typeof this.__clickOutsideHandlerProp !== "function") {
                throw new Error("WrappedComponent: " + componentName + " lacks a function for processing outside click events specified by the handleClickOutside config option.");
              }
            }
            this.componentNode = this.__getComponentNode();
            if (this.props.disableOnClickOutside)
              return;
            this.enableOnClickOutside();
          };
          _proto.componentDidUpdate = function componentDidUpdate() {
            this.componentNode = this.__getComponentNode();
          };
          _proto.componentWillUnmount = function componentWillUnmount() {
            this.disableOnClickOutside();
          };
          _proto.render = function render2() {
            var _this$props = this.props;
            _this$props.excludeScrollbar;
            var props = _objectWithoutPropertiesLoose(_this$props, ["excludeScrollbar"]);
            if (WrappedComponent.prototype && WrappedComponent.prototype.isReactComponent) {
              props.ref = this.getRef;
            } else {
              props.wrappedRef = this.getRef;
            }
            props.disableOnClickOutside = this.disableOnClickOutside;
            props.enableOnClickOutside = this.enableOnClickOutside;
            return react.exports.createElement(WrappedComponent, props);
          };
          return onClickOutside;
        }(react.exports.Component), _class.displayName = "OnClickOutside(" + componentName + ")", _class.defaultProps = {
          eventTypes: ["mousedown", "touchstart"],
          excludeScrollbar: config22 && config22.excludeScrollbar || false,
          outsideClickIgnoreClass: IGNORE_CLASS_NAME,
          preventDefault: false,
          stopPropagation: false
        }, _class.getClass = function() {
          return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;
        }, _temp;
      }
      const LOCALSTORAGEKEY = "tina.isEditing";
      const isSSR = typeof window === "undefined";
      const isEditing = () => {
        if (!isSSR) {
          const isEdit = window.localStorage && window.localStorage.getItem(LOCALSTORAGEKEY);
          return isEdit && isEdit === "true";
        }
        return false;
      };
      React__default.createContext({
        edit: isEditing(),
        setEdit: void 0,
        formsRegistering: false,
        setFormsRegistering: void 0
      });
      React__default.createContext({
        state: {
          payload: {}
        },
        setRequest: () => {
        },
        isLoading: false,
        isDummyContainer: true
      });
      var __defProp2 = Object.defineProperty;
      var __defNormalProp = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
      var __publicField = (obj, key, value) => {
        __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
        return value;
      };
      const ModalContainerContext = react.exports.createContext(null);
      function useModalContainer() {
        const modalContainer = react.exports.useContext(ModalContainerContext);
        if (!modalContainer) {
          throw new Error("No Modal Container context provided");
        }
        return modalContainer;
      }
      const ModalOverlay = ({ children }) => {
        return react.exports.createElement("div", {
          className: "fixed inset-0 z-modal w-screen h-screen overflow-y-auto"
        }, children, react.exports.createElement("div", {
          className: "fixed -z-1 inset-0 opacity-80 bg-gradient-to-br from-gray-800 via-gray-900 to-black"
        }));
      };
      const Modal2 = (props) => {
        const { portalNode } = useModalContainer();
        if (!portalNode)
          return null;
        return reactDom.exports.createPortal(react.exports.createElement(ModalOverlay, null, react.exports.createElement("div", {
          ...props
        })), portalNode);
      };
      const ModalActions = ({ children }) => {
        return react.exports.createElement("div", {
          className: "w-full flex justify-between gap-4 items-center px-5 pb-5 rounded-b-md"
        }, children);
      };
      const ModalBody = ({ className = "", padded = false, ...props }) => React__default.createElement("div", {
        className: `${padded ? "p-5" : "p-0"} m-0 overflow-hidden flex flex-col min-h-[160px] [&:last-child]:rounded-[0_0_5px_5px] ${className}`,
        ...props
      });
      const CloseIcon2 = ({ ...props }) => react.exports.createElement("svg", {
        viewBox: "0 0 32 32",
        fill: "inherit",
        xmlns: "http://www.w3.org/2000/svg",
        ...props
      }, react.exports.createElement("path", {
        d: "M5 6.2684L24.7316 26L26 24.7316L6.2684 5L5 6.2684Z"
      }), react.exports.createElement("path", {
        d: "M6.2684 26L26 6.2684L24.7316 5L5 24.7316L6.2684 26Z"
      }));
      const LeftArrowIcon = ({ ...props }) => react.exports.createElement("svg", {
        viewBox: "0 0 32 32",
        fill: "inherit",
        xmlns: "http://www.w3.org/2000/svg",
        ...props
      }, react.exports.createElement("path", {
        d: "M21 7.208L19.7346 6L10.5227 14.7939C9.82527 15.4597 9.82626 16.5412 10.5227 17.2061L19.7346 26L21 24.792L11.7901 16L21 7.208Z"
      }));
      const TrashIcon = ({ ...props }) => react.exports.createElement("svg", {
        viewBox: "0 0 32 32",
        fill: "inherit",
        xmlns: "http://www.w3.org/2000/svg",
        ...props
      }, react.exports.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M16.9 4.2V6.9H25V8.7H7V6.9H15.1V4.2H16.9ZM7.77201 10.5H24.2279L22.4102 24.1332C22.2853 25.0698 21.4406 25.8 20.4977 25.8H11.5022C10.5561 25.8 9.71404 25.0653 9.58977 24.1332L7.77201 10.5ZM22.172 12.3H9.82791L11.3739 23.8953C11.3788 23.9318 11.4569 24 11.5022 24H20.4977C20.5432 24 20.6209 23.9328 20.6259 23.8953L22.172 12.3Z"
      }));
      const ModalHeader = ({ children, close }) => {
        return react.exports.createElement("div", {
          className: "h-14 flex items-center justify-between px-5 border-b border-gray-200 m-0"
        }, react.exports.createElement(ModalTitle, null, children), close && react.exports.createElement("div", {
          onClick: close,
          className: "flex items-center fill-gray-400 cursor-pointer transition-colors duration-100 ease-out hover:fill-gray-700"
        }, react.exports.createElement(CloseIcon2, {
          className: "w-6 h-auto"
        })));
      };
      const ModalTitle = ({ children }) => {
        return react.exports.createElement("h2", {
          className: "text-gray-600 font-sans font-medium text-base leading-none m-0 block truncate"
        }, children);
      };
      const PopupModal = ({ className = "", style = {}, ...props }) => React__default.createElement("div", {
        className: `block z-0 overflow-visible bg-gray-50 rounded-[5px] my-10 mx-auto w-[460px] max-w-[90%] ${className}`,
        style: {
          animation: "popup-down 150ms ease-out 1",
          ...style
        },
        ...props
      });
      const ERROR_MISSING_CMS = `useCMS could not find an instance of CMS`;
      const CMSContext = react.exports.createContext(null);
      function useCMS$1() {
        const cms = react.exports.useContext(CMSContext);
        if (!cms) {
          throw new Error(ERROR_MISSING_CMS);
        }
        const [, setEnabled] = react.exports.useState(cms.enabled);
        react.exports.useEffect(() => {
          return cms.events.subscribe("cms", () => {
            setEnabled(cms.enabled);
          });
        }, [cms]);
        return cms;
      }
      function ChevronDownIcon(props, svgRef) {
        return react.exports.createElement("svg", Object.assign({
          xmlns: "http://www.w3.org/2000/svg",
          viewBox: "0 0 20 20",
          fill: "currentColor",
          "aria-hidden": "true",
          ref: svgRef
        }, props), react.exports.createElement("path", {
          fillRule: "evenodd",
          d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
          clipRule: "evenodd"
        }));
      }
      react.exports.forwardRef(ChevronDownIcon);
      loader.config({
        paths: { vs: "https://cdn.jsdelivr.net/npm/monaco-editor@0.31.1/min/vs" }
      });
      react.exports.createContext(false);
      ({
        name: PropTypes.string,
        type: PropTypes.string,
        Component: PropTypes.any.isRequired,
        children: PropTypes.any
      });
      const Button2 = ({
        variant = "secondary",
        as: Tag2 = "button",
        size = "medium",
        busy,
        disabled,
        rounded = "full",
        children,
        className,
        ...props
      }) => {
        const baseClasses = "icon-parent border-0 inline-flex items-center font-medium focus:outline-none focus:ring-2 focus:shadow-outline text-center inline-flex justify-center transition-all duration-150 ease-out ";
        const variantClasses = {
          primary: `shadow text-white bg-blue-500 hover:bg-blue-600 focus:ring-blue-500`,
          secondary: `shadow text-gray-500 hover:text-blue-500 bg-gray-50 hover:bg-white border border-gray-200`,
          white: `shadow text-gray-500 hover:text-blue-500 bg-white hover:bg-gray-50 border border-gray-200`,
          ghost: `text-gray-500 hover:text-blue-500 hover:shadow border border-transparent hover:border-gray-200 bg-transparent`,
          danger: `shadow text-white bg-red-500 hover:bg-red-600 focus:ring-red-500`
        };
        const state = busy ? `busy` : disabled ? `disabled` : `default`;
        const stateClasses = {
          disabled: `pointer-events-none	opacity-30 cursor-not-allowed`,
          busy: `pointer-events-none opacity-70 cursor-wait`,
          default: ``
        };
        const roundedClasses = {
          full: `rounded-full`,
          left: `rounded-l-full`,
          right: `rounded-r-full`
        };
        const sizeClasses = {
          small: `text-xs h-8 px-3`,
          medium: `text-sm h-10 px-4`,
          custom: ``
        };
        return react.exports.createElement(Tag2, {
          className: `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${stateClasses[state]} ${roundedClasses[rounded]} ${className}`,
          ...props
        }, children);
      };
      const IconButton3 = ({
        variant = "secondary",
        size = "medium",
        busy,
        disabled,
        children,
        className,
        ...props
      }) => {
        const baseClasses = "icon-parent inline-flex items-center border border-transparent text-sm font-medium focus:outline-none focus:ring-2 focus:shadow-outline text-center inline-flex justify-center transition-all duration-150 ease-out rounded-full ";
        const variantClasses = {
          primary: `shadow text-white bg-blue-500 hover:bg-blue-600 focus:ring-blue-500`,
          secondary: `shadow text-gray-500 hover:text-blue-500 bg-gray-50 hover:bg-white border border-gray-200`,
          white: `shadow text-gray-500 hover:text-blue-500 bg-white hover:bg-gray-50 border border-gray-200`,
          ghost: `text-gray-500 hover:text-blue-500 hover:shadow border border-transparent hover:border-gray-200 bg-transparent`
        };
        const state = busy ? `busy` : disabled ? `disabled` : `default`;
        const stateClasses = {
          disabled: `pointer-events-none	opacity-30 cursor-not-allowed`,
          busy: `pointer-events-none opacity-70 cursor-wait`,
          default: ``
        };
        const sizeClasses = {
          small: `h-7 w-7`,
          medium: `h-9 w-9`,
          custom: ``
        };
        return react.exports.createElement("button", {
          className: `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${stateClasses[state]} ${className}`,
          ...props
        }, children);
      };
      var keyframes$1 = "@keyframes loading-dots-scale-up-and-down {\n  0% {\n    transform: scale(0.1);\n  }\n\n  50% {\n    transform: scale(1);\n  }\n\n  90% {\n    transform: scale(0.1);\n  }\n\n  100% {\n    transform: scale(0.1);\n  }\n}\n";
      const LoadingDots = ({
        dotSize = 8,
        color = "white"
      }) => {
        return react.exports.createElement("div", null, react.exports.createElement("style", null, keyframes$1), react.exports.createElement(SingleDot, {
          dotSize,
          color
        }), react.exports.createElement(SingleDot, {
          dotSize,
          color,
          delay: 0.3
        }), react.exports.createElement(SingleDot, {
          dotSize,
          color,
          delay: 0.5
        }));
      };
      const SingleDot = ({ delay = 0, color, dotSize }) => react.exports.createElement("span", {
        className: "inline-block mr-1",
        style: {
          animation: "loading-dots-scale-up-and-down 2s linear infinite",
          animationDelay: `${delay}s`,
          background: color,
          width: dotSize,
          height: dotSize,
          borderRadius: dotSize
        }
      });
      react.exports.createContext(() => {
        return null;
      });
      var DefaultContext = {
        color: void 0,
        size: void 0,
        className: void 0,
        style: void 0,
        attr: void 0
      };
      var IconContext = React__default.createContext && React__default.createContext(DefaultContext);
      var __assign = globalThis && globalThis.__assign || function() {
        __assign = Object.assign || function(t22) {
          for (var s22, i22 = 1, n22 = arguments.length; i22 < n22; i22++) {
            s22 = arguments[i22];
            for (var p22 in s22)
              if (Object.prototype.hasOwnProperty.call(s22, p22))
                t22[p22] = s22[p22];
          }
          return t22;
        };
        return __assign.apply(this, arguments);
      };
      var __rest = globalThis && globalThis.__rest || function(s22, e22) {
        var t22 = {};
        for (var p22 in s22)
          if (Object.prototype.hasOwnProperty.call(s22, p22) && e22.indexOf(p22) < 0)
            t22[p22] = s22[p22];
        if (s22 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i22 = 0, p22 = Object.getOwnPropertySymbols(s22); i22 < p22.length; i22++) {
            if (e22.indexOf(p22[i22]) < 0 && Object.prototype.propertyIsEnumerable.call(s22, p22[i22]))
              t22[p22[i22]] = s22[p22[i22]];
          }
        return t22;
      };
      function Tree2Element(tree) {
        return tree && tree.map(function(node, i22) {
          return React__default.createElement(node.tag, __assign({
            key: i22
          }, node.attr), Tree2Element(node.child));
        });
      }
      function GenIcon(data) {
        return function(props) {
          return React__default.createElement(IconBase, __assign({
            attr: __assign({}, data.attr)
          }, props), Tree2Element(data.child));
        };
      }
      function IconBase(props) {
        var elem = function(conf) {
          var attr = props.attr, size = props.size, title = props.title, svgProps = __rest(props, ["attr", "size", "title"]);
          var computedSize = size || conf.size || "1em";
          var className;
          if (conf.className)
            className = conf.className;
          if (props.className)
            className = (className ? className + " " : "") + props.className;
          return React__default.createElement("svg", __assign({
            stroke: "currentColor",
            fill: "currentColor",
            strokeWidth: "0"
          }, conf.attr, attr, svgProps, {
            className,
            style: __assign(__assign({
              color: props.color || conf.color
            }, conf.style), props.style),
            height: computedSize,
            width: computedSize,
            xmlns: "http://www.w3.org/2000/svg"
          }), title && React__default.createElement("title", null, title), props.children);
        };
        return IconContext !== void 0 ? React__default.createElement(IconContext.Consumer, null, function(conf) {
          return elem(conf);
        }) : elem(DefaultContext);
      }
      function BiArrowToBottom(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M6 18h12v2H6zm5-14v8.586L6.707 8.293 5.293 9.707 12 16.414l6.707-6.707-1.414-1.414L13 12.586V4z" } }] })(props);
      }
      function BiCloudUpload(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M13 19v-4h3l-4-5-4 5h3v4z" } }, { "tag": "path", "attr": { "d": "M7 19h2v-2H7c-1.654 0-3-1.346-3-3 0-1.404 1.199-2.756 2.673-3.015l.581-.102.192-.558C8.149 8.274 9.895 7 12 7c2.757 0 5 2.243 5 5v1h1c1.103 0 2 .897 2 2s-.897 2-2 2h-3v2h3c2.206 0 4-1.794 4-4a4.01 4.01 0 0 0-3.056-3.888C18.507 7.67 15.56 5 12 5 9.244 5 6.85 6.611 5.757 9.15 3.609 9.792 2 11.82 2 14c0 2.757 2.243 5 5 5z" } }] })(props);
      }
      function BiCopyAlt(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M20 2H10c-1.103 0-2 .897-2 2v4H4c-1.103 0-2 .897-2 2v10c0 1.103.897 2 2 2h10c1.103 0 2-.897 2-2v-4h4c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2zM4 20V10h10l.002 10H4zm16-6h-4v-4c0-1.103-.897-2-2-2h-4V4h10v10z" } }, { "tag": "path", "attr": { "d": "M6 12h6v2H6zm0 4h6v2H6z" } }] })(props);
      }
      function BiFile(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M19.903 8.586a.997.997 0 0 0-.196-.293l-6-6a.997.997 0 0 0-.293-.196c-.03-.014-.062-.022-.094-.033a.991.991 0 0 0-.259-.051C13.04 2.011 13.021 2 13 2H6c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V9c0-.021-.011-.04-.013-.062a.952.952 0 0 0-.051-.259c-.01-.032-.019-.063-.033-.093zM16.586 8H14V5.414L16.586 8zM6 20V4h6v5a1 1 0 0 0 1 1h5l.002 10H6z" } }, { "tag": "path", "attr": { "d": "M8 12h8v2H8zm0 4h8v2H8zm0-8h2v2H8z" } }] })(props);
      }
      function BiFolder(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M20 5h-8.586L9.707 3.293A.997.997 0 0 0 9 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V7c0-1.103-.897-2-2-2zM4 19V7h16l.002 12H4z" } }] })(props);
      }
      function BiGridAlt(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M10 3H4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zM9 9H5V5h4v4zm5 2h6a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1zm1-6h4v4h-4V5zM3 20a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1H4a1 1 0 0 0-1 1v6zm2-5h4v4H5v-4zm8 5a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v6zm2-5h4v4h-4v-4z" } }] })(props);
      }
      function BiLeftArrowAlt(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M12.707 17.293 8.414 13H18v-2H8.414l4.293-4.293-1.414-1.414L4.586 12l6.707 6.707z" } }] })(props);
      }
      function BiListUl(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "M4 6h2v2H4zm0 5h2v2H4zm0 5h2v2H4zm16-8V6H8.023v2H18.8zM8 11h12v2H8zm0 5h12v2H8z" } }] })(props);
      }
      function BiRightArrowAlt(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z" } }] })(props);
      }
      function BiX(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "d": "m16.192 6.344-4.243 4.242-4.242-4.242-1.414 1.414L10.535 12l-4.242 4.242 1.414 1.414 4.242-4.242 4.243 4.242 1.414-1.414L13.364 12l4.242-4.242z" } }] })(props);
      }
      function IoMdSync(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 512 512" }, "child": [{ "tag": "path", "attr": { "d": "M256 93.09V32l-80 81.454 80 81.456v-61.093c65.996 0 120 54.982 120 122.183 0 20.363-5 39.714-14.004 57.016L391 342.547c15.996-25.457 25-54.988 25-86.547 0-89.599-72.002-162.91-160-162.91zm0 285.094c-66.001 0-120-54.988-120-122.184 0-20.363 5-39.709 13.999-57.02L121 169.454C104.999 193.89 96 224.436 96 256c0 89.599 72.002 162.91 160 162.91V480l80-81.453-80-81.457v61.094z" } }] })(props);
      }
      React__default.createContext({
        rawMode: false,
        setRawMode: () => {
        },
        templates: []
      });
      const createCodeBlockPlugin = createPluginFactory({
        key: "code_block",
        isElement: true,
        isVoid: true,
        isInline: false
      });
      const createHTMLBlockPlugin = createPluginFactory({
        key: "html",
        isElement: true,
        isVoid: true,
        isInline: false
      });
      const createHTMLInlinePlugin = createPluginFactory({
        key: "html_inline",
        isElement: true,
        isVoid: true,
        isInline: true
      });
      function MdOutlinePhotoLibrary(props) {
        return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24" }, "child": [{ "tag": "path", "attr": { "fill": "none", "d": "M0 0h24v24H0V0z" } }, { "tag": "path", "attr": { "d": "M20 4v12H8V4h12m0-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 9.67l1.69 2.26 2.48-3.1L19 15H9zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z" } }] })(props);
      }
      function useCMS() {
        return useCMS$1();
      }
      const supportedFileTypes = [
        "text/*",
        "application/pdf",
        "application/octet-stream",
        "application/json",
        "application/ld+json",
        "application/vnd.ms-excel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "application/msword",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "image/*"
      ];
      const DEFAULT_MEDIA_UPLOAD_TYPES = supportedFileTypes.join(",");
      const dropzoneAcceptFromString = (str) => {
        return Object.assign({}, ...(str || DEFAULT_MEDIA_UPLOAD_TYPES).split(",").map((x22) => ({ [x22]: [] })));
      };
      const isImage = (filename) => {
        return /\.(gif|jpg|jpeg|tiff|png|svg|webp)(\?.*)?$/i.test(filename);
      };
      const absoluteImgURL = (str) => {
        if (str.startsWith("http"))
          return str;
        return `${window.location.origin}${str}`;
      };
      const onKeyDownSoftBreak = (editor, { options: { rules = [] } }) => (event) => {
        const entry = getBlockAbove(editor);
        if (!entry)
          return;
        rules.forEach(({ hotkey, query }) => {
          if (_default$4(hotkey, event) && queryNode(entry, query)) {
            event.preventDefault();
            event.stopPropagation();
            insertNodes(editor, [
              { type: KEY_SOFT_BREAK, children: [{ text: "" }] },
              { type: "text", text: "" }
            ], { select: true });
          }
        });
      };
      const KEY_SOFT_BREAK = "break";
      const createSoftBreakPlugin = createPluginFactory({
        key: KEY_SOFT_BREAK,
        isElement: true,
        isInline: true,
        isVoid: true,
        component: (props) => {
          return React__default.createElement(React__default.Fragment, null, React__default.createElement("br", {
            className: props.className,
            ...props.attributes
          }), props.children);
        },
        handlers: {
          onKeyDown: onKeyDownSoftBreak
        },
        options: {
          rules: [{ hotkey: "shift+enter" }]
        }
      });
      const preFormat = (editor) => unwrapList(editor);
      const format$1 = (editor, customFormatting) => {
        if (editor.selection) {
          const parentEntry = getParentNode(editor, editor.selection);
          if (!parentEntry)
            return;
          const [node] = parentEntry;
          if (isElement(node) && !isType(editor, node, ELEMENT_CODE_BLOCK) && !isType(editor, node, ELEMENT_CODE_LINE)) {
            customFormatting();
          }
        }
      };
      const formatList = (editor, elementType) => {
        format$1(editor, () => toggleList(editor, {
          type: elementType
        }));
      };
      const insertEmptyCodeBlock = (editor) => {
        const matchCodeElements = (node2) => node2.type === getPluginType(editor, ELEMENT_CODE_BLOCK);
        if (someNode(editor, {
          match: matchCodeElements
        })) {
          return;
        }
        const node = {
          type: ELEMENT_CODE_BLOCK,
          value: "",
          lang: "javascript",
          children: [{ type: "text", text: "" }]
        };
        if (isSelectionAtBlockStart(editor)) {
          setElements(editor, node);
        } else {
          insertNode(editor, node);
        }
      };
      const autoformatBlocks = [
        {
          mode: "block",
          type: ELEMENT_H1,
          match: "# ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_H2,
          match: "## ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_H3,
          match: "### ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_H4,
          match: "#### ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_H5,
          match: "##### ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_H6,
          match: "###### ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_BLOCKQUOTE,
          match: "> ",
          preFormat
        },
        {
          mode: "block",
          type: ELEMENT_CODE_BLOCK,
          match: "```",
          triggerAtBlockStart: false,
          preFormat,
          format: (editor) => {
            insertEmptyCodeBlock(editor);
          }
        },
        {
          mode: "block",
          type: ELEMENT_HR,
          match: ["---", "\u2014-", "___ "],
          format: (editor) => {
            setNodes(editor, { type: ELEMENT_HR });
            insertNodes(editor, {
              type: ELEMENT_DEFAULT,
              children: [{ text: "" }]
            });
          }
        }
      ];
      const autoformatLists = [
        {
          mode: "block",
          type: ELEMENT_LI,
          match: ["* ", "- "],
          preFormat,
          format: (editor) => formatList(editor, ELEMENT_UL)
        },
        {
          mode: "block",
          type: ELEMENT_LI,
          match: ["1. ", "1) "],
          preFormat,
          format: (editor) => formatList(editor, ELEMENT_OL)
        },
        {
          mode: "block",
          type: ELEMENT_TODO_LI,
          match: "[] "
        },
        {
          mode: "block",
          type: ELEMENT_TODO_LI,
          match: "[x] ",
          format: (editor) => setNodes(editor, { type: ELEMENT_TODO_LI, checked: true }, {
            match: (n22) => isBlock(editor, n22)
          })
        }
      ];
      const autoformatMarks = [
        {
          mode: "mark",
          type: [MARK_BOLD$1, MARK_ITALIC$1],
          match: "***"
        },
        {
          mode: "mark",
          type: MARK_BOLD$1,
          match: "**"
        },
        {
          mode: "mark",
          type: MARK_ITALIC$1,
          match: "*"
        },
        {
          mode: "mark",
          type: MARK_ITALIC$1,
          match: "_"
        },
        {
          mode: "mark",
          type: MARK_CODE$1,
          match: "`"
        }
      ];
      const autoformatRules = [
        ...autoformatBlocks,
        ...autoformatLists,
        ...autoformatMarks
      ];
      const withCorrectVoidBehavior = (editor) => {
        const { deleteBackward: deleteBackward2, insertBreak } = editor;
        editor.insertBreak = () => {
          if (!editor.selection || !Range.isCollapsed(editor.selection)) {
            return insertBreak();
          }
          const selectedNodePath = Path.parent(editor.selection.anchor.path);
          const selectedNode = Node$1.get(editor, selectedNodePath);
          if (Editor$1.isVoid(editor, selectedNode)) {
            Editor$1.insertNode(editor, {
              type: "p",
              children: [{ text: "" }]
            });
            return;
          }
          insertBreak();
        };
        editor.deleteBackward = (unit) => {
          if (!editor.selection || !Range.isCollapsed(editor.selection) || editor.selection.anchor.offset !== 0) {
            return deleteBackward2(unit);
          }
          const parentPath = Path.parent(editor.selection.anchor.path);
          const parentNode = Node$1.get(editor, parentPath);
          const parentIsEmpty = Node$1.string(parentNode).length === 0;
          if (parentIsEmpty && Path.hasPrevious(parentPath)) {
            const prevNodePath = Path.previous(parentPath);
            const prevNode = Node$1.get(editor, prevNodePath);
            if (Editor$1.isVoid(editor, prevNode)) {
              Transforms.removeNodes(editor);
              Editor$1.normalize(editor, { force: true });
              return;
            }
          }
          deleteBackward2(unit);
        };
        return editor;
      };
      const resetBlockTypesCommonRule = {
        types: [
          ELEMENT_BLOCKQUOTE,
          ELEMENT_H1,
          ELEMENT_H2,
          ELEMENT_H3,
          ELEMENT_H3,
          ELEMENT_H4,
          ELEMENT_H5,
          ELEMENT_H6
        ],
        defaultType: ELEMENT_PARAGRAPH
      };
      const createCorrectNodeBehaviorPlugin = createPluginFactory({
        key: "WITH_CORRECT_NODE_BEHAVIOR",
        withOverrides: withCorrectVoidBehavior
      });
      [
        createTrailingBlockPlugin(),
        createCorrectNodeBehaviorPlugin(),
        createAutoformatPlugin({
          options: {
            rules: autoformatRules
          }
        }),
        createExitBreakPlugin({
          options: {
            rules: [
              {
                hotkey: "mod+enter"
              },
              {
                hotkey: "mod+shift+enter",
                before: true
              },
              {
                hotkey: "enter",
                query: {
                  start: true,
                  end: true,
                  allow: KEYS_HEADING
                }
              }
            ]
          }
        }),
        createResetNodePlugin({
          options: {
            rules: [
              {
                ...resetBlockTypesCommonRule,
                hotkey: "Enter",
                predicate: isBlockAboveEmpty
              },
              {
                ...resetBlockTypesCommonRule,
                hotkey: "Backspace",
                predicate: isSelectionAtBlockStart
              }
            ]
          }
        }),
        createSoftBreakPlugin({
          options: {
            rules: [
              { hotkey: "shift+enter" },
              {
                hotkey: "enter",
                query: {
                  allow: [ELEMENT_CODE_BLOCK, ELEMENT_BLOCKQUOTE]
                }
              }
            ]
          }
        })
      ];
      [
        createHeadingPlugin(),
        createParagraphPlugin(),
        createCodeBlockPlugin(),
        createHTMLBlockPlugin(),
        createHTMLInlinePlugin(),
        createBlockquotePlugin(),
        createBoldPlugin$1(),
        createItalicPlugin$1(),
        createUnderlinePlugin$1(),
        createCodePlugin$1(),
        createListPlugin(),
        createHorizontalRulePlugin(),
        createNodeIdPlugin()
      ];
      class MediaListError$1 extends Error {
        constructor(config22) {
          super(config22.message);
          this.ERR_TYPE = "MediaListError";
          this.title = config22.title;
          this.docsLink = config22.docsLink;
        }
      }
      new MediaListError$1({
        title: "Unauthorized",
        message: "You don't have access to this resource.",
        docsLink: "https://tina.io/docs/reference/media/overview"
      });
      new MediaListError$1({
        title: "Bad Route",
        message: "The Cloudinary API route is missing or misconfigured.",
        docsLink: "https://tina.io/docs/reference/media/external/authentication/"
      });
      new MediaListError$1({
        title: "An Error Occurred",
        message: "Something went wrong accessing your media from Tina Cloud.",
        docsLink: ""
      });
      function createScreen({
        Component,
        props,
        ...options
      }) {
        return {
          __type: "screen",
          layout: "popup",
          ...options,
          Component(screenProps) {
            return React__default.createElement(Component, {
              ...screenProps,
              ...props
            });
          }
        };
      }
      function ViewNavigation({
        onClickPrev,
        onClickSwitch,
        onClickNext,
        switchContent,
        switchColSpan,
        switchProps
      }) {
        return React__default.createElement("tr", null, React__default.createElement("th", {
          className: "rdtPrev",
          onClick: onClickPrev
        }, React__default.createElement("span", null, "\u2039")), React__default.createElement("th", {
          className: "rdtSwitch",
          colSpan: switchColSpan,
          onClick: onClickSwitch,
          ...switchProps
        }, switchContent), React__default.createElement("th", {
          className: "rdtNext",
          onClick: onClickNext
        }, React__default.createElement("span", null, "\u203A")));
      }
      class DaysView extends React__default.Component {
        constructor() {
          super(...arguments);
          __publicField(this, "_setDate", (e22) => {
            this.props.updateDate(e22);
          });
        }
        render() {
          return React__default.createElement("div", {
            className: "rdtDays"
          }, React__default.createElement("table", null, React__default.createElement("thead", null, this.renderNavigation(), this.renderDayHeaders()), React__default.createElement("tbody", null, this.renderDays()), this.renderFooter()));
        }
        renderNavigation() {
          const date = this.props.viewDate;
          const locale2 = date.localeData();
          return React__default.createElement(ViewNavigation, {
            onClickPrev: () => this.props.navigate(-1, "months"),
            onClickSwitch: () => this.props.showView("months"),
            onClickNext: () => this.props.navigate(1, "months"),
            switchContent: locale2.months(date) + " " + date.year(),
            switchColSpan: 5,
            switchProps: { "data-value": this.props.viewDate.month() }
          });
        }
        renderDayHeaders() {
          const locale2 = this.props.viewDate.localeData();
          let dayItems = getDaysOfWeek(locale2).map((day, index2) => React__default.createElement("th", {
            key: day + index2,
            className: "dow"
          }, day));
          return React__default.createElement("tr", null, dayItems);
        }
        renderDays() {
          const date = this.props.viewDate;
          const startOfMonth = date.clone().startOf("month");
          const endOfMonth = date.clone().endOf("month");
          let rows = [[], [], [], [], [], []];
          let startDate = date.clone().subtract(1, "months");
          startDate.date(startDate.daysInMonth()).startOf("week");
          let endDate = startDate.clone().add(42, "d");
          let i22 = 0;
          while (startDate.isBefore(endDate)) {
            let row = getRow$2(rows, i22++);
            row.push(this.renderDay(startDate, startOfMonth, endOfMonth));
            startDate.add(1, "d");
          }
          return rows.map((r22, i222) => React__default.createElement("tr", {
            key: `${endDate.month()}_${i222}`
          }, r22));
        }
        renderDay(date, startOfMonth, endOfMonth) {
          let selectedDate = this.props.selectedDate;
          let dayProps = {
            key: date.format("M_D"),
            "data-value": date.date(),
            "data-month": date.month(),
            "data-year": date.year()
          };
          let className = "rdtDay";
          if (date.isBefore(startOfMonth)) {
            className += " rdtOld";
          } else if (date.isAfter(endOfMonth)) {
            className += " rdtNew";
          }
          if (selectedDate && date.isSame(selectedDate, "day")) {
            className += " rdtActive";
          }
          if (date.isSame(this.props.moment(), "day")) {
            className += " rdtToday";
          }
          if (this.props.isValidDate(date)) {
            dayProps.onClick = this._setDate;
          } else {
            className += " rdtDisabled";
          }
          dayProps.className = className;
          return this.props.renderDay(dayProps, date.clone(), selectedDate && selectedDate.clone());
        }
        renderFooter() {
          if (!this.props.timeFormat)
            return;
          const date = this.props.viewDate;
          return React__default.createElement("tfoot", null, React__default.createElement("tr", null, React__default.createElement("td", {
            onClick: () => this.props.showView("time"),
            colSpan: 7,
            className: "rdtTimeToggle"
          }, date.format(this.props.timeFormat))));
        }
      }
      __publicField(DaysView, "defaultProps", {
        isValidDate: () => true,
        renderDay: (props, date) => React__default.createElement("td", {
          ...props
        }, date.date())
      });
      function getRow$2(rows, day) {
        return rows[Math.floor(day / 7)];
      }
      function getDaysOfWeek(locale2) {
        const first = locale2.firstDayOfWeek();
        let dow = [];
        let i22 = 0;
        locale2._weekdaysMin.forEach(function(day) {
          dow[(7 + i22++ - first) % 7] = day;
        });
        return dow;
      }
      class MonthsView extends React__default.Component {
        constructor() {
          super(...arguments);
          __publicField(this, "_updateSelectedMonth", (event) => {
            this.props.updateDate(event);
          });
        }
        render() {
          return React__default.createElement("div", {
            className: "rdtMonths"
          }, React__default.createElement("table", null, React__default.createElement("thead", null, this.renderNavigation())), React__default.createElement("table", null, React__default.createElement("tbody", null, this.renderMonths())));
        }
        renderNavigation() {
          let year = this.props.viewDate.year();
          return React__default.createElement(ViewNavigation, {
            onClickPrev: () => this.props.navigate(-1, "years"),
            onClickSwitch: () => this.props.showView("years"),
            onClickNext: () => this.props.navigate(1, "years"),
            switchContent: year,
            switchColSpan: "2"
          });
        }
        renderMonths() {
          let rows = [[], [], []];
          for (let month = 0; month < 12; month++) {
            let row = getRow$1(rows, month);
            row.push(this.renderMonth(month));
          }
          return rows.map((months2, i22) => React__default.createElement("tr", {
            key: i22
          }, months2));
        }
        renderMonth(month) {
          const selectedDate = this.props.selectedDate;
          let className = "rdtMonth";
          let onClick;
          if (this.isDisabledMonth(month)) {
            className += " rdtDisabled";
          } else {
            onClick = this._updateSelectedMonth;
          }
          if (selectedDate && selectedDate.year() === this.props.viewDate.year() && selectedDate.month() === month) {
            className += " rdtActive";
          }
          let props = { key: month, className, "data-value": month, onClick };
          if (this.props.renderMonth) {
            return this.props.renderMonth(props, month, this.props.viewDate.year(), this.props.selectedDate && this.props.selectedDate.clone());
          }
          return React__default.createElement("td", {
            ...props
          }, this.getMonthText(month));
        }
        isDisabledMonth(month) {
          let isValidDate = this.props.isValidDate;
          if (!isValidDate) {
            return false;
          }
          let date = this.props.viewDate.clone().set({ month });
          let day = date.endOf("month").date() + 1;
          while (day-- > 1) {
            if (isValidDate(date.date(day))) {
              return false;
            }
          }
          return true;
        }
        getMonthText(month) {
          const localMoment = this.props.viewDate;
          const monthStr = localMoment.localeData().monthsShort(localMoment.month(month));
          return capitalize(monthStr.substring(0, 3));
        }
      }
      function getRow$1(rows, year) {
        if (year < 4) {
          return rows[0];
        }
        if (year < 8) {
          return rows[1];
        }
        return rows[2];
      }
      function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
      }
      class YearsView extends React__default.Component {
        constructor() {
          super(...arguments);
          __publicField(this, "disabledYearsCache", {});
          __publicField(this, "_updateSelectedYear", (event) => {
            this.props.updateDate(event);
          });
        }
        render() {
          return React__default.createElement("div", {
            className: "rdtYears"
          }, React__default.createElement("table", null, React__default.createElement("thead", null, this.renderNavigation())), React__default.createElement("table", null, React__default.createElement("tbody", null, this.renderYears())));
        }
        renderNavigation() {
          const viewYear = this.getViewYear();
          return React__default.createElement(ViewNavigation, {
            onClickPrev: () => this.props.navigate(-10, "years"),
            onClickSwitch: () => this.props.showView("years"),
            onClickNext: () => this.props.navigate(10, "years"),
            switchContent: `${viewYear}-${viewYear + 9}`
          });
        }
        renderYears() {
          const viewYear = this.getViewYear();
          let rows = [[], [], []];
          for (let year = viewYear - 1; year < viewYear + 11; year++) {
            let row = getRow(rows, year - viewYear);
            row.push(this.renderYear(year));
          }
          return rows.map((years2, i22) => React__default.createElement("tr", {
            key: i22
          }, years2));
        }
        renderYear(year) {
          const selectedYear = this.getSelectedYear();
          let className = "rdtYear";
          let onClick;
          if (this.isDisabledYear(year)) {
            className += " rdtDisabled";
          } else {
            onClick = this._updateSelectedYear;
          }
          if (selectedYear === year) {
            className += " rdtActive";
          }
          let props = { key: year, className, "data-value": year, onClick };
          return this.props.renderYear(props, year, this.props.selectedDate && this.props.selectedDate.clone());
        }
        getViewYear() {
          return parseInt(this.props.viewDate.year() / 10, 10) * 10;
        }
        getSelectedYear() {
          return this.props.selectedDate && this.props.selectedDate.year();
        }
        isDisabledYear(year) {
          let cache = this.disabledYearsCache;
          if (cache[year] !== void 0) {
            return cache[year];
          }
          let isValidDate = this.props.isValidDate;
          if (!isValidDate) {
            return false;
          }
          let date = this.props.viewDate.clone().set({ year });
          let day = date.endOf("year").dayOfYear() + 1;
          while (day-- > 1) {
            if (isValidDate(date.dayOfYear(day))) {
              cache[year] = false;
              return false;
            }
          }
          cache[year] = true;
          return true;
        }
      }
      __publicField(YearsView, "defaultProps", {
        renderYear: (props, year) => React__default.createElement("td", {
          ...props
        }, year)
      });
      function getRow(rows, year) {
        if (year < 3) {
          return rows[0];
        }
        if (year < 7) {
          return rows[1];
        }
        return rows[2];
      }
      const timeConstraints = {
        hours: {
          min: 0,
          max: 23,
          step: 1
        },
        minutes: {
          min: 0,
          max: 59,
          step: 1
        },
        seconds: {
          min: 0,
          max: 59,
          step: 1
        },
        milliseconds: {
          min: 0,
          max: 999,
          step: 1
        }
      };
      function createConstraints(overrideTimeConstraints) {
        let constraints = {};
        Object.keys(timeConstraints).forEach((type) => {
          constraints[type] = {
            ...timeConstraints[type],
            ...overrideTimeConstraints[type] || {}
          };
        });
        return constraints;
      }
      class TimeView extends React__default.Component {
        constructor(props) {
          super(props);
          this.constraints = createConstraints(props.timeConstraints);
          this.state = this.getTimeParts(props.selectedDate || props.viewDate);
        }
        render() {
          let items = [];
          const timeParts = this.state;
          this.getCounters().forEach((c22, i22) => {
            if (i22 && c22 !== "ampm") {
              items.push(React__default.createElement("div", {
                key: `sep${i22}`,
                className: "rdtCounterSeparator"
              }, ":"));
            }
            items.push(this.renderCounter(c22, timeParts[c22]));
          });
          return React__default.createElement("div", {
            className: "rdtTime"
          }, React__default.createElement("table", null, this.renderHeader(), React__default.createElement("tbody", null, React__default.createElement("tr", null, React__default.createElement("td", null, React__default.createElement("div", {
            className: "rdtCounters"
          }, items))))));
        }
        renderCounter(type, value) {
          if (type === "hours" && this.isAMPM()) {
            value = (value - 1) % 12 + 1;
            if (value === 0) {
              value = 12;
            }
          }
          if (type === "ampm") {
            if (this.props.timeFormat.indexOf(" A") !== -1) {
              value = this.props.viewDate.format("A");
            } else {
              value = this.props.viewDate.format("a");
            }
          }
          return React__default.createElement("div", {
            key: type,
            className: "rdtCounter"
          }, React__default.createElement("span", {
            className: "rdtBtn",
            onMouseDown: (e22) => this.onStartClicking(e22, "increase", type)
          }, "\u25B2"), React__default.createElement("div", {
            className: "rdtCount"
          }, value), React__default.createElement("span", {
            className: "rdtBtn",
            onMouseDown: (e22) => this.onStartClicking(e22, "decrease", type)
          }, "\u25BC"));
        }
        renderHeader() {
          if (!this.props.dateFormat)
            return;
          const date = this.props.selectedDate || this.props.viewDate;
          return React__default.createElement("thead", null, React__default.createElement("tr", null, React__default.createElement("td", {
            className: "rdtSwitch",
            colSpan: "4",
            onClick: () => this.props.showView("days")
          }, date.format(this.props.dateFormat))));
        }
        onStartClicking(e22, action, type) {
          if (e22 && e22.button && e22.button !== 0) {
            return;
          }
          if (type === "ampm")
            return this.toggleDayPart();
          let update = {};
          let body = document.body;
          update[type] = this[action](type);
          this.setState(update);
          this.timer = setTimeout(() => {
            this.increaseTimer = setInterval(() => {
              update[type] = this[action](type);
              this.setState(update);
            }, 70);
          }, 500);
          this.mouseUpListener = () => {
            clearTimeout(this.timer);
            clearInterval(this.increaseTimer);
            this.props.setTime(type, parseInt(this.state[type], 10));
            body.removeEventListener("mouseup", this.mouseUpListener);
            body.removeEventListener("touchend", this.mouseUpListener);
          };
          body.addEventListener("mouseup", this.mouseUpListener);
          body.addEventListener("touchend", this.mouseUpListener);
        }
        toggleDayPart() {
          let hours2 = parseInt(this.state.hours, 10);
          if (hours2 >= 12) {
            hours2 -= 12;
          } else {
            hours2 += 12;
          }
          this.props.setTime("hours", hours2);
        }
        increase(type) {
          const tc2 = this.constraints[type];
          let value = parseInt(this.state[type], 10) + tc2.step;
          if (value > tc2.max)
            value = tc2.min + (value - (tc2.max + 1));
          return pad(type, value);
        }
        decrease(type) {
          const tc2 = this.constraints[type];
          let value = parseInt(this.state[type], 10) - tc2.step;
          if (value < tc2.min)
            value = tc2.max + 1 - (tc2.min - value);
          return pad(type, value);
        }
        getCounters() {
          let counters = [];
          let format2 = this.props.timeFormat;
          if (format2.toLowerCase().indexOf("h") !== -1) {
            counters.push("hours");
            if (format2.indexOf("m") !== -1) {
              counters.push("minutes");
              if (format2.indexOf("s") !== -1) {
                counters.push("seconds");
                if (format2.indexOf("S") !== -1) {
                  counters.push("milliseconds");
                }
              }
            }
          }
          if (this.isAMPM()) {
            counters.push("ampm");
          }
          return counters;
        }
        isAMPM() {
          return this.props.timeFormat.toLowerCase().indexOf(" a") !== -1;
        }
        getTimeParts(date) {
          const hours2 = date.hours();
          return {
            hours: pad("hours", hours2),
            minutes: pad("minutes", date.minutes()),
            seconds: pad("seconds", date.seconds()),
            milliseconds: pad("milliseconds", date.milliseconds()),
            ampm: hours2 < 12 ? "am" : "pm"
          };
        }
        componentDidUpdate(prevProps) {
          if (this.props.selectedDate) {
            if (this.props.selectedDate !== prevProps.selectedDate) {
              this.setState(this.getTimeParts(this.props.selectedDate));
            }
          } else if (prevProps.viewDate !== this.props.viewDate) {
            this.setState(this.getTimeParts(this.props.viewDate));
          }
        }
      }
      function pad(type, value) {
        const padValues = {
          hours: 1,
          minutes: 2,
          seconds: 2,
          milliseconds: 3
        };
        let str = value + "";
        while (str.length < padValues[type])
          str = "0" + str;
        return str;
      }
      const viewModes = {
        YEARS: "years",
        MONTHS: "months",
        DAYS: "days",
        TIME: "time"
      };
      const TYPES = PropTypes;
      const nofn = function() {
      };
      const datetype = TYPES.oneOfType([
        TYPES.instanceOf(hooks),
        TYPES.instanceOf(Date),
        TYPES.string
      ]);
      class Datetime extends React__default.Component {
        constructor(props) {
          super(props);
          __publicField(this, "_renderCalendar", () => {
            const props2 = this.props;
            const state = this.state;
            let viewProps = {
              viewDate: state.viewDate.clone(),
              selectedDate: this.getSelectedDate(),
              isValidDate: props2.isValidDate,
              updateDate: this._updateDate,
              navigate: this._viewNavigate,
              moment: hooks,
              showView: this._showView
            };
            switch (state.currentView) {
              case viewModes.YEARS:
                viewProps.renderYear = props2.renderYear;
                return React__default.createElement(YearsView, {
                  ...viewProps
                });
              case viewModes.MONTHS:
                viewProps.renderMonth = props2.renderMonth;
                return React__default.createElement(MonthsView, {
                  ...viewProps
                });
              case viewModes.DAYS:
                viewProps.renderDay = props2.renderDay;
                viewProps.timeFormat = this.getFormat("time");
                return React__default.createElement(DaysView, {
                  ...viewProps
                });
              default:
                viewProps.dateFormat = this.getFormat("date");
                viewProps.timeFormat = this.getFormat("time");
                viewProps.timeConstraints = props2.timeConstraints;
                viewProps.setTime = this._setTime;
                return React__default.createElement(TimeView, {
                  ...viewProps
                });
            }
          });
          __publicField(this, "_showView", (view, date) => {
            const d22 = (date || this.state.viewDate).clone();
            const nextView = this.props.onBeforeNavigate(view, this.state.currentView, d22);
            if (nextView && this.state.currentView !== nextView) {
              this.props.onNavigate(nextView);
              this.setState({ currentView: nextView });
            }
          });
          __publicField(this, "viewToMethod", { days: "date", months: "month", years: "year" });
          __publicField(this, "nextView", { days: "time", months: "days", years: "months" });
          __publicField(this, "_updateDate", (e22) => {
            let state = this.state;
            let currentView = state.currentView;
            let updateOnView = this.getUpdateOn(this.getFormat("date"));
            let viewDate = this.state.viewDate.clone();
            viewDate[this.viewToMethod[currentView]](parseInt(e22.target.getAttribute("data-value"), 10));
            if (currentView === "days") {
              viewDate.month(parseInt(e22.target.getAttribute("data-month"), 10));
              viewDate.year(parseInt(e22.target.getAttribute("data-year"), 10));
            }
            let update = { viewDate };
            if (currentView === updateOnView) {
              update.selectedDate = viewDate.clone();
              update.inputValue = viewDate.format(this.getFormat("datetime"));
              if (this.props.open === void 0 && this.props.input && this.props.closeOnSelect) {
                this._closeCalendar();
              }
              this.props.onChange(viewDate.clone());
            } else {
              this._showView(this.nextView[currentView], viewDate);
            }
            this.setState(update);
          });
          __publicField(this, "_viewNavigate", (modifier, unit) => {
            let viewDate = this.state.viewDate.clone();
            viewDate.add(modifier, unit);
            if (modifier > 0) {
              this.props.onNavigateForward(modifier, unit);
            } else {
              this.props.onNavigateBack(-modifier, unit);
            }
            this.setState({ viewDate });
          });
          __publicField(this, "_setTime", (type, value) => {
            let date = (this.getSelectedDate() || this.state.viewDate).clone();
            date[type](value);
            if (!this.props.value) {
              this.setState({
                selectedDate: date,
                viewDate: date.clone(),
                inputValue: date.format(this.getFormat("datetime"))
              });
            }
            this.props.onChange(date);
          });
          __publicField(this, "_openCalendar", () => {
            if (this.isOpen())
              return;
            this.setState({ open: true }, this.props.onOpen);
          });
          __publicField(this, "_closeCalendar", () => {
            if (!this.isOpen())
              return;
            this.setState({ open: false }, () => {
              this.props.onClose(this.state.selectedDate || this.state.inputValue);
            });
          });
          __publicField(this, "_handleClickOutside", () => {
            let props2 = this.props;
            if (props2.input && this.state.open && props2.open === void 0 && props2.closeOnClickOutside) {
              this._closeCalendar();
            }
          });
          __publicField(this, "_onInputFocus", (e22) => {
            if (!this.callHandler(this.props.inputProps.onFocus, e22))
              return;
            this._openCalendar();
          });
          __publicField(this, "_onInputChange", (e22) => {
            if (!this.callHandler(this.props.inputProps.onChange, e22))
              return;
            const value = e22.target ? e22.target.value : e22;
            const localMoment = this.localMoment(value, this.getFormat("datetime"));
            let update = { inputValue: value };
            if (localMoment.isValid()) {
              update.selectedDate = localMoment;
              update.viewDate = localMoment.clone().startOf("month");
            } else {
              update.selectedDate = null;
            }
            this.setState(update, () => {
              this.props.onChange(localMoment.isValid() ? localMoment : this.state.inputValue);
            });
          });
          __publicField(this, "_onInputKeyDown", (e22) => {
            if (!this.callHandler(this.props.inputProps.onKeyDown, e22))
              return;
            if (e22.which === 9 && this.props.closeOnTab) {
              this._closeCalendar();
            }
          });
          __publicField(this, "_onInputClick", (e22) => {
            if (!this.callHandler(this.props.inputProps.onClick, e22))
              return;
            this._openCalendar();
          });
          this.state = this.getInitialState();
        }
        render() {
          return React__default.createElement(ClickableWrapper, {
            className: this.getClassName(),
            onClickOut: this._handleClickOutside
          }, this.renderInput(), React__default.createElement("div", {
            className: "rdtPicker"
          }, this.renderView()));
        }
        renderInput() {
          if (!this.props.input)
            return;
          const finalInputProps = {
            type: "text",
            className: "form-control",
            value: this.getInputValue(),
            ...this.props.inputProps,
            onFocus: this._onInputFocus,
            onChange: this._onInputChange,
            onKeyDown: this._onInputKeyDown,
            onClick: this._onInputClick
          };
          if (this.props.renderInput) {
            return React__default.createElement("div", null, this.props.renderInput(finalInputProps, this._openCalendar, this._closeCalendar));
          }
          return React__default.createElement("input", {
            ...finalInputProps
          });
        }
        renderView() {
          return this.props.renderView(this.state.currentView, this._renderCalendar);
        }
        getInitialState() {
          let props = this.props;
          let inputFormat = this.getFormat("datetime");
          let selectedDate = this.parseDate(props.value || props.initialValue, inputFormat);
          this.checkTZ();
          return {
            open: !props.input,
            currentView: props.initialViewMode || this.getInitialView(),
            viewDate: this.getInitialViewDate(selectedDate),
            selectedDate: selectedDate && selectedDate.isValid() ? selectedDate : void 0,
            inputValue: this.getInitialInputValue(selectedDate)
          };
        }
        getInitialViewDate(selectedDate) {
          const propDate = this.props.initialViewDate;
          let viewDate;
          if (propDate) {
            viewDate = this.parseDate(propDate, this.getFormat("datetime"));
            if (viewDate && viewDate.isValid()) {
              return viewDate;
            } else {
              log('The initialViewDated given "' + propDate + '" is not valid. Using current date instead.');
            }
          } else if (selectedDate && selectedDate.isValid()) {
            return selectedDate.clone();
          }
          return this.getInitialDate();
        }
        getInitialDate() {
          let m22 = this.localMoment();
          m22.hour(0).minute(0).second(0).millisecond(0);
          return m22;
        }
        getInitialView() {
          const dateFormat = this.getFormat("date");
          return dateFormat ? this.getUpdateOn(dateFormat) : viewModes.TIME;
        }
        parseDate(date, dateFormat) {
          let parsedDate;
          if (date && typeof date === "string")
            parsedDate = this.localMoment(date, dateFormat);
          else if (date)
            parsedDate = this.localMoment(date);
          if (parsedDate && !parsedDate.isValid())
            parsedDate = null;
          return parsedDate;
        }
        getClassName() {
          let cn = "rdt";
          let props = this.props;
          let propCn = props.className;
          if (Array.isArray(propCn)) {
            cn += " " + propCn.join(" ");
          } else if (propCn) {
            cn += " " + propCn;
          }
          if (!props.input) {
            cn += " rdtStatic";
          }
          if (this.isOpen()) {
            cn += " rdtOpen";
          }
          return cn;
        }
        isOpen() {
          return !this.props.input || (this.props.open === void 0 ? this.state.open : this.props.open);
        }
        getUpdateOn(dateFormat) {
          if (this.props.updateOnView) {
            return this.props.updateOnView;
          }
          if (dateFormat.match(/[lLD]/)) {
            return viewModes.DAYS;
          }
          if (dateFormat.indexOf("M") !== -1) {
            return viewModes.MONTHS;
          }
          if (dateFormat.indexOf("Y") !== -1) {
            return viewModes.YEARS;
          }
          return viewModes.DAYS;
        }
        getLocaleData() {
          let p22 = this.props;
          return this.localMoment(p22.value || p22.defaultValue || new Date()).localeData();
        }
        getDateFormat() {
          const locale2 = this.getLocaleData();
          let format2 = this.props.dateFormat;
          if (format2 === true)
            return locale2.longDateFormat("L");
          if (format2)
            return format2;
          return "";
        }
        getTimeFormat() {
          const locale2 = this.getLocaleData();
          let format2 = this.props.timeFormat;
          if (format2 === true) {
            return locale2.longDateFormat("LT");
          }
          return format2 || "";
        }
        getFormat(type) {
          if (type === "date") {
            return this.getDateFormat();
          } else if (type === "time") {
            return this.getTimeFormat();
          }
          let dateFormat = this.getDateFormat();
          let timeFormat = this.getTimeFormat();
          return dateFormat && timeFormat ? dateFormat + " " + timeFormat : dateFormat || timeFormat;
        }
        updateTime(op, amount, type, toSelected) {
          let update = {};
          const date = toSelected ? "selectedDate" : "viewDate";
          update[date] = this.state[date].clone()[op](amount, type);
          this.setState(update);
        }
        localMoment(date, format2, props) {
          props = props || this.props;
          let m22 = null;
          if (props.utc) {
            m22 = hooks.utc(date, format2, props.strictParsing);
          } else if (props.displayTimeZone) {
            m22 = hooks.tz(date, format2, props.displayTimeZone);
          } else {
            m22 = hooks(date, format2, props.strictParsing);
          }
          if (props.locale)
            m22.locale(props.locale);
          return m22;
        }
        checkTZ() {
          const { displayTimeZone } = this.props;
          if (displayTimeZone && !this.tzWarning && !hooks.tz) {
            this.tzWarning = true;
            log('displayTimeZone prop with value "' + displayTimeZone + '" is used but moment.js timezone is not loaded.', "error");
          }
        }
        componentDidUpdate(prevProps) {
          if (prevProps === this.props)
            return;
          let needsUpdate = false;
          let thisProps = this.props;
          ["locale", "utc", "displayZone", "dateFormat", "timeFormat"].forEach(function(p22) {
            prevProps[p22] !== thisProps[p22] && (needsUpdate = true);
          });
          if (needsUpdate) {
            this.regenerateDates();
          }
          if (thisProps.value && thisProps.value !== prevProps.value) {
            this.setViewDate(thisProps.value);
          }
          this.checkTZ();
        }
        regenerateDates() {
          const props = this.props;
          let viewDate = this.state.viewDate.clone();
          let selectedDate = this.state.selectedDate && this.state.selectedDate.clone();
          if (props.locale) {
            viewDate.locale(props.locale);
            selectedDate && selectedDate.locale(props.locale);
          }
          if (props.utc) {
            viewDate.utc();
            selectedDate && selectedDate.utc();
          } else if (props.displayTimeZone) {
            viewDate.tz(props.displayTimeZone);
            selectedDate && selectedDate.tz(props.displayTimeZone);
          } else {
            viewDate.locale();
            selectedDate && selectedDate.locale();
          }
          let update = { viewDate, selectedDate };
          if (selectedDate && selectedDate.isValid()) {
            update.inputValue = selectedDate.format(this.getFormat("datetime"));
          }
          this.setState(update);
        }
        getSelectedDate() {
          if (this.props.value === void 0)
            return this.state.selectedDate;
          let selectedDate = this.parseDate(this.props.value, this.getFormat("datetime"));
          return selectedDate && selectedDate.isValid() ? selectedDate : false;
        }
        getInitialInputValue(selectedDate) {
          const props = this.props;
          if (props.inputProps.value)
            return props.inputProps.value;
          if (selectedDate && selectedDate.isValid())
            return selectedDate.format(this.getFormat("datetime"));
          if (props.value && typeof props.value === "string")
            return props.value;
          if (props.initialValue && typeof props.initialValue === "string")
            return props.initialValue;
          return "";
        }
        getInputValue() {
          let selectedDate = this.getSelectedDate();
          return selectedDate ? selectedDate.format(this.getFormat("datetime")) : this.state.inputValue;
        }
        setViewDate(date) {
          let logError = function() {
            return log("Invalid date passed to the `setViewDate` method: " + date);
          };
          if (!date)
            return logError();
          let viewDate;
          if (typeof date === "string") {
            viewDate = this.localMoment(date, this.getFormat("datetime"));
          } else {
            viewDate = this.localMoment(date);
          }
          if (!viewDate || !viewDate.isValid())
            return logError();
          this.setState({ viewDate });
        }
        navigate(mode) {
          this._showView(mode);
        }
        callHandler(method, e22) {
          if (!method)
            return true;
          return method(e22) !== false;
        }
      }
      __publicField(Datetime, "propTypes", {
        value: datetype,
        initialValue: datetype,
        initialViewDate: datetype,
        initialViewMode: TYPES.oneOf([
          viewModes.YEARS,
          viewModes.MONTHS,
          viewModes.DAYS,
          viewModes.TIME
        ]),
        onOpen: TYPES.func,
        onClose: TYPES.func,
        onChange: TYPES.func,
        onNavigate: TYPES.func,
        onBeforeNavigate: TYPES.func,
        onNavigateBack: TYPES.func,
        onNavigateForward: TYPES.func,
        updateOnView: TYPES.string,
        locale: TYPES.string,
        utc: TYPES.bool,
        displayTimeZone: TYPES.string,
        input: TYPES.bool,
        dateFormat: TYPES.oneOfType([TYPES.string, TYPES.bool]),
        timeFormat: TYPES.oneOfType([TYPES.string, TYPES.bool]),
        inputProps: TYPES.object,
        timeConstraints: TYPES.object,
        isValidDate: TYPES.func,
        open: TYPES.bool,
        strictParsing: TYPES.bool,
        closeOnSelect: TYPES.bool,
        closeOnTab: TYPES.bool,
        renderView: TYPES.func,
        renderInput: TYPES.func,
        renderDay: TYPES.func,
        renderMonth: TYPES.func,
        renderYear: TYPES.func
      });
      __publicField(Datetime, "defaultProps", {
        onOpen: nofn,
        onClose: nofn,
        onCalendarOpen: nofn,
        onCalendarClose: nofn,
        onChange: nofn,
        onNavigate: nofn,
        onBeforeNavigate: function(next) {
          return next;
        },
        onNavigateBack: nofn,
        onNavigateForward: nofn,
        dateFormat: true,
        timeFormat: true,
        utc: false,
        className: "",
        input: true,
        inputProps: {},
        timeConstraints: {},
        isValidDate: function() {
          return true;
        },
        strictParsing: true,
        closeOnSelect: false,
        closeOnTab: true,
        closeOnClickOutside: true,
        renderView: (_22, renderFunc) => renderFunc()
      });
      __publicField(Datetime, "moment", hooks);
      function log(message2, method) {
        let con = typeof window !== "undefined" && window.console;
        if (!con)
          return;
        if (!method) {
          method = "warn";
        }
        con[method]("***react-datetime:" + message2);
      }
      class ClickOutBase extends React__default.Component {
        constructor() {
          super(...arguments);
          __publicField(this, "container", React__default.createRef());
        }
        render() {
          return React__default.createElement("div", {
            className: this.props.className,
            ref: this.container
          }, this.props.children);
        }
        handleClickOutside(e22) {
          this.props.onClickOut(e22);
        }
        setClickOutsideRef() {
          return this.container.current;
        }
      }
      const ClickableWrapper = onClickOutsideHOC(ClickOutBase);
      react.exports.createContext({
        currentBranch: null,
        setCurrentBranch: (branch) => {
          console.warn("BranchContext not initialized");
        }
      });
      function CursorPaginator({
        navigateNext,
        navigatePrev,
        hasNext,
        hasPrev,
        variant = "white"
      }) {
        return React__default.createElement("div", {
          className: "w-full flex flex-shrink-0 justify-end gap-2 items-center"
        }, React__default.createElement(Button2, {
          variant,
          disabled: !hasPrev,
          onClick: navigatePrev
        }, React__default.createElement(BiLeftArrowAlt, {
          className: "w-6 h-full mr-2 opacity-70"
        }), " Previous"), React__default.createElement(Button2, {
          variant,
          disabled: !hasNext,
          onClick: navigateNext
        }, "Next ", React__default.createElement(BiRightArrowAlt, {
          className: "w-6 h-full ml-2 opacity-70"
        })));
      }
      function ListMediaItem({ item, onClick, active: active2 }) {
        const FileIcon = item.type === "dir" ? BiFolder : BiFile;
        const thumbnail = item.thumbnails["75x75"];
        return React__default.createElement("li", {
          className: `flex shrink-0 gap-3 items-center py-2 pl-2 pr-3 transition duration-150 ease-out cursor-pointer border-b border-gray-150 ${active2 ? "bg-gradient-to-r from-white to-gray-50/50 text-blue-500 hover:bg-gray-50" : "bg-white hover:bg-gray-50/50"}`,
          onClick: () => {
            if (!active2) {
              onClick(item);
            } else {
              onClick(false);
            }
          }
        }, React__default.createElement("div", {
          className: "w-20 h-20 bg-gray-50 shadow border border-gray-100 rounded overflow-hidden flex justify-center flex-shrink-0"
        }, isImage(thumbnail) ? React__default.createElement("img", {
          className: "object-cover w-full h-full object-center",
          src: thumbnail,
          alt: item.filename
        }) : React__default.createElement(FileIcon, {
          className: "w-3/5 h-full fill-gray-300"
        })), React__default.createElement("span", {
          className: "text-base flex-grow w-full break-words truncate"
        }, item.filename));
      }
      function GridMediaItem({ item, active: active2, onClick }) {
        const FileIcon = item.type === "dir" ? BiFolder : BiFile;
        const thumbnail = item.thumbnails["400x400"];
        return React__default.createElement("li", {
          className: `relative pb-[100%] h-0 block border border-gray-100 rounded-md overflow-hidden flex justify-center shrink-0 w-full transition duration-150 ease-out ${active2 ? "shadow-outline" : "shadow hover:shadow-md hover:scale-103 hover:border-gray-150"} ${item.type === "dir" ? "cursor-pointer" : ""}`
        }, React__default.createElement("button", {
          className: "absolute w-full h-full flex items-center justify-center bg-white",
          onClick: () => {
            if (!active2) {
              onClick(item);
            } else {
              onClick(false);
            }
          }
        }, isImage(thumbnail) ? React__default.createElement("img", {
          className: "object-cover w-full h-full object-center",
          src: thumbnail,
          alt: item.filename
        }) : React__default.createElement("div", {
          className: "p-4 w-full flex flex-col gap-4 items-center justify-center"
        }, React__default.createElement(FileIcon, {
          className: "w-[30%] h-auto fill-gray-300"
        }), React__default.createElement("span", {
          className: "block text-base text-gray-600 w-full break-words truncate"
        }, item.filename))));
      }
      function dirname(path) {
        var _a, _b;
        const pattern = new RegExp("(?<prevDir>.*)/");
        return (_b = (_a = path.match(pattern)) == null ? void 0 : _a.groups) == null ? void 0 : _b.prevDir;
      }
      const BreadcrumbButton = ({ className = "", ...props }) => React__default.createElement("button", {
        className: "capitalize transition-colors duration-150 border-0 bg-transparent hover:text-blue-500 " + className,
        ...props
      });
      function Breadcrumb({ directory = "", setDirectory }) {
        directory = directory.replace(/^\/|\/$/g, "");
        let prevDir = dirname(directory) || "";
        if (prevDir === ".") {
          prevDir = "";
        }
        return React__default.createElement("div", {
          className: "w-full flex items-center text-[16px] text-gray-300"
        }, directory !== "" && React__default.createElement(IconButton3, {
          variant: "ghost",
          className: "mr-2",
          onClick: () => setDirectory(prevDir)
        }, React__default.createElement(LeftArrowIcon, {
          className: `w-7 h-auto fill-gray-300 hover:fill-gray-900 transition duration-150 ease-out`
        })), React__default.createElement(BreadcrumbButton, {
          onClick: () => setDirectory(""),
          className: directory === "" ? "text-gray-500 font-bold" : "text-gray-300 font-medium after:pl-1.5 after:content-['/']"
        }, "Media"), directory && directory.split("/").map((part, index2, parts) => {
          const currentDir = parts.slice(0, index2 + 1).join("/");
          return React__default.createElement(BreadcrumbButton, {
            className: "pl-1.5 " + (index2 + 1 === parts.length ? "text-gray-500 font-bold" : "text-gray-300 font-medium after:pl-1.5 after:content-['/']"),
            key: currentDir,
            onClick: () => {
              setDirectory(currentDir);
            }
          }, part);
        }));
      }
      const DeleteModal = ({
        close,
        deleteFunc,
        filename
      }) => {
        return React__default.createElement(Modal2, null, React__default.createElement(PopupModal, null, React__default.createElement(ModalHeader, {
          close
        }, "Delete ", filename), React__default.createElement(ModalBody, {
          padded: true
        }, React__default.createElement("p", null, "Are you sure you want to delete ", React__default.createElement("strong", null, filename), "?")), React__default.createElement(ModalActions, null, React__default.createElement(Button2, {
          style: { flexGrow: 2 },
          onClick: close
        }, "Cancel"), React__default.createElement(Button2, {
          style: { flexGrow: 3 },
          variant: "danger",
          onClick: () => {
            deleteFunc();
            close();
          }
        }, "Delete"))));
      };
      const SyncModal = ({ close, syncFunc, folder, branch }) => {
        return React__default.createElement(Modal2, null, React__default.createElement(PopupModal, null, React__default.createElement(ModalHeader, {
          close
        }, "Sync Media"), React__default.createElement(ModalBody, {
          padded: true
        }, React__default.createElement("p", null, `This will copy media assets from the \`${folder}\` folder on branch \`${branch}\` in your git repository to Tina Cloud's asset service. This will allow you to use these assets in your site with Tina Cloud`)), React__default.createElement(ModalActions, null, React__default.createElement(Button2, {
          style: { flexGrow: 2 },
          onClick: close
        }, "Cancel"), React__default.createElement(Button2, {
          style: { flexGrow: 3 },
          variant: "primary",
          onClick: async () => {
            await syncFunc();
            close();
          }
        }, "Sync Media"))));
      };
      const CopyField = ({ label: label2, description, value }) => {
        const [copied, setCopied] = React__default.useState(false);
        const [fadeOut, setFadeOut] = React__default.useState(false);
        return React__default.createElement("div", {
          className: "w-full"
        }, label2 && React__default.createElement("label", {
          className: "w-full mb-1 block flex-1  text-sm font-bold leading-5 text-gray-700"
        }, label2), React__default.createElement("span", {
          onClick: () => {
            if (copied === true)
              return;
            setCopied(true);
            setTimeout(() => {
              setFadeOut(true);
            }, 2500);
            setTimeout(() => {
              setCopied(false);
              setFadeOut(false);
            }, 3e3);
            navigator.clipboard.writeText(value);
          },
          className: `shadow-inner text-base leading-5 whitespace-normal break-all px-3 py-2 text-gray-600 w-full bg-gray-50 border border-gray-200 transition-all ease-out duration-150 rounded-md relative overflow-hidden appearance-none flex items-center w-full cursor-pointer hover:bg-white hover:text-blue-500  ${copied ? `pointer-events-none` : ``}`
        }, React__default.createElement(BiCopyAlt, {
          className: "relative text-blue-500 shrink-0 w-5 h-auto mr-1.5 -ml-0.5 z-20"
        }), " ", value, " ", copied && React__default.createElement("span", {
          className: `${fadeOut ? `opacity-0` : `opacity-100`} text-blue-500 transition-opacity	duration-500 absolute right-0 w-full h-full px-3 py-2 bg-white bg-opacity-90 flex items-center justify-center text-center tracking-wide font-medium z-10`
        }, React__default.createElement("span", null, "Copied to clipboard!"))), description && React__default.createElement("p", {
          className: "mt-2 text-sm text-gray-500"
        }, description));
      };
      async function poll(fn2, timeout, interval) {
        const endTime = Number(new Date()) + (timeout || 2e3);
        interval = interval || 100;
        const checkCondition = async function(resolve, reject) {
          const result = await fn2();
          if (result.complete) {
            resolve(result);
          } else if (Number(new Date()) < endTime) {
            setTimeout(checkCondition, interval, resolve, reject);
          } else {
            reject(new Error("Time out error"));
          }
        };
        return new Promise(checkCondition);
      }
      const join = function(...parts) {
        const [first, last2, slash] = [0, parts.length - 1, "/"];
        const matchLeadingSlash = new RegExp("^" + slash);
        const matchTrailingSlash = new RegExp(slash + "$");
        parts = parts.map(function(part, index2) {
          if (index2 === first && part === "file://")
            return part;
          if (index2 > first)
            part = part.replace(matchLeadingSlash, "");
          if (index2 < last2)
            part = part.replace(matchTrailingSlash, "");
          return part;
        });
        return parts.join(slash);
      };
      const defaultListError = new MediaListError$1({
        title: "Error fetching media",
        message: "Something went wrong while requesting the resource.",
        docsLink: "https://tina.io/docs/media/#media-store"
      });
      function MediaPicker({
        allowDelete,
        onSelect,
        close,
        ...props
      }) {
        var _a, _b, _c, _d, _e4, _f, _g, _h, _i, _j, _k, _l, _m;
        const cms = useCMS();
        const [listState, setListState] = react.exports.useState(() => {
          if (cms.media.isConfigured)
            return "loading";
          return "not-configured";
        });
        const [deleteModalOpen, setDeleteModalOpen] = React__default.useState(false);
        const [listError, setListError] = react.exports.useState(defaultListError);
        const [directory, setDirectory] = react.exports.useState(props.directory);
        const [list2, setList] = react.exports.useState({
          items: [],
          nextOffset: void 0
        });
        const [showSync, setShowSync] = react.exports.useState(false);
        const [viewMode, setViewMode] = react.exports.useState("grid");
        const [activeItem, setActiveItem] = react.exports.useState(false);
        const closePreview = () => setActiveItem(false);
        const [offsetHistory, setOffsetHistory] = react.exports.useState([]);
        const [loadingText, setLoadingText] = react.exports.useState("");
        const offset2 = offsetHistory[offsetHistory.length - 1];
        const resetOffset = () => setOffsetHistory([]);
        const navigateNext = () => {
          if (!list2.nextOffset)
            return;
          setOffsetHistory([...offsetHistory, list2.nextOffset]);
        };
        const navigatePrev = () => {
          const offsets = offsetHistory.slice(0, offsetHistory.length - 1);
          setOffsetHistory(offsets);
        };
        const hasPrev = offsetHistory.length > 0;
        const hasNext = !!list2.nextOffset;
        const isLocal2 = cms.api.tina.isLocalMode;
        const hasTinaMedia = Object.keys(((_c = (_b = (_a = cms.api.tina.schema.schema) == null ? void 0 : _a.config) == null ? void 0 : _b.media) == null ? void 0 : _c.tina) || {}).includes("mediaRoot") && Object.keys(((_f = (_e4 = (_d = cms.api.tina.schema.schema) == null ? void 0 : _d.config) == null ? void 0 : _e4.media) == null ? void 0 : _f.tina) || {}).includes("publicFolder");
        const folder = hasTinaMedia ? join((_i = (_h = (_g = cms.api.tina.schema.schema) == null ? void 0 : _g.config) == null ? void 0 : _h.media) == null ? void 0 : _i.tina.publicFolder, (_l = (_k = (_j = cms.api.tina.schema.schema) == null ? void 0 : _j.config) == null ? void 0 : _k.media) == null ? void 0 : _l.tina.mediaRoot) : "";
        const branch = (_m = cms.api.tina) == null ? void 0 : _m.branch;
        function loadMedia() {
          setListState("loading");
          cms.media.list({
            offset: offset2,
            limit: cms.media.pageSize,
            directory,
            thumbnailSizes: [
              { w: 75, h: 75 },
              { w: 400, h: 400 },
              { w: 1e3, h: 1e3 }
            ]
          }).then((list22) => {
            setList(list22);
            setListState("loaded");
          }).catch((e22) => {
            console.error(e22);
            if (e22.ERR_TYPE === "MediaListError") {
              setListError(e22);
            } else {
              setListError(defaultListError);
            }
            setListState("error");
          });
        }
        react.exports.useEffect(() => {
          if (!cms.media.isConfigured)
            return;
          loadMedia();
          return cms.events.subscribe(["media:upload:success", "media:delete:success", "media:pageSize"], loadMedia);
        }, [offset2, directory, cms.media.isConfigured]);
        const onClickMediaItem = (item) => {
          if (!item) {
            setActiveItem(false);
          } else if (item.type === "dir") {
            setDirectory(item.directory === "." || item.directory === "" ? item.filename : join(item.directory, item.filename));
            resetOffset();
          } else {
            setActiveItem(item);
          }
        };
        let deleteMediaItem;
        if (allowDelete) {
          deleteMediaItem = (item) => {
            cms.media.delete(item);
          };
        }
        let selectMediaItem;
        if (onSelect) {
          selectMediaItem = (item) => {
            onSelect(item);
            if (close)
              close();
          };
        }
        const [uploading, setUploading] = react.exports.useState(false);
        const { getRootProps, getInputProps, isDragActive } = useDropzone({
          accept: dropzoneAcceptFromString(cms.media.accept || DEFAULT_MEDIA_UPLOAD_TYPES),
          multiple: true,
          onDrop: async (files) => {
            try {
              setUploading(true);
              await cms.media.persist(files.map((file) => {
                return {
                  directory: directory || "/",
                  file
                };
              }));
            } catch {
            }
            setUploading(false);
          }
        });
        const syncMedia = async () => {
          if (hasTinaMedia) {
            const res = await cms.api.tina.syncTinaMedia();
            if (res == null ? void 0 : res.assetsSyncing) {
              try {
                setListState("loading");
                await poll(async () => {
                  var _a2, _b2;
                  const status = await cms.api.tina.checkSyncStatus({
                    assetsSyncing: res.assetsSyncing
                  });
                  const totalDone = (_a2 = Object.values(status.status).filter(Boolean)) == null ? void 0 : _a2.length;
                  const total = (_b2 = Object.keys(status.status)) == null ? void 0 : _b2.length;
                  setLoadingText(`${totalDone}/${total} Media items loaded`);
                  return status;
                }, 6e4, 3e3);
                setLoadingText("");
                loadMedia();
              } catch (e22) {
                cms.alerts.error("Error in syncing media, check console for more details");
                console.error("'Error in syncing media, check below for more details");
                console.error(e22);
              }
            } else {
              cms.alerts.warn("Whoops, Looks media is not set up correctly in Tina Cloud. Check console for more details");
              console.warn("Whoops, Looks media is not set up correctly. Check below for more details");
              console.warn(res);
            }
          }
        };
        const { onClick, ...rootProps } = getRootProps();
        function disableScrollBody() {
          const body = document == null ? void 0 : document.body;
          body.style.overflow = "hidden";
          return () => {
            body.style.overflow = "auto";
          };
        }
        react.exports.useEffect(disableScrollBody, []);
        if (listState === "loading" || uploading) {
          return React__default.createElement(LoadingMediaList, {
            extraText: loadingText
          });
        }
        if (listState === "not-configured") {
          return React__default.createElement(DocsLink, {
            title: "No Media Store Configured",
            message: "To use the media manager, you need to configure a Media Store.",
            docsLink: "https://tina.io/docs/reference/media/overview/"
          });
        }
        if (listState === "error") {
          const { title, message: message2, docsLink } = listError;
          return React__default.createElement(DocsLink, {
            title,
            message: message2,
            docsLink
          });
        }
        return React__default.createElement(React__default.Fragment, null, deleteModalOpen && React__default.createElement(DeleteModal, {
          filename: activeItem ? activeItem.filename : "",
          deleteFunc: () => {
            if (activeItem) {
              deleteMediaItem(activeItem);
              setActiveItem(false);
            }
          },
          close: () => setDeleteModalOpen(false)
        }), React__default.createElement(MediaPickerWrap, null, React__default.createElement("div", {
          className: "flex items-center bg-gray-50 border-b border-gray-150 gap-x-4 py-3 px-5 shadow-sm flex-shrink-0"
        }, React__default.createElement("div", {
          className: `grow-0 flex divide-x divide-gray-150 shadow-inner bg-gray-50 border border-gray-150 justify-between rounded-md`
        }, React__default.createElement("button", {
          className: `relative whitespace-nowrap flex items-center justify-center flex-1 block font-medium text-base px-2.5 py-1 transition-all ease-out duration-150 rounded-l-md ${viewMode === "grid" ? "bg-white text-blue-500 shadow" : "text-gray-400"}`,
          onClick: () => {
            setViewMode("grid");
          }
        }, React__default.createElement(BiGridAlt, {
          className: "w-6 h-full opacity-70"
        })), React__default.createElement("button", {
          className: `relative whitespace-nowrap flex items-center justify-center flex-1 block font-medium text-base px-2 py-1 transition-all ease-out duration-150 rounded-r-md ${viewMode === "list" ? "bg-white text-blue-500 shadow" : "text-gray-400"}`,
          onClick: () => {
            setViewMode("list");
          }
        }, React__default.createElement(BiListUl, {
          className: "w-8 h-full opacity-70"
        }))), React__default.createElement(Breadcrumb, {
          directory,
          setDirectory
        }), !isLocal2 && hasTinaMedia && React__default.createElement(Button2, {
          busy: false,
          variant: "white",
          onClick: () => {
            setShowSync(true);
          }
        }, "Sync ", React__default.createElement(IoMdSync, {
          className: "w-6 h-full ml-2 opacity-70"
        })), React__default.createElement(UploadButton, {
          onClick,
          uploading
        })), React__default.createElement("div", {
          className: "flex h-full overflow-hidden bg-white"
        }, React__default.createElement("div", {
          className: "flex w-full flex-col h-full @container"
        }, React__default.createElement("ul", {
          ...rootProps,
          className: `h-full grow overflow-y-auto transition duration-150 ease-out bg-gradient-to-b from-gray-50/50 to-gray-50 ${list2.items.length === 0 || viewMode === "list" && "w-full flex flex-1 flex-col justify-start -mb-px"} ${list2.items.length > 0 && viewMode === "grid" && "w-full p-4 gap-4 grid grid-cols-1 @sm:grid-cols-2 @lg:grid-cols-3 @2xl:grid-cols-4 @4xl:grid-cols-6 @6xl:grid-cols-8 auto-rows-auto content-start justify-start"} ${isDragActive ? `border-2 border-blue-500 rounded-lg` : ``}`
        }, React__default.createElement("input", {
          ...getInputProps()
        }), listState === "loaded" && list2.items.length === 0 && React__default.createElement(EmptyMediaList, {
          hasTinaMedia
        }), viewMode === "list" && list2.items.map((item) => React__default.createElement(ListMediaItem, {
          key: item.id,
          item,
          onClick: onClickMediaItem,
          active: activeItem && activeItem.id === item.id
        })), viewMode === "grid" && list2.items.map((item) => React__default.createElement(GridMediaItem, {
          key: item.id,
          item,
          onClick: onClickMediaItem,
          active: activeItem && activeItem.id === item.id
        }))), React__default.createElement("div", {
          className: "bg-gradient-to-r to-gray-50/50 from-gray-50 shrink-0 grow-0 border-t border-gray-150 py-3 px-5 shadow-sm z-10"
        }, React__default.createElement(CursorPaginator, {
          hasNext,
          navigateNext,
          hasPrev,
          navigatePrev
        }))), React__default.createElement(ActiveItemPreview, {
          activeItem,
          close: closePreview,
          selectMediaItem,
          allowDelete,
          deleteMediaItem: () => {
            setDeleteModalOpen(true);
          }
        }))), showSync && React__default.createElement(SyncModal, {
          folder,
          branch,
          syncFunc: syncMedia,
          close: () => {
            setShowSync(false);
          }
        }));
      }
      const ActiveItemPreview = ({
        activeItem,
        close,
        selectMediaItem,
        deleteMediaItem,
        allowDelete
      }) => {
        const thumbnail = activeItem ? activeItem.thumbnails["1000x1000"] : "";
        return React__default.createElement("div", {
          className: `shrink-0 h-full flex flex-col items-start gap-3 overflow-y-auto bg-white border-l border-gray-100 bg-white shadow-md transition ease-out duration-150 ${activeItem ? `p-4 opacity-100 w-[35%] max-w-[560px] min-w-[240px]` : `translate-x-8 opacity-0 w-[0px]`}`
        }, activeItem && React__default.createElement(React__default.Fragment, null, React__default.createElement("div", {
          className: "flex grow-0 shrink-0 gap-2 w-full items-center justify-between"
        }, React__default.createElement("h3", {
          className: "text-lg text-gray-600 w-full max-w-full break-words block truncate flex-1"
        }, activeItem.filename), React__default.createElement(IconButton3, {
          variant: "ghost",
          className: "group grow-0 shrink-0",
          onClick: close
        }, React__default.createElement(BiX, {
          className: `w-7 h-auto text-gray-500 opacity-50 group-hover:opacity-100 transition duration-150 ease-out`
        }))), isImage(thumbnail) ? React__default.createElement("div", {
          className: "w-full max-h-[75%]"
        }, React__default.createElement("img", {
          className: "block border border-gray-100 rounded-md overflow-hidden max-w-full max-h-full object-fit h-auto shadow",
          src: thumbnail,
          alt: activeItem.filename
        })) : React__default.createElement("span", {
          className: "p-3 border border-gray-100 rounded-md overflow-hidden bg-gray-50 shadow"
        }, React__default.createElement(BiFile, {
          className: "w-14 h-auto fill-gray-300"
        })), React__default.createElement("div", {
          className: "grow h-full w-full shrink flex flex-col gap-3 items-start justify-start"
        }, React__default.createElement(CopyField, {
          value: absoluteImgURL(activeItem.src),
          label: "URL"
        })), React__default.createElement("div", {
          className: "shrink-0 w-full flex flex-col justify-end items-start"
        }, React__default.createElement("div", {
          className: "flex w-full gap-3"
        }, selectMediaItem && React__default.createElement(Button2, {
          size: "medium",
          variant: "primary",
          className: "grow",
          onClick: () => selectMediaItem(activeItem)
        }, "Insert", React__default.createElement(BiArrowToBottom, {
          className: "ml-1 -mr-0.5 w-6 h-auto text-white opacity-70"
        })), allowDelete && React__default.createElement(Button2, {
          variant: "white",
          size: "medium",
          className: "grow max-w-[40%]",
          onClick: deleteMediaItem
        }, "Delete", React__default.createElement(TrashIcon, {
          className: "ml-1 -mr-0.5 w-6 h-auto text-red-500 opacity-70"
        }))))));
      };
      const UploadButton = ({ onClick, uploading }) => {
        return React__default.createElement(Button2, {
          variant: "primary",
          size: "custom",
          className: "text-sm h-10 px-6",
          busy: uploading,
          onClick
        }, uploading ? React__default.createElement(LoadingDots, null) : React__default.createElement(React__default.Fragment, null, "Upload ", React__default.createElement(BiCloudUpload, {
          className: "w-6 h-full ml-2 opacity-70"
        })));
      };
      const LoadingMediaList = (props) => {
        return React__default.createElement("div", {
          className: "w-full h-full flex flex-col items-center justify-center",
          ...props
        }, props.extraText && React__default.createElement("p", null, props.extraText), React__default.createElement(LoadingDots, {
          color: "var(--tina-color-primary)"
        }));
      };
      const MediaPickerWrap = ({ children }) => {
        return React__default.createElement("div", {
          className: "h-full flex-1 text-gray-700 flex flex-col relative bg-gray-50 outline-none active:outline-none focus:outline-none"
        }, children);
      };
      const EmptyMediaList = (props) => {
        return React__default.createElement("div", {
          className: `p-12 text-xl opacity-50 text-center`,
          ...props
        }, "Drag and drop assets here", props.hasTinaMedia && " or click 'Sync' to sync your media to Tina Cloud.");
      };
      const DocsLink = ({ title, message: message2, docsLink, ...props }) => {
        return React__default.createElement("div", {
          className: "h-3/4 text-center flex flex-col justify-center",
          ...props
        }, React__default.createElement("h2", {
          className: "mb-3 text-xl text-gray-600"
        }, title), React__default.createElement("div", {
          className: "mb-3 text-base text-gray-700"
        }, message2), React__default.createElement("a", {
          href: docsLink,
          target: "_blank",
          rel: "noreferrer noopener",
          className: "font-bold text-blue-500 hover:text-blue-600 hover:underline transition-all ease-out duration-150"
        }, "Learn More"));
      };
      createScreen({
        name: "Media Manager",
        Component: MediaPicker,
        Icon: MdOutlinePhotoLibrary,
        layout: "fullscreen",
        props: {
          allowDelete: true
        }
      });
      react.exports.createContext(-1);
      react.exports.createContext(null);
      class MediaListError extends Error {
        constructor(config22) {
          super(config22.message);
          this.ERR_TYPE = "MediaListError";
          this.title = config22.title;
          this.docsLink = config22.docsLink;
        }
      }
      const E_DEFAULT = new MediaListError({
        title: "An Error Occurred",
        message: "Something went wrong fetching your media from Digital Ocean Space.",
        docsLink: "https://tina.io/packages/next-tinacms-dos"
      });
      const E_UNAUTHORIZED = new MediaListError({
        title: "Unauthorized",
        message: "You don't have access to this resource.",
        docsLink: "https://tina.io/packages/next-tinacms-dos"
      });
      const E_CONFIG = new MediaListError({
        title: "Missing Credentials",
        message: "Unable to connect to Digital Ocean Space because one or more environment variables are missing.",
        docsLink: "https://tina.io/docs/media-dos/"
      });
      const E_KEY_FAIL = new MediaListError({
        title: "Bad Credentials",
        message: "Unable to connect to Digital Ocean Space because one or more environment variables are misconfigured.",
        docsLink: "https://tina.io/docs/media-dos/"
      });
      const E_BAD_ROUTE = new MediaListError({
        title: "Bad Route",
        message: "The Digital Ocean Space API route is missing or misconfigured.",
        docsLink: "https://tina.io/packages/next-tinacms-dos/#set-up-api-routes"
      });
      const interpretErrorMessage = (message2) => {
        switch (message2) {
          case "Must supply cloud_name":
          case "Must supply api_key":
          case "Must supply api_secret":
            return E_CONFIG;
          case "unknown api_key":
            return E_KEY_FAIL;
          default:
            return E_DEFAULT;
        }
      };
      class DOSMediaStore {
        constructor() {
          this.fetchFunction = (input, init2) => {
            return fetch(input, init2);
          };
          this.accept = DEFAULT_MEDIA_UPLOAD_TYPES;
          this.parse = (img) => {
            return img.src;
          };
        }
        async persist(media) {
          const newFiles = [];
          for (const item of media) {
            const { file, directory } = item;
            const formData = new FormData();
            formData.append("file", file);
            formData.append("directory", directory);
            formData.append("filename", file.name);
            const res = await this.fetchFunction(`/api/dos/media`, {
              method: "POST",
              body: formData
            });
            if (res.status != 200) {
              const responseData = await res.json();
              throw new Error(responseData.message);
            }
            const fileRes = await res.json();
            await new Promise((resolve) => {
              setTimeout(resolve, 2e3);
            });
            newFiles.push(fileRes);
          }
          return newFiles;
        }
        async delete(media) {
          await this.fetchFunction(`/api/dos/media/${encodeURIComponent(media.id)}`, {
            method: "DELETE"
          });
        }
        async list(options) {
          const query = this.buildQuery(options);
          const response = await this.fetchFunction("/api/dos/media" + query);
          if (response.status == 401) {
            throw E_UNAUTHORIZED;
          }
          if (response.status == 404) {
            throw E_BAD_ROUTE;
          }
          if (response.status >= 500) {
            const { e: e22 } = await response.json();
            const error = interpretErrorMessage(e22);
            throw error;
          }
          const { items, offset: offset2 } = await response.json();
          return {
            items: items.map((item) => item),
            nextOffset: offset2
          };
        }
        buildQuery(options) {
          const params = Object.keys(options).filter((key) => options[key] !== "" && options[key] !== void 0).map((key) => `${key}=${options[key]}`).join("&");
          return `?${params}`;
        }
      }
      class TinaCloudDOSMediaStore extends DOSMediaStore {
        constructor(client) {
          super();
          this.client = client;
          this.fetchFunction = async (input, init2) => {
            try {
              const url = input.toString();
              const query = `${url.includes("?") ? "&" : "?"}clientID=${client.clientId}`;
              const res = client.fetchWithToken(url + query, init2);
              return res;
            } catch (error) {
              console.error(error);
            }
          };
        }
      }
      exports2.DOSMediaStore = DOSMediaStore;
      exports2.TinaCloudDOSMediaStore = TinaCloudDOSMediaStore;
      Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
    });
  }
});

// .tina/config.tsx
import { defineStaticConfig } from "tinacms";

// components/blocks/speakers.tsx
import Image from "next/image";

// node_modules/embla-carousel-react/embla-carousel-react.esm.js
import { useRef, useState, useCallback, useEffect } from "react";

// node_modules/embla-carousel/embla-carousel.esm.js
function map(value, iStart, iStop, oStart, oStop) {
  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart));
}
function isNumber(subject) {
  return typeof subject === "number";
}
function isString(subject) {
  return typeof subject === "string";
}
function isObject(subject) {
  return Object.prototype.toString.call(subject) === "[object Object]";
}
function isArray(subject) {
  return Array.isArray(subject);
}
function isRecord(subject) {
  return isObject(subject) || isArray(subject);
}
function mathAbs(n6) {
  return Math.abs(n6);
}
function mathSign(n6) {
  return !n6 ? 0 : n6 / mathAbs(n6);
}
function deltaAbs(valueB, valueA) {
  return mathAbs(valueB - valueA);
}
function factorAbs(valueB, valueA) {
  if (valueB === 0 || valueA === 0)
    return 0;
  if (mathAbs(valueB) <= mathAbs(valueA))
    return 0;
  var diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));
  return mathAbs(diff / valueB);
}
function roundToDecimals(decimalPoints) {
  var pow = Math.pow(10, decimalPoints);
  return function(n6) {
    return Math.round(n6 * pow) / pow;
  };
}
function arrayKeys(array) {
  return objectKeys(array).map(Number);
}
function arrayLast(array) {
  return array[arrayLastIndex(array)];
}
function arrayLastIndex(array) {
  return Math.max(0, array.length - 1);
}
function objectKeys(object) {
  return Object.keys(object);
}
function objectsMergeDeep(objectA, objectB) {
  return [objectA, objectB].reduce(function(mergedObjects, currentObject) {
    objectKeys(currentObject).forEach(function(key) {
      var valueA = mergedObjects[key];
      var valueB = currentObject[key];
      var areObjects = isObject(valueA) && isObject(valueB);
      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;
    });
    return mergedObjects;
  }, {});
}
function objectsAreEqual(objectA, objectB) {
  var objectAKeys = objectKeys(objectA);
  var objectBKeys = objectKeys(objectB);
  if (objectAKeys.length !== objectBKeys.length)
    return false;
  return objectAKeys.every(function(key) {
    var valueA = objectA[key];
    var valueB = objectB[key];
    if (typeof valueA === "function")
      return "".concat(valueA) === "".concat(valueB);
    if (!isRecord(valueA) || !isRecord(valueB))
      return valueA === valueB;
    return objectsAreEqual(valueA, valueB);
  });
}
function Alignment(align, viewSize) {
  var predefined = {
    start,
    center,
    end
  };
  function start() {
    return 0;
  }
  function center(n6) {
    return end(n6) / 2;
  }
  function end(n6) {
    return viewSize - n6;
  }
  function percent() {
    return viewSize * Number(align);
  }
  function measure(n6) {
    if (isNumber(align))
      return percent();
    return predefined[align](n6);
  }
  var self2 = {
    measure
  };
  return self2;
}
function Animation(callback) {
  var animationFrame = 0;
  function ifAnimating(active, cb) {
    return function() {
      if (active === !!animationFrame)
        cb();
    };
  }
  function start() {
    animationFrame = window.requestAnimationFrame(callback);
  }
  function stop() {
    window.cancelAnimationFrame(animationFrame);
    animationFrame = 0;
  }
  var self2 = {
    proceed: ifAnimating(true, start),
    start: ifAnimating(false, start),
    stop: ifAnimating(true, stop)
  };
  return self2;
}
function Axis(axis, direction) {
  var scroll = axis === "y" ? "y" : "x";
  var cross = axis === "y" ? "x" : "y";
  var startEdge = getStartEdge();
  var endEdge = getEndEdge();
  function measureSize(rect) {
    var width = rect.width, height = rect.height;
    return scroll === "x" ? width : height;
  }
  function getStartEdge() {
    if (scroll === "y")
      return "top";
    return direction === "rtl" ? "right" : "left";
  }
  function getEndEdge() {
    if (scroll === "y")
      return "bottom";
    return direction === "rtl" ? "left" : "right";
  }
  var self2 = {
    scroll,
    cross,
    startEdge,
    endEdge,
    measureSize
  };
  return self2;
}
function Limit(min, max) {
  var length = mathAbs(min - max);
  function reachedMin(n6) {
    return n6 < min;
  }
  function reachedMax(n6) {
    return n6 > max;
  }
  function reachedAny(n6) {
    return reachedMin(n6) || reachedMax(n6);
  }
  function constrain(n6) {
    if (!reachedAny(n6))
      return n6;
    return reachedMin(n6) ? min : max;
  }
  function removeOffset(n6) {
    if (!length)
      return n6;
    return n6 - length * Math.ceil((n6 - max) / length);
  }
  var self2 = {
    length,
    max,
    min,
    constrain,
    reachedAny,
    reachedMax,
    reachedMin,
    removeOffset
  };
  return self2;
}
function Counter(max, start, loop) {
  var _a = Limit(0, max), min = _a.min, constrain = _a.constrain;
  var loopEnd = max + 1;
  var counter = withinLimit(start);
  function withinLimit(n6) {
    return !loop ? constrain(n6) : mathAbs((loopEnd + n6) % loopEnd);
  }
  function get() {
    return counter;
  }
  function set(n6) {
    counter = withinLimit(n6);
    return self2;
  }
  function add(n6) {
    return set(get() + n6);
  }
  function clone() {
    return Counter(max, get(), loop);
  }
  var self2 = {
    add,
    clone,
    get,
    set,
    min,
    max
  };
  return self2;
}
function Direction(direction) {
  var sign = direction === "rtl" ? -1 : 1;
  function apply(n6) {
    return n6 * sign;
  }
  var self2 = {
    apply
  };
  return self2;
}
function EventStore() {
  var listeners = [];
  function add(node, type, handler, options) {
    if (options === void 0) {
      options = {
        passive: true
      };
    }
    node.addEventListener(type, handler, options);
    listeners.push(function() {
      return node.removeEventListener(type, handler, options);
    });
    return self2;
  }
  function removeAll() {
    listeners = listeners.filter(function(remove) {
      return remove();
    });
    return self2;
  }
  var self2 = {
    add,
    removeAll
  };
  return self2;
}
function Vector1D(value) {
  var vector = value;
  function get() {
    return vector;
  }
  function set(n6) {
    vector = readNumber(n6);
    return self2;
  }
  function add(n6) {
    vector += readNumber(n6);
    return self2;
  }
  function subtract(n6) {
    vector -= readNumber(n6);
    return self2;
  }
  function multiply(n6) {
    vector *= n6;
    return self2;
  }
  function divide(n6) {
    vector /= n6;
    return self2;
  }
  function normalize() {
    if (vector !== 0)
      divide(vector);
    return self2;
  }
  function readNumber(n6) {
    return isNumber(n6) ? n6 : n6.get();
  }
  var self2 = {
    add,
    divide,
    get,
    multiply,
    normalize,
    set,
    subtract
  };
  return self2;
}
function DragHandler(axis, direction, rootNode, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, loop, dragFree, skipSnaps) {
  var crossAxis = axis.cross;
  var focusNodes = ["INPUT", "SELECT", "TEXTAREA"];
  var nonPassiveEvent = {
    passive: false
  };
  var dragStartPoint = Vector1D(0);
  var activationEvents = EventStore();
  var interactionEvents = EventStore();
  var dragThreshold = percentOfView.measure(20);
  var snapForceBoost = {
    mouse: 300,
    touch: 400
  };
  var freeForceBoost = {
    mouse: 500,
    touch: 600
  };
  var baseSpeed = dragFree ? 5 : 16;
  var baseMass = 1;
  var startScroll = 0;
  var startCross = 0;
  var pointerIsDown = false;
  var preventScroll = false;
  var preventClick = false;
  var isMouse = false;
  function addActivationEvents() {
    var node = rootNode;
    activationEvents.add(node, "dragstart", function(evt) {
      return evt.preventDefault();
    }, nonPassiveEvent).add(node, "touchmove", function() {
      return void 0;
    }, nonPassiveEvent).add(node, "touchend", function() {
      return void 0;
    }).add(node, "touchstart", down).add(node, "mousedown", down).add(node, "touchcancel", up).add(node, "contextmenu", up).add(node, "click", click, true);
  }
  function addInteractionEvents() {
    var node = isMouse ? document : rootNode;
    interactionEvents.add(node, "touchmove", move, nonPassiveEvent).add(node, "touchend", up).add(node, "mousemove", move, nonPassiveEvent).add(node, "mouseup", up);
  }
  function removeAllEvents() {
    activationEvents.removeAll();
    interactionEvents.removeAll();
  }
  function isFocusNode(node) {
    var name = node.nodeName || "";
    return focusNodes.indexOf(name) > -1;
  }
  function forceBoost() {
    var boost = dragFree ? freeForceBoost : snapForceBoost;
    var type = isMouse ? "mouse" : "touch";
    return boost[type];
  }
  function allowedForce(force, targetChanged) {
    var next = index.clone().add(mathSign(force) * -1);
    var isEdge = next.get() === index.min || next.get() === index.max;
    var baseForce = scrollTarget.byDistance(force, !dragFree).distance;
    if (dragFree || mathAbs(force) < dragThreshold)
      return baseForce;
    if (!loop && isEdge)
      return baseForce * 0.4;
    if (skipSnaps && targetChanged)
      return baseForce * 0.5;
    return scrollTarget.byIndex(next.get(), 0).distance;
  }
  function down(evt) {
    isMouse = !dragTracker.isTouchEvent(evt);
    if (isMouse && evt.button !== 0)
      return;
    if (isFocusNode(evt.target))
      return;
    var isMoving = deltaAbs(target.get(), location.get()) >= 2;
    var clearPreventClick = isMouse || !isMoving;
    pointerIsDown = true;
    dragTracker.pointerDown(evt);
    dragStartPoint.set(target);
    target.set(location);
    scrollBody.useBaseMass().useSpeed(80);
    addInteractionEvents();
    startScroll = dragTracker.readPoint(evt);
    startCross = dragTracker.readPoint(evt, crossAxis);
    eventHandler.emit("pointerDown");
    if (clearPreventClick)
      preventClick = false;
  }
  function move(evt) {
    if (!preventScroll && !isMouse) {
      if (!evt.cancelable)
        return up(evt);
      var lastScroll = dragTracker.readPoint(evt);
      var lastCross = dragTracker.readPoint(evt, crossAxis);
      var diffScroll = deltaAbs(lastScroll, startScroll);
      var diffCross = deltaAbs(lastCross, startCross);
      preventScroll = diffScroll > diffCross;
      if (!preventScroll && !preventClick)
        return up(evt);
    }
    var diff = dragTracker.pointerMove(evt);
    if (!preventClick && diff)
      preventClick = true;
    animation.start();
    target.add(direction.apply(diff));
    evt.preventDefault();
  }
  function up(evt) {
    var currentLocation = scrollTarget.byDistance(0, false);
    var targetChanged = currentLocation.index !== index.get();
    var rawForce = dragTracker.pointerUp(evt) * forceBoost();
    var force = allowedForce(direction.apply(rawForce), targetChanged);
    var forceFactor = factorAbs(rawForce, force);
    var isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5;
    var isVigorous = targetChanged && forceFactor > 0.75;
    var isBelowThreshold = mathAbs(rawForce) < dragThreshold;
    var speed = isVigorous ? 10 : baseSpeed;
    var mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass;
    if (isMoving && !isMouse)
      preventClick = true;
    preventScroll = false;
    pointerIsDown = false;
    interactionEvents.removeAll();
    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass);
    scrollTo.distance(force, !dragFree);
    isMouse = false;
    eventHandler.emit("pointerUp");
  }
  function click(evt) {
    if (preventClick) {
      evt.stopPropagation();
      evt.preventDefault();
    }
  }
  function clickAllowed() {
    return !preventClick;
  }
  function pointerDown() {
    return pointerIsDown;
  }
  var self2 = {
    addActivationEvents,
    clickAllowed,
    pointerDown,
    removeAllEvents
  };
  return self2;
}
function DragTracker(axis) {
  var logInterval = 170;
  var startEvent;
  var lastEvent;
  function isTouchEvent(evt) {
    return typeof TouchEvent !== "undefined" && evt instanceof TouchEvent;
  }
  function readTime(evt) {
    return evt.timeStamp;
  }
  function readPoint(evt, evtAxis) {
    var property = evtAxis || axis.scroll;
    var coord = "client".concat(property === "x" ? "X" : "Y");
    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord];
  }
  function pointerDown(evt) {
    startEvent = evt;
    lastEvent = evt;
    return readPoint(evt);
  }
  function pointerMove(evt) {
    var diff = readPoint(evt) - readPoint(lastEvent);
    var expired = readTime(evt) - readTime(startEvent) > logInterval;
    lastEvent = evt;
    if (expired)
      startEvent = evt;
    return diff;
  }
  function pointerUp(evt) {
    if (!startEvent || !lastEvent)
      return 0;
    var diffDrag = readPoint(lastEvent) - readPoint(startEvent);
    var diffTime = readTime(evt) - readTime(startEvent);
    var expired = readTime(evt) - readTime(lastEvent) > logInterval;
    var force = diffDrag / diffTime;
    var isFlick = diffTime && !expired && mathAbs(force) > 0.1;
    return isFlick ? force : 0;
  }
  var self2 = {
    isTouchEvent,
    pointerDown,
    pointerMove,
    pointerUp,
    readPoint
  };
  return self2;
}
function PercentOfView(viewSize) {
  function measure(n6) {
    return viewSize * (n6 / 100);
  }
  var self2 = {
    measure
  };
  return self2;
}
function ScrollBody(location, baseSpeed, baseMass) {
  var roundToTwoDecimals = roundToDecimals(2);
  var velocity = Vector1D(0);
  var acceleration = Vector1D(0);
  var attraction = Vector1D(0);
  var attractionDirection = 0;
  var speed = baseSpeed;
  var mass = baseMass;
  function update() {
    velocity.add(acceleration);
    location.add(velocity);
    acceleration.multiply(0);
  }
  function applyForce(force) {
    force.divide(mass);
    acceleration.add(force);
  }
  function seek(target) {
    attraction.set(target).subtract(location);
    var magnitude = map(attraction.get(), 0, 100, 0, speed);
    attractionDirection = mathSign(attraction.get());
    attraction.normalize().multiply(magnitude).subtract(velocity);
    applyForce(attraction);
    return self2;
  }
  function settle(target) {
    var diff = target.get() - location.get();
    var hasSettled = !roundToTwoDecimals(diff);
    if (hasSettled)
      location.set(target);
    return hasSettled;
  }
  function direction() {
    return attractionDirection;
  }
  function useBaseSpeed() {
    return useSpeed(baseSpeed);
  }
  function useBaseMass() {
    return useMass(baseMass);
  }
  function useSpeed(n6) {
    speed = n6;
    return self2;
  }
  function useMass(n6) {
    mass = n6;
    return self2;
  }
  var self2 = {
    direction,
    seek,
    settle,
    update,
    useBaseMass,
    useBaseSpeed,
    useMass,
    useSpeed
  };
  return self2;
}
function ScrollBounds(limit, location, target, scrollBody, percentOfView) {
  var pullBackThreshold = percentOfView.measure(10);
  var edgeOffsetTolerance = percentOfView.measure(50);
  var maxFriction = 0.85;
  var disabled = false;
  function shouldConstrain() {
    if (disabled)
      return false;
    if (!limit.reachedAny(target.get()))
      return false;
    if (!limit.reachedAny(location.get()))
      return false;
    return true;
  }
  function constrain(pointerDown) {
    if (!shouldConstrain())
      return;
    var edge = limit.reachedMin(location.get()) ? "min" : "max";
    var diffToEdge = mathAbs(limit[edge] - location.get());
    var diffToTarget = target.get() - location.get();
    var friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction);
    target.subtract(diffToTarget * friction);
    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {
      target.set(limit.constrain(target.get()));
      scrollBody.useSpeed(10).useMass(3);
    }
  }
  function toggleActive(active) {
    disabled = !active;
  }
  var self2 = {
    constrain,
    toggleActive
  };
  return self2;
}
function ScrollContain(viewSize, contentSize, snapsAligned, containScroll) {
  var scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0]);
  var snapsBounded = snapsAligned.map(scrollBounds.constrain);
  var snapsContained = measureContained();
  function findDuplicates() {
    var startSnap = snapsBounded[0];
    var endSnap = arrayLast(snapsBounded);
    var min = snapsBounded.lastIndexOf(startSnap);
    var max = snapsBounded.indexOf(endSnap) + 1;
    return Limit(min, max);
  }
  function measureContained() {
    if (contentSize <= viewSize)
      return [scrollBounds.max];
    if (containScroll === "keepSnaps")
      return snapsBounded;
    var _a = findDuplicates(), min = _a.min, max = _a.max;
    return snapsBounded.slice(min, max);
  }
  var self2 = {
    snapsContained
  };
  return self2;
}
function ScrollLimit(contentSize, scrollSnaps, loop) {
  var limit = measureLimit();
  function measureLimit() {
    var startSnap = scrollSnaps[0];
    var endSnap = arrayLast(scrollSnaps);
    var min = loop ? startSnap - contentSize : endSnap;
    var max = startSnap;
    return Limit(min, max);
  }
  var self2 = {
    limit
  };
  return self2;
}
function ScrollLooper(contentSize, limit, location, vectors) {
  var jointSafety = 0.1;
  var min = limit.min + jointSafety;
  var max = limit.max + jointSafety;
  var _a = Limit(min, max), reachedMin = _a.reachedMin, reachedMax = _a.reachedMax;
  function shouldLoop(direction) {
    if (direction === 1)
      return reachedMax(location.get());
    if (direction === -1)
      return reachedMin(location.get());
    return false;
  }
  function loop(direction) {
    if (!shouldLoop(direction))
      return;
    var loopDistance = contentSize * (direction * -1);
    vectors.forEach(function(v4) {
      return v4.add(loopDistance);
    });
  }
  var self2 = {
    loop
  };
  return self2;
}
function ScrollProgress(limit) {
  var max = limit.max, scrollLength = limit.length;
  function get(n6) {
    var currentLocation = n6 - max;
    return currentLocation / -scrollLength;
  }
  var self2 = {
    get
  };
  return self2;
}
function ScrollSnaps(axis, alignment, containerRect, slideRects, slideSizesWithGaps, slidesToScroll, containScroll) {
  var startEdge = axis.startEdge, endEdge = axis.endEdge;
  var groupSlides = slidesToScroll.groupSlides;
  var alignments = measureSizes().map(alignment.measure);
  var snaps = measureUnaligned();
  var snapsAligned = measureAligned();
  function measureSizes() {
    return groupSlides(slideRects).map(function(rects) {
      return arrayLast(rects)[endEdge] - rects[0][startEdge];
    }).map(mathAbs);
  }
  function measureUnaligned() {
    return slideRects.map(function(rect) {
      return containerRect[startEdge] - rect[startEdge];
    }).map(function(snap) {
      return -mathAbs(snap);
    });
  }
  function measureAligned() {
    var containedStartSnap = 0;
    var containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps);
    return groupSlides(snaps).map(function(g4) {
      return g4[0];
    }).map(function(snap, index, groupedSnaps) {
      var isFirst = !index;
      var isLast = index === arrayLastIndex(groupedSnaps);
      if (containScroll && isFirst)
        return containedStartSnap;
      if (containScroll && isLast)
        return containedEndSnap;
      return snap + alignments[index];
    });
  }
  var self2 = {
    snaps,
    snapsAligned
  };
  return self2;
}
function ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {
  var reachedAny = limit.reachedAny, removeOffset = limit.removeOffset, constrain = limit.constrain;
  function minDistance(distances) {
    return distances.concat().sort(function(a11, b4) {
      return mathAbs(a11) - mathAbs(b4);
    })[0];
  }
  function findTargetSnap(target) {
    var distance = loop ? removeOffset(target) : constrain(target);
    var ascDiffsToSnaps = scrollSnaps.map(function(scrollSnap) {
      return scrollSnap - distance;
    }).map(function(diffToSnap) {
      return shortcut(diffToSnap, 0);
    }).map(function(diff, i11) {
      return {
        diff,
        index: i11
      };
    }).sort(function(d1, d22) {
      return mathAbs(d1.diff) - mathAbs(d22.diff);
    });
    var index = ascDiffsToSnaps[0].index;
    return {
      index,
      distance
    };
  }
  function shortcut(target, direction) {
    var targets = [target, target + contentSize, target - contentSize];
    if (!loop)
      return targets[0];
    if (!direction)
      return minDistance(targets);
    var matchingTargets = targets.filter(function(t15) {
      return mathSign(t15) === direction;
    });
    return minDistance(matchingTargets);
  }
  function byIndex(index, direction) {
    var diffToSnap = scrollSnaps[index] - targetVector.get();
    var distance = shortcut(diffToSnap, direction);
    return {
      index,
      distance
    };
  }
  function byDistance(distance, snap) {
    var target = targetVector.get() + distance;
    var _a = findTargetSnap(target), index = _a.index, targetSnapDistance = _a.distance;
    var reachedBound = !loop && reachedAny(target);
    if (!snap || reachedBound)
      return {
        index,
        distance
      };
    var diffToSnap = scrollSnaps[index] - targetSnapDistance;
    var snapDistance = distance + shortcut(diffToSnap, 0);
    return {
      index,
      distance: snapDistance
    };
  }
  var self2 = {
    byDistance,
    byIndex,
    shortcut
  };
  return self2;
}
function ScrollTo(animation, indexCurrent, indexPrevious, scrollTarget, targetVector, eventHandler) {
  function scrollTo(target) {
    var distanceDiff = target.distance;
    var indexDiff = target.index !== indexCurrent.get();
    if (distanceDiff) {
      animation.start();
      targetVector.add(distanceDiff);
    }
    if (indexDiff) {
      indexPrevious.set(indexCurrent.get());
      indexCurrent.set(target.index);
      eventHandler.emit("select");
    }
  }
  function distance(n6, snap) {
    var target = scrollTarget.byDistance(n6, snap);
    scrollTo(target);
  }
  function index(n6, direction) {
    var targetIndex = indexCurrent.clone().set(n6);
    var target = scrollTarget.byIndex(targetIndex.get(), direction);
    scrollTo(target);
  }
  var self2 = {
    distance,
    index
  };
  return self2;
}
function Translate(axis, direction, container) {
  var translate = axis.scroll === "x" ? x6 : y7;
  var containerStyle = container.style;
  var disabled = false;
  function x6(n6) {
    return "translate3d(".concat(n6, "px,0px,0px)");
  }
  function y7(n6) {
    return "translate3d(0px,".concat(n6, "px,0px)");
  }
  function to2(target) {
    if (disabled)
      return;
    containerStyle.transform = translate(direction.apply(target.get()));
  }
  function toggleActive(active) {
    disabled = !active;
  }
  function clear() {
    if (disabled)
      return;
    containerStyle.transform = "";
    if (!container.getAttribute("style"))
      container.removeAttribute("style");
  }
  var self2 = {
    clear,
    to: to2,
    toggleActive
  };
  return self2;
}
function SlideLooper(axis, direction, viewSize, contentSize, slideSizesWithGaps, scrollSnaps, slidesInView, scroll, slides) {
  var ascItems = arrayKeys(slideSizesWithGaps);
  var descItems = arrayKeys(slideSizesWithGaps).reverse();
  var loopPoints = startPoints().concat(endPoints());
  function removeSlideSizes(indexes, from) {
    return indexes.reduce(function(a11, i11) {
      return a11 - slideSizesWithGaps[i11];
    }, from);
  }
  function slidesInGap(indexes, gap) {
    return indexes.reduce(function(a11, i11) {
      var remainingGap = removeSlideSizes(a11, gap);
      return remainingGap > 0 ? a11.concat([i11]) : a11;
    }, []);
  }
  function findLoopPoints(indexes, edge) {
    var isStartEdge = edge === "start";
    var offset = isStartEdge ? -contentSize : contentSize;
    var slideBounds = slidesInView.findSlideBounds([offset]);
    return indexes.map(function(index) {
      var initial = isStartEdge ? 0 : -contentSize;
      var altered = isStartEdge ? contentSize : 0;
      var bounds = slideBounds.filter(function(b4) {
        return b4.index === index;
      })[0];
      var point = bounds[isStartEdge ? "end" : "start"];
      var shift = Vector1D(-1);
      var location = Vector1D(-1);
      var translate = Translate(axis, direction, slides[index]);
      var target = function() {
        return shift.set(scroll.get() > point ? initial : altered);
      };
      return {
        index,
        location,
        translate,
        target
      };
    });
  }
  function startPoints() {
    var gap = scrollSnaps[0] - 1;
    var indexes = slidesInGap(descItems, gap);
    return findLoopPoints(indexes, "end");
  }
  function endPoints() {
    var gap = viewSize - scrollSnaps[0] - 1;
    var indexes = slidesInGap(ascItems, gap);
    return findLoopPoints(indexes, "start");
  }
  function canLoop() {
    return loopPoints.every(function(_a) {
      var index = _a.index;
      var otherIndexes = ascItems.filter(function(i11) {
        return i11 !== index;
      });
      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;
    });
  }
  function loop() {
    loopPoints.forEach(function(loopPoint) {
      var target = loopPoint.target, translate = loopPoint.translate, location = loopPoint.location;
      var shift = target();
      if (shift.get() === location.get())
        return;
      if (shift.get() === 0)
        translate.clear();
      else
        translate.to(shift);
      location.set(shift);
    });
  }
  function clear() {
    loopPoints.forEach(function(loopPoint) {
      return loopPoint.translate.clear();
    });
  }
  var self2 = {
    canLoop,
    clear,
    loop,
    loopPoints
  };
  return self2;
}
function SlidesInView(viewSize, contentSize, slideSizes, snaps, limit, loop, inViewThreshold) {
  var removeOffset = limit.removeOffset, constrain = limit.constrain;
  var roundingSafety = 0.5;
  var cachedOffsets = loop ? [0, contentSize, -contentSize] : [0];
  var cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold);
  function findSlideThresholds(threshold) {
    var slideThreshold = threshold || 0;
    return slideSizes.map(function(slideSize) {
      var thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety);
      return thresholdLimit.constrain(slideSize * slideThreshold);
    });
  }
  function findSlideBounds(offsets, threshold) {
    var slideOffsets = offsets || cachedOffsets;
    var slideThresholds = findSlideThresholds(threshold);
    return slideOffsets.reduce(function(list, offset) {
      var bounds = snaps.map(function(snap, index) {
        return {
          start: snap - slideSizes[index] + slideThresholds[index] + offset,
          end: snap + viewSize - slideThresholds[index] + offset,
          index
        };
      });
      return list.concat(bounds);
    }, []);
  }
  function check(location, bounds) {
    var limitedLocation = loop ? removeOffset(location) : constrain(location);
    var slideBounds = bounds || cachedBounds;
    return slideBounds.reduce(function(list, slideBound) {
      var index = slideBound.index, start = slideBound.start, end = slideBound.end;
      var inList = list.indexOf(index) !== -1;
      var inView = start < limitedLocation && end > limitedLocation;
      return !inList && inView ? list.concat([index]) : list;
    }, []);
  }
  var self2 = {
    check,
    findSlideBounds
  };
  return self2;
}
function SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap) {
  var measureSize = axis.measureSize, startEdge = axis.startEdge, endEdge = axis.endEdge;
  var withEdgeGap = slideRects[0] && readEdgeGap;
  var startGap = measureStartGap();
  var endGap = measureEndGap();
  var slideSizes = slideRects.map(measureSize);
  var slideSizesWithGaps = measureWithGaps();
  function measureStartGap() {
    if (!withEdgeGap)
      return 0;
    var slideRect = slideRects[0];
    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);
  }
  function measureEndGap() {
    if (!withEdgeGap)
      return 0;
    var style = window.getComputedStyle(arrayLast(slides));
    return parseFloat(style.getPropertyValue("margin-".concat(endEdge)));
  }
  function measureWithGaps() {
    return slideRects.map(function(rect, index, rects) {
      var isFirst = !index;
      var isLast = index === arrayLastIndex(rects);
      if (isFirst)
        return slideSizes[index] + startGap;
      if (isLast)
        return slideSizes[index] + endGap;
      return rects[index + 1][startEdge] - rect[startEdge];
    }).map(mathAbs);
  }
  var self2 = {
    slideSizes,
    slideSizesWithGaps
  };
  return self2;
}
function SlidesToScroll(viewSize, slideSizesWithGaps, slidesToScroll) {
  var groupByNumber = isNumber(slidesToScroll);
  function byNumber(array, groupSize) {
    return arrayKeys(array).filter(function(i11) {
      return i11 % groupSize === 0;
    }).map(function(i11) {
      return array.slice(i11, i11 + groupSize);
    });
  }
  function bySize(array) {
    return arrayKeys(array).reduce(function(groupSizes, i11) {
      var chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i11 + 1);
      var chunkSize = chunk.reduce(function(a11, s17) {
        return a11 + s17;
      }, 0);
      return !i11 || chunkSize > viewSize ? groupSizes.concat(i11) : groupSizes;
    }, []).map(function(start, i11, groupSizes) {
      return array.slice(start, groupSizes[i11 + 1]);
    });
  }
  function groupSlides(array) {
    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);
  }
  var self2 = {
    groupSlides
  };
  return self2;
}
function Engine(root, container, slides, options, eventHandler) {
  var align = options.align, scrollAxis = options.axis, contentDirection = options.direction, startIndex = options.startIndex, inViewThreshold = options.inViewThreshold, loop = options.loop, speed = options.speed, dragFree = options.dragFree, groupSlides = options.slidesToScroll, skipSnaps = options.skipSnaps, containScroll = options.containScroll;
  var containerRect = container.getBoundingClientRect();
  var slideRects = slides.map(function(slide) {
    return slide.getBoundingClientRect();
  });
  var direction = Direction(contentDirection);
  var axis = Axis(scrollAxis, contentDirection);
  var viewSize = axis.measureSize(containerRect);
  var percentOfView = PercentOfView(viewSize);
  var alignment = Alignment(align, viewSize);
  var containSnaps = !loop && containScroll !== "";
  var readEdgeGap = loop || containScroll !== "";
  var _a = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap), slideSizes = _a.slideSizes, slideSizesWithGaps = _a.slideSizesWithGaps;
  var slidesToScroll = SlidesToScroll(viewSize, slideSizesWithGaps, groupSlides);
  var _b = ScrollSnaps(axis, alignment, containerRect, slideRects, slideSizesWithGaps, slidesToScroll, containSnaps), snaps = _b.snaps, snapsAligned = _b.snapsAligned;
  var contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);
  var snapsContained = ScrollContain(viewSize, contentSize, snapsAligned, containScroll).snapsContained;
  var scrollSnaps = containSnaps ? snapsContained : snapsAligned;
  var limit = ScrollLimit(contentSize, scrollSnaps, loop).limit;
  var index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);
  var indexPrevious = index.clone();
  var slideIndexes = arrayKeys(slides);
  var update = function() {
    if (!loop)
      engine.scrollBounds.constrain(engine.dragHandler.pointerDown());
    engine.scrollBody.seek(target).update();
    var settled = engine.scrollBody.settle(target);
    if (settled && !engine.dragHandler.pointerDown()) {
      engine.animation.stop();
      eventHandler.emit("settle");
    }
    if (!settled) {
      eventHandler.emit("scroll");
    }
    if (loop) {
      engine.scrollLooper.loop(engine.scrollBody.direction());
      engine.slideLooper.loop();
    }
    engine.translate.to(location);
    engine.animation.proceed();
  };
  var animation = Animation(update);
  var startLocation = scrollSnaps[index.get()];
  var location = Vector1D(startLocation);
  var target = Vector1D(startLocation);
  var scrollBody = ScrollBody(location, speed, 1);
  var scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);
  var scrollTo = ScrollTo(animation, index, indexPrevious, scrollTarget, target, eventHandler);
  var slidesInView = SlidesInView(viewSize, contentSize, slideSizes, snaps, limit, loop, inViewThreshold);
  var dragHandler = DragHandler(axis, direction, root, target, DragTracker(axis), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, loop, dragFree, skipSnaps);
  var engine = {
    containerRect,
    slideRects,
    animation,
    axis,
    direction,
    dragHandler,
    eventStore: EventStore(),
    percentOfView,
    index,
    indexPrevious,
    limit,
    location,
    options,
    scrollBody,
    scrollBounds: ScrollBounds(limit, location, target, scrollBody, percentOfView),
    scrollLooper: ScrollLooper(contentSize, limit, location, [location, target]),
    scrollProgress: ScrollProgress(limit),
    scrollSnaps,
    scrollTarget,
    scrollTo,
    slideLooper: SlideLooper(axis, direction, viewSize, contentSize, slideSizesWithGaps, scrollSnaps, slidesInView, location, slides),
    slidesToScroll,
    slidesInView,
    slideIndexes,
    target,
    translate: Translate(axis, direction, container)
  };
  return engine;
}
function EventHandler() {
  var listeners = {};
  function getListeners(evt) {
    return listeners[evt] || [];
  }
  function emit(evt) {
    getListeners(evt).forEach(function(e6) {
      return e6(evt);
    });
    return self2;
  }
  function on(evt, cb) {
    listeners[evt] = getListeners(evt).concat([cb]);
    return self2;
  }
  function off(evt, cb) {
    listeners[evt] = getListeners(evt).filter(function(e6) {
      return e6 !== cb;
    });
    return self2;
  }
  var self2 = {
    emit,
    off,
    on
  };
  return self2;
}
var defaultOptions = {
  align: "center",
  axis: "x",
  container: null,
  slides: null,
  containScroll: "",
  direction: "ltr",
  slidesToScroll: 1,
  breakpoints: {},
  dragFree: false,
  draggable: true,
  inViewThreshold: 0,
  loop: false,
  skipSnaps: false,
  speed: 10,
  startIndex: 0,
  active: true
};
function OptionsHandler() {
  function merge(optionsA, optionsB) {
    return objectsMergeDeep(optionsA, optionsB || {});
  }
  function areEqual(optionsA, optionsB) {
    var breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}));
    var breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}));
    if (breakpointsA !== breakpointsB)
      return false;
    return objectsAreEqual(optionsA, optionsB);
  }
  function atMedia(options) {
    var optionsAtMedia = options.breakpoints || {};
    var matchedMediaOptions = objectKeys(optionsAtMedia).filter(function(media) {
      return window.matchMedia(media).matches;
    }).map(function(media) {
      return optionsAtMedia[media];
    }).reduce(function(a11, mediaOption) {
      return merge(a11, mediaOption);
    }, {});
    return merge(options, matchedMediaOptions);
  }
  var self2 = {
    merge,
    areEqual,
    atMedia
  };
  return self2;
}
function PluginsHandler() {
  var _a = OptionsHandler(), atMedia = _a.atMedia, areEqual = _a.areEqual;
  var activePlugins = [];
  var pluginsChanged = [];
  function haveChanged() {
    return pluginsChanged.some(function(hasChanged2) {
      return hasChanged2();
    });
  }
  function hasChanged(plugin) {
    var options = atMedia(plugin.options);
    return function() {
      return !areEqual(options, atMedia(plugin.options));
    };
  }
  function init(plugins, embla) {
    pluginsChanged = plugins.map(hasChanged);
    activePlugins = plugins.filter(function(plugin) {
      return atMedia(plugin.options).active;
    });
    activePlugins.forEach(function(plugin) {
      return plugin.init(embla);
    });
    return plugins.reduce(function(map2, plugin) {
      var _a2;
      return Object.assign(map2, (_a2 = {}, _a2[plugin.name] = plugin, _a2));
    }, {});
  }
  function destroy() {
    activePlugins = activePlugins.filter(function(plugin) {
      return plugin.destroy();
    });
  }
  var self2 = {
    init,
    destroy,
    haveChanged
  };
  return self2;
}
function EmblaCarousel(root, userOptions, userPlugins) {
  var resizeHandlers = EventStore();
  var optionsHandler = OptionsHandler();
  var pluginsHandler = PluginsHandler();
  var eventHandler = EventHandler();
  var on = eventHandler.on, off = eventHandler.off;
  var reInit = reActivate;
  var destroyed = false;
  var engine;
  var optionsBase = optionsHandler.merge(defaultOptions, EmblaCarousel.globalOptions);
  var options = optionsHandler.merge(optionsBase);
  var pluginList = [];
  var pluginApis;
  var rootSize = 0;
  var container;
  var slides;
  function storeElements() {
    var userContainer = options.container, userSlides = options.slides;
    var customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;
    container = customContainer || root.children[0];
    var customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;
    slides = [].slice.call(customSlides || container.children);
  }
  function activate(withOptions, withPlugins2) {
    if (destroyed)
      return;
    optionsBase = optionsHandler.merge(optionsBase, withOptions);
    options = optionsHandler.atMedia(optionsBase);
    storeElements();
    engine = Engine(root, container, slides, options, eventHandler);
    rootSize = engine.axis.measureSize(root.getBoundingClientRect());
    if (!options.active)
      return deActivate();
    engine.translate.to(engine.location);
    pluginList = withPlugins2 || pluginList;
    pluginApis = pluginsHandler.init(pluginList, self2);
    if (options.loop) {
      if (!engine.slideLooper.canLoop()) {
        deActivate();
        activate({
          loop: false
        }, withPlugins2);
        optionsBase = optionsHandler.merge(optionsBase, {
          loop: true
        });
        return;
      }
      engine.slideLooper.loop();
    }
    if (options.draggable && container.offsetParent && slides.length) {
      engine.dragHandler.addActivationEvents();
    }
  }
  function reActivate(withOptions, withPlugins2) {
    var startIndex = selectedScrollSnap();
    deActivate();
    activate(optionsHandler.merge({
      startIndex
    }, withOptions), withPlugins2);
    eventHandler.emit("reInit");
  }
  function deActivate() {
    engine.dragHandler.removeAllEvents();
    engine.animation.stop();
    engine.eventStore.removeAll();
    engine.translate.clear();
    engine.slideLooper.clear();
    pluginsHandler.destroy();
  }
  function destroy() {
    if (destroyed)
      return;
    destroyed = true;
    resizeHandlers.removeAll();
    deActivate();
    eventHandler.emit("destroy");
  }
  function resize() {
    var newOptions = optionsHandler.atMedia(optionsBase);
    var optionsChanged = !optionsHandler.areEqual(newOptions, options);
    var newRootSize = engine.axis.measureSize(root.getBoundingClientRect());
    var rootSizeChanged = rootSize !== newRootSize;
    var pluginsChanged = pluginsHandler.haveChanged();
    if (rootSizeChanged || optionsChanged || pluginsChanged)
      reActivate();
    eventHandler.emit("resize");
  }
  function slidesInView(target) {
    var location = engine[target ? "target" : "location"].get();
    var type = options.loop ? "removeOffset" : "constrain";
    return engine.slidesInView.check(engine.limit[type](location));
  }
  function slidesNotInView(target) {
    var inView = slidesInView(target);
    return engine.slideIndexes.filter(function(index) {
      return inView.indexOf(index) === -1;
    });
  }
  function scrollTo(index, jump, direction) {
    if (!options.active || destroyed)
      return;
    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed);
    engine.scrollTo.index(index, direction || 0);
  }
  function scrollNext(jump) {
    var next = engine.index.clone().add(1);
    scrollTo(next.get(), jump === true, -1);
  }
  function scrollPrev(jump) {
    var prev = engine.index.clone().add(-1);
    scrollTo(prev.get(), jump === true, 1);
  }
  function canScrollNext() {
    var next = engine.index.clone().add(1);
    return next.get() !== selectedScrollSnap();
  }
  function canScrollPrev() {
    var prev = engine.index.clone().add(-1);
    return prev.get() !== selectedScrollSnap();
  }
  function scrollSnapList() {
    return engine.scrollSnaps.map(engine.scrollProgress.get);
  }
  function scrollProgress() {
    return engine.scrollProgress.get(engine.location.get());
  }
  function selectedScrollSnap() {
    return engine.index.get();
  }
  function previousScrollSnap() {
    return engine.indexPrevious.get();
  }
  function clickAllowed() {
    return engine.dragHandler.clickAllowed();
  }
  function plugins() {
    return pluginApis;
  }
  function internalEngine() {
    return engine;
  }
  function rootNode() {
    return root;
  }
  function containerNode() {
    return container;
  }
  function slideNodes() {
    return slides;
  }
  var self2 = {
    canScrollNext,
    canScrollPrev,
    clickAllowed,
    containerNode,
    internalEngine,
    destroy,
    off,
    on,
    plugins,
    previousScrollSnap,
    reInit,
    rootNode,
    scrollNext,
    scrollPrev,
    scrollProgress,
    scrollSnapList,
    scrollTo,
    selectedScrollSnap,
    slideNodes,
    slidesInView,
    slidesNotInView
  };
  activate(userOptions, userPlugins);
  resizeHandlers.add(window, "resize", resize);
  setTimeout(function() {
    return eventHandler.emit("init");
  }, 0);
  return self2;
}
EmblaCarousel.globalOptions = void 0;
EmblaCarousel.optionsHandler = OptionsHandler;

// node_modules/embla-carousel-react/embla-carousel-react.esm.js
function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
function sortAndMapPluginToOptions(plugins) {
  return plugins.concat().sort(function(a11, b4) {
    return a11.name > b4.name ? 1 : -1;
  }).map(function(plugin) {
    return plugin.options;
  });
}
function arePluginsEqual(pluginsA, pluginsB) {
  if (pluginsA.length !== pluginsB.length)
    return false;
  var areEqual = EmblaCarousel.optionsHandler().areEqual;
  var optionsA = sortAndMapPluginToOptions(pluginsA);
  var optionsB = sortAndMapPluginToOptions(pluginsB);
  return optionsA.every(function(optionA, index) {
    var optionB = optionsB[index];
    return areEqual(optionA, optionB);
  });
}
function useEmblaCarousel(options, plugins) {
  if (options === void 0) {
    options = {};
  }
  if (plugins === void 0) {
    plugins = [];
  }
  var optionsHandler = useRef(EmblaCarousel.optionsHandler());
  var storedOptions = useRef(options);
  var storedPlugins = useRef(plugins);
  var _a = useState(), embla = _a[0], setEmbla = _a[1];
  var _b = useState(), viewport = _b[0], setViewport = _b[1];
  var reInit = useCallback(function() {
    if (embla)
      embla.reInit(storedOptions.current, storedPlugins.current);
  }, [embla]);
  useEffect(function() {
    if (canUseDOM() && viewport) {
      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;
      var newEmbla_1 = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);
      setEmbla(newEmbla_1);
      return function() {
        return newEmbla_1.destroy();
      };
    } else {
      setEmbla(void 0);
    }
  }, [viewport, setEmbla]);
  useEffect(function() {
    if (optionsHandler.current.areEqual(storedOptions.current, options))
      return;
    storedOptions.current = options;
    reInit();
  }, [options, reInit]);
  useEffect(function() {
    if (arePluginsEqual(storedPlugins.current, plugins))
      return;
    storedPlugins.current = plugins;
    reInit();
  }, [plugins, reInit]);
  return [setViewport, embla];
}
useEmblaCarousel.globalOptions = void 0;

// components/blocks/speakers.tsx
import { useCallback as useCallback2 } from "react";

// node_modules/embla-carousel-autoplay/embla-carousel-autoplay.esm.js
var defaultOptions2 = {
  active: true,
  breakpoints: {},
  delay: 4e3,
  jump: false,
  playOnInit: true,
  stopOnInteraction: true,
  stopOnMouseEnter: false,
  stopOnLastSnap: false,
  rootNode: null
};
function Autoplay(userOptions) {
  var optionsHandler = EmblaCarousel.optionsHandler();
  var optionsBase = optionsHandler.merge(defaultOptions2, Autoplay.globalOptions);
  var options;
  var carousel;
  var interaction;
  var timer = 0;
  var jump = false;
  function init(embla) {
    carousel = embla;
    options = optionsHandler.atMedia(self2.options);
    jump = options.jump;
    interaction = options.stopOnInteraction ? destroy : stop;
    var eventStore = carousel.internalEngine().eventStore;
    var emblaRoot = carousel.rootNode();
    var root = options.rootNode && options.rootNode(emblaRoot) || emblaRoot;
    carousel.on("pointerDown", interaction);
    if (!options.stopOnInteraction)
      carousel.on("pointerUp", reset);
    if (options.stopOnMouseEnter) {
      eventStore.add(root, "mouseenter", interaction);
      if (!options.stopOnInteraction)
        eventStore.add(root, "mouseleave", reset);
    }
    eventStore.add(document, "visibilitychange", function() {
      if (document.visibilityState === "hidden")
        return stop();
      reset();
    });
    eventStore.add(window, "pagehide", function(event) {
      if (event.persisted)
        stop();
    });
    if (options.playOnInit)
      play();
  }
  function destroy() {
    carousel.off("pointerDown", interaction);
    if (!options.stopOnInteraction)
      carousel.off("pointerUp", reset);
    stop();
    timer = 0;
  }
  function play(jumpOverride) {
    stop();
    if (typeof jumpOverride !== "undefined")
      jump = jumpOverride;
    timer = window.setTimeout(next, options.delay);
  }
  function stop() {
    if (!timer)
      return;
    window.clearTimeout(timer);
  }
  function reset() {
    if (!timer)
      return;
    stop();
    play();
  }
  function next() {
    var index = carousel.internalEngine().index;
    var kill = options.stopOnLastSnap && index.get() === index.max;
    if (kill)
      return destroy();
    if (carousel.canScrollNext()) {
      carousel.scrollNext(jump);
    } else {
      carousel.scrollTo(0, jump);
    }
    play();
  }
  var self2 = {
    name: "autoplay",
    options: optionsHandler.merge(optionsBase, userOptions),
    init,
    destroy,
    play,
    stop,
    reset
  };
  return self2;
}
Autoplay.globalOptions = void 0;

// components/blocks/speakers.tsx
var import_solid = __toESM(require_solid());
var speakersBlockSchema = {
  name: "speakers",
  label: "Speakers",
  ui: {
    defaultItem: {
      speakers_title: "Speakers at Startup Nights",
      speakers: [
        {
          name: "some random dude",
          position: "some position",
          social_links: {
            linkdin: ""
          },
          image: {
            src: "/media/ambient.jpg",
            alt: "some alt text"
          }
        }
      ]
    }
  },
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      label: "Call to action",
      name: "cta",
      type: "object",
      fields: [
        {
          label: "Link",
          name: "link",
          type: "string"
        },
        {
          label: "Text",
          name: "text",
          type: "string"
        }
      ]
    },
    {
      type: "object",
      label: "Speakers",
      name: "speakers",
      list: true,
      fields: [
        {
          type: "string",
          label: "Name",
          name: "name"
        },
        {
          type: "string",
          label: "Position",
          name: "position"
        },
        {
          type: "rich-text",
          label: "Description",
          name: "description"
        },
        {
          type: "object",
          label: "Social links",
          name: "social_links",
          fields: [
            {
              type: "string",
              label: "LinkedIn",
              name: "linkedin"
            }
          ]
        },
        {
          type: "object",
          label: "Image",
          name: "image",
          fields: [
            {
              name: "src",
              label: "Image Source",
              type: "image"
            },
            {
              name: "alt",
              label: "Alt Text",
              type: "string"
            }
          ]
        }
      ]
    }
  ]
};

// components/blocks/positions.tsx
var import_outline = __toESM(require_outline());
import Link from "next/link";
import { useEffect as useEffect2, useState as useState2 } from "react";
var positionsBlockSchema = {
  name: "positions",
  label: "Positions",
  ui: {
    previewSrc: "/blocks/content.png",
    defaultItem: {
      open_positions: [
        {
          title: "Head of Branding and Design",
          description: "Dieser Job ist verantwortlich f\xFCr xxx.",
          qualifications: ["kann zeichen"],
          tasks: ["logo entwerfen"],
          link: "https://startup-nights.ch"
        }
      ]
    }
  },
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "object",
      label: "Open positions",
      name: "open_positions",
      list: true,
      fields: [
        {
          type: "string",
          label: "Title",
          name: "title"
        },
        {
          type: "rich-text",
          label: "Text",
          name: "text"
        },
        {
          type: "string",
          label: "Department",
          name: "department"
        },
        {
          type: "string",
          label: "Link",
          name: "link"
        }
      ]
    }
  ]
};

// components/blocks/hero.tsx
import Image2 from "next/image";

// components/items/button.tsx
import Link2 from "next/link";

// components/blocks/hero.tsx
var heroBlockSchema = {
  name: "hero",
  label: "Hero",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      label: "Call to action",
      name: "cta",
      type: "object",
      fields: [
        {
          label: "Link",
          name: "link",
          type: "string"
        },
        {
          label: "Text",
          name: "text",
          type: "string"
        },
        {
          type: "boolean",
          label: "Open in new tab",
          name: "new_tab"
        }
      ]
    },
    {
      label: "Call to action (secondary)",
      name: "cta_secondary",
      type: "object",
      fields: [
        {
          type: "string",
          label: "Link",
          name: "link"
        },
        {
          type: "string",
          label: "Text",
          name: "text"
        },
        {
          type: "boolean",
          label: "Open in new tab",
          name: "new_tab"
        },
        {
          type: "boolean",
          label: "Without background",
          name: "without_background"
        }
      ]
    },
    {
      type: "object",
      label: "Image",
      name: "image",
      fields: [
        {
          name: "src",
          label: "Image Source",
          type: "image"
        },
        {
          name: "alt",
          label: "Alt Text",
          type: "string"
        }
      ]
    },
    {
      type: "object",
      label: "Background video",
      name: "video",
      fields: [
        {
          name: "src",
          label: "Video source",
          type: "image"
        },
        {
          name: "fallback",
          label: "Fallback image",
          type: "image"
        }
      ]
    }
  ]
};

// node_modules/@headlessui/react/dist/components/combobox/combobox.js
import z, { Fragment as xe, createContext as ue, createRef as Ce, useCallback as Oe, useContext as pe, useEffect as se, useMemo as D3, useReducer as ge, useRef as A } from "react";

// node_modules/@headlessui/react/dist/hooks/use-computed.js
import { useState as s3 } from "react";

// node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
import { useLayoutEffect as t, useEffect as c } from "react";

// node_modules/@headlessui/react/dist/utils/env.js
var i = Object.defineProperty;
var d = (t15, e6, n6) => e6 in t15 ? i(t15, e6, { enumerable: true, configurable: true, writable: true, value: n6 }) : t15[e6] = n6;
var r = (t15, e6, n6) => (d(t15, typeof e6 != "symbol" ? e6 + "" : e6, n6), n6);
var o = class {
  constructor() {
    r(this, "current", this.detect());
    r(this, "handoffState", "pending");
    r(this, "currentId", 0);
  }
  set(e6) {
    this.current !== e6 && (this.handoffState = "pending", this.currentId = 0, this.current = e6);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window == "undefined" || typeof document == "undefined" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
};
var s = new o();

// node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var l = (e6, f13) => {
  s.isServer ? c(e6, f13) : t(e6, f13);
};

// node_modules/@headlessui/react/dist/hooks/use-latest-value.js
import { useRef as t2 } from "react";
function s2(e6) {
  let r10 = t2(e6);
  return l(() => {
    r10.current = e6;
  }, [e6]), r10;
}

// node_modules/@headlessui/react/dist/hooks/use-computed.js
function i2(e6, o11) {
  let [u8, t15] = s3(e6), r10 = s2(e6);
  return l(() => t15(r10.current), [r10, t15, ...o11]), u8;
}

// node_modules/@headlessui/react/dist/hooks/use-disposables.js
import { useState as s4, useEffect as o3 } from "react";

// node_modules/@headlessui/react/dist/utils/micro-task.js
function t3(e6) {
  typeof queueMicrotask == "function" ? queueMicrotask(e6) : Promise.resolve().then(e6).catch((o11) => setTimeout(() => {
    throw o11;
  }));
}

// node_modules/@headlessui/react/dist/utils/disposables.js
function o2() {
  let n6 = [], r10 = { addEventListener(e6, t15, s17, a11) {
    return e6.addEventListener(t15, s17, a11), r10.add(() => e6.removeEventListener(t15, s17, a11));
  }, requestAnimationFrame(...e6) {
    let t15 = requestAnimationFrame(...e6);
    return r10.add(() => cancelAnimationFrame(t15));
  }, nextFrame(...e6) {
    return r10.requestAnimationFrame(() => r10.requestAnimationFrame(...e6));
  }, setTimeout(...e6) {
    let t15 = setTimeout(...e6);
    return r10.add(() => clearTimeout(t15));
  }, microTask(...e6) {
    let t15 = { current: true };
    return t3(() => {
      t15.current && e6[0]();
    }), r10.add(() => {
      t15.current = false;
    });
  }, style(e6, t15, s17) {
    let a11 = e6.style.getPropertyValue(t15);
    return Object.assign(e6.style, { [t15]: s17 }), this.add(() => {
      Object.assign(e6.style, { [t15]: a11 });
    });
  }, group(e6) {
    let t15 = o2();
    return e6(t15), this.add(() => t15.dispose());
  }, add(e6) {
    return n6.push(e6), () => {
      let t15 = n6.indexOf(e6);
      if (t15 >= 0)
        for (let s17 of n6.splice(t15, 1))
          s17();
    };
  }, dispose() {
    for (let e6 of n6.splice(0))
      e6();
  } };
  return r10;
}

// node_modules/@headlessui/react/dist/hooks/use-disposables.js
function p() {
  let [e6] = s4(o2);
  return o3(() => () => e6.dispose(), [e6]), e6;
}

// node_modules/@headlessui/react/dist/hooks/use-event.js
import a from "react";
var o4 = function(t15) {
  let e6 = s2(t15);
  return a.useCallback((...r10) => e6.current(...r10), [e6]);
};

// node_modules/@headlessui/react/dist/hooks/use-id.js
import t4 from "react";

// node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js
import { useState as r2, useEffect as o5 } from "react";
function l2() {
  let [e6, f13] = r2(s.isHandoffComplete);
  return e6 && s.isHandoffComplete === false && f13(false), o5(() => {
    e6 !== true && f13(true);
  }, [e6]), o5(() => s.handoff(), []), e6;
}

// node_modules/@headlessui/react/dist/hooks/use-id.js
var o6;
var I = (o6 = t4.useId) != null ? o6 : function() {
  let n6 = l2(), [e6, u8] = t4.useState(n6 ? () => s.nextId() : null);
  return l(() => {
    e6 === null && u8(s.nextId());
  }, [e6]), e6 != null ? "" + e6 : void 0;
};

// node_modules/@headlessui/react/dist/hooks/use-outside-click.js
import { useEffect as d3, useRef as s5 } from "react";

// node_modules/@headlessui/react/dist/utils/match.js
function u(r10, n6, ...a11) {
  if (r10 in n6) {
    let e6 = n6[r10];
    return typeof e6 == "function" ? e6(...a11) : e6;
  }
  let t15 = new Error(`Tried to handle "${r10}" but there is no handler defined. Only defined handlers are: ${Object.keys(n6).map((e6) => `"${e6}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(t15, u), t15;
}

// node_modules/@headlessui/react/dist/utils/owner.js
function e(r10) {
  return s.isServer ? null : r10 instanceof Node ? r10.ownerDocument : r10 != null && r10.hasOwnProperty("current") && r10.current instanceof Node ? r10.current.ownerDocument : document;
}

// node_modules/@headlessui/react/dist/utils/focus-management.js
var c2 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e6) => `${e6}:not([tabindex='-1'])`).join(",");
var M = ((n6) => (n6[n6.First = 1] = "First", n6[n6.Previous = 2] = "Previous", n6[n6.Next = 4] = "Next", n6[n6.Last = 8] = "Last", n6[n6.WrapAround = 16] = "WrapAround", n6[n6.NoScroll = 32] = "NoScroll", n6))(M || {});
var N = ((o11) => (o11[o11.Error = 0] = "Error", o11[o11.Overflow = 1] = "Overflow", o11[o11.Success = 2] = "Success", o11[o11.Underflow = 3] = "Underflow", o11))(N || {});
var F = ((t15) => (t15[t15.Previous = -1] = "Previous", t15[t15.Next = 1] = "Next", t15))(F || {});
function f(e6 = document.body) {
  return e6 == null ? [] : Array.from(e6.querySelectorAll(c2)).sort((r10, t15) => Math.sign((r10.tabIndex || Number.MAX_SAFE_INTEGER) - (t15.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var T = ((t15) => (t15[t15.Strict = 0] = "Strict", t15[t15.Loose = 1] = "Loose", t15))(T || {});
function h(e6, r10 = 0) {
  var t15;
  return e6 === ((t15 = e(e6)) == null ? void 0 : t15.body) ? false : u(r10, { [0]() {
    return e6.matches(c2);
  }, [1]() {
    let l10 = e6;
    for (; l10 !== null; ) {
      if (l10.matches(c2))
        return true;
      l10 = l10.parentElement;
    }
    return false;
  } });
}
function D(e6) {
  let r10 = e(e6);
  o2().nextFrame(() => {
    r10 && !h(r10.activeElement, 0) && y(e6);
  });
}
var w = ((t15) => (t15[t15.Keyboard = 0] = "Keyboard", t15[t15.Mouse = 1] = "Mouse", t15))(w || {});
typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("keydown", (e6) => {
  e6.metaKey || e6.altKey || e6.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true), document.addEventListener("click", (e6) => {
  e6.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e6.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true));
function y(e6) {
  e6 == null || e6.focus({ preventScroll: true });
}
var S = ["textarea", "input"].join(",");
function H(e6) {
  var r10, t15;
  return (t15 = (r10 = e6 == null ? void 0 : e6.matches) == null ? void 0 : r10.call(e6, S)) != null ? t15 : false;
}
function I2(e6, r10 = (t15) => t15) {
  return e6.slice().sort((t15, l10) => {
    let o11 = r10(t15), i11 = r10(l10);
    if (o11 === null || i11 === null)
      return 0;
    let n6 = o11.compareDocumentPosition(i11);
    return n6 & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : n6 & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function _(e6, r10) {
  return O(f(), r10, { relativeTo: e6 });
}
function O(e6, r10, { sorted: t15 = true, relativeTo: l10 = null, skipElements: o11 = [] } = {}) {
  let i11 = Array.isArray(e6) ? e6.length > 0 ? e6[0].ownerDocument : document : e6.ownerDocument, n6 = Array.isArray(e6) ? t15 ? I2(e6) : e6 : f(e6);
  o11.length > 0 && n6.length > 1 && (n6 = n6.filter((s17) => !o11.includes(s17))), l10 = l10 != null ? l10 : i11.activeElement;
  let E6 = (() => {
    if (r10 & 5)
      return 1;
    if (r10 & 10)
      return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), x6 = (() => {
    if (r10 & 1)
      return 0;
    if (r10 & 2)
      return Math.max(0, n6.indexOf(l10)) - 1;
    if (r10 & 4)
      return Math.max(0, n6.indexOf(l10)) + 1;
    if (r10 & 8)
      return n6.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), p9 = r10 & 32 ? { preventScroll: true } : {}, d15 = 0, a11 = n6.length, u8;
  do {
    if (d15 >= a11 || d15 + a11 <= 0)
      return 0;
    let s17 = x6 + d15;
    if (r10 & 16)
      s17 = (s17 + a11) % a11;
    else {
      if (s17 < 0)
        return 3;
      if (s17 >= a11)
        return 1;
    }
    u8 = n6[s17], u8 == null || u8.focus(p9), d15 += E6;
  } while (u8 !== i11.activeElement);
  return r10 & 6 && H(u8) && u8.select(), 2;
}

// node_modules/@headlessui/react/dist/hooks/use-document-event.js
import { useEffect as m } from "react";
function d2(e6, r10, n6) {
  let o11 = s2(r10);
  m(() => {
    function t15(u8) {
      o11.current(u8);
    }
    return document.addEventListener(e6, t15, n6), () => document.removeEventListener(e6, t15, n6);
  }, [e6, n6]);
}

// node_modules/@headlessui/react/dist/hooks/use-outside-click.js
function L(m9, E6, c13 = true) {
  let i11 = s5(false);
  d3(() => {
    requestAnimationFrame(() => {
      i11.current = c13;
    });
  }, [c13]);
  function f13(e6, o11) {
    if (!i11.current || e6.defaultPrevented)
      return;
    let l10 = function r10(t15) {
      return typeof t15 == "function" ? r10(t15()) : Array.isArray(t15) || t15 instanceof Set ? t15 : [t15];
    }(m9), n6 = o11(e6);
    if (n6 !== null && n6.getRootNode().contains(n6)) {
      for (let r10 of l10) {
        if (r10 === null)
          continue;
        let t15 = r10 instanceof HTMLElement ? r10 : r10.current;
        if (t15 != null && t15.contains(n6) || e6.composed && e6.composedPath().includes(t15))
          return;
      }
      return !h(n6, T.Loose) && n6.tabIndex !== -1 && e6.preventDefault(), E6(e6, n6);
    }
  }
  let u8 = s5(null);
  d2("mousedown", (e6) => {
    var o11, l10;
    i11.current && (u8.current = ((l10 = (o11 = e6.composedPath) == null ? void 0 : o11.call(e6)) == null ? void 0 : l10[0]) || e6.target);
  }, true), d2("click", (e6) => {
    u8.current && (f13(e6, () => u8.current), u8.current = null);
  }, true), d2("blur", (e6) => f13(e6, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), true);
}

// node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.js
import { useState as o7 } from "react";
function i3(t15) {
  var n6;
  if (t15.type)
    return t15.type;
  let e6 = (n6 = t15.as) != null ? n6 : "button";
  if (typeof e6 == "string" && e6.toLowerCase() === "button")
    return "button";
}
function s6(t15, e6) {
  let [n6, u8] = o7(() => i3(t15));
  return l(() => {
    u8(i3(t15));
  }, [t15.type, t15.as]), l(() => {
    n6 || e6.current && e6.current instanceof HTMLButtonElement && !e6.current.hasAttribute("type") && u8("button");
  }, [n6, e6]), n6;
}

// node_modules/@headlessui/react/dist/hooks/use-sync-refs.js
import { useRef as l3, useEffect as i4 } from "react";
var u2 = Symbol();
function T2(t15, n6 = true) {
  return Object.assign(t15, { [u2]: n6 });
}
function y2(...t15) {
  let n6 = l3(t15);
  i4(() => {
    n6.current = t15;
  }, [t15]);
  let c13 = o4((e6) => {
    for (let o11 of n6.current)
      o11 != null && (typeof o11 == "function" ? o11(e6) : o11.current = e6);
  });
  return t15.every((e6) => e6 == null || (e6 == null ? void 0 : e6[u2])) ? void 0 : c13;
}

// node_modules/@headlessui/react/dist/hooks/use-tree-walker.js
import { useRef as E, useEffect as m2 } from "react";
function F2({ container: e6, accept: t15, walk: r10, enabled: c13 = true }) {
  let o11 = E(t15), l10 = E(r10);
  m2(() => {
    o11.current = t15, l10.current = r10;
  }, [t15, r10]), l(() => {
    if (!e6 || !c13)
      return;
    let n6 = e(e6);
    if (!n6)
      return;
    let f13 = o11.current, p9 = l10.current, d15 = Object.assign((i11) => f13(i11), { acceptNode: f13 }), u8 = n6.createTreeWalker(e6, NodeFilter.SHOW_ELEMENT, d15, false);
    for (; u8.nextNode(); )
      p9(u8.currentNode);
  }, [e6, c13, o11, l10]);
}

// node_modules/@headlessui/react/dist/utils/calculate-active-index.js
function f2(r10) {
  throw new Error("Unexpected object: " + r10);
}
var a2 = ((e6) => (e6[e6.First = 0] = "First", e6[e6.Previous = 1] = "Previous", e6[e6.Next = 2] = "Next", e6[e6.Last = 3] = "Last", e6[e6.Specific = 4] = "Specific", e6[e6.Nothing = 5] = "Nothing", e6))(a2 || {});
function x(r10, n6) {
  let t15 = n6.resolveItems();
  if (t15.length <= 0)
    return null;
  let l10 = n6.resolveActiveIndex(), s17 = l10 != null ? l10 : -1, d15 = (() => {
    switch (r10.focus) {
      case 0:
        return t15.findIndex((e6) => !n6.resolveDisabled(e6));
      case 1: {
        let e6 = t15.slice().reverse().findIndex((i11, c13, u8) => s17 !== -1 && u8.length - c13 - 1 >= s17 ? false : !n6.resolveDisabled(i11));
        return e6 === -1 ? e6 : t15.length - 1 - e6;
      }
      case 2:
        return t15.findIndex((e6, i11) => i11 <= s17 ? false : !n6.resolveDisabled(e6));
      case 3: {
        let e6 = t15.slice().reverse().findIndex((i11) => !n6.resolveDisabled(i11));
        return e6 === -1 ? e6 : t15.length - 1 - e6;
      }
      case 4:
        return t15.findIndex((e6) => n6.resolveId(e6) === r10.id);
      case 5:
        return null;
      default:
        f2(r10);
    }
  })();
  return d15 === -1 ? l10 : d15;
}

// node_modules/@headlessui/react/dist/utils/render.js
import { Fragment as T3, cloneElement as x2, createElement as E2, forwardRef as b, isValidElement as h2 } from "react";

// node_modules/@headlessui/react/dist/utils/class-names.js
function e2(...n6) {
  return n6.filter(Boolean).join(" ");
}

// node_modules/@headlessui/react/dist/utils/render.js
var S2 = ((a11) => (a11[a11.None = 0] = "None", a11[a11.RenderStrategy = 1] = "RenderStrategy", a11[a11.Static = 2] = "Static", a11))(S2 || {});
var j = ((e6) => (e6[e6.Unmount = 0] = "Unmount", e6[e6.Hidden = 1] = "Hidden", e6))(j || {});
function X({ ourProps: r10, theirProps: t15, slot: e6, defaultTag: a11, features: s17, visible: n6 = true, name: f13 }) {
  let o11 = N2(t15, r10);
  if (n6)
    return c3(o11, e6, a11, f13);
  let u8 = s17 != null ? s17 : 0;
  if (u8 & 2) {
    let { static: l10 = false, ...p9 } = o11;
    if (l10)
      return c3(p9, e6, a11, f13);
  }
  if (u8 & 1) {
    let { unmount: l10 = true, ...p9 } = o11;
    return u(l10 ? 0 : 1, { [0]() {
      return null;
    }, [1]() {
      return c3({ ...p9, hidden: true, style: { display: "none" } }, e6, a11, f13);
    } });
  }
  return c3(o11, e6, a11, f13);
}
function c3(r10, t15 = {}, e6, a11) {
  let { as: s17 = e6, children: n6, refName: f13 = "ref", ...o11 } = g(r10, ["unmount", "static"]), u8 = r10.ref !== void 0 ? { [f13]: r10.ref } : {}, l10 = typeof n6 == "function" ? n6(t15) : n6;
  "className" in o11 && o11.className && typeof o11.className == "function" && (o11.className = o11.className(t15));
  let p9 = {};
  if (t15) {
    let i11 = false, m9 = [];
    for (let [y7, d15] of Object.entries(t15))
      typeof d15 == "boolean" && (i11 = true), d15 === true && m9.push(y7);
    i11 && (p9["data-headlessui-state"] = m9.join(" "));
  }
  if (s17 === T3 && Object.keys(R(o11)).length > 0) {
    if (!h2(l10) || Array.isArray(l10) && l10.length > 1)
      throw new Error(['Passing props on "Fragment"!', "", `The current component <${a11} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(o11).map((d15) => `  - ${d15}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((d15) => `  - ${d15}`).join(`
`)].join(`
`));
    let i11 = l10.props, m9 = typeof (i11 == null ? void 0 : i11.className) == "function" ? (...d15) => e2(i11 == null ? void 0 : i11.className(...d15), o11.className) : e2(i11 == null ? void 0 : i11.className, o11.className), y7 = m9 ? { className: m9 } : {};
    return x2(l10, Object.assign({}, N2(l10.props, R(g(o11, ["ref"]))), p9, u8, w2(l10.ref, u8.ref), y7));
  }
  return E2(s17, Object.assign({}, g(o11, ["ref"]), s17 !== T3 && u8, s17 !== T3 && p9), l10);
}
function w2(...r10) {
  return { ref: r10.every((t15) => t15 == null) ? void 0 : (t15) => {
    for (let e6 of r10)
      e6 != null && (typeof e6 == "function" ? e6(t15) : e6.current = t15);
  } };
}
function N2(...r10) {
  var a11;
  if (r10.length === 0)
    return {};
  if (r10.length === 1)
    return r10[0];
  let t15 = {}, e6 = {};
  for (let s17 of r10)
    for (let n6 in s17)
      n6.startsWith("on") && typeof s17[n6] == "function" ? ((a11 = e6[n6]) != null || (e6[n6] = []), e6[n6].push(s17[n6])) : t15[n6] = s17[n6];
  if (t15.disabled || t15["aria-disabled"])
    return Object.assign(t15, Object.fromEntries(Object.keys(e6).map((s17) => [s17, void 0])));
  for (let s17 in e6)
    Object.assign(t15, { [s17](n6, ...f13) {
      let o11 = e6[s17];
      for (let u8 of o11) {
        if ((n6 instanceof Event || (n6 == null ? void 0 : n6.nativeEvent) instanceof Event) && n6.defaultPrevented)
          return;
        u8(n6, ...f13);
      }
    } });
  return t15;
}
function D2(r10) {
  var t15;
  return Object.assign(b(r10), { displayName: (t15 = r10.displayName) != null ? t15 : r10.name });
}
function R(r10) {
  let t15 = Object.assign({}, r10);
  for (let e6 in t15)
    t15[e6] === void 0 && delete t15[e6];
  return t15;
}
function g(r10, t15 = []) {
  let e6 = Object.assign({}, r10);
  for (let a11 of t15)
    a11 in e6 && delete e6[a11];
  return e6;
}

// node_modules/@headlessui/react/dist/utils/bugs.js
function r3(n6) {
  let e6 = n6.parentElement, l10 = null;
  for (; e6 && !(e6 instanceof HTMLFieldSetElement); )
    e6 instanceof HTMLLegendElement && (l10 = e6), e6 = e6.parentElement;
  let t15 = (e6 == null ? void 0 : e6.getAttribute("disabled")) === "";
  return t15 && i5(l10) ? false : t15;
}
function i5(n6) {
  if (!n6)
    return false;
  let e6 = n6.previousElementSibling;
  for (; e6 !== null; ) {
    if (e6 instanceof HTMLLegendElement)
      return false;
    e6 = e6.previousElementSibling;
  }
  return true;
}

// node_modules/@headlessui/react/dist/utils/form.js
function e3(n6 = {}, r10 = null, t15 = []) {
  for (let [i11, o11] of Object.entries(n6))
    f3(t15, s7(r10, i11), o11);
  return t15;
}
function s7(n6, r10) {
  return n6 ? n6 + "[" + r10 + "]" : r10;
}
function f3(n6, r10, t15) {
  if (Array.isArray(t15))
    for (let [i11, o11] of t15.entries())
      f3(n6, s7(r10, i11.toString()), o11);
  else
    t15 instanceof Date ? n6.push([r10, t15.toISOString()]) : typeof t15 == "boolean" ? n6.push([r10, t15 ? "1" : "0"]) : typeof t15 == "string" ? n6.push([r10, t15]) : typeof t15 == "number" ? n6.push([r10, `${t15}`]) : t15 == null ? n6.push([r10, ""]) : e3(t15, r10, n6);
}
function p2(n6) {
  var t15;
  let r10 = (t15 = n6 == null ? void 0 : n6.form) != null ? t15 : n6.closest("form");
  if (r10) {
    for (let i11 of r10.elements)
      if (i11.tagName === "INPUT" && i11.type === "submit" || i11.tagName === "BUTTON" && i11.type === "submit" || i11.nodeName === "INPUT" && i11.type === "image") {
        i11.click();
        return;
      }
  }
}

// node_modules/@headlessui/react/dist/internal/hidden.js
var a3 = "div";
var p3 = ((e6) => (e6[e6.None = 1] = "None", e6[e6.Focusable = 2] = "Focusable", e6[e6.Hidden = 4] = "Hidden", e6))(p3 || {});
function s8(t15, o11) {
  let { features: n6 = 1, ...e6 } = t15, d15 = { ref: o11, "aria-hidden": (n6 & 2) === 2 ? true : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(n6 & 4) === 4 && (n6 & 2) !== 2 && { display: "none" } } };
  return X({ ourProps: d15, theirProps: e6, slot: {}, defaultTag: a3, name: "Hidden" });
}
var c4 = D2(s8);

// node_modules/@headlessui/react/dist/internal/open-closed.js
import l4, { createContext as t5, useContext as p4 } from "react";
var n = t5(null);
n.displayName = "OpenClosedContext";
var d4 = ((e6) => (e6[e6.Open = 1] = "Open", e6[e6.Closed = 2] = "Closed", e6[e6.Closing = 4] = "Closing", e6[e6.Opening = 8] = "Opening", e6))(d4 || {});
function C() {
  return p4(n);
}
function c5({ value: o11, children: r10 }) {
  return l4.createElement(n.Provider, { value: o11 }, r10);
}

// node_modules/@headlessui/react/dist/components/keyboard.js
var o8 = ((r10) => (r10.Space = " ", r10.Enter = "Enter", r10.Escape = "Escape", r10.Backspace = "Backspace", r10.Delete = "Delete", r10.ArrowLeft = "ArrowLeft", r10.ArrowUp = "ArrowUp", r10.ArrowRight = "ArrowRight", r10.ArrowDown = "ArrowDown", r10.Home = "Home", r10.End = "End", r10.PageUp = "PageUp", r10.PageDown = "PageDown", r10.Tab = "Tab", r10))(o8 || {});

// node_modules/@headlessui/react/dist/hooks/use-controllable.js
import { useRef as o9, useState as f4 } from "react";
function T4(l10, r10, c13) {
  let [i11, s17] = f4(c13), e6 = l10 !== void 0, t15 = o9(e6), u8 = o9(false), d15 = o9(false);
  return e6 && !t15.current && !u8.current ? (u8.current = true, t15.current = e6, console.error("A component is changing from uncontrolled to controlled. This may be caused by the value changing from undefined to a defined value, which should not happen.")) : !e6 && t15.current && !d15.current && (d15.current = true, t15.current = e6, console.error("A component is changing from controlled to uncontrolled. This may be caused by the value changing from a defined value to undefined, which should not happen.")), [e6 ? l10 : i11, o4((n6) => (e6 || s17(n6), r10 == null ? void 0 : r10(n6)))];
}

// node_modules/@headlessui/react/dist/hooks/use-watch.js
import { useEffect as s9, useRef as f5 } from "react";
function m3(u8, t15) {
  let e6 = f5([]), r10 = o4(u8);
  s9(() => {
    let o11 = [...e6.current];
    for (let [n6, a11] of t15.entries())
      if (e6.current[n6] !== a11) {
        let l10 = r10(t15, o11);
        return e6.current = t15, l10;
      }
  }, [r10, ...t15]);
}

// node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js
import { useRef as o10 } from "react";
function t6(e6) {
  return [e6.screenX, e6.screenY];
}
function u3() {
  let e6 = o10([-1, -1]);
  return { wasMoved(r10) {
    let n6 = t6(r10);
    return e6.current[0] === n6[0] && e6.current[1] === n6[1] ? false : (e6.current = n6, true);
  }, update(r10) {
    e6.current = t6(r10);
  } };
}

// node_modules/@headlessui/react/dist/utils/platform.js
function t7() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function i6() {
  return /Android/gi.test(window.navigator.userAgent);
}
function n2() {
  return t7() || i6();
}

// node_modules/@headlessui/react/dist/components/combobox/combobox.js
var ke = ((e6) => (e6[e6.Open = 0] = "Open", e6[e6.Closed = 1] = "Closed", e6))(ke || {});
var we = ((e6) => (e6[e6.Single = 0] = "Single", e6[e6.Multi = 1] = "Multi", e6))(we || {});
var Ue = ((e6) => (e6[e6.Pointer = 0] = "Pointer", e6[e6.Other = 1] = "Other", e6))(Ue || {});
var Ne = ((n6) => (n6[n6.OpenCombobox = 0] = "OpenCombobox", n6[n6.CloseCombobox = 1] = "CloseCombobox", n6[n6.GoToOption = 2] = "GoToOption", n6[n6.RegisterOption = 3] = "RegisterOption", n6[n6.UnregisterOption = 4] = "UnregisterOption", n6[n6.RegisterLabel = 5] = "RegisterLabel", n6))(Ne || {});
function re(t15, l10 = (e6) => e6) {
  let e6 = t15.activeOptionIndex !== null ? t15.options[t15.activeOptionIndex] : null, r10 = I2(l10(t15.options.slice()), (b4) => b4.dataRef.current.domRef.current), i11 = e6 ? r10.indexOf(e6) : null;
  return i11 === -1 && (i11 = null), { options: r10, activeOptionIndex: i11 };
}
var He = { [1](t15) {
  var l10;
  return (l10 = t15.dataRef.current) != null && l10.disabled || t15.comboboxState === 1 ? t15 : { ...t15, activeOptionIndex: null, comboboxState: 1 };
}, [0](t15) {
  var e6;
  if ((e6 = t15.dataRef.current) != null && e6.disabled || t15.comboboxState === 0)
    return t15;
  let l10 = t15.activeOptionIndex;
  if (t15.dataRef.current) {
    let { isSelected: r10 } = t15.dataRef.current, i11 = t15.options.findIndex((b4) => r10(b4.dataRef.current.value));
    i11 !== -1 && (l10 = i11);
  }
  return { ...t15, comboboxState: 0, activeOptionIndex: l10 };
}, [2](t15, l10) {
  var i11, b4, n6, d15;
  if ((i11 = t15.dataRef.current) != null && i11.disabled || (b4 = t15.dataRef.current) != null && b4.optionsRef.current && !((n6 = t15.dataRef.current) != null && n6.optionsPropsRef.current.static) && t15.comboboxState === 1)
    return t15;
  let e6 = re(t15);
  if (e6.activeOptionIndex === null) {
    let o11 = e6.options.findIndex((u8) => !u8.dataRef.current.disabled);
    o11 !== -1 && (e6.activeOptionIndex = o11);
  }
  let r10 = x(l10, { resolveItems: () => e6.options, resolveActiveIndex: () => e6.activeOptionIndex, resolveId: (o11) => o11.id, resolveDisabled: (o11) => o11.dataRef.current.disabled });
  return { ...t15, ...e6, activeOptionIndex: r10, activationTrigger: (d15 = l10.trigger) != null ? d15 : 1 };
}, [3]: (t15, l10) => {
  var b4, n6;
  let e6 = { id: l10.id, dataRef: l10.dataRef }, r10 = re(t15, (d15) => [...d15, e6]);
  t15.activeOptionIndex === null && (b4 = t15.dataRef.current) != null && b4.isSelected(l10.dataRef.current.value) && (r10.activeOptionIndex = r10.options.indexOf(e6));
  let i11 = { ...t15, ...r10, activationTrigger: 1 };
  return (n6 = t15.dataRef.current) != null && n6.__demoMode && t15.dataRef.current.value === void 0 && (i11.activeOptionIndex = 0), i11;
}, [4]: (t15, l10) => {
  let e6 = re(t15, (r10) => {
    let i11 = r10.findIndex((b4) => b4.id === l10.id);
    return i11 !== -1 && r10.splice(i11, 1), r10;
  });
  return { ...t15, ...e6, activationTrigger: 1 };
}, [5]: (t15, l10) => ({ ...t15, labelId: l10.id }) };
var ae = ue(null);
ae.displayName = "ComboboxActionsContext";
function $(t15) {
  let l10 = pe(ae);
  if (l10 === null) {
    let e6 = new Error(`<${t15} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e6, $), e6;
  }
  return l10;
}
var le = ue(null);
le.displayName = "ComboboxDataContext";
function H2(t15) {
  let l10 = pe(le);
  if (l10 === null) {
    let e6 = new Error(`<${t15} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(e6, H2), e6;
  }
  return l10;
}
function Ge(t15, l10) {
  return u(l10.type, He, t15, l10);
}
var Xe = xe;
function je(t15, l10) {
  let { value: e6, defaultValue: r10, onChange: i11, form: b4, name: n6, by: d15 = (p9, T7) => p9 === T7, disabled: o11 = false, __demoMode: u8 = false, nullable: P5 = false, multiple: f13 = false, ...E6 } = t15, [c13 = f13 ? [] : void 0, g4] = T4(e6, i11, r10), [m9, x6] = ge(Ge, { dataRef: Ce(), comboboxState: u8 ? 0 : 1, options: [], activeOptionIndex: null, activationTrigger: 1, labelId: null }), L5 = A(false), F9 = A({ static: false, hold: false }), h9 = A(null), B4 = A(null), k2 = A(null), G4 = A(null), V6 = o4(typeof d15 == "string" ? (p9, T7) => {
    let R3 = d15;
    return (p9 == null ? void 0 : p9[R3]) === (T7 == null ? void 0 : T7[R3]);
  } : d15), M9 = Oe((p9) => u(s17.mode, { [1]: () => c13.some((T7) => V6(T7, p9)), [0]: () => V6(c13, p9) }), [c13]), s17 = D3(() => ({ ...m9, optionsPropsRef: F9, labelRef: h9, inputRef: B4, buttonRef: k2, optionsRef: G4, value: c13, defaultValue: r10, disabled: o11, mode: f13 ? 1 : 0, get activeOptionIndex() {
    if (L5.current && m9.activeOptionIndex === null && m9.options.length > 0) {
      let p9 = m9.options.findIndex((T7) => !T7.dataRef.current.disabled);
      if (p9 !== -1)
        return p9;
    }
    return m9.activeOptionIndex;
  }, compare: V6, isSelected: M9, nullable: P5, __demoMode: u8 }), [c13, r10, o11, f13, P5, u8, m9]), O4 = A(s17.activeOptionIndex !== null ? s17.options[s17.activeOptionIndex] : null);
  se(() => {
    let p9 = s17.activeOptionIndex !== null ? s17.options[s17.activeOptionIndex] : null;
    O4.current !== p9 && (O4.current = p9);
  }), l(() => {
    m9.dataRef.current = s17;
  }, [s17]), L([s17.buttonRef, s17.inputRef, s17.optionsRef], () => oe4.closeCombobox(), s17.comboboxState === 0);
  let a11 = D3(() => ({ open: s17.comboboxState === 0, disabled: o11, activeIndex: s17.activeOptionIndex, activeOption: s17.activeOptionIndex === null ? null : s17.options[s17.activeOptionIndex].dataRef.current.value, value: c13 }), [s17, o11, c13]), I8 = o4((p9) => {
    let T7 = s17.options.find((R3) => R3.id === p9);
    T7 && j5(T7.dataRef.current.value);
  }), S10 = o4(() => {
    if (s17.activeOptionIndex !== null) {
      let { dataRef: p9, id: T7 } = s17.options[s17.activeOptionIndex];
      j5(p9.current.value), oe4.goToOption(a2.Specific, T7);
    }
  }), X9 = o4(() => {
    x6({ type: 0 }), L5.current = true;
  }), q6 = o4(() => {
    x6({ type: 1 }), L5.current = false;
  }), Q6 = o4((p9, T7, R3) => (L5.current = false, p9 === a2.Specific ? x6({ type: 2, focus: a2.Specific, id: T7, trigger: R3 }) : x6({ type: 2, focus: p9, trigger: R3 }))), Y7 = o4((p9, T7) => (x6({ type: 3, id: p9, dataRef: T7 }), () => {
    var R3;
    ((R3 = O4.current) == null ? void 0 : R3.id) === p9 && (L5.current = true), x6({ type: 4, id: p9 });
  })), ce4 = o4((p9) => (x6({ type: 5, id: p9 }), () => x6({ type: 5, id: null }))), j5 = o4((p9) => u(s17.mode, { [0]() {
    return g4 == null ? void 0 : g4(p9);
  }, [1]() {
    let T7 = s17.value.slice(), R3 = T7.findIndex((J4) => V6(J4, p9));
    return R3 === -1 ? T7.push(p9) : T7.splice(R3, 1), g4 == null ? void 0 : g4(T7);
  } })), oe4 = D3(() => ({ onChange: j5, registerOption: Y7, registerLabel: ce4, goToOption: Q6, closeCombobox: q6, openCombobox: X9, selectActiveOption: S10, selectOption: I8 }), []), Te4 = l10 === null ? {} : { ref: l10 }, Z6 = A(null), me4 = p();
  return se(() => {
    Z6.current && r10 !== void 0 && me4.addEventListener(Z6.current, "reset", () => {
      j5(r10);
    });
  }, [Z6, j5]), z.createElement(ae.Provider, { value: oe4 }, z.createElement(le.Provider, { value: s17 }, z.createElement(c5, { value: u(s17.comboboxState, { [0]: d4.Open, [1]: d4.Closed }) }, n6 != null && c13 != null && e3({ [n6]: c13 }).map(([p9, T7], R3) => z.createElement(c4, { features: p3.Hidden, ref: R3 === 0 ? (J4) => {
    var ie4;
    Z6.current = (ie4 = J4 == null ? void 0 : J4.closest("form")) != null ? ie4 : null;
  } : void 0, ...R({ key: p9, as: "input", type: "hidden", hidden: true, readOnly: true, form: b4, name: p9, value: T7 }) })), X({ ourProps: Te4, theirProps: E6, slot: a11, defaultTag: Xe, name: "Combobox" }))));
}
var Je = "input";
function Ke(t15, l10) {
  var V6, M9, s17, O4;
  let e6 = I(), { id: r10 = `headlessui-combobox-input-${e6}`, onChange: i11, displayValue: b4, type: n6 = "text", ...d15 } = t15, o11 = H2("Combobox.Input"), u8 = $("Combobox.Input"), P5 = y2(o11.inputRef, l10), f13 = A(false), E6 = p(), c13 = function() {
    var a11;
    return typeof b4 == "function" && o11.value !== void 0 ? (a11 = b4(o11.value)) != null ? a11 : "" : typeof o11.value == "string" ? o11.value : "";
  }();
  m3(([a11, I8], [S10, X9]) => {
    f13.current || o11.inputRef.current && (X9 === 0 && I8 === 1 || a11 !== S10) && (o11.inputRef.current.value = a11);
  }, [c13, o11.comboboxState]), m3(([a11], [I8]) => {
    if (a11 === 0 && I8 === 1) {
      let S10 = o11.inputRef.current;
      if (!S10)
        return;
      let X9 = S10.value, { selectionStart: q6, selectionEnd: Q6, selectionDirection: Y7 } = S10;
      S10.value = "", S10.value = X9, Y7 !== null ? S10.setSelectionRange(q6, Q6, Y7) : S10.setSelectionRange(q6, Q6);
    }
  }, [o11.comboboxState]);
  let g4 = A(false), m9 = o4(() => {
    g4.current = true;
  }), x6 = o4(() => {
    setTimeout(() => {
      g4.current = false;
    });
  }), L5 = o4((a11) => {
    switch (f13.current = true, a11.key) {
      case o8.Backspace:
      case o8.Delete:
        if (o11.mode !== 0 || !o11.nullable)
          return;
        let I8 = a11.currentTarget;
        E6.requestAnimationFrame(() => {
          I8.value === "" && (u8.onChange(null), o11.optionsRef.current && (o11.optionsRef.current.scrollTop = 0), u8.goToOption(a2.Nothing));
        });
        break;
      case o8.Enter:
        if (f13.current = false, o11.comboboxState !== 0 || g4.current)
          return;
        if (a11.preventDefault(), a11.stopPropagation(), o11.activeOptionIndex === null) {
          u8.closeCombobox();
          return;
        }
        u8.selectActiveOption(), o11.mode === 0 && u8.closeCombobox();
        break;
      case o8.ArrowDown:
        return f13.current = false, a11.preventDefault(), a11.stopPropagation(), u(o11.comboboxState, { [0]: () => {
          u8.goToOption(a2.Next);
        }, [1]: () => {
          u8.openCombobox();
        } });
      case o8.ArrowUp:
        return f13.current = false, a11.preventDefault(), a11.stopPropagation(), u(o11.comboboxState, { [0]: () => {
          u8.goToOption(a2.Previous);
        }, [1]: () => {
          u8.openCombobox(), E6.nextFrame(() => {
            o11.value || u8.goToOption(a2.Last);
          });
        } });
      case o8.Home:
        if (a11.shiftKey)
          break;
        return f13.current = false, a11.preventDefault(), a11.stopPropagation(), u8.goToOption(a2.First);
      case o8.PageUp:
        return f13.current = false, a11.preventDefault(), a11.stopPropagation(), u8.goToOption(a2.First);
      case o8.End:
        if (a11.shiftKey)
          break;
        return f13.current = false, a11.preventDefault(), a11.stopPropagation(), u8.goToOption(a2.Last);
      case o8.PageDown:
        return f13.current = false, a11.preventDefault(), a11.stopPropagation(), u8.goToOption(a2.Last);
      case o8.Escape:
        return f13.current = false, o11.comboboxState !== 0 ? void 0 : (a11.preventDefault(), o11.optionsRef.current && !o11.optionsPropsRef.current.static && a11.stopPropagation(), u8.closeCombobox());
      case o8.Tab:
        if (f13.current = false, o11.comboboxState !== 0)
          return;
        o11.mode === 0 && u8.selectActiveOption(), u8.closeCombobox();
        break;
    }
  }), F9 = o4((a11) => {
    u8.openCombobox(), i11 == null || i11(a11);
  }), h9 = o4(() => {
    f13.current = false;
  }), B4 = i2(() => {
    if (o11.labelId)
      return [o11.labelId].join(" ");
  }, [o11.labelId]), k2 = D3(() => ({ open: o11.comboboxState === 0, disabled: o11.disabled }), [o11]), G4 = { ref: P5, id: r10, role: "combobox", type: n6, "aria-controls": (V6 = o11.optionsRef.current) == null ? void 0 : V6.id, "aria-expanded": o11.disabled ? void 0 : o11.comboboxState === 0, "aria-activedescendant": o11.activeOptionIndex === null || (M9 = o11.options[o11.activeOptionIndex]) == null ? void 0 : M9.id, "aria-labelledby": B4, "aria-autocomplete": "list", defaultValue: (O4 = (s17 = t15.defaultValue) != null ? s17 : o11.defaultValue !== void 0 ? b4 == null ? void 0 : b4(o11.defaultValue) : null) != null ? O4 : o11.defaultValue, disabled: o11.disabled, onCompositionStart: m9, onCompositionEnd: x6, onKeyDown: L5, onChange: F9, onBlur: h9 };
  return X({ ourProps: G4, theirProps: d15, slot: k2, defaultTag: Je, name: "Combobox.Input" });
}
var We = "button";
function $e(t15, l10) {
  var g4;
  let e6 = H2("Combobox.Button"), r10 = $("Combobox.Button"), i11 = y2(e6.buttonRef, l10), b4 = I(), { id: n6 = `headlessui-combobox-button-${b4}`, ...d15 } = t15, o11 = p(), u8 = o4((m9) => {
    switch (m9.key) {
      case o8.ArrowDown:
        return m9.preventDefault(), m9.stopPropagation(), e6.comboboxState === 1 && r10.openCombobox(), o11.nextFrame(() => {
          var x6;
          return (x6 = e6.inputRef.current) == null ? void 0 : x6.focus({ preventScroll: true });
        });
      case o8.ArrowUp:
        return m9.preventDefault(), m9.stopPropagation(), e6.comboboxState === 1 && (r10.openCombobox(), o11.nextFrame(() => {
          e6.value || r10.goToOption(a2.Last);
        })), o11.nextFrame(() => {
          var x6;
          return (x6 = e6.inputRef.current) == null ? void 0 : x6.focus({ preventScroll: true });
        });
      case o8.Escape:
        return e6.comboboxState !== 0 ? void 0 : (m9.preventDefault(), e6.optionsRef.current && !e6.optionsPropsRef.current.static && m9.stopPropagation(), r10.closeCombobox(), o11.nextFrame(() => {
          var x6;
          return (x6 = e6.inputRef.current) == null ? void 0 : x6.focus({ preventScroll: true });
        }));
      default:
        return;
    }
  }), P5 = o4((m9) => {
    if (r3(m9.currentTarget))
      return m9.preventDefault();
    e6.comboboxState === 0 ? r10.closeCombobox() : (m9.preventDefault(), r10.openCombobox()), o11.nextFrame(() => {
      var x6;
      return (x6 = e6.inputRef.current) == null ? void 0 : x6.focus({ preventScroll: true });
    });
  }), f13 = i2(() => {
    if (e6.labelId)
      return [e6.labelId, n6].join(" ");
  }, [e6.labelId, n6]), E6 = D3(() => ({ open: e6.comboboxState === 0, disabled: e6.disabled, value: e6.value }), [e6]), c13 = { ref: i11, id: n6, type: s6(t15, e6.buttonRef), tabIndex: -1, "aria-haspopup": "listbox", "aria-controls": (g4 = e6.optionsRef.current) == null ? void 0 : g4.id, "aria-expanded": e6.disabled ? void 0 : e6.comboboxState === 0, "aria-labelledby": f13, disabled: e6.disabled, onClick: P5, onKeyDown: u8 };
  return X({ ourProps: c13, theirProps: d15, slot: E6, defaultTag: We, name: "Combobox.Button" });
}
var qe = "label";
function Qe(t15, l10) {
  let e6 = I(), { id: r10 = `headlessui-combobox-label-${e6}`, ...i11 } = t15, b4 = H2("Combobox.Label"), n6 = $("Combobox.Label"), d15 = y2(b4.labelRef, l10);
  l(() => n6.registerLabel(r10), [r10]);
  let o11 = o4(() => {
    var f13;
    return (f13 = b4.inputRef.current) == null ? void 0 : f13.focus({ preventScroll: true });
  }), u8 = D3(() => ({ open: b4.comboboxState === 0, disabled: b4.disabled }), [b4]);
  return X({ ourProps: { ref: d15, id: r10, onClick: o11 }, theirProps: i11, slot: u8, defaultTag: qe, name: "Combobox.Label" });
}
var Ye = "ul";
var Ze = S2.RenderStrategy | S2.Static;
function ze(t15, l10) {
  let e6 = I(), { id: r10 = `headlessui-combobox-options-${e6}`, hold: i11 = false, ...b4 } = t15, n6 = H2("Combobox.Options"), d15 = y2(n6.optionsRef, l10), o11 = C(), u8 = (() => o11 !== null ? (o11 & d4.Open) === d4.Open : n6.comboboxState === 0)();
  l(() => {
    var c13;
    n6.optionsPropsRef.current.static = (c13 = t15.static) != null ? c13 : false;
  }, [n6.optionsPropsRef, t15.static]), l(() => {
    n6.optionsPropsRef.current.hold = i11;
  }, [n6.optionsPropsRef, i11]), F2({ container: n6.optionsRef.current, enabled: n6.comboboxState === 0, accept(c13) {
    return c13.getAttribute("role") === "option" ? NodeFilter.FILTER_REJECT : c13.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(c13) {
    c13.setAttribute("role", "none");
  } });
  let P5 = i2(() => {
    var c13, g4;
    return (g4 = n6.labelId) != null ? g4 : (c13 = n6.buttonRef.current) == null ? void 0 : c13.id;
  }, [n6.labelId, n6.buttonRef.current]), f13 = D3(() => ({ open: n6.comboboxState === 0 }), [n6]), E6 = { "aria-labelledby": P5, role: "listbox", "aria-multiselectable": n6.mode === 1 ? true : void 0, id: r10, ref: d15 };
  return X({ ourProps: E6, theirProps: b4, slot: f13, defaultTag: Ye, features: Ze, visible: u8, name: "Combobox.Options" });
}
var eo = "li";
function oo(t15, l10) {
  var M9, s17;
  let e6 = I(), { id: r10 = `headlessui-combobox-option-${e6}`, disabled: i11 = false, value: b4, ...n6 } = t15, d15 = H2("Combobox.Option"), o11 = $("Combobox.Option"), u8 = d15.activeOptionIndex !== null ? d15.options[d15.activeOptionIndex].id === r10 : false, P5 = d15.isSelected(b4), f13 = A(null), E6 = s2({ disabled: i11, value: b4, domRef: f13, textValue: (s17 = (M9 = f13.current) == null ? void 0 : M9.textContent) == null ? void 0 : s17.toLowerCase() }), c13 = y2(l10, f13), g4 = o4(() => o11.selectOption(r10));
  l(() => o11.registerOption(r10, E6), [E6, r10]);
  let m9 = A(!d15.__demoMode);
  l(() => {
    if (!d15.__demoMode)
      return;
    let O4 = o2();
    return O4.requestAnimationFrame(() => {
      m9.current = true;
    }), O4.dispose;
  }, []), l(() => {
    if (d15.comboboxState !== 0 || !u8 || !m9.current || d15.activationTrigger === 0)
      return;
    let O4 = o2();
    return O4.requestAnimationFrame(() => {
      var a11, I8;
      (I8 = (a11 = f13.current) == null ? void 0 : a11.scrollIntoView) == null || I8.call(a11, { block: "nearest" });
    }), O4.dispose;
  }, [f13, u8, d15.comboboxState, d15.activationTrigger, d15.activeOptionIndex]);
  let x6 = o4((O4) => {
    if (i11)
      return O4.preventDefault();
    g4(), d15.mode === 0 && o11.closeCombobox(), n2() || requestAnimationFrame(() => {
      var a11;
      return (a11 = d15.inputRef.current) == null ? void 0 : a11.focus();
    });
  }), L5 = o4(() => {
    if (i11)
      return o11.goToOption(a2.Nothing);
    o11.goToOption(a2.Specific, r10);
  }), F9 = u3(), h9 = o4((O4) => F9.update(O4)), B4 = o4((O4) => {
    F9.wasMoved(O4) && (i11 || u8 || o11.goToOption(a2.Specific, r10, 0));
  }), k2 = o4((O4) => {
    F9.wasMoved(O4) && (i11 || u8 && (d15.optionsPropsRef.current.hold || o11.goToOption(a2.Nothing)));
  }), G4 = D3(() => ({ active: u8, selected: P5, disabled: i11 }), [u8, P5, i11]);
  return X({ ourProps: { id: r10, ref: c13, role: "option", tabIndex: i11 === true ? void 0 : -1, "aria-disabled": i11 === true ? true : void 0, "aria-selected": P5, disabled: void 0, onClick: x6, onFocus: L5, onPointerEnter: h9, onMouseEnter: h9, onPointerMove: B4, onMouseMove: B4, onPointerLeave: k2, onMouseLeave: k2 }, theirProps: n6, slot: G4, defaultTag: eo, name: "Combobox.Option" });
}
var to = D2(je);
var no = D2($e);
var ro = D2(Ke);
var ao = D2(Qe);
var lo = D2(ze);
var io = D2(oo);
var Wo = Object.assign(to, { Input: ro, Button: no, Label: ao, Options: lo, Option: io });

// node_modules/@headlessui/react/dist/components/dialog/dialog.js
import g2, { createContext as fe, createRef as ge2, useCallback as X3, useContext as j3, useEffect as I3, useMemo as R2, useReducer as Te, useRef as K, useState as ce } from "react";

// node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
import L2, { useEffect as U, useRef as d7 } from "react";

// node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
import { useRef as t8 } from "react";

// node_modules/@headlessui/react/dist/hooks/use-window-event.js
import { useEffect as d5 } from "react";
function s10(e6, r10, n6) {
  let o11 = s2(r10);
  d5(() => {
    function t15(i11) {
      o11.current(i11);
    }
    return window.addEventListener(e6, t15, n6), () => window.removeEventListener(e6, t15, n6);
  }, [e6, n6]);
}

// node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
var s11 = ((r10) => (r10[r10.Forwards = 0] = "Forwards", r10[r10.Backwards = 1] = "Backwards", r10))(s11 || {});
function n3() {
  let e6 = t8(0);
  return s10("keydown", (o11) => {
    o11.key === "Tab" && (e6.current = o11.shiftKey ? 1 : 0);
  }, true), e6;
}

// node_modules/@headlessui/react/dist/hooks/use-is-mounted.js
import { useRef as r4 } from "react";
function f6() {
  let e6 = r4(false);
  return l(() => (e6.current = true, () => {
    e6.current = false;
  }), []), e6;
}

// node_modules/@headlessui/react/dist/hooks/use-owner.js
import { useMemo as t9 } from "react";
function n4(...e6) {
  return t9(() => e(...e6), [...e6]);
}

// node_modules/@headlessui/react/dist/hooks/use-event-listener.js
import { useEffect as d6 } from "react";
function E3(n6, e6, a11, t15) {
  let i11 = s2(a11);
  d6(() => {
    n6 = n6 != null ? n6 : window;
    function r10(o11) {
      i11.current(o11);
    }
    return n6.addEventListener(e6, r10, t15), () => n6.removeEventListener(e6, r10, t15);
  }, [n6, e6, t15]);
}

// node_modules/@headlessui/react/dist/utils/document-ready.js
function t10(n6) {
  function e6() {
    document.readyState !== "loading" && (n6(), document.removeEventListener("DOMContentLoaded", e6));
  }
  typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("DOMContentLoaded", e6), e6());
}

// node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
function P(t15) {
  if (!t15)
    return /* @__PURE__ */ new Set();
  if (typeof t15 == "function")
    return new Set(t15());
  let n6 = /* @__PURE__ */ new Set();
  for (let e6 of t15.current)
    e6.current instanceof HTMLElement && n6.add(e6.current);
  return n6;
}
var J = "div";
var h3 = ((r10) => (r10[r10.None = 1] = "None", r10[r10.InitialFocus = 2] = "InitialFocus", r10[r10.TabLock = 4] = "TabLock", r10[r10.FocusLock = 8] = "FocusLock", r10[r10.RestoreFocus = 16] = "RestoreFocus", r10[r10.All = 30] = "All", r10))(h3 || {});
function X2(t15, n6) {
  let e6 = d7(null), o11 = y2(e6, n6), { initialFocus: u8, containers: i11, features: r10 = 30, ...l10 } = t15;
  l2() || (r10 = 1);
  let m9 = n4(e6);
  Y({ ownerDocument: m9 }, Boolean(r10 & 16));
  let c13 = Z({ ownerDocument: m9, container: e6, initialFocus: u8 }, Boolean(r10 & 2));
  $2({ ownerDocument: m9, container: e6, containers: i11, previousActiveElement: c13 }, Boolean(r10 & 8));
  let v4 = n3(), R3 = o4((s17) => {
    let T7 = e6.current;
    if (!T7)
      return;
    ((B4) => B4())(() => {
      u(v4.current, { [s11.Forwards]: () => {
        O(T7, M.First, { skipElements: [s17.relatedTarget] });
      }, [s11.Backwards]: () => {
        O(T7, M.Last, { skipElements: [s17.relatedTarget] });
      } });
    });
  }), _6 = p(), H8 = d7(false), j5 = { ref: o11, onKeyDown(s17) {
    s17.key == "Tab" && (H8.current = true, _6.requestAnimationFrame(() => {
      H8.current = false;
    }));
  }, onBlur(s17) {
    let T7 = P(i11);
    e6.current instanceof HTMLElement && T7.add(e6.current);
    let E6 = s17.relatedTarget;
    E6 instanceof HTMLElement && E6.dataset.headlessuiFocusGuard !== "true" && (S3(T7, E6) || (H8.current ? O(e6.current, u(v4.current, { [s11.Forwards]: () => M.Next, [s11.Backwards]: () => M.Previous }) | M.WrapAround, { relativeTo: s17.target }) : s17.target instanceof HTMLElement && y(s17.target)));
  } };
  return L2.createElement(L2.Fragment, null, Boolean(r10 & 4) && L2.createElement(c4, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: R3, features: p3.Focusable }), X({ ourProps: j5, theirProps: l10, defaultTag: J, name: "FocusTrap" }), Boolean(r10 & 4) && L2.createElement(c4, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: R3, features: p3.Focusable }));
}
var z2 = D2(X2);
var Re = Object.assign(z2, { features: h3 });
var a4 = [];
t10(() => {
  function t15(n6) {
    n6.target instanceof HTMLElement && n6.target !== document.body && a4[0] !== n6.target && (a4.unshift(n6.target), a4 = a4.filter((e6) => e6 != null && e6.isConnected), a4.splice(10));
  }
  window.addEventListener("click", t15, { capture: true }), window.addEventListener("mousedown", t15, { capture: true }), window.addEventListener("focus", t15, { capture: true }), document.body.addEventListener("click", t15, { capture: true }), document.body.addEventListener("mousedown", t15, { capture: true }), document.body.addEventListener("focus", t15, { capture: true });
});
function Q(t15 = true) {
  let n6 = d7(a4.slice());
  return m3(([e6], [o11]) => {
    o11 === true && e6 === false && t3(() => {
      n6.current.splice(0);
    }), o11 === false && e6 === true && (n6.current = a4.slice());
  }, [t15, a4, n6]), o4(() => {
    var e6;
    return (e6 = n6.current.find((o11) => o11 != null && o11.isConnected)) != null ? e6 : null;
  });
}
function Y({ ownerDocument: t15 }, n6) {
  let e6 = Q(n6);
  m3(() => {
    n6 || (t15 == null ? void 0 : t15.activeElement) === (t15 == null ? void 0 : t15.body) && y(e6());
  }, [n6]);
  let o11 = d7(false);
  U(() => (o11.current = false, () => {
    o11.current = true, t3(() => {
      o11.current && y(e6());
    });
  }), []);
}
function Z({ ownerDocument: t15, container: n6, initialFocus: e6 }, o11) {
  let u8 = d7(null), i11 = f6();
  return m3(() => {
    if (!o11)
      return;
    let r10 = n6.current;
    r10 && t3(() => {
      if (!i11.current)
        return;
      let l10 = t15 == null ? void 0 : t15.activeElement;
      if (e6 != null && e6.current) {
        if ((e6 == null ? void 0 : e6.current) === l10) {
          u8.current = l10;
          return;
        }
      } else if (r10.contains(l10)) {
        u8.current = l10;
        return;
      }
      e6 != null && e6.current ? y(e6.current) : O(r10, M.First) === N.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), u8.current = t15 == null ? void 0 : t15.activeElement;
    });
  }, [o11]), u8;
}
function $2({ ownerDocument: t15, container: n6, containers: e6, previousActiveElement: o11 }, u8) {
  let i11 = f6();
  E3(t15 == null ? void 0 : t15.defaultView, "focus", (r10) => {
    if (!u8 || !i11.current)
      return;
    let l10 = P(e6);
    n6.current instanceof HTMLElement && l10.add(n6.current);
    let m9 = o11.current;
    if (!m9)
      return;
    let c13 = r10.target;
    c13 && c13 instanceof HTMLElement ? S3(l10, c13) ? (o11.current = c13, y(c13)) : (r10.preventDefault(), r10.stopPropagation(), y(m9)) : y(o11.current);
  }, true);
}
function S3(t15, n6) {
  for (let e6 of t15)
    if (e6.contains(n6))
      return true;
  return false;
}

// node_modules/@headlessui/react/dist/components/portal/portal.js
import A2, { Fragment as i7, createContext as G, useContext as L3, useEffect as s12, useRef as T5, useState as m4 } from "react";
import { createPortal as x3 } from "react-dom";

// node_modules/@headlessui/react/dist/internal/portal-force-root.js
import t11, { createContext as r5, useContext as c6 } from "react";
var e4 = r5(false);
function l5() {
  return c6(e4);
}
function P2(o11) {
  return t11.createElement(e4.Provider, { value: o11.force }, o11.children);
}

// node_modules/@headlessui/react/dist/components/portal/portal.js
function H3(u8) {
  let a11 = l5(), o11 = L3(c7), e6 = n4(u8), [l10, n6] = m4(() => {
    if (!a11 && o11 !== null || s.isServer)
      return null;
    let t15 = e6 == null ? void 0 : e6.getElementById("headlessui-portal-root");
    if (t15)
      return t15;
    if (e6 === null)
      return null;
    let r10 = e6.createElement("div");
    return r10.setAttribute("id", "headlessui-portal-root"), e6.body.appendChild(r10);
  });
  return s12(() => {
    l10 !== null && (e6 != null && e6.body.contains(l10) || e6 == null || e6.body.appendChild(l10));
  }, [l10, e6]), s12(() => {
    a11 || o11 !== null && n6(o11.current);
  }, [o11, n6, a11]), l10;
}
var O2 = i7;
function _2(u8, a11) {
  let o11 = u8, e6 = T5(null), l10 = y2(T2((p9) => {
    e6.current = p9;
  }), a11), n6 = n4(e6), t15 = H3(e6), [r10] = m4(() => {
    var p9;
    return s.isServer ? null : (p9 = n6 == null ? void 0 : n6.createElement("div")) != null ? p9 : null;
  }), y7 = l2(), f13 = T5(false);
  return l(() => {
    if (f13.current = false, !(!t15 || !r10))
      return t15.contains(r10) || (r10.setAttribute("data-headlessui-portal", ""), t15.appendChild(r10)), () => {
        f13.current = true, t3(() => {
          var p9;
          f13.current && (!t15 || !r10 || (r10 instanceof Node && t15.contains(r10) && t15.removeChild(r10), t15.childNodes.length <= 0 && ((p9 = t15.parentElement) == null || p9.removeChild(t15))));
        });
      };
  }, [t15, r10]), y7 ? !t15 || !r10 ? null : x3(X({ ourProps: { ref: l10 }, theirProps: o11, defaultTag: O2, name: "Portal" }), r10) : null;
}
var F3 = i7;
var c7 = G(null);
function U2(u8, a11) {
  let { target: o11, ...e6 } = u8, n6 = { ref: y2(a11) };
  return A2.createElement(c7.Provider, { value: o11 }, X({ ourProps: n6, theirProps: e6, defaultTag: F3, name: "Popover.Group" }));
}
var S4 = D2(_2);
var j2 = D2(U2);
var te = Object.assign(S4, { Group: j2 });

// node_modules/@headlessui/react/dist/components/description/description.js
import u4, { createContext as m5, useContext as D4, useMemo as l6, useState as T6 } from "react";
var d8 = m5(null);
function f7() {
  let r10 = D4(d8);
  if (r10 === null) {
    let t15 = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t15, f7), t15;
  }
  return r10;
}
function M2() {
  let [r10, t15] = T6([]);
  return [r10.length > 0 ? r10.join(" ") : void 0, l6(() => function(e6) {
    let i11 = o4((s17) => (t15((o11) => [...o11, s17]), () => t15((o11) => {
      let p9 = o11.slice(), c13 = p9.indexOf(s17);
      return c13 !== -1 && p9.splice(c13, 1), p9;
    }))), n6 = l6(() => ({ register: i11, slot: e6.slot, name: e6.name, props: e6.props }), [i11, e6.slot, e6.name, e6.props]);
    return u4.createElement(d8.Provider, { value: n6 }, e6.children);
  }, [t15])];
}
var S5 = "p";
function h4(r10, t15) {
  let a11 = I(), { id: e6 = `headlessui-description-${a11}`, ...i11 } = r10, n6 = f7(), s17 = y2(t15);
  l(() => n6.register(e6), [e6, n6.register]);
  let o11 = { ref: s17, ...n6.props, id: e6 };
  return X({ ourProps: o11, theirProps: i11, slot: n6.slot || {}, defaultTag: S5, name: n6.name || "Description" });
}
var y3 = D2(h4);
var b2 = Object.assign(y3, {});

// node_modules/@headlessui/react/dist/internal/stack-context.js
import d9, { createContext as c8, useContext as m6 } from "react";
var a5 = c8(() => {
});
a5.displayName = "StackContext";
var s13 = ((e6) => (e6[e6.Add = 0] = "Add", e6[e6.Remove = 1] = "Remove", e6))(s13 || {});
function x4() {
  return m6(a5);
}
function M3({ children: i11, onUpdate: r10, type: e6, element: n6, enabled: u8 }) {
  let l10 = x4(), o11 = o4((...t15) => {
    r10 == null || r10(...t15), l10(...t15);
  });
  return l(() => {
    let t15 = u8 === void 0 || u8 === true;
    return t15 && o11(0, e6, n6), () => {
      t15 && o11(1, e6, n6);
    };
  }, [o11, e6, n6, u8]), d9.createElement(a5.Provider, { value: o11 }, i11);
}

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
import * as e5 from "react";

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimClient.js
import * as l7 from "react";
function i8(e6, t15) {
  return e6 === t15 && (e6 !== 0 || 1 / e6 === 1 / t15) || e6 !== e6 && t15 !== t15;
}
var d10 = typeof Object.is == "function" ? Object.is : i8;
var { useState: u5, useEffect: h5, useLayoutEffect: f8, useDebugValue: p5 } = l7;
function y4(e6, t15, c13) {
  const a11 = t15(), [{ inst: n6 }, o11] = u5({ inst: { value: a11, getSnapshot: t15 } });
  return f8(() => {
    n6.value = a11, n6.getSnapshot = t15, r6(n6) && o11({ inst: n6 });
  }, [e6, a11, t15]), h5(() => (r6(n6) && o11({ inst: n6 }), e6(() => {
    r6(n6) && o11({ inst: n6 });
  })), [e6]), p5(a11), a11;
}
function r6(e6) {
  const t15 = e6.getSnapshot, c13 = e6.value;
  try {
    const a11 = t15();
    return !d10(c13, a11);
  } catch {
    return true;
  }
}

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimServer.js
function t12(r10, e6, n6) {
  return e6();
}

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var r7 = typeof window != "undefined" && typeof window.document != "undefined" && typeof window.document.createElement != "undefined";
var s14 = !r7;
var c9 = s14 ? t12 : y4;
var a6 = "useSyncExternalStore" in e5 ? ((n6) => n6.useSyncExternalStore)(e5) : c9;

// node_modules/@headlessui/react/dist/hooks/use-store.js
function S6(t15) {
  return a6(t15.subscribe, t15.getSnapshot, t15.getSnapshot);
}

// node_modules/@headlessui/react/dist/utils/store.js
function a7(o11, r10) {
  let t15 = o11(), n6 = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return t15;
  }, subscribe(e6) {
    return n6.add(e6), () => n6.delete(e6);
  }, dispatch(e6, ...s17) {
    let i11 = r10[e6].call(t15, ...s17);
    i11 && (t15 = i11, n6.forEach((c13) => c13()));
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/adjust-scrollbar-padding.js
function c10() {
  let o11;
  return { before({ doc: e6 }) {
    var l10;
    let n6 = e6.documentElement;
    o11 = ((l10 = e6.defaultView) != null ? l10 : window).innerWidth - n6.clientWidth;
  }, after({ doc: e6, d: n6 }) {
    let t15 = e6.documentElement, l10 = t15.clientWidth - t15.offsetWidth, r10 = o11 - l10;
    n6.style(t15, "paddingRight", `${r10}px`);
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/handle-ios-locking.js
function p6() {
  if (!t7())
    return {};
  let o11;
  return { before() {
    o11 = window.pageYOffset;
  }, after({ doc: r10, d: l10, meta: s17 }) {
    function i11(e6) {
      return s17.containers.flatMap((t15) => t15()).some((t15) => t15.contains(e6));
    }
    l10.style(r10.body, "marginTop", `-${o11}px`), window.scrollTo(0, 0);
    let n6 = null;
    l10.addEventListener(r10, "click", (e6) => {
      if (e6.target instanceof HTMLElement)
        try {
          let t15 = e6.target.closest("a");
          if (!t15)
            return;
          let { hash: c13 } = new URL(t15.href), a11 = r10.querySelector(c13);
          a11 && !i11(a11) && (n6 = a11);
        } catch {
        }
    }, true), l10.addEventListener(r10, "touchmove", (e6) => {
      e6.target instanceof HTMLElement && !i11(e6.target) && e6.preventDefault();
    }, { passive: false }), l10.add(() => {
      window.scrollTo(0, window.pageYOffset + o11), n6 && n6.isConnected && (n6.scrollIntoView({ block: "nearest" }), n6 = null);
    });
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/prevent-scroll.js
function l8() {
  return { before({ doc: e6, d: o11 }) {
    o11.style(e6.documentElement, "overflow", "hidden");
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/overflow-store.js
function m7(e6) {
  let n6 = {};
  for (let t15 of e6)
    Object.assign(n6, t15(n6));
  return n6;
}
var a8 = a7(() => /* @__PURE__ */ new Map(), { PUSH(e6, n6) {
  var o11;
  let t15 = (o11 = this.get(e6)) != null ? o11 : { doc: e6, count: 0, d: o2(), meta: /* @__PURE__ */ new Set() };
  return t15.count++, t15.meta.add(n6), this.set(e6, t15), this;
}, POP(e6, n6) {
  let t15 = this.get(e6);
  return t15 && (t15.count--, t15.meta.delete(n6)), this;
}, SCROLL_PREVENT({ doc: e6, d: n6, meta: t15 }) {
  let o11 = { doc: e6, d: n6, meta: m7(t15) }, c13 = [p6(), c10(), l8()];
  c13.forEach(({ before: r10 }) => r10 == null ? void 0 : r10(o11)), c13.forEach(({ after: r10 }) => r10 == null ? void 0 : r10(o11));
}, SCROLL_ALLOW({ d: e6 }) {
  e6.dispose();
}, TEARDOWN({ doc: e6 }) {
  this.delete(e6);
} });
a8.subscribe(() => {
  let e6 = a8.getSnapshot(), n6 = /* @__PURE__ */ new Map();
  for (let [t15] of e6)
    n6.set(t15, t15.documentElement.style.overflow);
  for (let t15 of e6.values()) {
    let o11 = n6.get(t15.doc) === "hidden", c13 = t15.count !== 0;
    (c13 && !o11 || !c13 && o11) && a8.dispatch(t15.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", t15), t15.count === 0 && a8.dispatch("TEARDOWN", t15);
  }
});

// node_modules/@headlessui/react/dist/hooks/document-overflow/use-document-overflow.js
function p7(e6, r10, n6) {
  let f13 = S6(a8), o11 = e6 ? f13.get(e6) : void 0, i11 = o11 ? o11.count > 0 : false;
  return l(() => {
    if (!(!e6 || !r10))
      return a8.dispatch("PUSH", e6, n6), () => a8.dispatch("POP", e6, n6);
  }, [r10, e6]), i11;
}

// node_modules/@headlessui/react/dist/hooks/use-inert.js
var u6 = /* @__PURE__ */ new Map();
var t13 = /* @__PURE__ */ new Map();
function h6(r10, l10 = true) {
  l(() => {
    var o11;
    if (!l10)
      return;
    let e6 = typeof r10 == "function" ? r10() : r10.current;
    if (!e6)
      return;
    function a11() {
      var d15;
      if (!e6)
        return;
      let i11 = (d15 = t13.get(e6)) != null ? d15 : 1;
      if (i11 === 1 ? t13.delete(e6) : t13.set(e6, i11 - 1), i11 !== 1)
        return;
      let n6 = u6.get(e6);
      n6 && (n6["aria-hidden"] === null ? e6.removeAttribute("aria-hidden") : e6.setAttribute("aria-hidden", n6["aria-hidden"]), e6.inert = n6.inert, u6.delete(e6));
    }
    let f13 = (o11 = t13.get(e6)) != null ? o11 : 0;
    return t13.set(e6, f13 + 1), f13 !== 0 || (u6.set(e6, { "aria-hidden": e6.getAttribute("aria-hidden"), inert: e6.inert }), e6.setAttribute("aria-hidden", "true"), e6.inert = true), a11;
  }, [r10, l10]);
}

// node_modules/@headlessui/react/dist/components/dialog/dialog.js
var Se = ((o11) => (o11[o11.Open = 0] = "Open", o11[o11.Closed = 1] = "Closed", o11))(Se || {});
var Fe = ((e6) => (e6[e6.SetTitleId = 0] = "SetTitleId", e6))(Fe || {});
var ke2 = { [0](t15, e6) {
  return t15.titleId === e6.id ? t15 : { ...t15, titleId: e6.id };
} };
var M4 = fe(null);
M4.displayName = "DialogContext";
function S7(t15) {
  let e6 = j3(M4);
  if (e6 === null) {
    let o11 = new Error(`<${t15} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, S7), o11;
  }
  return e6;
}
function xe2(t15, e6, o11 = () => [document.body]) {
  p7(t15, e6, (s17) => {
    var n6;
    return { containers: [...(n6 = s17.containers) != null ? n6 : [], o11] };
  });
}
function _e(t15, e6) {
  return u(e6.type, ke2, t15, e6);
}
var Me = "div";
var He2 = S2.RenderStrategy | S2.Static;
function Ie(t15, e6) {
  let o11 = I(), { id: s17 = `headlessui-dialog-${o11}`, open: n6, onClose: l10, initialFocus: d15, __demoMode: c13 = false, ...D8 } = t15, [P5, F9] = ce(0), i11 = C();
  n6 === void 0 && i11 !== null && (n6 = (i11 & d4.Open) === d4.Open);
  let m9 = K(null), Q6 = y2(m9, e6), y7 = K(null), p9 = n4(m9), U5 = t15.hasOwnProperty("open") || i11 !== null, N5 = t15.hasOwnProperty("onClose");
  if (!U5 && !N5)
    throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!U5)
    throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!N5)
    throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (typeof n6 != "boolean")
    throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${n6}`);
  if (typeof l10 != "function")
    throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${l10}`);
  let u8 = n6 ? 0 : 1, [E6, Z6] = Te(_e, { titleId: null, descriptionId: null, panelRef: ge2() }), A7 = o4(() => l10(false)), Y7 = o4((r10) => Z6({ type: 0, id: r10 })), k2 = l2() ? c13 ? false : u8 === 0 : false, x6 = P5 > 1, $7 = j3(M4) !== null, ee4 = x6 ? "parent" : "leaf", W = i11 !== null ? (i11 & d4.Closing) === d4.Closing : false, te4 = (() => $7 || W ? false : k2)(), oe4 = X3(() => {
    var r10, f13;
    return (f13 = Array.from((r10 = p9 == null ? void 0 : p9.querySelectorAll("body > *")) != null ? r10 : []).find((a11) => a11.id === "headlessui-portal-root" ? false : a11.contains(y7.current) && a11 instanceof HTMLElement)) != null ? f13 : null;
  }, [y7]);
  h6(oe4, te4);
  let re6 = (() => x6 ? true : k2)(), ne6 = X3(() => {
    var r10, f13;
    return (f13 = Array.from((r10 = p9 == null ? void 0 : p9.querySelectorAll("[data-headlessui-portal]")) != null ? r10 : []).find((a11) => a11.contains(y7.current) && a11 instanceof HTMLElement)) != null ? f13 : null;
  }, [y7]);
  h6(ne6, re6);
  let H8 = o4(() => {
    var f13, a11;
    return [...Array.from((f13 = p9 == null ? void 0 : p9.querySelectorAll("html > *, body > *, [data-headlessui-portal]")) != null ? f13 : []).filter((T7) => !(T7 === document.body || T7 === document.head || !(T7 instanceof HTMLElement) || T7.contains(y7.current) || E6.panelRef.current && T7.contains(E6.panelRef.current))), (a11 = E6.panelRef.current) != null ? a11 : m9.current];
  }), le4 = (() => !(!k2 || x6))();
  L(() => H8(), A7, le4);
  let ae3 = (() => !(x6 || u8 !== 0))();
  E3(p9 == null ? void 0 : p9.defaultView, "keydown", (r10) => {
    ae3 && (r10.defaultPrevented || r10.key === o8.Escape && (r10.preventDefault(), r10.stopPropagation(), A7()));
  });
  let ie4 = (() => !(W || u8 !== 0 || $7))();
  xe2(p9, ie4, H8), I3(() => {
    if (u8 !== 0 || !m9.current)
      return;
    let r10 = new ResizeObserver((f13) => {
      for (let a11 of f13) {
        let T7 = a11.target.getBoundingClientRect();
        T7.x === 0 && T7.y === 0 && T7.width === 0 && T7.height === 0 && A7();
      }
    });
    return r10.observe(m9.current), () => r10.disconnect();
  }, [u8, m9, A7]);
  let [se5, pe4] = M2(), de3 = R2(() => [{ dialogState: u8, close: A7, setTitleId: Y7 }, E6], [u8, E6, A7, Y7]), J4 = R2(() => ({ open: u8 === 0 }), [u8]), ue6 = { ref: Q6, id: s17, role: "dialog", "aria-modal": u8 === 0 ? true : void 0, "aria-labelledby": E6.titleId, "aria-describedby": se5 };
  return g2.createElement(M3, { type: "Dialog", enabled: u8 === 0, element: m9, onUpdate: o4((r10, f13) => {
    f13 === "Dialog" && u(r10, { [s13.Add]: () => F9((a11) => a11 + 1), [s13.Remove]: () => F9((a11) => a11 - 1) });
  }) }, g2.createElement(P2, { force: true }, g2.createElement(te, null, g2.createElement(M4.Provider, { value: de3 }, g2.createElement(te.Group, { target: m9 }, g2.createElement(P2, { force: false }, g2.createElement(pe4, { slot: J4, name: "Dialog.Description" }, g2.createElement(Re, { initialFocus: d15, containers: H8, features: k2 ? u(ee4, { parent: Re.features.RestoreFocus, leaf: Re.features.All & ~Re.features.FocusLock }) : Re.features.None }, X({ ourProps: ue6, theirProps: D8, slot: J4, defaultTag: Me, features: He2, visible: u8 === 0, name: "Dialog" })))))))), g2.createElement(c4, { features: p3.Hidden, ref: y7 }));
}
var we2 = "div";
function Be(t15, e6) {
  let o11 = I(), { id: s17 = `headlessui-dialog-overlay-${o11}`, ...n6 } = t15, [{ dialogState: l10, close: d15 }] = S7("Dialog.Overlay"), c13 = y2(e6), D8 = o4((i11) => {
    if (i11.target === i11.currentTarget) {
      if (r3(i11.currentTarget))
        return i11.preventDefault();
      i11.preventDefault(), i11.stopPropagation(), d15();
    }
  }), P5 = R2(() => ({ open: l10 === 0 }), [l10]);
  return X({ ourProps: { ref: c13, id: s17, "aria-hidden": true, onClick: D8 }, theirProps: n6, slot: P5, defaultTag: we2, name: "Dialog.Overlay" });
}
var Ge2 = "div";
function Ue2(t15, e6) {
  let o11 = I(), { id: s17 = `headlessui-dialog-backdrop-${o11}`, ...n6 } = t15, [{ dialogState: l10 }, d15] = S7("Dialog.Backdrop"), c13 = y2(e6);
  I3(() => {
    if (d15.panelRef.current === null)
      throw new Error("A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.");
  }, [d15.panelRef]);
  let D8 = R2(() => ({ open: l10 === 0 }), [l10]);
  return g2.createElement(P2, { force: true }, g2.createElement(te, null, X({ ourProps: { ref: c13, id: s17, "aria-hidden": true }, theirProps: n6, slot: D8, defaultTag: Ge2, name: "Dialog.Backdrop" })));
}
var Ne2 = "div";
function Ye2(t15, e6) {
  let o11 = I(), { id: s17 = `headlessui-dialog-panel-${o11}`, ...n6 } = t15, [{ dialogState: l10 }, d15] = S7("Dialog.Panel"), c13 = y2(e6, d15.panelRef), D8 = R2(() => ({ open: l10 === 0 }), [l10]), P5 = o4((i11) => {
    i11.stopPropagation();
  });
  return X({ ourProps: { ref: c13, id: s17, onClick: P5 }, theirProps: n6, slot: D8, defaultTag: Ne2, name: "Dialog.Panel" });
}
var $e2 = "h2";
function We2(t15, e6) {
  let o11 = I(), { id: s17 = `headlessui-dialog-title-${o11}`, ...n6 } = t15, [{ dialogState: l10, setTitleId: d15 }] = S7("Dialog.Title"), c13 = y2(e6);
  I3(() => (d15(s17), () => d15(null)), [s17, d15]);
  let D8 = R2(() => ({ open: l10 === 0 }), [l10]);
  return X({ ourProps: { ref: c13, id: s17 }, theirProps: n6, slot: D8, defaultTag: $e2, name: "Dialog.Title" });
}
var Je2 = D2(Ie);
var Xe2 = D2(Ue2);
var je2 = D2(Ye2);
var Ke2 = D2(Be);
var Ve = D2(We2);
var St = Object.assign(Je2, { Backdrop: Xe2, Panel: je2, Overlay: Ke2, Title: Ve, Description: b2 });

// node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
import E4, { Fragment as F4, createContext as C2, useContext as I4, useEffect as h7, useMemo as S8, useReducer as N3, useRef as g3 } from "react";

// node_modules/@headlessui/react/dist/utils/start-transition.js
import r8 from "react";
var t14;
var a9 = (t14 = r8.startTransition) != null ? t14 : function(i11) {
  i11();
};

// node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var q = ((o11) => (o11[o11.Open = 0] = "Open", o11[o11.Closed = 1] = "Closed", o11))(q || {});
var z3 = ((t15) => (t15[t15.ToggleDisclosure = 0] = "ToggleDisclosure", t15[t15.CloseDisclosure = 1] = "CloseDisclosure", t15[t15.SetButtonId = 2] = "SetButtonId", t15[t15.SetPanelId = 3] = "SetPanelId", t15[t15.LinkPanel = 4] = "LinkPanel", t15[t15.UnlinkPanel = 5] = "UnlinkPanel", t15))(z3 || {});
var Q2 = { [0]: (e6) => ({ ...e6, disclosureState: u(e6.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e6) => e6.disclosureState === 1 ? e6 : { ...e6, disclosureState: 1 }, [4](e6) {
  return e6.linkedPanel === true ? e6 : { ...e6, linkedPanel: true };
}, [5](e6) {
  return e6.linkedPanel === false ? e6 : { ...e6, linkedPanel: false };
}, [2](e6, n6) {
  return e6.buttonId === n6.buttonId ? e6 : { ...e6, buttonId: n6.buttonId };
}, [3](e6, n6) {
  return e6.panelId === n6.panelId ? e6 : { ...e6, panelId: n6.panelId };
} };
var k = C2(null);
k.displayName = "DisclosureContext";
function M5(e6) {
  let n6 = I4(k);
  if (n6 === null) {
    let o11 = new Error(`<${e6} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, M5), o11;
  }
  return n6;
}
var v = C2(null);
v.displayName = "DisclosureAPIContext";
function w3(e6) {
  let n6 = I4(v);
  if (n6 === null) {
    let o11 = new Error(`<${e6} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, w3), o11;
  }
  return n6;
}
var H4 = C2(null);
H4.displayName = "DisclosurePanelContext";
function V() {
  return I4(H4);
}
function Y2(e6, n6) {
  return u(n6.type, Q2, e6, n6);
}
var Z2 = F4;
function ee(e6, n6) {
  let { defaultOpen: o11 = false, ...u8 } = e6, T7 = g3(null), l10 = y2(n6, T2((a11) => {
    T7.current = a11;
  }, e6.as === void 0 || e6.as === F4)), t15 = g3(null), f13 = g3(null), s17 = N3(Y2, { disclosureState: o11 ? 0 : 1, linkedPanel: false, buttonRef: f13, panelRef: t15, buttonId: null, panelId: null }), [{ disclosureState: i11, buttonId: c13 }, D8] = s17, d15 = o4((a11) => {
    D8({ type: 1 });
    let r10 = e(T7);
    if (!r10 || !c13)
      return;
    let p9 = (() => a11 ? a11 instanceof HTMLElement ? a11 : a11.current instanceof HTMLElement ? a11.current : r10.getElementById(c13) : r10.getElementById(c13))();
    p9 == null || p9.focus();
  }), P5 = S8(() => ({ close: d15 }), [d15]), b4 = S8(() => ({ open: i11 === 0, close: d15 }), [i11, d15]), y7 = { ref: l10 };
  return E4.createElement(k.Provider, { value: s17 }, E4.createElement(v.Provider, { value: P5 }, E4.createElement(c5, { value: u(i11, { [0]: d4.Open, [1]: d4.Closed }) }, X({ ourProps: y7, theirProps: u8, slot: b4, defaultTag: Z2, name: "Disclosure" }))));
}
var te2 = "button";
function ne(e6, n6) {
  let o11 = I(), { id: u8 = `headlessui-disclosure-button-${o11}`, ...T7 } = e6, [l10, t15] = M5("Disclosure.Button"), f13 = V(), s17 = f13 === null ? false : f13 === l10.panelId, i11 = g3(null), c13 = y2(i11, n6, s17 ? null : l10.buttonRef);
  h7(() => {
    if (!s17)
      return t15({ type: 2, buttonId: u8 }), () => {
        t15({ type: 2, buttonId: null });
      };
  }, [u8, t15, s17]);
  let D8 = o4((r10) => {
    var p9;
    if (s17) {
      if (l10.disclosureState === 1)
        return;
      switch (r10.key) {
        case o8.Space:
        case o8.Enter:
          r10.preventDefault(), r10.stopPropagation(), t15({ type: 0 }), (p9 = l10.buttonRef.current) == null || p9.focus();
          break;
      }
    } else
      switch (r10.key) {
        case o8.Space:
        case o8.Enter:
          r10.preventDefault(), r10.stopPropagation(), t15({ type: 0 });
          break;
      }
  }), d15 = o4((r10) => {
    switch (r10.key) {
      case o8.Space:
        r10.preventDefault();
        break;
    }
  }), P5 = o4((r10) => {
    var p9;
    r3(r10.currentTarget) || e6.disabled || (s17 ? (t15({ type: 0 }), (p9 = l10.buttonRef.current) == null || p9.focus()) : t15({ type: 0 }));
  }), b4 = S8(() => ({ open: l10.disclosureState === 0 }), [l10]), y7 = s6(e6, i11), a11 = s17 ? { ref: c13, type: y7, onKeyDown: D8, onClick: P5 } : { ref: c13, id: u8, type: y7, "aria-expanded": e6.disabled ? void 0 : l10.disclosureState === 0, "aria-controls": l10.linkedPanel ? l10.panelId : void 0, onKeyDown: D8, onKeyUp: d15, onClick: P5 };
  return X({ ourProps: a11, theirProps: T7, slot: b4, defaultTag: te2, name: "Disclosure.Button" });
}
var le2 = "div";
var oe = S2.RenderStrategy | S2.Static;
function re2(e6, n6) {
  let o11 = I(), { id: u8 = `headlessui-disclosure-panel-${o11}`, ...T7 } = e6, [l10, t15] = M5("Disclosure.Panel"), { close: f13 } = w3("Disclosure.Panel"), s17 = y2(n6, l10.panelRef, (P5) => {
    a9(() => t15({ type: P5 ? 4 : 5 }));
  });
  h7(() => (t15({ type: 3, panelId: u8 }), () => {
    t15({ type: 3, panelId: null });
  }), [u8, t15]);
  let i11 = C(), c13 = (() => i11 !== null ? (i11 & d4.Open) === d4.Open : l10.disclosureState === 0)(), D8 = S8(() => ({ open: l10.disclosureState === 0, close: f13 }), [l10, f13]), d15 = { ref: s17, id: u8 };
  return E4.createElement(H4.Provider, { value: l10.panelId }, X({ ourProps: d15, theirProps: T7, slot: D8, defaultTag: le2, features: oe, visible: c13, name: "Disclosure.Panel" }));
}
var se2 = D2(ee);
var ue2 = D2(ne);
var ie = D2(re2);
var Ve2 = Object.assign(se2, { Button: ue2, Panel: ie });

// node_modules/@headlessui/react/dist/components/listbox/listbox.js
import G2, { Fragment as xe3, createContext as Y3, createRef as ye, useCallback as ge3, useContext as Z3, useEffect as ee2, useMemo as D5, useReducer as Le, useRef as I5 } from "react";
var Ue3 = ((o11) => (o11[o11.Open = 0] = "Open", o11[o11.Closed = 1] = "Closed", o11))(Ue3 || {});
var Be2 = ((o11) => (o11[o11.Single = 0] = "Single", o11[o11.Multi = 1] = "Multi", o11))(Be2 || {});
var He3 = ((o11) => (o11[o11.Pointer = 0] = "Pointer", o11[o11.Other = 1] = "Other", o11))(He3 || {});
var Ge3 = ((i11) => (i11[i11.OpenListbox = 0] = "OpenListbox", i11[i11.CloseListbox = 1] = "CloseListbox", i11[i11.GoToOption = 2] = "GoToOption", i11[i11.Search = 3] = "Search", i11[i11.ClearSearch = 4] = "ClearSearch", i11[i11.RegisterOption = 5] = "RegisterOption", i11[i11.UnregisterOption = 6] = "UnregisterOption", i11[i11.RegisterLabel = 7] = "RegisterLabel", i11))(Ge3 || {});
function X4(e6, a11 = (o11) => o11) {
  let o11 = e6.activeOptionIndex !== null ? e6.options[e6.activeOptionIndex] : null, r10 = I2(a11(e6.options.slice()), (t15) => t15.dataRef.current.domRef.current), l10 = o11 ? r10.indexOf(o11) : null;
  return l10 === -1 && (l10 = null), { options: r10, activeOptionIndex: l10 };
}
var Ne3 = { [1](e6) {
  return e6.dataRef.current.disabled || e6.listboxState === 1 ? e6 : { ...e6, activeOptionIndex: null, listboxState: 1 };
}, [0](e6) {
  if (e6.dataRef.current.disabled || e6.listboxState === 0)
    return e6;
  let a11 = e6.activeOptionIndex, { isSelected: o11 } = e6.dataRef.current, r10 = e6.options.findIndex((l10) => o11(l10.dataRef.current.value));
  return r10 !== -1 && (a11 = r10), { ...e6, listboxState: 0, activeOptionIndex: a11 };
}, [2](e6, a11) {
  var l10;
  if (e6.dataRef.current.disabled || e6.listboxState === 1)
    return e6;
  let o11 = X4(e6), r10 = x(a11, { resolveItems: () => o11.options, resolveActiveIndex: () => o11.activeOptionIndex, resolveId: (t15) => t15.id, resolveDisabled: (t15) => t15.dataRef.current.disabled });
  return { ...e6, ...o11, searchQuery: "", activeOptionIndex: r10, activationTrigger: (l10 = a11.trigger) != null ? l10 : 1 };
}, [3]: (e6, a11) => {
  if (e6.dataRef.current.disabled || e6.listboxState === 1)
    return e6;
  let r10 = e6.searchQuery !== "" ? 0 : 1, l10 = e6.searchQuery + a11.value.toLowerCase(), p9 = (e6.activeOptionIndex !== null ? e6.options.slice(e6.activeOptionIndex + r10).concat(e6.options.slice(0, e6.activeOptionIndex + r10)) : e6.options).find((i11) => {
    var b4;
    return !i11.dataRef.current.disabled && ((b4 = i11.dataRef.current.textValue) == null ? void 0 : b4.startsWith(l10));
  }), u8 = p9 ? e6.options.indexOf(p9) : -1;
  return u8 === -1 || u8 === e6.activeOptionIndex ? { ...e6, searchQuery: l10 } : { ...e6, searchQuery: l10, activeOptionIndex: u8, activationTrigger: 1 };
}, [4](e6) {
  return e6.dataRef.current.disabled || e6.listboxState === 1 || e6.searchQuery === "" ? e6 : { ...e6, searchQuery: "" };
}, [5]: (e6, a11) => {
  let o11 = { id: a11.id, dataRef: a11.dataRef }, r10 = X4(e6, (l10) => [...l10, o11]);
  return e6.activeOptionIndex === null && e6.dataRef.current.isSelected(a11.dataRef.current.value) && (r10.activeOptionIndex = r10.options.indexOf(o11)), { ...e6, ...r10 };
}, [6]: (e6, a11) => {
  let o11 = X4(e6, (r10) => {
    let l10 = r10.findIndex((t15) => t15.id === a11.id);
    return l10 !== -1 && r10.splice(l10, 1), r10;
  });
  return { ...e6, ...o11, activationTrigger: 1 };
}, [7]: (e6, a11) => ({ ...e6, labelId: a11.id }) };
var $3 = Y3(null);
$3.displayName = "ListboxActionsContext";
function U3(e6) {
  let a11 = Z3($3);
  if (a11 === null) {
    let o11 = new Error(`<${e6} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, U3), o11;
  }
  return a11;
}
var z4 = Y3(null);
z4.displayName = "ListboxDataContext";
function B(e6) {
  let a11 = Z3(z4);
  if (a11 === null) {
    let o11 = new Error(`<${e6} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, B), o11;
  }
  return a11;
}
function je3(e6, a11) {
  return u(a11.type, Ne3, e6, a11);
}
var Ve3 = xe3;
function Ke3(e6, a11) {
  let { value: o11, defaultValue: r10, form: l10, name: t15, onChange: p9, by: u8 = (s17, d15) => s17 === d15, disabled: i11 = false, horizontal: b4 = false, multiple: R3 = false, ...m9 } = e6;
  const P5 = b4 ? "horizontal" : "vertical";
  let E6 = y2(a11), [L5 = R3 ? [] : void 0, v4] = T4(o11, p9, r10), [c13, n6] = Le(je3, { dataRef: ye(), listboxState: 1, options: [], searchQuery: "", labelId: null, activeOptionIndex: null, activationTrigger: 1 }), x6 = I5({ static: false, hold: false }), h9 = I5(null), Q6 = I5(null), J4 = I5(null), y7 = o4(typeof u8 == "string" ? (s17, d15) => {
    let O4 = u8;
    return (s17 == null ? void 0 : s17[O4]) === (d15 == null ? void 0 : d15[O4]);
  } : u8), S10 = ge3((s17) => u(T7.mode, { [1]: () => L5.some((d15) => y7(d15, s17)), [0]: () => y7(L5, s17) }), [L5]), T7 = D5(() => ({ ...c13, value: L5, disabled: i11, mode: R3 ? 1 : 0, orientation: P5, compare: y7, isSelected: S10, optionsPropsRef: x6, labelRef: h9, buttonRef: Q6, optionsRef: J4 }), [L5, i11, R3, c13]);
  l(() => {
    c13.dataRef.current = T7;
  }, [T7]), L([T7.buttonRef, T7.optionsRef], (s17, d15) => {
    var O4;
    n6({ type: 1 }), h(d15, T.Loose) || (s17.preventDefault(), (O4 = T7.buttonRef.current) == null || O4.focus());
  }, T7.listboxState === 0);
  let ne6 = D5(() => ({ open: T7.listboxState === 0, disabled: i11, value: L5 }), [T7, i11, L5]), ie4 = o4((s17) => {
    let d15 = T7.options.find((O4) => O4.id === s17);
    d15 && F9(d15.dataRef.current.value);
  }), re6 = o4(() => {
    if (T7.activeOptionIndex !== null) {
      let { dataRef: s17, id: d15 } = T7.options[T7.activeOptionIndex];
      F9(s17.current.value), n6({ type: 2, focus: a2.Specific, id: d15 });
    }
  }), ae3 = o4(() => n6({ type: 0 })), le4 = o4(() => n6({ type: 1 })), se5 = o4((s17, d15, O4) => s17 === a2.Specific ? n6({ type: 2, focus: a2.Specific, id: d15, trigger: O4 }) : n6({ type: 2, focus: s17, trigger: O4 })), pe4 = o4((s17, d15) => (n6({ type: 5, id: s17, dataRef: d15 }), () => n6({ type: 6, id: s17 }))), ue6 = o4((s17) => (n6({ type: 7, id: s17 }), () => n6({ type: 7, id: null }))), F9 = o4((s17) => u(T7.mode, { [0]() {
    return v4 == null ? void 0 : v4(s17);
  }, [1]() {
    let d15 = T7.value.slice(), O4 = d15.findIndex((M9) => y7(M9, s17));
    return O4 === -1 ? d15.push(s17) : d15.splice(O4, 1), v4 == null ? void 0 : v4(d15);
  } })), de3 = o4((s17) => n6({ type: 3, value: s17 })), ce4 = o4(() => n6({ type: 4 })), fe4 = D5(() => ({ onChange: F9, registerOption: pe4, registerLabel: ue6, goToOption: se5, closeListbox: le4, openListbox: ae3, selectActiveOption: re6, selectOption: ie4, search: de3, clearSearch: ce4 }), []), Te4 = { ref: E6 }, H8 = I5(null), be4 = p();
  return ee2(() => {
    H8.current && r10 !== void 0 && be4.addEventListener(H8.current, "reset", () => {
      F9(r10);
    });
  }, [H8, F9]), G2.createElement($3.Provider, { value: fe4 }, G2.createElement(z4.Provider, { value: T7 }, G2.createElement(c5, { value: u(T7.listboxState, { [0]: d4.Open, [1]: d4.Closed }) }, t15 != null && L5 != null && e3({ [t15]: L5 }).map(([s17, d15], O4) => G2.createElement(c4, { features: p3.Hidden, ref: O4 === 0 ? (M9) => {
    var q6;
    H8.current = (q6 = M9 == null ? void 0 : M9.closest("form")) != null ? q6 : null;
  } : void 0, ...R({ key: s17, as: "input", type: "hidden", hidden: true, readOnly: true, form: l10, name: s17, value: d15 }) })), X({ ourProps: Te4, theirProps: m9, slot: ne6, defaultTag: Ve3, name: "Listbox" }))));
}
var Qe2 = "button";
function We3(e6, a11) {
  var v4;
  let o11 = I(), { id: r10 = `headlessui-listbox-button-${o11}`, ...l10 } = e6, t15 = B("Listbox.Button"), p9 = U3("Listbox.Button"), u8 = y2(t15.buttonRef, a11), i11 = p(), b4 = o4((c13) => {
    switch (c13.key) {
      case o8.Space:
      case o8.Enter:
      case o8.ArrowDown:
        c13.preventDefault(), p9.openListbox(), i11.nextFrame(() => {
          t15.value || p9.goToOption(a2.First);
        });
        break;
      case o8.ArrowUp:
        c13.preventDefault(), p9.openListbox(), i11.nextFrame(() => {
          t15.value || p9.goToOption(a2.Last);
        });
        break;
    }
  }), R3 = o4((c13) => {
    switch (c13.key) {
      case o8.Space:
        c13.preventDefault();
        break;
    }
  }), m9 = o4((c13) => {
    if (r3(c13.currentTarget))
      return c13.preventDefault();
    t15.listboxState === 0 ? (p9.closeListbox(), i11.nextFrame(() => {
      var n6;
      return (n6 = t15.buttonRef.current) == null ? void 0 : n6.focus({ preventScroll: true });
    })) : (c13.preventDefault(), p9.openListbox());
  }), P5 = i2(() => {
    if (t15.labelId)
      return [t15.labelId, r10].join(" ");
  }, [t15.labelId, r10]), E6 = D5(() => ({ open: t15.listboxState === 0, disabled: t15.disabled, value: t15.value }), [t15]), L5 = { ref: u8, id: r10, type: s6(e6, t15.buttonRef), "aria-haspopup": "listbox", "aria-controls": (v4 = t15.optionsRef.current) == null ? void 0 : v4.id, "aria-expanded": t15.disabled ? void 0 : t15.listboxState === 0, "aria-labelledby": P5, disabled: t15.disabled, onKeyDown: b4, onKeyUp: R3, onClick: m9 };
  return X({ ourProps: L5, theirProps: l10, slot: E6, defaultTag: Qe2, name: "Listbox.Button" });
}
var Xe3 = "label";
function $e3(e6, a11) {
  let o11 = I(), { id: r10 = `headlessui-listbox-label-${o11}`, ...l10 } = e6, t15 = B("Listbox.Label"), p9 = U3("Listbox.Label"), u8 = y2(t15.labelRef, a11);
  l(() => p9.registerLabel(r10), [r10]);
  let i11 = o4(() => {
    var m9;
    return (m9 = t15.buttonRef.current) == null ? void 0 : m9.focus({ preventScroll: true });
  }), b4 = D5(() => ({ open: t15.listboxState === 0, disabled: t15.disabled }), [t15]);
  return X({ ourProps: { ref: u8, id: r10, onClick: i11 }, theirProps: l10, slot: b4, defaultTag: Xe3, name: "Listbox.Label" });
}
var ze2 = "ul";
var Je3 = S2.RenderStrategy | S2.Static;
function qe2(e6, a11) {
  var c13;
  let o11 = I(), { id: r10 = `headlessui-listbox-options-${o11}`, ...l10 } = e6, t15 = B("Listbox.Options"), p9 = U3("Listbox.Options"), u8 = y2(t15.optionsRef, a11), i11 = p(), b4 = p(), R3 = C(), m9 = (() => R3 !== null ? (R3 & d4.Open) === d4.Open : t15.listboxState === 0)();
  ee2(() => {
    var x6;
    let n6 = t15.optionsRef.current;
    n6 && t15.listboxState === 0 && n6 !== ((x6 = e(n6)) == null ? void 0 : x6.activeElement) && n6.focus({ preventScroll: true });
  }, [t15.listboxState, t15.optionsRef]);
  let P5 = o4((n6) => {
    switch (b4.dispose(), n6.key) {
      case o8.Space:
        if (t15.searchQuery !== "")
          return n6.preventDefault(), n6.stopPropagation(), p9.search(n6.key);
      case o8.Enter:
        if (n6.preventDefault(), n6.stopPropagation(), t15.activeOptionIndex !== null) {
          let { dataRef: x6 } = t15.options[t15.activeOptionIndex];
          p9.onChange(x6.current.value);
        }
        t15.mode === 0 && (p9.closeListbox(), o2().nextFrame(() => {
          var x6;
          return (x6 = t15.buttonRef.current) == null ? void 0 : x6.focus({ preventScroll: true });
        }));
        break;
      case u(t15.orientation, { vertical: o8.ArrowDown, horizontal: o8.ArrowRight }):
        return n6.preventDefault(), n6.stopPropagation(), p9.goToOption(a2.Next);
      case u(t15.orientation, { vertical: o8.ArrowUp, horizontal: o8.ArrowLeft }):
        return n6.preventDefault(), n6.stopPropagation(), p9.goToOption(a2.Previous);
      case o8.Home:
      case o8.PageUp:
        return n6.preventDefault(), n6.stopPropagation(), p9.goToOption(a2.First);
      case o8.End:
      case o8.PageDown:
        return n6.preventDefault(), n6.stopPropagation(), p9.goToOption(a2.Last);
      case o8.Escape:
        return n6.preventDefault(), n6.stopPropagation(), p9.closeListbox(), i11.nextFrame(() => {
          var x6;
          return (x6 = t15.buttonRef.current) == null ? void 0 : x6.focus({ preventScroll: true });
        });
      case o8.Tab:
        n6.preventDefault(), n6.stopPropagation();
        break;
      default:
        n6.key.length === 1 && (p9.search(n6.key), b4.setTimeout(() => p9.clearSearch(), 350));
        break;
    }
  }), E6 = i2(() => {
    var n6, x6, h9;
    return (h9 = (n6 = t15.labelRef.current) == null ? void 0 : n6.id) != null ? h9 : (x6 = t15.buttonRef.current) == null ? void 0 : x6.id;
  }, [t15.labelRef.current, t15.buttonRef.current]), L5 = D5(() => ({ open: t15.listboxState === 0 }), [t15]), v4 = { "aria-activedescendant": t15.activeOptionIndex === null || (c13 = t15.options[t15.activeOptionIndex]) == null ? void 0 : c13.id, "aria-multiselectable": t15.mode === 1 ? true : void 0, "aria-labelledby": E6, "aria-orientation": t15.orientation, id: r10, onKeyDown: P5, role: "listbox", tabIndex: 0, ref: u8 };
  return X({ ourProps: v4, theirProps: l10, slot: L5, defaultTag: ze2, features: Je3, visible: m9, name: "Listbox.Options" });
}
var Ye3 = "li";
function Ze2(e6, a11) {
  let o11 = I(), { id: r10 = `headlessui-listbox-option-${o11}`, disabled: l10 = false, value: t15, ...p9 } = e6, u8 = B("Listbox.Option"), i11 = U3("Listbox.Option"), b4 = u8.activeOptionIndex !== null ? u8.options[u8.activeOptionIndex].id === r10 : false, R3 = u8.isSelected(t15), m9 = I5(null), P5 = s2({ disabled: l10, value: t15, domRef: m9, get textValue() {
    var y7, S10;
    return (S10 = (y7 = m9.current) == null ? void 0 : y7.textContent) == null ? void 0 : S10.toLowerCase();
  } }), E6 = y2(a11, m9);
  l(() => {
    if (u8.listboxState !== 0 || !b4 || u8.activationTrigger === 0)
      return;
    let y7 = o2();
    return y7.requestAnimationFrame(() => {
      var S10, T7;
      (T7 = (S10 = m9.current) == null ? void 0 : S10.scrollIntoView) == null || T7.call(S10, { block: "nearest" });
    }), y7.dispose;
  }, [m9, b4, u8.listboxState, u8.activationTrigger, u8.activeOptionIndex]), l(() => i11.registerOption(r10, P5), [P5, r10]);
  let L5 = o4((y7) => {
    if (l10)
      return y7.preventDefault();
    i11.onChange(t15), u8.mode === 0 && (i11.closeListbox(), o2().nextFrame(() => {
      var S10;
      return (S10 = u8.buttonRef.current) == null ? void 0 : S10.focus({ preventScroll: true });
    }));
  }), v4 = o4(() => {
    if (l10)
      return i11.goToOption(a2.Nothing);
    i11.goToOption(a2.Specific, r10);
  }), c13 = u3(), n6 = o4((y7) => c13.update(y7)), x6 = o4((y7) => {
    c13.wasMoved(y7) && (l10 || b4 || i11.goToOption(a2.Specific, r10, 0));
  }), h9 = o4((y7) => {
    c13.wasMoved(y7) && (l10 || b4 && i11.goToOption(a2.Nothing));
  }), Q6 = D5(() => ({ active: b4, selected: R3, disabled: l10 }), [b4, R3, l10]);
  return X({ ourProps: { id: r10, ref: E6, role: "option", tabIndex: l10 === true ? void 0 : -1, "aria-disabled": l10 === true ? true : void 0, "aria-selected": R3, disabled: void 0, onClick: L5, onFocus: v4, onPointerEnter: n6, onMouseEnter: n6, onPointerMove: x6, onMouseMove: x6, onPointerLeave: h9, onMouseLeave: h9 }, theirProps: p9, slot: Q6, defaultTag: Ye3, name: "Listbox.Option" });
}
var et = D2(Ke3);
var tt = D2(We3);
var ot = D2($e3);
var nt = D2(qe2);
var it = D2(Ze2);
var Ht = Object.assign(et, { Button: tt, Label: ot, Options: nt, Option: it });

// node_modules/@headlessui/react/dist/components/menu/menu.js
import B2, { Fragment as G3, createContext as V2, createRef as N4, useContext as X5, useEffect as $4, useMemo as P3, useReducer as q2, useRef as H5 } from "react";
var pe2 = ((r10) => (r10[r10.Open = 0] = "Open", r10[r10.Closed = 1] = "Closed", r10))(pe2 || {});
var ce2 = ((r10) => (r10[r10.Pointer = 0] = "Pointer", r10[r10.Other = 1] = "Other", r10))(ce2 || {});
var me = ((a11) => (a11[a11.OpenMenu = 0] = "OpenMenu", a11[a11.CloseMenu = 1] = "CloseMenu", a11[a11.GoToItem = 2] = "GoToItem", a11[a11.Search = 3] = "Search", a11[a11.ClearSearch = 4] = "ClearSearch", a11[a11.RegisterItem = 5] = "RegisterItem", a11[a11.UnregisterItem = 6] = "UnregisterItem", a11))(me || {});
function w4(e6, u8 = (r10) => r10) {
  let r10 = e6.activeItemIndex !== null ? e6.items[e6.activeItemIndex] : null, i11 = I2(u8(e6.items.slice()), (t15) => t15.dataRef.current.domRef.current), s17 = r10 ? i11.indexOf(r10) : null;
  return s17 === -1 && (s17 = null), { items: i11, activeItemIndex: s17 };
}
var de = { [1](e6) {
  return e6.menuState === 1 ? e6 : { ...e6, activeItemIndex: null, menuState: 1 };
}, [0](e6) {
  return e6.menuState === 0 ? e6 : { ...e6, menuState: 0 };
}, [2]: (e6, u8) => {
  var s17;
  let r10 = w4(e6), i11 = x(u8, { resolveItems: () => r10.items, resolveActiveIndex: () => r10.activeItemIndex, resolveId: (t15) => t15.id, resolveDisabled: (t15) => t15.dataRef.current.disabled });
  return { ...e6, ...r10, searchQuery: "", activeItemIndex: i11, activationTrigger: (s17 = u8.trigger) != null ? s17 : 1 };
}, [3]: (e6, u8) => {
  let i11 = e6.searchQuery !== "" ? 0 : 1, s17 = e6.searchQuery + u8.value.toLowerCase(), o11 = (e6.activeItemIndex !== null ? e6.items.slice(e6.activeItemIndex + i11).concat(e6.items.slice(0, e6.activeItemIndex + i11)) : e6.items).find((l10) => {
    var m9;
    return ((m9 = l10.dataRef.current.textValue) == null ? void 0 : m9.startsWith(s17)) && !l10.dataRef.current.disabled;
  }), a11 = o11 ? e6.items.indexOf(o11) : -1;
  return a11 === -1 || a11 === e6.activeItemIndex ? { ...e6, searchQuery: s17 } : { ...e6, searchQuery: s17, activeItemIndex: a11, activationTrigger: 1 };
}, [4](e6) {
  return e6.searchQuery === "" ? e6 : { ...e6, searchQuery: "", searchActiveItemIndex: null };
}, [5]: (e6, u8) => {
  let r10 = w4(e6, (i11) => [...i11, { id: u8.id, dataRef: u8.dataRef }]);
  return { ...e6, ...r10 };
}, [6]: (e6, u8) => {
  let r10 = w4(e6, (i11) => {
    let s17 = i11.findIndex((t15) => t15.id === u8.id);
    return s17 !== -1 && i11.splice(s17, 1), i11;
  });
  return { ...e6, ...r10, activationTrigger: 1 };
} };
var U4 = V2(null);
U4.displayName = "MenuContext";
function F5(e6) {
  let u8 = X5(U4);
  if (u8 === null) {
    let r10 = new Error(`<${e6} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r10, F5), r10;
  }
  return u8;
}
function fe2(e6, u8) {
  return u(u8.type, de, e6, u8);
}
var Te2 = G3;
function ye2(e6, u8) {
  let r10 = q2(fe2, { menuState: 1, buttonRef: N4(), itemsRef: N4(), items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1 }), [{ menuState: i11, itemsRef: s17, buttonRef: t15 }, o11] = r10, a11 = y2(u8);
  L([t15, s17], (g4, A7) => {
    var I8;
    o11({ type: 1 }), h(A7, T.Loose) || (g4.preventDefault(), (I8 = t15.current) == null || I8.focus());
  }, i11 === 0);
  let l10 = o4(() => {
    o11({ type: 1 });
  }), m9 = P3(() => ({ open: i11 === 0, close: l10 }), [i11, l10]), M9 = e6, f13 = { ref: a11 };
  return B2.createElement(U4.Provider, { value: r10 }, B2.createElement(c5, { value: u(i11, { [0]: d4.Open, [1]: d4.Closed }) }, X({ ourProps: f13, theirProps: M9, slot: m9, defaultTag: Te2, name: "Menu" })));
}
var Ie2 = "button";
function Me2(e6, u8) {
  var I8;
  let r10 = I(), { id: i11 = `headlessui-menu-button-${r10}`, ...s17 } = e6, [t15, o11] = F5("Menu.Button"), a11 = y2(t15.buttonRef, u8), l10 = p(), m9 = o4((p9) => {
    switch (p9.key) {
      case o8.Space:
      case o8.Enter:
      case o8.ArrowDown:
        p9.preventDefault(), p9.stopPropagation(), o11({ type: 0 }), l10.nextFrame(() => o11({ type: 2, focus: a2.First }));
        break;
      case o8.ArrowUp:
        p9.preventDefault(), p9.stopPropagation(), o11({ type: 0 }), l10.nextFrame(() => o11({ type: 2, focus: a2.Last }));
        break;
    }
  }), M9 = o4((p9) => {
    switch (p9.key) {
      case o8.Space:
        p9.preventDefault();
        break;
    }
  }), f13 = o4((p9) => {
    if (r3(p9.currentTarget))
      return p9.preventDefault();
    e6.disabled || (t15.menuState === 0 ? (o11({ type: 1 }), l10.nextFrame(() => {
      var R3;
      return (R3 = t15.buttonRef.current) == null ? void 0 : R3.focus({ preventScroll: true });
    })) : (p9.preventDefault(), o11({ type: 0 })));
  }), g4 = P3(() => ({ open: t15.menuState === 0 }), [t15]), A7 = { ref: a11, id: i11, type: s6(e6, t15.buttonRef), "aria-haspopup": "menu", "aria-controls": (I8 = t15.itemsRef.current) == null ? void 0 : I8.id, "aria-expanded": e6.disabled ? void 0 : t15.menuState === 0, onKeyDown: m9, onKeyUp: M9, onClick: f13 };
  return X({ ourProps: A7, theirProps: s17, slot: g4, defaultTag: Ie2, name: "Menu.Button" });
}
var ge4 = "div";
var Re2 = S2.RenderStrategy | S2.Static;
function Ae(e6, u8) {
  var R3, E6;
  let r10 = I(), { id: i11 = `headlessui-menu-items-${r10}`, ...s17 } = e6, [t15, o11] = F5("Menu.Items"), a11 = y2(t15.itemsRef, u8), l10 = n4(t15.itemsRef), m9 = p(), M9 = C(), f13 = (() => M9 !== null ? (M9 & d4.Open) === d4.Open : t15.menuState === 0)();
  $4(() => {
    let n6 = t15.itemsRef.current;
    n6 && t15.menuState === 0 && n6 !== (l10 == null ? void 0 : l10.activeElement) && n6.focus({ preventScroll: true });
  }, [t15.menuState, t15.itemsRef, l10]), F2({ container: t15.itemsRef.current, enabled: t15.menuState === 0, accept(n6) {
    return n6.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : n6.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(n6) {
    n6.setAttribute("role", "none");
  } });
  let g4 = o4((n6) => {
    var S10, O4;
    switch (m9.dispose(), n6.key) {
      case o8.Space:
        if (t15.searchQuery !== "")
          return n6.preventDefault(), n6.stopPropagation(), o11({ type: 3, value: n6.key });
      case o8.Enter:
        if (n6.preventDefault(), n6.stopPropagation(), o11({ type: 1 }), t15.activeItemIndex !== null) {
          let { dataRef: c13 } = t15.items[t15.activeItemIndex];
          (O4 = (S10 = c13.current) == null ? void 0 : S10.domRef.current) == null || O4.click();
        }
        D(t15.buttonRef.current);
        break;
      case o8.ArrowDown:
        return n6.preventDefault(), n6.stopPropagation(), o11({ type: 2, focus: a2.Next });
      case o8.ArrowUp:
        return n6.preventDefault(), n6.stopPropagation(), o11({ type: 2, focus: a2.Previous });
      case o8.Home:
      case o8.PageUp:
        return n6.preventDefault(), n6.stopPropagation(), o11({ type: 2, focus: a2.First });
      case o8.End:
      case o8.PageDown:
        return n6.preventDefault(), n6.stopPropagation(), o11({ type: 2, focus: a2.Last });
      case o8.Escape:
        n6.preventDefault(), n6.stopPropagation(), o11({ type: 1 }), o2().nextFrame(() => {
          var c13;
          return (c13 = t15.buttonRef.current) == null ? void 0 : c13.focus({ preventScroll: true });
        });
        break;
      case o8.Tab:
        n6.preventDefault(), n6.stopPropagation(), o11({ type: 1 }), o2().nextFrame(() => {
          _(t15.buttonRef.current, n6.shiftKey ? M.Previous : M.Next);
        });
        break;
      default:
        n6.key.length === 1 && (o11({ type: 3, value: n6.key }), m9.setTimeout(() => o11({ type: 4 }), 350));
        break;
    }
  }), A7 = o4((n6) => {
    switch (n6.key) {
      case o8.Space:
        n6.preventDefault();
        break;
    }
  }), I8 = P3(() => ({ open: t15.menuState === 0 }), [t15]), p9 = { "aria-activedescendant": t15.activeItemIndex === null || (R3 = t15.items[t15.activeItemIndex]) == null ? void 0 : R3.id, "aria-labelledby": (E6 = t15.buttonRef.current) == null ? void 0 : E6.id, id: i11, onKeyDown: g4, onKeyUp: A7, role: "menu", tabIndex: 0, ref: a11 };
  return X({ ourProps: p9, theirProps: s17, slot: I8, defaultTag: ge4, features: Re2, visible: f13, name: "Menu.Items" });
}
var be = G3;
function Ee(e6, u8) {
  let r10 = I(), { id: i11 = `headlessui-menu-item-${r10}`, disabled: s17 = false, ...t15 } = e6, [o11, a11] = F5("Menu.Item"), l10 = o11.activeItemIndex !== null ? o11.items[o11.activeItemIndex].id === i11 : false, m9 = H5(null), M9 = y2(u8, m9);
  l(() => {
    if (o11.menuState !== 0 || !l10 || o11.activationTrigger === 0)
      return;
    let c13 = o2();
    return c13.requestAnimationFrame(() => {
      var b4, _6;
      (_6 = (b4 = m9.current) == null ? void 0 : b4.scrollIntoView) == null || _6.call(b4, { block: "nearest" });
    }), c13.dispose;
  }, [m9, l10, o11.menuState, o11.activationTrigger, o11.activeItemIndex]);
  let f13 = H5({ disabled: s17, domRef: m9 });
  l(() => {
    f13.current.disabled = s17;
  }, [f13, s17]), l(() => {
    var c13, b4;
    f13.current.textValue = (b4 = (c13 = m9.current) == null ? void 0 : c13.textContent) == null ? void 0 : b4.toLowerCase();
  }, [f13, m9]), l(() => (a11({ type: 5, id: i11, dataRef: f13 }), () => a11({ type: 6, id: i11 })), [f13, i11]);
  let g4 = o4(() => {
    a11({ type: 1 });
  }), A7 = o4((c13) => {
    if (s17)
      return c13.preventDefault();
    a11({ type: 1 }), D(o11.buttonRef.current);
  }), I8 = o4(() => {
    if (s17)
      return a11({ type: 2, focus: a2.Nothing });
    a11({ type: 2, focus: a2.Specific, id: i11 });
  }), p9 = u3(), R3 = o4((c13) => p9.update(c13)), E6 = o4((c13) => {
    p9.wasMoved(c13) && (s17 || l10 || a11({ type: 2, focus: a2.Specific, id: i11, trigger: 0 }));
  }), n6 = o4((c13) => {
    p9.wasMoved(c13) && (s17 || l10 && a11({ type: 2, focus: a2.Nothing }));
  }), S10 = P3(() => ({ active: l10, disabled: s17, close: g4 }), [l10, s17, g4]);
  return X({ ourProps: { id: i11, ref: M9, role: "menuitem", tabIndex: s17 === true ? void 0 : -1, "aria-disabled": s17 === true ? true : void 0, disabled: void 0, onClick: A7, onFocus: I8, onPointerEnter: R3, onMouseEnter: R3, onPointerMove: E6, onMouseMove: E6, onPointerLeave: n6, onMouseLeave: n6 }, theirProps: t15, slot: S10, defaultTag: be, name: "Menu.Item" });
}
var Se2 = D2(ye2);
var Pe = D2(Me2);
var ve = D2(Ae);
var xe4 = D2(Ee);
var ot2 = Object.assign(Se2, { Button: Pe, Items: ve, Item: xe4 });

// node_modules/@headlessui/react/dist/components/popover/popover.js
import I6, { createContext as X6, createRef as ue3, useContext as Y4, useEffect as q3, useMemo as D6, useReducer as me2, useRef as V3, useState as ie2 } from "react";
var Fe2 = ((s17) => (s17[s17.Open = 0] = "Open", s17[s17.Closed = 1] = "Closed", s17))(Fe2 || {});
var Ie3 = ((t15) => (t15[t15.TogglePopover = 0] = "TogglePopover", t15[t15.ClosePopover = 1] = "ClosePopover", t15[t15.SetButton = 2] = "SetButton", t15[t15.SetButtonId = 3] = "SetButtonId", t15[t15.SetPanel = 4] = "SetPanel", t15[t15.SetPanelId = 5] = "SetPanelId", t15))(Ie3 || {});
var xe5 = { [0]: (o11) => ({ ...o11, popoverState: u(o11.popoverState, { [0]: 1, [1]: 0 }) }), [1](o11) {
  return o11.popoverState === 1 ? o11 : { ...o11, popoverState: 1 };
}, [2](o11, l10) {
  return o11.button === l10.button ? o11 : { ...o11, button: l10.button };
}, [3](o11, l10) {
  return o11.buttonId === l10.buttonId ? o11 : { ...o11, buttonId: l10.buttonId };
}, [4](o11, l10) {
  return o11.panel === l10.panel ? o11 : { ...o11, panel: l10.panel };
}, [5](o11, l10) {
  return o11.panelId === l10.panelId ? o11 : { ...o11, panelId: l10.panelId };
} };
var le3 = X6(null);
le3.displayName = "PopoverContext";
function Q3(o11) {
  let l10 = Y4(le3);
  if (l10 === null) {
    let s17 = new Error(`<${o11} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(s17, Q3), s17;
  }
  return l10;
}
var ae2 = X6(null);
ae2.displayName = "PopoverAPIContext";
function pe3(o11) {
  let l10 = Y4(ae2);
  if (l10 === null) {
    let s17 = new Error(`<${o11} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(s17, pe3), s17;
  }
  return l10;
}
var se3 = X6(null);
se3.displayName = "PopoverGroupContext";
function ve2() {
  return Y4(se3);
}
var Z4 = X6(null);
Z4.displayName = "PopoverPanelContext";
function Le2() {
  return Y4(Z4);
}
function Me3(o11, l10) {
  return u(l10.type, xe5, o11, l10);
}
var Be3 = "div";
function De(o11, l10) {
  var B4;
  let s17 = V3(null), R3 = y2(l10, T2((e6) => {
    s17.current = e6;
  })), C4 = V3([]), r10 = me2(Me3, { popoverState: 1, buttons: C4, button: null, buttonId: null, panel: null, panelId: null, beforePanelSentinel: ue3(), afterPanelSentinel: ue3() }), [{ popoverState: t15, button: a11, buttonId: v4, panel: f13, panelId: F9, beforePanelSentinel: T7, afterPanelSentinel: d15 }, i11] = r10, p9 = n4((B4 = s17.current) != null ? B4 : a11), P5 = D6(() => {
    if (!a11 || !f13)
      return false;
    for (let N5 of document.querySelectorAll("body > *"))
      if (Number(N5 == null ? void 0 : N5.contains(a11)) ^ Number(N5 == null ? void 0 : N5.contains(f13)))
        return true;
    let e6 = f(), n6 = e6.indexOf(a11), A7 = (n6 + e6.length - 1) % e6.length, g4 = (n6 + 1) % e6.length, G4 = e6[A7], Te4 = e6[g4];
    return !f13.contains(G4) && !f13.contains(Te4);
  }, [a11, f13]), S10 = s2(v4), y7 = s2(F9), x6 = D6(() => ({ buttonId: S10, panelId: y7, close: () => i11({ type: 1 }) }), [S10, y7, i11]), O4 = ve2(), L5 = O4 == null ? void 0 : O4.registerPopover, j5 = o4(() => {
    var e6;
    return (e6 = O4 == null ? void 0 : O4.isFocusWithinPopoverGroup()) != null ? e6 : (p9 == null ? void 0 : p9.activeElement) && ((a11 == null ? void 0 : a11.contains(p9.activeElement)) || (f13 == null ? void 0 : f13.contains(p9.activeElement)));
  });
  q3(() => L5 == null ? void 0 : L5(x6), [L5, x6]), E3(p9 == null ? void 0 : p9.defaultView, "focus", (e6) => {
    var n6, A7, g4, G4;
    t15 === 0 && (j5() || a11 && f13 && e6.target !== window && ((A7 = (n6 = T7.current) == null ? void 0 : n6.contains) != null && A7.call(n6, e6.target) || (G4 = (g4 = d15.current) == null ? void 0 : g4.contains) != null && G4.call(g4, e6.target) || i11({ type: 1 })));
  }, true), L([a11, f13], (e6, n6) => {
    i11({ type: 1 }), h(n6, T.Loose) || (e6.preventDefault(), a11 == null || a11.focus());
  }, t15 === 0);
  let M9 = o4((e6) => {
    i11({ type: 1 });
    let n6 = (() => e6 ? e6 instanceof HTMLElement ? e6 : "current" in e6 && e6.current instanceof HTMLElement ? e6.current : a11 : a11)();
    n6 == null || n6.focus();
  }), u8 = D6(() => ({ close: M9, isPortalled: P5 }), [M9, P5]), m9 = D6(() => ({ open: t15 === 0, close: M9 }), [t15, M9]), E6 = o11, c13 = { ref: R3 };
  return I6.createElement(Z4.Provider, { value: null }, I6.createElement(le3.Provider, { value: r10 }, I6.createElement(ae2.Provider, { value: u8 }, I6.createElement(c5, { value: u(t15, { [0]: d4.Open, [1]: d4.Closed }) }, X({ ourProps: c13, theirProps: E6, slot: m9, defaultTag: Be3, name: "Popover" })))));
}
var he = "button";
function He4(o11, l10) {
  let s17 = I(), { id: R3 = `headlessui-popover-button-${s17}`, ...C4 } = o11, [r10, t15] = Q3("Popover.Button"), { isPortalled: a11 } = pe3("Popover.Button"), v4 = V3(null), f13 = `headlessui-focus-sentinel-${I()}`, F9 = ve2(), T7 = F9 == null ? void 0 : F9.closeOthers, i11 = Le2() !== null;
  q3(() => {
    if (!i11)
      return t15({ type: 3, buttonId: R3 }), () => {
        t15({ type: 3, buttonId: null });
      };
  }, [i11, R3, t15]);
  let [p9] = ie2(() => Symbol()), P5 = y2(v4, l10, i11 ? null : (e6) => {
    if (e6)
      r10.buttons.current.push(p9);
    else {
      let n6 = r10.buttons.current.indexOf(p9);
      n6 !== -1 && r10.buttons.current.splice(n6, 1);
    }
    r10.buttons.current.length > 1 && console.warn("You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."), e6 && t15({ type: 2, button: e6 });
  }), S10 = y2(v4, l10), y7 = n4(v4), x6 = o4((e6) => {
    var n6, A7, g4;
    if (i11) {
      if (r10.popoverState === 1)
        return;
      switch (e6.key) {
        case o8.Space:
        case o8.Enter:
          e6.preventDefault(), (A7 = (n6 = e6.target).click) == null || A7.call(n6), t15({ type: 1 }), (g4 = r10.button) == null || g4.focus();
          break;
      }
    } else
      switch (e6.key) {
        case o8.Space:
        case o8.Enter:
          e6.preventDefault(), e6.stopPropagation(), r10.popoverState === 1 && (T7 == null || T7(r10.buttonId)), t15({ type: 0 });
          break;
        case o8.Escape:
          if (r10.popoverState !== 0)
            return T7 == null ? void 0 : T7(r10.buttonId);
          if (!v4.current || y7 != null && y7.activeElement && !v4.current.contains(y7.activeElement))
            return;
          e6.preventDefault(), e6.stopPropagation(), t15({ type: 1 });
          break;
      }
  }), O4 = o4((e6) => {
    i11 || e6.key === o8.Space && e6.preventDefault();
  }), L5 = o4((e6) => {
    var n6, A7;
    r3(e6.currentTarget) || o11.disabled || (i11 ? (t15({ type: 1 }), (n6 = r10.button) == null || n6.focus()) : (e6.preventDefault(), e6.stopPropagation(), r10.popoverState === 1 && (T7 == null || T7(r10.buttonId)), t15({ type: 0 }), (A7 = r10.button) == null || A7.focus()));
  }), j5 = o4((e6) => {
    e6.preventDefault(), e6.stopPropagation();
  }), M9 = r10.popoverState === 0, u8 = D6(() => ({ open: M9 }), [M9]), m9 = s6(o11, v4), E6 = i11 ? { ref: S10, type: m9, onKeyDown: x6, onClick: L5 } : { ref: P5, id: r10.buttonId, type: m9, "aria-expanded": o11.disabled ? void 0 : r10.popoverState === 0, "aria-controls": r10.panel ? r10.panelId : void 0, onKeyDown: x6, onKeyUp: O4, onClick: L5, onMouseDown: j5 }, c13 = n3(), B4 = o4(() => {
    let e6 = r10.panel;
    if (!e6)
      return;
    function n6() {
      u(c13.current, { [s11.Forwards]: () => O(e6, M.First), [s11.Backwards]: () => O(e6, M.Last) }) === N.Error && O(f().filter((g4) => g4.dataset.headlessuiFocusGuard !== "true"), u(c13.current, { [s11.Forwards]: M.Next, [s11.Backwards]: M.Previous }), { relativeTo: r10.button });
    }
    n6();
  });
  return I6.createElement(I6.Fragment, null, X({ ourProps: E6, theirProps: C4, slot: u8, defaultTag: he, name: "Popover.Button" }), M9 && !i11 && a11 && I6.createElement(c4, { id: f13, features: p3.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: B4 }));
}
var Ge4 = "div";
var _e2 = S2.RenderStrategy | S2.Static;
function ke3(o11, l10) {
  let s17 = I(), { id: R3 = `headlessui-popover-overlay-${s17}`, ...C4 } = o11, [{ popoverState: r10 }, t15] = Q3("Popover.Overlay"), a11 = y2(l10), v4 = C(), f13 = (() => v4 !== null ? (v4 & d4.Open) === d4.Open : r10 === 0)(), F9 = o4((i11) => {
    if (r3(i11.currentTarget))
      return i11.preventDefault();
    t15({ type: 1 });
  }), T7 = D6(() => ({ open: r10 === 0 }), [r10]);
  return X({ ourProps: { ref: a11, id: R3, "aria-hidden": true, onClick: F9 }, theirProps: C4, slot: T7, defaultTag: Ge4, features: _e2, visible: f13, name: "Popover.Overlay" });
}
var we3 = "div";
var Ne4 = S2.RenderStrategy | S2.Static;
function Ue4(o11, l10) {
  let s17 = I(), { id: R3 = `headlessui-popover-panel-${s17}`, focus: C4 = false, ...r10 } = o11, [t15, a11] = Q3("Popover.Panel"), { close: v4, isPortalled: f13 } = pe3("Popover.Panel"), F9 = `headlessui-focus-sentinel-before-${I()}`, T7 = `headlessui-focus-sentinel-after-${I()}`, d15 = V3(null), i11 = y2(d15, l10, (u8) => {
    a11({ type: 4, panel: u8 });
  }), p9 = n4(d15);
  l(() => (a11({ type: 5, panelId: R3 }), () => {
    a11({ type: 5, panelId: null });
  }), [R3, a11]);
  let P5 = C(), S10 = (() => P5 !== null ? (P5 & d4.Open) === d4.Open : t15.popoverState === 0)(), y7 = o4((u8) => {
    var m9;
    switch (u8.key) {
      case o8.Escape:
        if (t15.popoverState !== 0 || !d15.current || p9 != null && p9.activeElement && !d15.current.contains(p9.activeElement))
          return;
        u8.preventDefault(), u8.stopPropagation(), a11({ type: 1 }), (m9 = t15.button) == null || m9.focus();
        break;
    }
  });
  q3(() => {
    var u8;
    o11.static || t15.popoverState === 1 && ((u8 = o11.unmount) == null || u8) && a11({ type: 4, panel: null });
  }, [t15.popoverState, o11.unmount, o11.static, a11]), q3(() => {
    if (!C4 || t15.popoverState !== 0 || !d15.current)
      return;
    let u8 = p9 == null ? void 0 : p9.activeElement;
    d15.current.contains(u8) || O(d15.current, M.First);
  }, [C4, d15, t15.popoverState]);
  let x6 = D6(() => ({ open: t15.popoverState === 0, close: v4 }), [t15, v4]), O4 = { ref: i11, id: R3, onKeyDown: y7, onBlur: C4 && t15.popoverState === 0 ? (u8) => {
    var E6, c13, B4, e6, n6;
    let m9 = u8.relatedTarget;
    m9 && d15.current && ((E6 = d15.current) != null && E6.contains(m9) || (a11({ type: 1 }), ((B4 = (c13 = t15.beforePanelSentinel.current) == null ? void 0 : c13.contains) != null && B4.call(c13, m9) || (n6 = (e6 = t15.afterPanelSentinel.current) == null ? void 0 : e6.contains) != null && n6.call(e6, m9)) && m9.focus({ preventScroll: true })));
  } : void 0, tabIndex: -1 }, L5 = n3(), j5 = o4(() => {
    let u8 = d15.current;
    if (!u8)
      return;
    function m9() {
      u(L5.current, { [s11.Forwards]: () => {
        var c13;
        O(u8, M.First) === N.Error && ((c13 = t15.afterPanelSentinel.current) == null || c13.focus());
      }, [s11.Backwards]: () => {
        var E6;
        (E6 = t15.button) == null || E6.focus({ preventScroll: true });
      } });
    }
    m9();
  }), M9 = o4(() => {
    let u8 = d15.current;
    if (!u8)
      return;
    function m9() {
      u(L5.current, { [s11.Forwards]: () => {
        var A7;
        if (!t15.button)
          return;
        let E6 = f(), c13 = E6.indexOf(t15.button), B4 = E6.slice(0, c13 + 1), n6 = [...E6.slice(c13 + 1), ...B4];
        for (let g4 of n6.slice())
          if (g4.dataset.headlessuiFocusGuard === "true" || (A7 = t15.panel) != null && A7.contains(g4)) {
            let G4 = n6.indexOf(g4);
            G4 !== -1 && n6.splice(G4, 1);
          }
        O(n6, M.First, { sorted: false });
      }, [s11.Backwards]: () => {
        var c13;
        O(u8, M.Previous) === N.Error && ((c13 = t15.button) == null || c13.focus());
      } });
    }
    m9();
  });
  return I6.createElement(Z4.Provider, { value: R3 }, S10 && f13 && I6.createElement(c4, { id: F9, ref: t15.beforePanelSentinel, features: p3.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: j5 }), X({ ourProps: O4, theirProps: r10, slot: x6, defaultTag: we3, features: Ne4, visible: S10, name: "Popover.Panel" }), S10 && f13 && I6.createElement(c4, { id: T7, ref: t15.afterPanelSentinel, features: p3.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: M9 }));
}
var Ke4 = "div";
function We4(o11, l10) {
  let s17 = V3(null), R3 = y2(s17, l10), [C4, r10] = ie2([]), t15 = o4((p9) => {
    r10((P5) => {
      let S10 = P5.indexOf(p9);
      if (S10 !== -1) {
        let y7 = P5.slice();
        return y7.splice(S10, 1), y7;
      }
      return P5;
    });
  }), a11 = o4((p9) => (r10((P5) => [...P5, p9]), () => t15(p9))), v4 = o4(() => {
    var S10;
    let p9 = e(s17);
    if (!p9)
      return false;
    let P5 = p9.activeElement;
    return (S10 = s17.current) != null && S10.contains(P5) ? true : C4.some((y7) => {
      var x6, O4;
      return ((x6 = p9.getElementById(y7.buttonId.current)) == null ? void 0 : x6.contains(P5)) || ((O4 = p9.getElementById(y7.panelId.current)) == null ? void 0 : O4.contains(P5));
    });
  }), f13 = o4((p9) => {
    for (let P5 of C4)
      P5.buttonId.current !== p9 && P5.close();
  }), F9 = D6(() => ({ registerPopover: a11, unregisterPopover: t15, isFocusWithinPopoverGroup: v4, closeOthers: f13 }), [a11, t15, v4, f13]), T7 = D6(() => ({}), []), d15 = o11, i11 = { ref: R3 };
  return I6.createElement(se3.Provider, { value: F9 }, X({ ourProps: i11, theirProps: d15, slot: T7, defaultTag: Ke4, name: "Popover.Group" }));
}
var je4 = D2(De);
var Ve4 = D2(He4);
var $e4 = D2(ke3);
var Je4 = D2(Ue4);
var Xe4 = D2(We4);
var Lt = Object.assign(je4, { Button: Ve4, Overlay: $e4, Panel: Je4, Group: Xe4 });

// node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
import O3, { createContext as J2, useContext as V4, useMemo as A4, useReducer as se4, useRef as j4, useEffect as ue4 } from "react";

// node_modules/@headlessui/react/dist/hooks/use-flags.js
import { useState as f9, useCallback as n5 } from "react";
function c11(a11 = 0) {
  let [l10, r10] = f9(a11), t15 = f6(), o11 = n5((e6) => {
    t15.current && r10((u8) => u8 | e6);
  }, [l10, t15]), m9 = n5((e6) => Boolean(l10 & e6), [l10]), s17 = n5((e6) => {
    t15.current && r10((u8) => u8 & ~e6);
  }, [r10, t15]), g4 = n5((e6) => {
    t15.current && r10((u8) => u8 ^ e6);
  }, [r10]);
  return { flags: l10, addFlag: o11, hasFlag: m9, removeFlag: s17, toggleFlag: g4 };
}

// node_modules/@headlessui/react/dist/components/label/label.js
import c12, { createContext as m8, useContext as L4, useMemo as f10, useState as b3 } from "react";
var d11 = m8(null);
function u7() {
  let o11 = L4(d11);
  if (o11 === null) {
    let t15 = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t15, u7), t15;
  }
  return o11;
}
function H6() {
  let [o11, t15] = b3([]);
  return [o11.length > 0 ? o11.join(" ") : void 0, f10(() => function(e6) {
    let s17 = o4((r10) => (t15((l10) => [...l10, r10]), () => t15((l10) => {
      let n6 = l10.slice(), p9 = n6.indexOf(r10);
      return p9 !== -1 && n6.splice(p9, 1), n6;
    }))), a11 = f10(() => ({ register: s17, slot: e6.slot, name: e6.name, props: e6.props }), [s17, e6.slot, e6.name, e6.props]);
    return c12.createElement(d11.Provider, { value: a11 }, e6.children);
  }, [t15])];
}
var A3 = "label";
function h8(o11, t15) {
  let i11 = I(), { id: e6 = `headlessui-label-${i11}`, passive: s17 = false, ...a11 } = o11, r10 = u7(), l10 = y2(t15);
  l(() => r10.register(e6), [e6, r10.register]);
  let n6 = { ref: l10, ...r10.props, id: e6 };
  return s17 && ("onClick" in n6 && (delete n6.htmlFor, delete n6.onClick), "onClick" in a11 && delete a11.onClick), X({ ourProps: n6, theirProps: a11, slot: r10.slot || {}, defaultTag: A3, name: r10.name || "Label" });
}
var v2 = D2(h8);
var M6 = Object.assign(v2, {});

// node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var Ce2 = ((t15) => (t15[t15.RegisterOption = 0] = "RegisterOption", t15[t15.UnregisterOption = 1] = "UnregisterOption", t15))(Ce2 || {});
var ke4 = { [0](r10, o11) {
  let t15 = [...r10.options, { id: o11.id, element: o11.element, propsRef: o11.propsRef }];
  return { ...r10, options: I2(t15, (p9) => p9.element.current) };
}, [1](r10, o11) {
  let t15 = r10.options.slice(), p9 = r10.options.findIndex((T7) => T7.id === o11.id);
  return p9 === -1 ? r10 : (t15.splice(p9, 1), { ...r10, options: t15 });
} };
var B3 = J2(null);
B3.displayName = "RadioGroupDataContext";
function oe2(r10) {
  let o11 = V4(B3);
  if (o11 === null) {
    let t15 = new Error(`<${r10} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, oe2), t15;
  }
  return o11;
}
var $5 = J2(null);
$5.displayName = "RadioGroupActionsContext";
function ne2(r10) {
  let o11 = V4($5);
  if (o11 === null) {
    let t15 = new Error(`<${r10} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, ne2), t15;
  }
  return o11;
}
function Le3(r10, o11) {
  return u(o11.type, ke4, r10, o11);
}
var he2 = "div";
function Fe3(r10, o11) {
  let t15 = I(), { id: p9 = `headlessui-radiogroup-${t15}`, value: T7, defaultValue: v4, form: S10, name: m9, onChange: M9, by: G4 = (e6, i11) => e6 === i11, disabled: C4 = false, ...H8 } = r10, y7 = o4(typeof G4 == "string" ? (e6, i11) => {
    let n6 = G4;
    return (e6 == null ? void 0 : e6[n6]) === (i11 == null ? void 0 : i11[n6]);
  } : G4), [P5, h9] = se4(Le3, { options: [] }), a11 = P5.options, [N5, R3] = H6(), [k2, U5] = M2(), L5 = j4(null), W = y2(L5, o11), [l10, s17] = T4(T7, M9, v4), b4 = A4(() => a11.find((e6) => !e6.propsRef.current.disabled), [a11]), F9 = A4(() => a11.some((e6) => y7(e6.propsRef.current.value, l10)), [a11, l10]), d15 = o4((e6) => {
    var n6;
    if (C4 || y7(e6, l10))
      return false;
    let i11 = (n6 = a11.find((f13) => y7(f13.propsRef.current.value, e6))) == null ? void 0 : n6.propsRef.current;
    return i11 != null && i11.disabled ? false : (s17 == null || s17(e6), true);
  });
  F2({ container: L5.current, accept(e6) {
    return e6.getAttribute("role") === "radio" ? NodeFilter.FILTER_REJECT : e6.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(e6) {
    e6.setAttribute("role", "none");
  } });
  let x6 = o4((e6) => {
    let i11 = L5.current;
    if (!i11)
      return;
    let n6 = e(i11), f13 = a11.filter((u8) => u8.propsRef.current.disabled === false).map((u8) => u8.element.current);
    switch (e6.key) {
      case o8.Enter:
        p2(e6.currentTarget);
        break;
      case o8.ArrowLeft:
      case o8.ArrowUp:
        if (e6.preventDefault(), e6.stopPropagation(), O(f13, M.Previous | M.WrapAround) === N.Success) {
          let g4 = a11.find((K4) => K4.element.current === (n6 == null ? void 0 : n6.activeElement));
          g4 && d15(g4.propsRef.current.value);
        }
        break;
      case o8.ArrowRight:
      case o8.ArrowDown:
        if (e6.preventDefault(), e6.stopPropagation(), O(f13, M.Next | M.WrapAround) === N.Success) {
          let g4 = a11.find((K4) => K4.element.current === (n6 == null ? void 0 : n6.activeElement));
          g4 && d15(g4.propsRef.current.value);
        }
        break;
      case o8.Space:
        {
          e6.preventDefault(), e6.stopPropagation();
          let u8 = a11.find((g4) => g4.element.current === (n6 == null ? void 0 : n6.activeElement));
          u8 && d15(u8.propsRef.current.value);
        }
        break;
    }
  }), c13 = o4((e6) => (h9({ type: 0, ...e6 }), () => h9({ type: 1, id: e6.id }))), _6 = A4(() => ({ value: l10, firstOption: b4, containsCheckedOption: F9, disabled: C4, compare: y7, ...P5 }), [l10, b4, F9, C4, y7, P5]), ie4 = A4(() => ({ registerOption: c13, change: d15 }), [c13, d15]), ae3 = { ref: W, id: p9, role: "radiogroup", "aria-labelledby": N5, "aria-describedby": k2, onKeyDown: x6 }, pe4 = A4(() => ({ value: l10 }), [l10]), w5 = j4(null), le4 = p();
  return ue4(() => {
    w5.current && v4 !== void 0 && le4.addEventListener(w5.current, "reset", () => {
      d15(v4);
    });
  }, [w5, d15]), O3.createElement(U5, { name: "RadioGroup.Description" }, O3.createElement(R3, { name: "RadioGroup.Label" }, O3.createElement($5.Provider, { value: ie4 }, O3.createElement(B3.Provider, { value: _6 }, m9 != null && l10 != null && e3({ [m9]: l10 }).map(([e6, i11], n6) => O3.createElement(c4, { features: p3.Hidden, ref: n6 === 0 ? (f13) => {
    var u8;
    w5.current = (u8 = f13 == null ? void 0 : f13.closest("form")) != null ? u8 : null;
  } : void 0, ...R({ key: e6, as: "input", type: "radio", checked: i11 != null, hidden: true, readOnly: true, form: S10, name: e6, value: i11 }) })), X({ ourProps: ae3, theirProps: H8, slot: pe4, defaultTag: he2, name: "RadioGroup" })))));
}
var xe6 = ((t15) => (t15[t15.Empty = 1] = "Empty", t15[t15.Active = 2] = "Active", t15))(xe6 || {});
var _e3 = "div";
function we4(r10, o11) {
  var x6;
  let t15 = I(), { id: p9 = `headlessui-radiogroup-option-${t15}`, value: T7, disabled: v4 = false, ...S10 } = r10, m9 = j4(null), M9 = y2(m9, o11), [G4, C4] = H6(), [H8, y7] = M2(), { addFlag: P5, removeFlag: h9, hasFlag: a11 } = c11(1), N5 = s2({ value: T7, disabled: v4 }), R3 = oe2("RadioGroup.Option"), k2 = ne2("RadioGroup.Option");
  l(() => k2.registerOption({ id: p9, element: m9, propsRef: N5 }), [p9, k2, m9, r10]);
  let U5 = o4((c13) => {
    var _6;
    if (r3(c13.currentTarget))
      return c13.preventDefault();
    k2.change(T7) && (P5(2), (_6 = m9.current) == null || _6.focus());
  }), L5 = o4((c13) => {
    if (r3(c13.currentTarget))
      return c13.preventDefault();
    P5(2);
  }), W = o4(() => h9(2)), l10 = ((x6 = R3.firstOption) == null ? void 0 : x6.id) === p9, s17 = R3.disabled || v4, b4 = R3.compare(R3.value, T7), F9 = { ref: M9, id: p9, role: "radio", "aria-checked": b4 ? "true" : "false", "aria-labelledby": G4, "aria-describedby": H8, "aria-disabled": s17 ? true : void 0, tabIndex: (() => s17 ? -1 : b4 || !R3.containsCheckedOption && l10 ? 0 : -1)(), onClick: s17 ? void 0 : U5, onFocus: s17 ? void 0 : L5, onBlur: s17 ? void 0 : W }, d15 = A4(() => ({ checked: b4, disabled: s17, active: a11(2) }), [b4, s17, a11]);
  return O3.createElement(y7, { name: "RadioGroup.Description" }, O3.createElement(C4, { name: "RadioGroup.Label" }, X({ ourProps: F9, theirProps: S10, slot: d15, defaultTag: _e3, name: "RadioGroup.Option" })));
}
var Ie4 = D2(Fe3);
var Se3 = D2(we4);
var Yt = Object.assign(Ie4, { Option: Se3, Label: M6, Description: b2 });

// node_modules/@headlessui/react/dist/components/switch/switch.js
import i9, { Fragment as x5, createContext as A5, useContext as H7, useMemo as E5, useRef as F6, useState as M7, useEffect as _3 } from "react";
var y5 = A5(null);
y5.displayName = "GroupContext";
var Y5 = x5;
function Z5(s17) {
  var d15;
  let [n6, p9] = M7(null), [c13, f13] = H6(), [r10, h9] = M2(), l10 = E5(() => ({ switch: n6, setSwitch: p9, labelledby: c13, describedby: r10 }), [n6, p9, c13, r10]), T7 = {}, b4 = s17;
  return i9.createElement(h9, { name: "Switch.Description" }, i9.createElement(f13, { name: "Switch.Label", props: { htmlFor: (d15 = l10.switch) == null ? void 0 : d15.id, onClick(t15) {
    n6 && (t15.currentTarget.tagName === "LABEL" && t15.preventDefault(), n6.click(), n6.focus({ preventScroll: true }));
  } } }, i9.createElement(y5.Provider, { value: l10 }, X({ ourProps: T7, theirProps: b4, defaultTag: Y5, name: "Switch.Group" }))));
}
var ee3 = "button";
function te3(s17, n6) {
  let p9 = I(), { id: c13 = `headlessui-switch-${p9}`, checked: f13, defaultChecked: r10 = false, onChange: h9, name: l10, value: T7, form: b4, ...d15 } = s17, t15 = H7(y5), u8 = F6(null), D8 = y2(u8, n6, t15 === null ? null : t15.setSwitch), [o11, a11] = T4(f13, h9, r10), S10 = o4(() => a11 == null ? void 0 : a11(!o11)), C4 = o4((e6) => {
    if (r3(e6.currentTarget))
      return e6.preventDefault();
    e6.preventDefault(), S10();
  }), L5 = o4((e6) => {
    e6.key === o8.Space ? (e6.preventDefault(), S10()) : e6.key === o8.Enter && p2(e6.currentTarget);
  }), v4 = o4((e6) => e6.preventDefault()), G4 = E5(() => ({ checked: o11 }), [o11]), R3 = { id: c13, ref: D8, role: "switch", type: s6(s17, u8), tabIndex: 0, "aria-checked": o11, "aria-labelledby": t15 == null ? void 0 : t15.labelledby, "aria-describedby": t15 == null ? void 0 : t15.describedby, onClick: C4, onKeyUp: L5, onKeyPress: v4 }, k2 = p();
  return _3(() => {
    var w5;
    let e6 = (w5 = u8.current) == null ? void 0 : w5.closest("form");
    e6 && r10 !== void 0 && k2.addEventListener(e6, "reset", () => {
      a11(r10);
    });
  }, [u8, a11]), i9.createElement(i9.Fragment, null, l10 != null && o11 && i9.createElement(c4, { features: p3.Hidden, ...R({ as: "input", type: "checkbox", hidden: true, readOnly: true, form: b4, checked: o11, name: l10, value: T7 }) }), X({ ourProps: R3, theirProps: d15, slot: G4, defaultTag: ee3, name: "Switch" }));
}
var ne3 = D2(te3);
var re3 = Z5;
var Ge5 = Object.assign(ne3, { Group: re3, Label: M6, Description: b2 });

// node_modules/@headlessui/react/dist/components/tabs/tabs.js
import _4, { Fragment as ne4, createContext as V5, useContext as Q4, useMemo as F7, useReducer as re4, useRef as K2 } from "react";

// node_modules/@headlessui/react/dist/internal/focus-sentinel.js
import i10, { useState as s15 } from "react";
function p8({ onFocus: n6 }) {
  let [r10, o11] = s15(true);
  return r10 ? i10.createElement(c4, { as: "button", type: "button", features: p3.Focusable, onFocus: (a11) => {
    a11.preventDefault();
    let e6, u8 = 50;
    function t15() {
      if (u8-- <= 0) {
        e6 && cancelAnimationFrame(e6);
        return;
      }
      if (n6()) {
        o11(false), cancelAnimationFrame(e6);
        return;
      }
      e6 = requestAnimationFrame(t15);
    }
    e6 = requestAnimationFrame(t15);
  } }) : null;
}

// node_modules/@headlessui/react/dist/utils/stable-collection.js
import * as r9 from "react";
var s16 = r9.createContext(null);
function a10() {
  return { groups: /* @__PURE__ */ new Map(), get(n6, t15) {
    var c13;
    let e6 = this.groups.get(n6);
    e6 || (e6 = /* @__PURE__ */ new Map(), this.groups.set(n6, e6));
    let l10 = (c13 = e6.get(t15)) != null ? c13 : 0;
    e6.set(t15, l10 + 1);
    let o11 = Array.from(e6.keys()).indexOf(t15);
    function i11() {
      let u8 = e6.get(t15);
      u8 > 1 ? e6.set(t15, u8 - 1) : e6.delete(t15);
    }
    return [o11, i11];
  } };
}
function C3({ children: n6 }) {
  let t15 = r9.useRef(a10());
  return r9.createElement(s16.Provider, { value: t15 }, n6);
}
function d12(n6) {
  let t15 = r9.useContext(s16);
  if (!t15)
    throw new Error("You must wrap your component in a <StableCollection>");
  let e6 = f11(), [l10, o11] = t15.current.get(n6, e6);
  return r9.useEffect(() => o11, []), l10;
}
function f11() {
  var l10, o11, i11;
  let n6 = (i11 = (o11 = (l10 = r9.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) == null ? void 0 : l10.ReactCurrentOwner) == null ? void 0 : o11.current) != null ? i11 : null;
  if (!n6)
    return Symbol();
  let t15 = [], e6 = n6;
  for (; e6; )
    t15.push(e6.index), e6 = e6.return;
  return "$." + t15.join(".");
}

// node_modules/@headlessui/react/dist/components/tabs/tabs.js
var ue5 = ((t15) => (t15[t15.Forwards = 0] = "Forwards", t15[t15.Backwards = 1] = "Backwards", t15))(ue5 || {});
var Te3 = ((o11) => (o11[o11.Less = -1] = "Less", o11[o11.Equal = 0] = "Equal", o11[o11.Greater = 1] = "Greater", o11))(Te3 || {});
var de2 = ((r10) => (r10[r10.SetSelectedIndex = 0] = "SetSelectedIndex", r10[r10.RegisterTab = 1] = "RegisterTab", r10[r10.UnregisterTab = 2] = "UnregisterTab", r10[r10.RegisterPanel = 3] = "RegisterPanel", r10[r10.UnregisterPanel = 4] = "UnregisterPanel", r10))(de2 || {});
var ce3 = { [0](e6, n6) {
  var u8;
  let t15 = I2(e6.tabs, (T7) => T7.current), o11 = I2(e6.panels, (T7) => T7.current), s17 = t15.filter((T7) => {
    var l10;
    return !((l10 = T7.current) != null && l10.hasAttribute("disabled"));
  }), r10 = { ...e6, tabs: t15, panels: o11 };
  if (n6.index < 0 || n6.index > t15.length - 1) {
    let T7 = u(Math.sign(n6.index - e6.selectedIndex), { [-1]: () => 1, [0]: () => u(Math.sign(n6.index), { [-1]: () => 0, [0]: () => 0, [1]: () => 1 }), [1]: () => 0 });
    return s17.length === 0 ? r10 : { ...r10, selectedIndex: u(T7, { [0]: () => t15.indexOf(s17[0]), [1]: () => t15.indexOf(s17[s17.length - 1]) }) };
  }
  let i11 = t15.slice(0, n6.index), b4 = [...t15.slice(n6.index), ...i11].find((T7) => s17.includes(T7));
  if (!b4)
    return r10;
  let c13 = (u8 = t15.indexOf(b4)) != null ? u8 : e6.selectedIndex;
  return c13 === -1 && (c13 = e6.selectedIndex), { ...r10, selectedIndex: c13 };
}, [1](e6, n6) {
  var r10;
  if (e6.tabs.includes(n6.tab))
    return e6;
  let t15 = e6.tabs[e6.selectedIndex], o11 = I2([...e6.tabs, n6.tab], (i11) => i11.current), s17 = (r10 = o11.indexOf(t15)) != null ? r10 : e6.selectedIndex;
  return s17 === -1 && (s17 = e6.selectedIndex), { ...e6, tabs: o11, selectedIndex: s17 };
}, [2](e6, n6) {
  return { ...e6, tabs: e6.tabs.filter((t15) => t15 !== n6.tab) };
}, [3](e6, n6) {
  return e6.panels.includes(n6.panel) ? e6 : { ...e6, panels: I2([...e6.panels, n6.panel], (t15) => t15.current) };
}, [4](e6, n6) {
  return { ...e6, panels: e6.panels.filter((t15) => t15 !== n6.panel) };
} };
var X7 = V5(null);
X7.displayName = "TabsDataContext";
function M8(e6) {
  let n6 = Q4(X7);
  if (n6 === null) {
    let t15 = new Error(`<${e6} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, M8), t15;
  }
  return n6;
}
var $6 = V5(null);
$6.displayName = "TabsActionsContext";
function q4(e6) {
  let n6 = Q4($6);
  if (n6 === null) {
    let t15 = new Error(`<${e6} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t15, q4), t15;
  }
  return n6;
}
function fe3(e6, n6) {
  return u(n6.type, ce3, e6, n6);
}
var be2 = ne4;
function me3(e6, n6) {
  let { defaultIndex: t15 = 0, vertical: o11 = false, manual: s17 = false, onChange: r10, selectedIndex: i11 = null, ...R3 } = e6;
  const b4 = o11 ? "vertical" : "horizontal", c13 = s17 ? "manual" : "auto";
  let u8 = i11 !== null, T7 = y2(n6), [l10, d15] = re4(fe3, { selectedIndex: i11 != null ? i11 : t15, tabs: [], panels: [] }), y7 = F7(() => ({ selectedIndex: l10.selectedIndex }), [l10.selectedIndex]), m9 = s2(r10 || (() => {
  })), x6 = s2(l10.tabs), E6 = F7(() => ({ orientation: b4, activation: c13, ...l10 }), [b4, c13, l10]), S10 = o4((p9) => (d15({ type: 1, tab: p9 }), () => d15({ type: 2, tab: p9 }))), A7 = o4((p9) => (d15({ type: 3, panel: p9 }), () => d15({ type: 4, panel: p9 }))), L5 = o4((p9) => {
    C4.current !== p9 && m9.current(p9), u8 || d15({ type: 0, index: p9 });
  }), C4 = s2(u8 ? e6.selectedIndex : l10.selectedIndex), N5 = F7(() => ({ registerTab: S10, registerPanel: A7, change: L5 }), []);
  l(() => {
    d15({ type: 0, index: i11 != null ? i11 : t15 });
  }, [i11]), l(() => {
    if (C4.current === void 0 || l10.tabs.length <= 0)
      return;
    let p9 = I2(l10.tabs, (a11) => a11.current);
    p9.some((a11, f13) => l10.tabs[f13] !== a11) && L5(p9.indexOf(l10.tabs[C4.current]));
  });
  let B4 = { ref: T7 };
  return _4.createElement(C3, null, _4.createElement($6.Provider, { value: N5 }, _4.createElement(X7.Provider, { value: E6 }, E6.tabs.length <= 0 && _4.createElement(p8, { onFocus: () => {
    var p9, I8;
    for (let a11 of x6.current)
      if (((p9 = a11.current) == null ? void 0 : p9.tabIndex) === 0)
        return (I8 = a11.current) == null || I8.focus(), true;
    return false;
  } }), X({ ourProps: B4, theirProps: R3, slot: y7, defaultTag: be2, name: "Tabs" }))));
}
var Pe2 = "div";
function ge5(e6, n6) {
  let { orientation: t15, selectedIndex: o11 } = M8("Tab.List"), s17 = y2(n6);
  return X({ ourProps: { ref: s17, role: "tablist", "aria-orientation": t15 }, theirProps: e6, slot: { selectedIndex: o11 }, defaultTag: Pe2, name: "Tabs.List" });
}
var ye3 = "button";
function xe7(e6, n6) {
  var p9, I8;
  let t15 = I(), { id: o11 = `headlessui-tabs-tab-${t15}`, ...s17 } = e6, { orientation: r10, activation: i11, selectedIndex: R3, tabs: b4, panels: c13 } = M8("Tab"), u8 = q4("Tab"), T7 = M8("Tab"), l10 = K2(null), d15 = y2(l10, n6);
  l(() => u8.registerTab(l10), [u8, l10]);
  let y7 = d12("tabs"), m9 = b4.indexOf(l10);
  m9 === -1 && (m9 = y7);
  let x6 = m9 === R3, E6 = o4((a11) => {
    var j5;
    let f13 = a11();
    if (f13 === N.Success && i11 === "auto") {
      let W = (j5 = e(l10)) == null ? void 0 : j5.activeElement, z5 = T7.tabs.findIndex((te4) => te4.current === W);
      z5 !== -1 && u8.change(z5);
    }
    return f13;
  }), S10 = o4((a11) => {
    let f13 = b4.map((W) => W.current).filter(Boolean);
    if (a11.key === o8.Space || a11.key === o8.Enter) {
      a11.preventDefault(), a11.stopPropagation(), u8.change(m9);
      return;
    }
    switch (a11.key) {
      case o8.Home:
      case o8.PageUp:
        return a11.preventDefault(), a11.stopPropagation(), E6(() => O(f13, M.First));
      case o8.End:
      case o8.PageDown:
        return a11.preventDefault(), a11.stopPropagation(), E6(() => O(f13, M.Last));
    }
    if (E6(() => u(r10, { vertical() {
      return a11.key === o8.ArrowUp ? O(f13, M.Previous | M.WrapAround) : a11.key === o8.ArrowDown ? O(f13, M.Next | M.WrapAround) : N.Error;
    }, horizontal() {
      return a11.key === o8.ArrowLeft ? O(f13, M.Previous | M.WrapAround) : a11.key === o8.ArrowRight ? O(f13, M.Next | M.WrapAround) : N.Error;
    } })) === N.Success)
      return a11.preventDefault();
  }), A7 = K2(false), L5 = o4(() => {
    var a11;
    A7.current || (A7.current = true, (a11 = l10.current) == null || a11.focus(), u8.change(m9), t3(() => {
      A7.current = false;
    }));
  }), C4 = o4((a11) => {
    a11.preventDefault();
  }), N5 = F7(() => ({ selected: x6 }), [x6]), B4 = { ref: d15, onKeyDown: S10, onMouseDown: C4, onClick: L5, id: o11, role: "tab", type: s6(e6, l10), "aria-controls": (I8 = (p9 = c13[m9]) == null ? void 0 : p9.current) == null ? void 0 : I8.id, "aria-selected": x6, tabIndex: x6 ? 0 : -1 };
  return X({ ourProps: B4, theirProps: s17, slot: N5, defaultTag: ye3, name: "Tabs.Tab" });
}
var Ee2 = "div";
function Ae2(e6, n6) {
  let { selectedIndex: t15 } = M8("Tab.Panels"), o11 = y2(n6), s17 = F7(() => ({ selectedIndex: t15 }), [t15]);
  return X({ ourProps: { ref: o11 }, theirProps: e6, slot: s17, defaultTag: Ee2, name: "Tabs.Panels" });
}
var Re3 = "div";
var Le4 = S2.RenderStrategy | S2.Static;
function De2(e6, n6) {
  var E6, S10, A7, L5;
  let t15 = I(), { id: o11 = `headlessui-tabs-panel-${t15}`, tabIndex: s17 = 0, ...r10 } = e6, { selectedIndex: i11, tabs: R3, panels: b4 } = M8("Tab.Panel"), c13 = q4("Tab.Panel"), u8 = K2(null), T7 = y2(u8, n6);
  l(() => c13.registerPanel(u8), [c13, u8]);
  let l10 = d12("panels"), d15 = b4.indexOf(u8);
  d15 === -1 && (d15 = l10);
  let y7 = d15 === i11, m9 = F7(() => ({ selected: y7 }), [y7]), x6 = { ref: T7, id: o11, role: "tabpanel", "aria-labelledby": (S10 = (E6 = R3[d15]) == null ? void 0 : E6.current) == null ? void 0 : S10.id, tabIndex: y7 ? s17 : -1 };
  return !y7 && ((A7 = r10.unmount) == null || A7) && !((L5 = r10.static) != null && L5) ? _4.createElement(c4, { as: "span", ...x6 }) : X({ ourProps: x6, theirProps: r10, slot: m9, defaultTag: Re3, features: Le4, visible: y7, name: "Tabs.Panel" });
}
var Se4 = D2(xe7);
var Ie5 = D2(me3);
var Fe4 = D2(ge5);
var he3 = D2(Ae2);
var Me4 = D2(De2);
var Rt = Object.assign(Se4, { Group: Ie5, List: Fe4, Panels: he3, Panel: Me4 });

// node_modules/@headlessui/react/dist/components/transitions/transition.js
import d14, { Fragment as K3, createContext as Q5, useContext as J3, useEffect as P4, useMemo as Y6, useRef as f12, useState as X8 } from "react";

// node_modules/@headlessui/react/dist/utils/once.js
function l9(r10) {
  let e6 = { called: false };
  return (...t15) => {
    if (!e6.called)
      return e6.called = true, r10(...t15);
  };
}

// node_modules/@headlessui/react/dist/components/transitions/utils/transition.js
function d13(t15, ...e6) {
  t15 && e6.length > 0 && t15.classList.add(...e6);
}
function v3(t15, ...e6) {
  t15 && e6.length > 0 && t15.classList.remove(...e6);
}
function F8(t15, e6) {
  let n6 = o2();
  if (!t15)
    return n6.dispose;
  let { transitionDuration: m9, transitionDelay: o11 } = getComputedStyle(t15), [u8, p9] = [m9, o11].map((a11) => {
    let [r10 = 0] = a11.split(",").filter(Boolean).map((i11) => i11.includes("ms") ? parseFloat(i11) : parseFloat(i11) * 1e3).sort((i11, f13) => f13 - i11);
    return r10;
  }), l10 = u8 + p9;
  if (l10 !== 0) {
    n6.group((r10) => {
      r10.setTimeout(() => {
        e6(), r10.dispose();
      }, l10), r10.addEventListener(t15, "transitionrun", (i11) => {
        i11.target === i11.currentTarget && r10.dispose();
      });
    });
    let a11 = n6.addEventListener(t15, "transitionend", (r10) => {
      r10.target === r10.currentTarget && (e6(), a11());
    });
  } else
    e6();
  return n6.add(() => e6()), n6.dispose;
}
function y6(t15, e6, n6, m9) {
  let o11 = n6 ? "enter" : "leave", u8 = o2(), p9 = m9 !== void 0 ? l9(m9) : () => {
  };
  o11 === "enter" && (t15.removeAttribute("hidden"), t15.style.display = "");
  let l10 = u(o11, { enter: () => e6.enter, leave: () => e6.leave }), a11 = u(o11, { enter: () => e6.enterTo, leave: () => e6.leaveTo }), r10 = u(o11, { enter: () => e6.enterFrom, leave: () => e6.leaveFrom });
  return v3(t15, ...e6.enter, ...e6.enterTo, ...e6.enterFrom, ...e6.leave, ...e6.leaveFrom, ...e6.leaveTo, ...e6.entered), d13(t15, ...l10, ...r10), u8.nextFrame(() => {
    v3(t15, ...r10), d13(t15, ...a11), F8(t15, () => (v3(t15, ...l10), d13(t15, ...e6.entered), p9()));
  }), u8.dispose;
}

// node_modules/@headlessui/react/dist/hooks/use-transition.js
function D7({ container: i11, direction: t15, classes: o11, onStart: s17, onStop: u8 }) {
  let a11 = f6(), c13 = p(), r10 = s2(t15);
  l(() => {
    let e6 = o2();
    c13.add(e6.dispose);
    let n6 = i11.current;
    if (n6 && r10.current !== "idle" && a11.current)
      return e6.dispose(), s17.current(r10.current), e6.add(y6(n6, o11.current, r10.current === "enter", () => {
        e6.dispose(), u8.current(r10.current);
      })), e6.dispose;
  }, [t15]);
}

// node_modules/@headlessui/react/dist/components/transitions/transition.js
function S9(n6 = "") {
  return n6.split(" ").filter((t15) => t15.trim().length > 1);
}
var A6 = Q5(null);
A6.displayName = "TransitionContext";
var Ce3 = ((r10) => (r10.Visible = "visible", r10.Hidden = "hidden", r10))(Ce3 || {});
function Ee3() {
  let n6 = J3(A6);
  if (n6 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return n6;
}
function be3() {
  let n6 = J3(I7);
  if (n6 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return n6;
}
var I7 = Q5(null);
I7.displayName = "NestingContext";
function _5(n6) {
  return "children" in n6 ? _5(n6.children) : n6.current.filter(({ el: t15 }) => t15.current !== null).filter(({ state: t15 }) => t15 === "visible").length > 0;
}
function ne5(n6, t15) {
  let r10 = s2(n6), o11 = f12([]), y7 = f6(), N5 = p(), p9 = o4((s17, e6 = j.Hidden) => {
    let a11 = o11.current.findIndex(({ el: i11 }) => i11 === s17);
    a11 !== -1 && (u(e6, { [j.Unmount]() {
      o11.current.splice(a11, 1);
    }, [j.Hidden]() {
      o11.current[a11].state = "hidden";
    } }), N5.microTask(() => {
      var i11;
      !_5(o11) && y7.current && ((i11 = r10.current) == null || i11.call(r10));
    }));
  }), x6 = o4((s17) => {
    let e6 = o11.current.find(({ el: a11 }) => a11 === s17);
    return e6 ? e6.state !== "visible" && (e6.state = "visible") : o11.current.push({ el: s17, state: "visible" }), () => p9(s17, j.Unmount);
  }), m9 = f12([]), c13 = f12(Promise.resolve()), u8 = f12({ enter: [], leave: [], idle: [] }), h9 = o4((s17, e6, a11) => {
    m9.current.splice(0), t15 && (t15.chains.current[e6] = t15.chains.current[e6].filter(([i11]) => i11 !== s17)), t15 == null || t15.chains.current[e6].push([s17, new Promise((i11) => {
      m9.current.push(i11);
    })]), t15 == null || t15.chains.current[e6].push([s17, new Promise((i11) => {
      Promise.all(u8.current[e6].map(([l10, T7]) => T7)).then(() => i11());
    })]), e6 === "enter" ? c13.current = c13.current.then(() => t15 == null ? void 0 : t15.wait.current).then(() => a11(e6)) : a11(e6);
  }), v4 = o4((s17, e6, a11) => {
    Promise.all(u8.current[e6].splice(0).map(([i11, l10]) => l10)).then(() => {
      var i11;
      (i11 = m9.current.shift()) == null || i11();
    }).then(() => a11(e6));
  });
  return Y6(() => ({ children: o11, register: x6, unregister: p9, onStart: h9, onStop: v4, wait: c13, chains: u8 }), [x6, p9, o11, h9, v4, u8, c13]);
}
function Se5() {
}
var xe8 = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
function re5(n6) {
  var r10;
  let t15 = {};
  for (let o11 of xe8)
    t15[o11] = (r10 = n6[o11]) != null ? r10 : Se5;
  return t15;
}
function Pe3(n6) {
  let t15 = f12(re5(n6));
  return P4(() => {
    t15.current = re5(n6);
  }, [n6]), t15;
}
var Re4 = "div";
var ie3 = S2.RenderStrategy;
function ye4(n6, t15) {
  let { beforeEnter: r10, afterEnter: o11, beforeLeave: y7, afterLeave: N5, enter: p9, enterFrom: x6, enterTo: m9, entered: c13, leave: u8, leaveFrom: h9, leaveTo: v4, ...s17 } = n6, e6 = f12(null), a11 = y2(e6, t15), i11 = s17.unmount ? j.Unmount : j.Hidden, { show: l10, appear: T7, initial: se5 } = Ee3(), [g4, M9] = X8(l10 ? "visible" : "hidden"), z5 = be3(), { register: F9, unregister: L5 } = z5, U5 = f12(null);
  P4(() => F9(e6), [F9, e6]), P4(() => {
    if (i11 === j.Hidden && e6.current) {
      if (l10 && g4 !== "visible") {
        M9("visible");
        return;
      }
      return u(g4, { ["hidden"]: () => L5(e6), ["visible"]: () => F9(e6) });
    }
  }, [g4, e6, F9, L5, l10, i11]);
  let j5 = s2({ enter: S9(p9), enterFrom: S9(x6), enterTo: S9(m9), entered: S9(c13), leave: S9(u8), leaveFrom: S9(h9), leaveTo: S9(v4) }), w5 = Pe3({ beforeEnter: r10, afterEnter: o11, beforeLeave: y7, afterLeave: N5 }), k2 = l2();
  P4(() => {
    if (k2 && g4 === "visible" && e6.current === null)
      throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [e6, g4, k2]);
  let G4 = se5 && !T7, ae3 = (() => !k2 || G4 || U5.current === l10 ? "idle" : l10 ? "enter" : "leave")(), H8 = c11(0), le4 = o4((C4) => u(C4, { enter: () => {
    H8.addFlag(d4.Opening), w5.current.beforeEnter();
  }, leave: () => {
    H8.addFlag(d4.Closing), w5.current.beforeLeave();
  }, idle: () => {
  } })), ue6 = o4((C4) => u(C4, { enter: () => {
    H8.removeFlag(d4.Opening), w5.current.afterEnter();
  }, leave: () => {
    H8.removeFlag(d4.Closing), w5.current.afterLeave();
  }, idle: () => {
  } })), O4 = ne5(() => {
    M9("hidden"), L5(e6);
  }, z5);
  D7({ container: e6, classes: j5, direction: ae3, onStart: s2((C4) => {
    O4.onStart(e6, C4, le4);
  }), onStop: s2((C4) => {
    O4.onStop(e6, C4, ue6), C4 === "leave" && !_5(O4) && (M9("hidden"), L5(e6));
  }) }), P4(() => {
    G4 && (i11 === j.Hidden ? U5.current = null : U5.current = l10);
  }, [l10, G4, g4]);
  let B4 = s17, Te4 = { ref: a11 };
  return T7 && l10 && (B4 = { ...B4, className: e2(s17.className, ...j5.current.enter, ...j5.current.enterFrom) }), d14.createElement(I7.Provider, { value: O4 }, d14.createElement(c5, { value: u(g4, { ["visible"]: d4.Open, ["hidden"]: d4.Closed }) | H8.flags }, X({ ourProps: Te4, theirProps: B4, defaultTag: Re4, features: ie3, visible: g4 === "visible", name: "Transition.Child" })));
}
function Ne5(n6, t15) {
  let { show: r10, appear: o11 = false, unmount: y7, ...N5 } = n6, p9 = f12(null), x6 = y2(p9, t15);
  l2();
  let m9 = C();
  if (r10 === void 0 && m9 !== null && (r10 = (m9 & d4.Open) === d4.Open), ![true, false].includes(r10))
    throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [c13, u8] = X8(r10 ? "visible" : "hidden"), h9 = ne5(() => {
    u8("hidden");
  }), [v4, s17] = X8(true), e6 = f12([r10]);
  l(() => {
    v4 !== false && e6.current[e6.current.length - 1] !== r10 && (e6.current.push(r10), s17(false));
  }, [e6, r10]);
  let a11 = Y6(() => ({ show: r10, appear: o11, initial: v4 }), [r10, o11, v4]);
  P4(() => {
    if (r10)
      u8("visible");
    else if (!_5(h9))
      u8("hidden");
    else {
      let l10 = p9.current;
      if (!l10)
        return;
      let T7 = l10.getBoundingClientRect();
      T7.x === 0 && T7.y === 0 && T7.width === 0 && T7.height === 0 && u8("hidden");
    }
  }, [r10, h9]);
  let i11 = { unmount: y7 };
  return d14.createElement(I7.Provider, { value: h9 }, d14.createElement(A6.Provider, { value: a11 }, X({ ourProps: { ...i11, as: K3, children: d14.createElement(oe3, { ref: x6, ...i11, ...N5 }) }, theirProps: {}, defaultTag: K3, features: ie3, visible: c13 === "visible", name: "Transition" })));
}
function He5(n6, t15) {
  let r10 = J3(A6) !== null, o11 = C() !== null;
  return d14.createElement(d14.Fragment, null, !r10 && o11 ? d14.createElement(q5, { ref: t15, ...n6 }) : d14.createElement(oe3, { ref: t15, ...n6 }));
}
var q5 = D2(Ne5);
var oe3 = D2(ye4);
var De3 = D2(He5);
var Tt = Object.assign(q5, { Child: De3, Root: q5 });

// components/blocks/partnerform.tsx
var import_solid2 = __toESM(require_solid());
import { Fragment, useRef as useRef3, useState as useState3 } from "react";
var partnerFormSchema = {
  name: "partnerform",
  label: "Partnerform",
  fields: [
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "string",
      label: "Description",
      name: "description"
    }
  ]
};

// components/blocks/team.tsx
var import_outline2 = __toESM(require_outline());
import Image3 from "next/image";
import Link3 from "next/link";
var teamBlockSchema = {
  name: "team",
  label: "Team",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      label: "Divisions",
      name: "divisions",
      type: "object",
      list: true,
      fields: [
        {
          type: "string",
          label: "Subtitle",
          required: true,
          name: "subtitle"
        },
        {
          type: "string",
          label: "Title",
          required: true,
          name: "title"
        },
        {
          label: "Members",
          name: "members",
          type: "object",
          list: true,
          fields: [
            {
              label: "Name",
              name: "name",
              type: "string"
            },
            {
              label: "Position",
              name: "position",
              type: "string"
            },
            {
              label: "LinkedIn",
              name: "linkedin",
              type: "string"
            },
            {
              name: "src",
              label: "Image Source",
              type: "image"
            },
            {
              name: "alt",
              label: "Alt Text",
              type: "string"
            }
          ]
        }
      ]
    }
  ]
};

// components/blocks/partners.tsx
import Image4 from "next/image";
import Link4 from "next/link";
var partnersBlockSchema = {
  name: "partner_list",
  label: "Partners",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      label: "Call to action",
      name: "cta",
      type: "object",
      fields: [
        {
          label: "Link",
          name: "link",
          type: "string"
        },
        {
          label: "Text",
          name: "text",
          type: "string"
        }
      ]
    },
    {
      type: "object",
      label: "Partners",
      name: "partners",
      list: true,
      fields: [
        {
          type: "string",
          label: "Category title",
          name: "title"
        },
        {
          type: "number",
          label: "Number of partners per line",
          name: "grid_cols"
        },
        {
          type: "object",
          label: "Partners",
          name: "partners",
          list: true,
          fields: [
            {
              type: "image",
              label: "Image Source",
              name: "src"
            },
            {
              type: "string",
              label: "Alt Text",
              name: "alt"
            },
            {
              type: "string",
              name: "link",
              label: "Partner website"
            }
          ]
        }
      ]
    }
  ]
};

// components/blocks/countdown.tsx
import Link5 from "next/link";
import { useEffect as useEffect4, useState as useState4 } from "react";
var countdownBlockSchema = {
  name: "countdown",
  label: "Countdown",
  fields: [
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "string",
      label: "Date",
      name: "date"
    },
    {
      label: "Call to action",
      name: "cta",
      type: "object",
      fields: [
        {
          type: "string",
          label: "Link",
          name: "link"
        },
        {
          type: "string",
          label: "Text",
          name: "text"
        }
      ]
    }
  ]
};

// components/items/contentblock.tsx
var ContentBlockSchema = {
  label: "Content block",
  name: "content_block",
  type: "object",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "string",
      label: "Content",
      list: true,
      name: "content"
    },
    {
      label: "Call to action",
      name: "cta",
      type: "object",
      fields: [
        {
          type: "string",
          label: "Link",
          name: "link"
        },
        {
          type: "string",
          label: "Text",
          name: "text"
        }
      ]
    },
    {
      label: "Call to action (secondary)",
      name: "cta_secondary",
      type: "object",
      fields: [
        {
          type: "string",
          label: "Link",
          name: "link"
        },
        {
          type: "string",
          label: "Text",
          name: "text"
        }
      ]
    }
  ]
};

// components/items/infopoints.tsx
import Link6 from "next/link";

// components/items/modal.tsx
import { Fragment as Fragment2 } from "react";

// components/blocks/newsletter.tsx
import { useRef as useRef4, useState as useState5, Fragment as Fragment3 } from "react";
var import_outline3 = __toESM(require_outline());
var import_solid3 = __toESM(require_solid());

// components/items/infopoints.tsx
import { useState as useState6 } from "react";
var InfopointsBlockSchema = {
  type: "object",
  label: "Infopoints",
  name: "infopoints",
  list: true,
  fields: [
    {
      type: "string",
      label: "Name",
      name: "name"
    },
    {
      type: "string",
      label: "Text",
      name: "text"
    },
    {
      type: "string",
      label: "Link",
      name: "link"
    },
    {
      type: "object",
      label: "Newsletter CTA (temporary)",
      name: "newsletter_cta",
      fields: [
        {
          type: "string",
          label: "Signup button text",
          name: "agree_button"
        },
        {
          type: "string",
          label: "Modal title",
          name: "modal_title"
        },
        {
          type: "string",
          label: "Modal text",
          name: "modal_text"
        }
      ]
    }
  ]
};

// components/items/image.tsx
import Image5 from "next/image";
var RoundImageBlockschema = {
  type: "object",
  label: "Image",
  name: "image",
  fields: [
    {
      name: "src",
      label: "Image Source",
      type: "image"
    },
    {
      name: "alt",
      label: "Alt Text",
      type: "string"
    }
  ]
};

// components/blocks/tabs.tsx
var tabsBlockSchema = {
  name: "tabs",
  label: "Tabs",
  fields: [
    {
      label: "Tabitems",
      name: "tabitems",
      type: "object",
      list: true,
      fields: [
        ContentBlockSchema,
        RoundImageBlockschema,
        InfopointsBlockSchema
      ]
    }
  ]
};

// components/blocks/dropdown.tsx
var import_solid4 = __toESM(require_solid());

// components/items/features.tsx
var import_outline4 = __toESM(require_outline());
var FeaturesBlockSchema = {
  type: "object",
  label: "Features",
  name: "features",
  list: true,
  fields: [
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "string",
      label: "Text",
      name: "text"
    },
    {
      type: "string",
      label: "Icon",
      name: "icon"
    }
  ]
};

// components/blocks/dropdown.tsx
var dropdownBlockSchema = {
  name: "Dropdown",
  label: "Dropdown",
  fields: [
    {
      label: "Items",
      name: "items",
      type: "object",
      list: true,
      fields: [
        ContentBlockSchema,
        RoundImageBlockschema,
        InfopointsBlockSchema,
        FeaturesBlockSchema
      ]
    }
  ]
};

// components/blocks/benefits.tsx
var import_outline5 = __toESM(require_outline());
var benefitsBlockSchema = {
  name: "benefits",
  label: "Benefits",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "object",
      label: "Benefit items",
      name: "benefit_items",
      list: true,
      fields: [
        {
          type: "string",
          label: "Title",
          name: "title"
        },
        {
          type: "string",
          label: "Icon",
          name: "icon"
        }
      ]
    }
  ]
};

// components/blocks/gallery.tsx
import { useState as useState22 } from "react";

// components/items/nextimage.tsx
import Image6 from "next/image";

// node_modules/react-photo-album/dist/index.mjs
import * as React2 from "react";
var breakpoints = Object.freeze([1200, 600, 300, 0]);

// node_modules/yet-another-react-lightbox/dist/core/consts.js
var MODULE_CAROUSEL = "carousel";
var MODULE_CONTROLLER = "controller";
var MODULE_NAVIGATION = "navigation";
var MODULE_NO_SCROLL = "no-scroll";
var MODULE_PORTAL = "portal";
var MODULE_ROOT = "root";
var MODULE_TOOLBAR = "toolbar";
var SLIDE_STATUS_LOADING = "loading";
var SLIDE_STATUS_PLAYING = "playing";
var SLIDE_STATUS_ERROR = "error";
var SLIDE_STATUS_COMPLETE = "complete";
var SLIDE_STATUS_PLACEHOLDER = "placeholder";
var activeSlideStatus = (status) => `active-slide-${status}`;
var ACTIVE_SLIDE_LOADING = activeSlideStatus(SLIDE_STATUS_LOADING);
var ACTIVE_SLIDE_PLAYING = activeSlideStatus(SLIDE_STATUS_PLAYING);
var ACTIVE_SLIDE_ERROR = activeSlideStatus(SLIDE_STATUS_ERROR);
var ACTIVE_SLIDE_COMPLETE = activeSlideStatus(SLIDE_STATUS_COMPLETE);
var CLASS_FULLSIZE = "fullsize";
var CLASS_FLEX_CENTER = "flex_center";
var CLASS_NO_SCROLL = "no_scroll";
var CLASS_NO_SCROLL_PADDING = "no_scroll_padding";
var ACTION_PREV = "prev";
var ACTION_NEXT = "next";
var ACTION_SWIPE = "swipe";
var ACTION_CLOSE = "close";
var EVENT_ON_POINTER_DOWN = "onPointerDown";
var EVENT_ON_POINTER_MOVE = "onPointerMove";
var EVENT_ON_POINTER_UP = "onPointerUp";
var EVENT_ON_POINTER_LEAVE = "onPointerLeave";
var EVENT_ON_POINTER_CANCEL = "onPointerCancel";
var EVENT_ON_KEY_DOWN = "onKeyDown";
var EVENT_ON_KEY_UP = "onKeyUp";
var EVENT_ON_WHEEL = "onWheel";
var VK_ESCAPE = "Escape";
var VK_ARROW_LEFT = "ArrowLeft";
var VK_ARROW_RIGHT = "ArrowRight";
var ELEMENT_BUTTON = "button";
var ELEMENT_ICON = "icon";
var IMAGE_FIT_CONTAIN = "contain";
var IMAGE_FIT_COVER = "cover";

// node_modules/yet-another-react-lightbox/dist/core/utils.js
import * as React3 from "react";
var clsx = (...classes) => [...classes].filter((cls) => Boolean(cls)).join(" ");
var cssPrefix = "yarl__";
var cssClass = (name) => `${cssPrefix}${name}`;
var cssVar = (name) => `--${cssPrefix}${name}`;
var composePrefix = (base, prefix) => `${base}${prefix ? `_${prefix}` : ""}`;
var makeComposePrefix = (base) => (prefix) => composePrefix(base, prefix);
var label = (labels, lbl) => labels && labels[lbl] ? labels[lbl] : lbl;
var cleanup = (...cleaners) => () => {
  cleaners.forEach((cleaner) => {
    cleaner();
  });
};
var makeUseContext = (name, contextName, context) => () => {
  const ctx = React3.useContext(context);
  if (!ctx) {
    throw new Error(`${name} must be used within a ${contextName}.Provider`);
  }
  return ctx;
};
var hasWindow = () => typeof window !== "undefined";
var isImageSlide = (slide) => slide.type === void 0 || slide.type === "image";
var isImageFitCover = (image, imageFit) => image.imageFit === IMAGE_FIT_COVER || image.imageFit !== IMAGE_FIT_CONTAIN && imageFit === IMAGE_FIT_COVER;
function parseLengthPercentage(input) {
  if (typeof input === "number") {
    return { pixel: input };
  }
  if (typeof input === "string") {
    const value = parseInt(input, 10);
    return input.endsWith("%") ? { percent: value } : { pixel: value };
  }
  return { pixel: 0 };
}
function computeSlideRect(containerRect, padding) {
  const paddingValue = parseLengthPercentage(padding);
  const paddingPixels = paddingValue.percent !== void 0 ? containerRect.width / 100 * paddingValue.percent : paddingValue.pixel;
  return {
    width: Math.max(containerRect.width - 2 * paddingPixels, 0),
    height: Math.max(containerRect.height - 2 * paddingPixels, 0)
  };
}

// node_modules/yet-another-react-lightbox/dist/core/config.js
function createModule(name, component) {
  return { name, component };
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useAnimation.js
import * as React6 from "react";

// node_modules/yet-another-react-lightbox/dist/core/hooks/useLayoutEffect.js
import * as React4 from "react";
var useLayoutEffect2 = hasWindow() ? React4.useLayoutEffect : React4.useEffect;

// node_modules/yet-another-react-lightbox/dist/core/hooks/useMotionPreference.js
import * as React5 from "react";
function useMotionPreference() {
  const [reduceMotion, setReduceMotion] = React5.useState(false);
  React5.useEffect(() => {
    var _a, _b;
    const mediaQuery = (_a = window.matchMedia) === null || _a === void 0 ? void 0 : _a.call(window, "(prefers-reduced-motion: reduce)");
    setReduceMotion(mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.matches);
    const listener = (event) => setReduceMotion(event.matches);
    (_b = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.addEventListener) === null || _b === void 0 ? void 0 : _b.call(mediaQuery, "change", listener);
    return () => {
      var _a2;
      return (_a2 = mediaQuery === null || mediaQuery === void 0 ? void 0 : mediaQuery.removeEventListener) === null || _a2 === void 0 ? void 0 : _a2.call(mediaQuery, "change", listener);
    };
  }, []);
  return reduceMotion;
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useAnimation.js
function currentTransformation(node) {
  let x6 = 0;
  let y7 = 0;
  let z5 = 0;
  const matrix = window.getComputedStyle(node).transform;
  const matcher = matrix.match(/matrix.*\((.+)\)/);
  if (matcher) {
    const values = matcher[1].split(",").map((str) => Number.parseInt(str, 10));
    if (values.length === 6) {
      x6 = values[4];
      y7 = values[5];
    } else if (values.length === 16) {
      x6 = values[12];
      y7 = values[13];
      z5 = values[14];
    }
  }
  return { x: x6, y: y7, z: z5 };
}
function useAnimation(nodeRef, computeAnimation) {
  const snapshot = React6.useRef();
  const animation = React6.useRef();
  const reduceMotion = useMotionPreference();
  useLayoutEffect2(() => {
    var _a, _b, _c;
    if (nodeRef.current && snapshot.current !== void 0 && !reduceMotion) {
      const { keyframes, duration, easing, onfinish } = computeAnimation(snapshot.current, nodeRef.current.getBoundingClientRect(), currentTransformation(nodeRef.current)) || {};
      if (keyframes && duration) {
        (_a = animation.current) === null || _a === void 0 ? void 0 : _a.cancel();
        animation.current = void 0;
        try {
          animation.current = (_c = (_b = nodeRef.current).animate) === null || _c === void 0 ? void 0 : _c.call(_b, keyframes, { duration, easing });
        } catch (err) {
          console.error(err);
        }
        if (animation.current) {
          animation.current.onfinish = () => {
            animation.current = void 0;
            onfinish === null || onfinish === void 0 ? void 0 : onfinish();
          };
        }
      }
    }
    snapshot.current = void 0;
  });
  return {
    prepareAnimation: (currentSnapshot) => {
      snapshot.current = currentSnapshot;
    },
    isAnimationPlaying: () => {
      var _a;
      return ((_a = animation.current) === null || _a === void 0 ? void 0 : _a.playState) === "running";
    }
  };
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useContainerRect.js
import * as React7 from "react";
function useContainerRect() {
  const [containerRect, setContainerRect] = React7.useState();
  const containerRef = React7.useRef(null);
  const observerRef = React7.useRef();
  const setContainerRef = React7.useCallback((node) => {
    containerRef.current = node;
    if (observerRef.current) {
      observerRef.current.disconnect();
      observerRef.current = void 0;
    }
    const updateContainerRect = () => {
      if (node) {
        const styles = window.getComputedStyle(node);
        const parse = (value) => parseFloat(value) || 0;
        setContainerRect({
          width: Math.round(node.clientWidth - parse(styles.paddingLeft) - parse(styles.paddingRight)),
          height: Math.round(node.clientHeight - parse(styles.paddingTop) - parse(styles.paddingBottom))
        });
      } else {
        setContainerRect(void 0);
      }
    };
    updateContainerRect();
    if (node && typeof ResizeObserver !== "undefined") {
      observerRef.current = new ResizeObserver(updateContainerRect);
      observerRef.current.observe(node);
    }
  }, []);
  return React7.useMemo(() => ({
    setContainerRef,
    containerRef,
    containerRect
  }), [setContainerRef, containerRef, containerRect]);
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useDelay.js
import * as React9 from "react";

// node_modules/yet-another-react-lightbox/dist/core/contexts/Timeouts.js
import * as React8 from "react";
var TimeoutsContext = React8.createContext(null);
var useTimeouts = makeUseContext("useTimeouts", "TimeoutsContext", TimeoutsContext);

// node_modules/yet-another-react-lightbox/dist/core/hooks/useDelay.js
function useDelay() {
  const timeoutId = React9.useRef();
  const { setTimeout: setTimeout2, clearTimeout: clearTimeout2 } = useTimeouts();
  return React9.useCallback((callback, delay) => {
    clearTimeout2(timeoutId.current);
    timeoutId.current = setTimeout2(callback, delay > 0 ? delay : 0);
  }, [setTimeout2, clearTimeout2]);
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useEventCallback.js
import * as React10 from "react";
function useEventCallback(fn) {
  const ref = React10.useRef(fn);
  useLayoutEffect2(() => {
    ref.current = fn;
  });
  return React10.useCallback((...args) => {
    var _a;
    return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.call(ref, ...args);
  }, []);
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useForkRef.js
import * as React11 from "react";
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
function useForkRef(refA, refB) {
  return React11.useMemo(() => refA == null && refB == null ? null : (refValue) => {
    setRef(refA, refValue);
    setRef(refB, refValue);
  }, [refA, refB]);
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useLoseFocus.js
import * as React19 from "react";

// node_modules/yet-another-react-lightbox/dist/core/modules/Controller.js
import * as React18 from "react";

// node_modules/yet-another-react-lightbox/dist/core/contexts/Events.js
import * as React12 from "react";
var EventsContext = React12.createContext(null);
var useEvents = makeUseContext("useEvents", "EventsContext", EventsContext);

// node_modules/yet-another-react-lightbox/dist/core/contexts/LightboxProps.js
import * as React13 from "react";
var LightboxPropsContext = React13.createContext(null);
var useLightboxProps = makeUseContext("useLightboxProps", "LightboxPropsContext", LightboxPropsContext);

// node_modules/yet-another-react-lightbox/dist/core/contexts/LightboxState.js
import * as React14 from "react";
var LightboxStateContext = React14.createContext(null);
var useLightboxState = makeUseContext("useLightboxState", "LightboxStateContext", LightboxStateContext);
var LightboxDispatchContext = React14.createContext(null);
var useLightboxDispatch = makeUseContext("useLightboxDispatch", "LightboxDispatchContext", LightboxDispatchContext);

// node_modules/yet-another-react-lightbox/dist/core/modules/controller/usePointerSwipe.js
import * as React15 from "react";
function usePointerSwipe(subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel) {
  const offset = React15.useRef(0);
  const pointers = React15.useRef([]);
  const activePointer = React15.useRef();
  const startTime = React15.useRef(0);
  const clearPointer = React15.useCallback((event) => {
    if (activePointer.current === event.pointerId) {
      activePointer.current = void 0;
    }
    const currentPointers = pointers.current;
    currentPointers.splice(0, currentPointers.length, ...currentPointers.filter((p9) => p9.pointerId !== event.pointerId));
  }, []);
  const addPointer = React15.useCallback((event) => {
    clearPointer(event);
    event.persist();
    pointers.current.push(event);
  }, [clearPointer]);
  const onPointerDown = useEventCallback((event) => {
    addPointer(event);
  });
  const onPointerUp = useEventCallback((event) => {
    if (pointers.current.find((x6) => x6.pointerId === event.pointerId) && activePointer.current === event.pointerId) {
      const duration = Date.now() - startTime.current;
      const currentOffset = offset.current;
      if (Math.abs(currentOffset) > 0.3 * containerWidth || Math.abs(currentOffset) > 5 && duration < swipeAnimationDuration) {
        onSwipeFinish(currentOffset, duration);
      } else {
        onSwipeCancel(currentOffset);
      }
      offset.current = 0;
    }
    clearPointer(event);
  });
  const onPointerMove = useEventCallback((event) => {
    const pointer = pointers.current.find((p9) => p9.pointerId === event.pointerId);
    if (pointer) {
      const isCurrentPointer = activePointer.current === event.pointerId;
      if (event.buttons === 0) {
        if (isCurrentPointer && offset.current !== 0) {
          onPointerUp(event);
        } else {
          clearPointer(pointer);
        }
        return;
      }
      const deltaX = event.clientX - pointer.clientX;
      const deltaY = event.clientY - pointer.clientY;
      if (activePointer.current === void 0 && isSwipeValid(deltaX) && Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > 30) {
        addPointer(event);
        activePointer.current = event.pointerId;
        startTime.current = Date.now();
        onSwipeStart();
      } else if (isCurrentPointer) {
        offset.current = deltaX;
        onSwipeProgress(deltaX);
      }
    }
  });
  React15.useEffect(() => cleanup(subscribeSensors(EVENT_ON_POINTER_DOWN, onPointerDown), subscribeSensors(EVENT_ON_POINTER_MOVE, onPointerMove), subscribeSensors(EVENT_ON_POINTER_UP, onPointerUp), subscribeSensors(EVENT_ON_POINTER_LEAVE, onPointerUp), subscribeSensors(EVENT_ON_POINTER_CANCEL, onPointerUp)), [subscribeSensors, onPointerDown, onPointerMove, onPointerUp]);
}

// node_modules/yet-another-react-lightbox/dist/core/modules/controller/usePreventSwipeNavigation.js
import * as React16 from "react";
var WHEEL = "wheel";
function preventDefault(event) {
  if (Math.abs(event.deltaX) > Math.abs(event.deltaY) || event.ctrlKey) {
    event.preventDefault();
  }
}
function usePreventSwipeNavigation() {
  const ref = React16.useRef(null);
  return React16.useCallback((node) => {
    var _a;
    if (node) {
      node.addEventListener(WHEEL, preventDefault, { passive: false });
    } else {
      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(WHEEL, preventDefault);
    }
    ref.current = node;
  }, []);
}

// node_modules/yet-another-react-lightbox/dist/core/modules/controller/useWheelSwipe.js
import * as React17 from "react";
function useWheelSwipe(swipeState, subscribeSensors, isSwipeValid, containerWidth, swipeAnimationDuration, onSwipeStart, onSwipeProgress, onSwipeFinish, onSwipeCancel) {
  const offset = React17.useRef(0);
  const intent = React17.useRef(0);
  const intentCleanup = React17.useRef();
  const resetCleanup = React17.useRef();
  const wheelResidualMomentum = React17.useRef(0);
  const startTime = React17.useRef(0);
  const { setTimeout: setTimeout2, clearTimeout: clearTimeout2 } = useTimeouts();
  const cancelSwipeIntentCleanup = React17.useCallback(() => {
    if (intentCleanup.current) {
      clearTimeout2(intentCleanup.current);
      intentCleanup.current = void 0;
    }
  }, [clearTimeout2]);
  const cancelSwipeResetCleanup = React17.useCallback(() => {
    if (resetCleanup.current) {
      clearTimeout2(resetCleanup.current);
      resetCleanup.current = void 0;
    }
  }, [clearTimeout2]);
  const handleCleanup = useEventCallback(() => {
    if (swipeState !== SwipeState.SWIPE) {
      offset.current = 0;
      startTime.current = 0;
      cancelSwipeIntentCleanup();
      cancelSwipeResetCleanup();
    }
  });
  React17.useEffect(handleCleanup, [swipeState, handleCleanup]);
  const handleCancelSwipe = useEventCallback((currentSwipeOffset) => {
    resetCleanup.current = void 0;
    if (offset.current === currentSwipeOffset) {
      onSwipeCancel(offset.current);
    }
  });
  const onWheel = useEventCallback((event) => {
    if (event.ctrlKey) {
      return;
    }
    if (Math.abs(event.deltaY) > Math.abs(event.deltaX)) {
      return;
    }
    if (!swipeState) {
      if (Math.abs(event.deltaX) <= 1.2 * Math.abs(wheelResidualMomentum.current)) {
        wheelResidualMomentum.current = event.deltaX;
        return;
      }
      if (!isSwipeValid(-event.deltaX)) {
        return;
      }
      intent.current += event.deltaX;
      cancelSwipeIntentCleanup();
      if (Math.abs(intent.current) > 30) {
        intent.current = 0;
        wheelResidualMomentum.current = 0;
        startTime.current = Date.now();
        onSwipeStart();
      } else {
        const currentSwipeIntent = intent.current;
        intentCleanup.current = setTimeout2(() => {
          intentCleanup.current = void 0;
          if (currentSwipeIntent === intent.current) {
            intent.current = 0;
          }
        }, swipeAnimationDuration);
      }
    } else if (swipeState === SwipeState.SWIPE) {
      let newSwipeOffset = offset.current - event.deltaX;
      newSwipeOffset = Math.min(Math.abs(newSwipeOffset), containerWidth) * Math.sign(newSwipeOffset);
      offset.current = newSwipeOffset;
      onSwipeProgress(newSwipeOffset);
      cancelSwipeResetCleanup();
      if (Math.abs(newSwipeOffset) > 0.2 * containerWidth) {
        wheelResidualMomentum.current = event.deltaX;
        onSwipeFinish(newSwipeOffset, Date.now() - startTime.current);
        return;
      }
      resetCleanup.current = setTimeout2(() => handleCancelSwipe(newSwipeOffset), 2 * swipeAnimationDuration);
    } else {
      wheelResidualMomentum.current = event.deltaX;
    }
  });
  React17.useEffect(() => subscribeSensors(EVENT_ON_WHEEL, onWheel), [subscribeSensors, onWheel]);
}

// node_modules/yet-another-react-lightbox/dist/core/modules/controller/index.js
var SwipeState;
(function(SwipeState2) {
  SwipeState2[SwipeState2["NONE"] = 0] = "NONE";
  SwipeState2[SwipeState2["SWIPE"] = 1] = "SWIPE";
  SwipeState2[SwipeState2["ANIMATION"] = 2] = "ANIMATION";
})(SwipeState || (SwipeState = {}));

// node_modules/yet-another-react-lightbox/dist/core/modules/Controller.js
var cssContainerPrefix = makeComposePrefix("container");
var ControllerContext = React18.createContext(null);
var useController = makeUseContext("useController", "ControllerContext", ControllerContext);
function Controller({ children, ...props }) {
  var _a;
  const { carousel, animation, controller, on, styles, render } = props;
  const [toolbarWidth, setToolbarWidth] = React18.useState();
  const state = useLightboxState();
  const dispatch = useLightboxDispatch();
  const [swipeState, setSwipeState] = React18.useState(SwipeState.NONE);
  const swipeOffset = React18.useRef(0);
  const { registerSensors, subscribeSensors } = useSensors();
  const { subscribe, publish } = useEvents();
  const cleanupAnimationIncrement = useDelay();
  const cleanupSwipeOffset = useDelay();
  const { containerRef, setContainerRef, containerRect } = useContainerRect();
  const handleContainerRef = useForkRef(usePreventSwipeNavigation(), setContainerRef);
  const carouselRef = React18.useRef(null);
  const setCarouselRef = useForkRef(carouselRef, void 0);
  const isRTL = useRTL();
  const rtl = (value) => (isRTL ? -1 : 1) * (typeof value === "number" ? value : 1);
  const focus = useEventCallback(() => {
    var _a2;
    return (_a2 = containerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  });
  const getLightboxProps = useEventCallback(() => props);
  const getLightboxState = useEventCallback(() => state);
  const prev = React18.useCallback((params) => publish(ACTION_PREV, params), [publish]);
  const next = React18.useCallback((params) => publish(ACTION_NEXT, params), [publish]);
  const close = React18.useCallback(() => publish(ACTION_CLOSE), [publish]);
  const isSwipeValid = (offset) => !(carousel.finite && (rtl(offset) > 0 && state.currentIndex === 0 || rtl(offset) < 0 && state.currentIndex === state.slides.length - 1));
  const setSwipeOffset = (offset) => {
    var _a2;
    swipeOffset.current = offset;
    (_a2 = containerRef.current) === null || _a2 === void 0 ? void 0 : _a2.style.setProperty(cssVar("swipe_offset"), `${Math.round(offset)}px`);
  };
  const { prepareAnimation, isAnimationPlaying } = useAnimation(carouselRef, (snapshot, rect, translate) => {
    var _a2;
    if (carouselRef.current && containerRect && ((_a2 = state.animation) === null || _a2 === void 0 ? void 0 : _a2.duration)) {
      const parsedSpacing = parseLengthPercentage(carousel.spacing);
      const spacingValue = (parsedSpacing.percent ? parsedSpacing.percent * containerRect.width / 100 : parsedSpacing.pixel) || 0;
      return {
        keyframes: [
          {
            transform: `translateX(${rtl(state.globalIndex - snapshot.index) * (containerRect.width + spacingValue) + snapshot.rect.x - rect.x + translate.x}px)`
          },
          { transform: "translateX(0)" }
        ],
        duration: state.animation.duration,
        easing: state.animation.easing
      };
    }
    return void 0;
  });
  const swipe = useEventCallback((action) => {
    var _a2, _b;
    const currentSwipeOffset = action.offset || 0;
    const swipeDuration = !currentSwipeOffset ? (_a2 = animation.navigation) !== null && _a2 !== void 0 ? _a2 : animation.swipe : animation.swipe;
    const swipeEasing = !currentSwipeOffset && !isAnimationPlaying() ? animation.easing.navigation : animation.easing.swipe;
    let { direction } = action;
    const count = (_b = action.count) !== null && _b !== void 0 ? _b : 1;
    let newSwipeState = SwipeState.ANIMATION;
    let newSwipeAnimationDuration = swipeDuration * count;
    if (!direction) {
      const containerWidth = containerRect === null || containerRect === void 0 ? void 0 : containerRect.width;
      const elapsedTime = action.duration || 0;
      const expectedTime = containerWidth ? swipeDuration / containerWidth * Math.abs(currentSwipeOffset) : swipeDuration;
      if (count !== 0) {
        if (elapsedTime < expectedTime) {
          newSwipeAnimationDuration = newSwipeAnimationDuration / expectedTime * Math.max(elapsedTime, expectedTime / 5);
        } else if (containerWidth) {
          newSwipeAnimationDuration = swipeDuration / containerWidth * (containerWidth - Math.abs(currentSwipeOffset));
        }
        direction = rtl(currentSwipeOffset) > 0 ? ACTION_PREV : ACTION_NEXT;
      } else {
        newSwipeAnimationDuration = swipeDuration / 2;
      }
    }
    let increment = 0;
    if (direction === ACTION_PREV) {
      if (isSwipeValid(rtl(1))) {
        increment = -count;
      } else {
        newSwipeState = SwipeState.NONE;
        newSwipeAnimationDuration = swipeDuration;
      }
    } else if (direction === ACTION_NEXT) {
      if (isSwipeValid(rtl(-1))) {
        increment = count;
      } else {
        newSwipeState = SwipeState.NONE;
        newSwipeAnimationDuration = swipeDuration;
      }
    }
    newSwipeAnimationDuration = Math.round(newSwipeAnimationDuration);
    cleanupSwipeOffset(() => {
      setSwipeOffset(0);
      setSwipeState(SwipeState.NONE);
    }, newSwipeAnimationDuration);
    if (carouselRef.current) {
      prepareAnimation({
        rect: carouselRef.current.getBoundingClientRect(),
        index: state.globalIndex
      });
    }
    setSwipeState(newSwipeState);
    publish(ACTION_SWIPE, {
      type: "swipe",
      increment,
      duration: newSwipeAnimationDuration,
      easing: swipeEasing
    });
  });
  React18.useEffect(() => {
    var _a2, _b;
    if (((_a2 = state.animation) === null || _a2 === void 0 ? void 0 : _a2.increment) && ((_b = state.animation) === null || _b === void 0 ? void 0 : _b.duration)) {
      cleanupAnimationIncrement(() => dispatch({ type: "swipe", increment: 0 }), state.animation.duration);
    }
  }, [state.animation, dispatch, cleanupAnimationIncrement]);
  const swipeParams = [
    subscribeSensors,
    isSwipeValid,
    (containerRect === null || containerRect === void 0 ? void 0 : containerRect.width) || 0,
    animation.swipe,
    () => setSwipeState(SwipeState.SWIPE),
    (offset) => setSwipeOffset(offset),
    (offset, duration) => swipe({ offset, duration, count: 1 }),
    (offset) => swipe({ offset, count: 0 })
  ];
  usePointerSwipe(...swipeParams);
  useWheelSwipe(swipeState, ...swipeParams);
  const focusOnMount = useEventCallback(() => {
    var _a2;
    if (controller.focus) {
      (_a2 = containerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  });
  React18.useEffect(focusOnMount, [focusOnMount]);
  const onViewCallback = useEventCallback(() => {
    var _a2;
    (_a2 = on.view) === null || _a2 === void 0 ? void 0 : _a2.call(on, { index: state.currentIndex });
  });
  React18.useEffect(onViewCallback, [state.globalIndex, onViewCallback]);
  React18.useEffect(() => cleanup(subscribe(ACTION_PREV, (action) => swipe({ direction: ACTION_PREV, ...action })), subscribe(ACTION_NEXT, (action) => swipe({ direction: ACTION_NEXT, ...action })), subscribe(ACTION_SWIPE, (action) => dispatch(action))), [subscribe, swipe, dispatch]);
  React18.useEffect(() => subscribeSensors(EVENT_ON_KEY_UP, (event) => {
    if (event.code === VK_ESCAPE) {
      close();
    }
  }), [subscribeSensors, close]);
  const context = React18.useMemo(() => ({
    prev,
    next,
    close,
    focus,
    slideRect: containerRect ? computeSlideRect(containerRect, carousel.padding) : { width: 0, height: 0 },
    containerRect: containerRect || { width: 0, height: 0 },
    subscribeSensors,
    containerRef,
    setCarouselRef,
    toolbarWidth,
    setToolbarWidth
  }), [
    prev,
    next,
    close,
    focus,
    subscribeSensors,
    containerRect,
    containerRef,
    setCarouselRef,
    toolbarWidth,
    setToolbarWidth,
    carousel.padding
  ]);
  React18.useImperativeHandle(controller.ref, () => ({
    prev,
    next,
    close,
    focus,
    getLightboxProps,
    getLightboxState
  }), [prev, next, close, focus, getLightboxProps, getLightboxState]);
  return React18.createElement("div", { ref: handleContainerRef, className: clsx(cssClass(cssContainerPrefix()), cssClass(CLASS_FLEX_CENTER)), style: {
    ...swipeState === SwipeState.SWIPE ? { [cssVar("swipe_offset")]: `${Math.round(swipeOffset.current)}px` } : null,
    ...controller.touchAction !== "none" ? { [cssVar("controller_touch_action")]: controller.touchAction } : null,
    ...styles.container
  }, ...controller.aria ? { role: "presentation", "aria-live": "polite" } : null, tabIndex: -1, ...registerSensors }, containerRect && React18.createElement(
    ControllerContext.Provider,
    { value: context },
    children,
    (_a = render.controls) === null || _a === void 0 ? void 0 : _a.call(render)
  ));
}
var ControllerModule = createModule(MODULE_CONTROLLER, Controller);

// node_modules/yet-another-react-lightbox/dist/core/hooks/useLoseFocus.js
function useLoseFocus(disabled = false) {
  const focused = React19.useRef(disabled);
  const { focus } = useController();
  useLayoutEffect2(() => {
    if (disabled) {
      focus();
    }
  }, [disabled, focus]);
  const onFocus = React19.useCallback(() => {
    focused.current = true;
  }, []);
  const onBlur = React19.useCallback(() => {
    focused.current = false;
  }, []);
  return { onFocus, onBlur };
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useRTL.js
import * as React20 from "react";
function useRTL() {
  const [isRTL, setIsRTL] = React20.useState(false);
  useLayoutEffect2(() => {
    setIsRTL(window.getComputedStyle(window.document.documentElement).direction === "rtl");
  }, []);
  return isRTL;
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useSensors.js
import * as React21 from "react";
function useSensors() {
  const [subscribers] = React21.useState({});
  return React21.useMemo(() => {
    const notifySubscribers = (type, event) => {
      var _a;
      (_a = subscribers[type]) === null || _a === void 0 ? void 0 : _a.forEach((listener) => {
        if (!event.isPropagationStopped())
          listener(event);
      });
    };
    return {
      registerSensors: {
        onPointerDown: (event) => notifySubscribers(EVENT_ON_POINTER_DOWN, event),
        onPointerMove: (event) => notifySubscribers(EVENT_ON_POINTER_MOVE, event),
        onPointerUp: (event) => notifySubscribers(EVENT_ON_POINTER_UP, event),
        onPointerLeave: (event) => notifySubscribers(EVENT_ON_POINTER_LEAVE, event),
        onPointerCancel: (event) => notifySubscribers(EVENT_ON_POINTER_CANCEL, event),
        onKeyDown: (event) => notifySubscribers(EVENT_ON_KEY_DOWN, event),
        onKeyUp: (event) => notifySubscribers(EVENT_ON_KEY_UP, event),
        onWheel: (event) => notifySubscribers(EVENT_ON_WHEEL, event)
      },
      subscribeSensors: (type, callback) => {
        if (!subscribers[type]) {
          subscribers[type] = [];
        }
        subscribers[type].unshift(callback);
        return () => {
          const listeners = subscribers[type];
          if (listeners) {
            listeners.splice(0, listeners.length, ...listeners.filter((el) => el !== callback));
          }
        };
      }
    };
  }, [subscribers]);
}

// node_modules/yet-another-react-lightbox/dist/core/hooks/useThrottle.js
import * as React22 from "react";
function useThrottle(callback, delay) {
  const lastCallbackTime = React22.useRef(0);
  const delayCallback = useDelay();
  const executeCallback = useEventCallback((...args) => {
    lastCallbackTime.current = Date.now();
    callback(args);
  });
  return React22.useCallback((...args) => {
    delayCallback(() => {
      executeCallback(args);
    }, delay - (Date.now() - lastCallbackTime.current));
  }, [delay, executeCallback, delayCallback]);
}

// node_modules/yet-another-react-lightbox/dist/core/components/IconButton.js
import * as React23 from "react";
var IconButton = React23.forwardRef(function IconButton2({ label: label2, className, icon: Icon, renderIcon, onClick, style, ...rest }, ref) {
  const { styles, labels } = useLightboxProps();
  return React23.createElement("button", { ref, type: "button", "aria-label": label(labels, label2), className: clsx(cssClass(ELEMENT_BUTTON), className), onClick, style: { ...style, ...styles.button }, ...rest }, renderIcon ? renderIcon() : React23.createElement(Icon, { className: cssClass(ELEMENT_ICON), style: styles.icon }));
});

// node_modules/yet-another-react-lightbox/dist/core/components/Icons.js
import * as React24 from "react";
function svgIcon(name, children) {
  const icon = (props) => React24.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", width: "24", height: "24", "aria-hidden": "true", focusable: "false", ...props }, children);
  icon.displayName = name;
  return icon;
}
function createIcon(name, glyph) {
  return svgIcon(name, React24.createElement(
    "g",
    { fill: "currentColor" },
    React24.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
    glyph
  ));
}
function createIconDisabled(name, glyph) {
  return svgIcon(name, React24.createElement(
    React24.Fragment,
    null,
    React24.createElement(
      "defs",
      null,
      React24.createElement(
        "mask",
        { id: "strike" },
        React24.createElement("path", { d: "M0 0h24v24H0z", fill: "white" }),
        React24.createElement("path", { d: "M0 0L24 24", stroke: "black", strokeWidth: 4 })
      )
    ),
    React24.createElement("path", { d: "M0.70707 2.121320L21.878680 23.292883", stroke: "currentColor", strokeWidth: 2 }),
    React24.createElement(
      "g",
      { fill: "currentColor", mask: "url(#strike)" },
      React24.createElement("path", { d: "M0 0h24v24H0z", fill: "none" }),
      glyph
    )
  ));
}
var CloseIcon = createIcon("Close", React24.createElement("path", { d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" }));
var PreviousIcon = createIcon("Previous", React24.createElement("path", { d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" }));
var NextIcon = createIcon("Next", React24.createElement("path", { d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" }));
var LoadingIcon = createIcon("Loading", React24.createElement(React24.Fragment, null, Array.from({ length: 8 }).map((_6, index, array) => React24.createElement("line", { key: index, x1: "12", y1: "6.5", x2: "12", y2: "1.8", strokeLinecap: "round", strokeWidth: "2.6", stroke: "currentColor", strokeOpacity: 1 / array.length * (index + 1), transform: `rotate(${360 / array.length * index}, 12, 12)` }))));
var ErrorIcon = createIcon("Error", React24.createElement("path", { d: "M21.9,21.9l-8.49-8.49l0,0L3.59,3.59l0,0L2.1,2.1L0.69,3.51L3,5.83V19c0,1.1,0.9,2,2,2h13.17l2.31,2.31L21.9,21.9z M5,18 l3.5-4.5l2.5,3.01L12.17,15l3,3H5z M21,18.17L5.83,3H19c1.1,0,2,0.9,2,2V18.17z" }));

// node_modules/yet-another-react-lightbox/dist/core/components/ImageSlide.js
import * as React25 from "react";
var slidePrefix = makeComposePrefix("slide");
var slideImagePrefix = makeComposePrefix("slide_image");
function ImageSlide({ slide: image, offset, render, rect, imageFit, onClick, onLoad, style }) {
  var _a, _b, _c, _d, _e4, _f, _g;
  const [status, setStatus] = React25.useState(SLIDE_STATUS_LOADING);
  const { publish } = useEvents();
  const { setTimeout: setTimeout2 } = useTimeouts();
  const imageRef = React25.useRef(null);
  React25.useEffect(() => {
    if (offset === 0) {
      publish(activeSlideStatus(status));
    }
  }, [offset, status, publish]);
  const handleLoading = useEventCallback((img) => {
    ("decode" in img ? img.decode() : Promise.resolve()).catch(() => {
    }).then(() => {
      if (!img.parentNode) {
        return;
      }
      setStatus(SLIDE_STATUS_COMPLETE);
      setTimeout2(() => {
        onLoad === null || onLoad === void 0 ? void 0 : onLoad(img);
      }, 0);
    });
  });
  const setImageRef = React25.useCallback((img) => {
    imageRef.current = img;
    if (img === null || img === void 0 ? void 0 : img.complete) {
      handleLoading(img);
    }
  }, [handleLoading]);
  const handleOnLoad = React25.useCallback((event) => {
    handleLoading(event.currentTarget);
  }, [handleLoading]);
  const onError = React25.useCallback(() => {
    setStatus(SLIDE_STATUS_ERROR);
  }, []);
  const cover = isImageFitCover(image, imageFit);
  const nonInfinite = (value, fallback) => Number.isFinite(value) ? value : fallback;
  const maxWidth = nonInfinite(Math.max(...((_b = (_a = image.srcSet) === null || _a === void 0 ? void 0 : _a.map((x6) => x6.width)) !== null && _b !== void 0 ? _b : []).concat(image.width ? [image.width] : [])), ((_c = imageRef.current) === null || _c === void 0 ? void 0 : _c.naturalWidth) || 0);
  const maxHeight = nonInfinite(Math.max(...((_e4 = (_d = image.srcSet) === null || _d === void 0 ? void 0 : _d.map((x6) => x6.height)) !== null && _e4 !== void 0 ? _e4 : []).concat(image.height ? [image.height] : [])), ((_f = imageRef.current) === null || _f === void 0 ? void 0 : _f.naturalHeight) || 0);
  const defaultStyle = maxWidth && maxHeight ? {
    maxWidth: `min(${maxWidth}px, 100%)`,
    maxHeight: `min(${maxHeight}px, 100%)`
  } : {
    maxWidth: "100%",
    maxHeight: "100%"
  };
  const srcSet = (_g = image.srcSet) === null || _g === void 0 ? void 0 : _g.sort((a11, b4) => a11.width - b4.width).map((item) => `${item.src} ${item.width}w`).join(", ");
  const estimateActualWidth = () => rect && !cover && image.width && image.height ? rect.height / image.height * image.width : Number.MAX_VALUE;
  const sizes = srcSet && rect && hasWindow() ? `${Math.round(Math.min(estimateActualWidth(), rect.width))}px` : void 0;
  return React25.createElement(
    React25.Fragment,
    null,
    React25.createElement("img", { ref: setImageRef, onLoad: handleOnLoad, onError, onClick, className: clsx(cssClass(slideImagePrefix()), cover && cssClass(slideImagePrefix("cover")), status !== SLIDE_STATUS_COMPLETE && cssClass(slideImagePrefix("loading"))), draggable: false, alt: image.alt, style: { ...defaultStyle, ...style }, sizes, srcSet, src: image.src }),
    status !== SLIDE_STATUS_COMPLETE && React25.createElement(
      "div",
      { className: cssClass(slidePrefix(SLIDE_STATUS_PLACEHOLDER)) },
      status === SLIDE_STATUS_LOADING && ((render === null || render === void 0 ? void 0 : render.iconLoading) ? render.iconLoading() : React25.createElement(LoadingIcon, { className: clsx(cssClass(ELEMENT_ICON), cssClass(slidePrefix(SLIDE_STATUS_LOADING))) })),
      status === SLIDE_STATUS_ERROR && ((render === null || render === void 0 ? void 0 : render.iconError) ? render.iconError() : React25.createElement(ErrorIcon, { className: clsx(cssClass(ELEMENT_ICON), cssClass(slidePrefix(SLIDE_STATUS_ERROR))) }))
    )
  );
}

// node_modules/yet-another-react-lightbox/dist/core/modules/Carousel.js
import * as React26 from "react";
function cssPrefix2(value) {
  return composePrefix(MODULE_CAROUSEL, value);
}
function cssSlidePrefix(value) {
  return composePrefix("slide", value);
}
function CarouselSlide({ slide, offset }) {
  const containerRef = React26.useRef(null);
  const { currentIndex } = useLightboxState();
  const { slideRect, close } = useController();
  const { render, carousel: { imageFit }, on: { click: onClick }, controller: { closeOnBackdropClick } } = useLightboxProps();
  const renderSlide = () => {
    var _a, _b, _c, _d;
    let rendered = (_a = render.slide) === null || _a === void 0 ? void 0 : _a.call(render, { slide, offset, rect: slideRect });
    if (!rendered && isImageSlide(slide)) {
      rendered = React26.createElement(ImageSlide, { slide, offset, render, rect: slideRect, imageFit, onClick: offset === 0 ? () => onClick === null || onClick === void 0 ? void 0 : onClick({ index: currentIndex }) : void 0 });
    }
    return rendered ? React26.createElement(
      React26.Fragment,
      null,
      (_b = render.slideHeader) === null || _b === void 0 ? void 0 : _b.call(render, { slide }),
      ((_c = render.slideContainer) !== null && _c !== void 0 ? _c : ({ children }) => children)({ slide, children: rendered }),
      (_d = render.slideFooter) === null || _d === void 0 ? void 0 : _d.call(render, { slide })
    ) : null;
  };
  const handleBackdropClick = (event) => {
    const container = containerRef.current;
    const target = event.target instanceof HTMLElement ? event.target : void 0;
    if (closeOnBackdropClick && target && container && (target === container || Array.from(container.children).find((x6) => x6 === target) && target.classList.contains(cssClass(CLASS_FULLSIZE)))) {
      close();
    }
  };
  return React26.createElement("div", { ref: containerRef, className: clsx(cssClass(cssSlidePrefix()), offset === 0 && cssClass(cssSlidePrefix("current")), cssClass(CLASS_FLEX_CENTER)), onClick: handleBackdropClick }, renderSlide());
}
function Placeholder() {
  return React26.createElement("div", { className: cssClass("slide") });
}
function Carousel({ carousel: { finite, preload, padding, spacing } }) {
  const { slides, currentIndex, globalIndex } = useLightboxState();
  const { setCarouselRef } = useController();
  const spacingValue = parseLengthPercentage(spacing);
  const paddingValue = parseLengthPercentage(padding);
  const items = [];
  if ((slides === null || slides === void 0 ? void 0 : slides.length) > 0) {
    for (let i11 = currentIndex - preload; i11 < currentIndex; i11 += 1) {
      const key = globalIndex + i11 - currentIndex;
      items.push(!finite || i11 >= 0 ? React26.createElement(CarouselSlide, { key, slide: slides[(i11 + preload * slides.length) % slides.length], offset: i11 - currentIndex }) : React26.createElement(Placeholder, { key }));
    }
    items.push(React26.createElement(CarouselSlide, { key: globalIndex, slide: slides[currentIndex], offset: 0 }));
    for (let i11 = currentIndex + 1; i11 <= currentIndex + preload; i11 += 1) {
      const key = globalIndex + i11 - currentIndex;
      items.push(!finite || i11 <= slides.length - 1 ? React26.createElement(CarouselSlide, { key, slide: slides[i11 % slides.length], offset: i11 - currentIndex }) : React26.createElement(Placeholder, { key }));
    }
  }
  return React26.createElement("div", { ref: setCarouselRef, className: clsx(cssClass(cssPrefix2()), items.length > 0 && cssClass(cssPrefix2("with_slides"))), style: {
    [`${cssVar(cssPrefix2("slides_count"))}`]: items.length,
    [`${cssVar(cssPrefix2("spacing_px"))}`]: spacingValue.pixel || 0,
    [`${cssVar(cssPrefix2("spacing_percent"))}`]: spacingValue.percent || 0,
    [`${cssVar(cssPrefix2("padding_px"))}`]: paddingValue.pixel || 0,
    [`${cssVar(cssPrefix2("padding_percent"))}`]: paddingValue.percent || 0
  } }, items);
}
var CarouselModule = createModule(MODULE_CAROUSEL, Carousel);

// node_modules/yet-another-react-lightbox/dist/core/modules/Navigation.js
import * as React27 from "react";
function NavigationButton({ label: label2, icon, renderIcon, action, onClick, disabled }) {
  return React27.createElement(IconButton, { label: label2, icon, renderIcon, className: cssClass(`navigation_${action}`), disabled, onClick, ...useLoseFocus(disabled) });
}
function Navigation({ carousel: { finite }, animation, render: { buttonPrev, buttonNext, iconPrev, iconNext } }) {
  var _a;
  const { slides, currentIndex } = useLightboxState();
  const { prev, next, subscribeSensors } = useController();
  const isRTL = useRTL();
  const prevDisabled = slides.length === 0 || finite && currentIndex === 0;
  const nextDisabled = slides.length === 0 || finite && currentIndex === slides.length - 1;
  const throttle = ((_a = animation.navigation) !== null && _a !== void 0 ? _a : animation.swipe) / 2;
  const prevThrottled = useThrottle(prev, throttle);
  const nextThrottled = useThrottle(next, throttle);
  const handleKeyDown = useEventCallback((event) => {
    if (event.key === VK_ARROW_LEFT && !(isRTL ? nextDisabled : prevDisabled)) {
      (isRTL ? nextThrottled : prevThrottled)();
    }
    if (event.key === VK_ARROW_RIGHT && !(isRTL ? prevDisabled : nextDisabled)) {
      (isRTL ? prevThrottled : nextThrottled)();
    }
  });
  React27.useEffect(() => subscribeSensors(EVENT_ON_KEY_DOWN, handleKeyDown), [subscribeSensors, handleKeyDown]);
  return React27.createElement(
    React27.Fragment,
    null,
    buttonPrev ? buttonPrev() : React27.createElement(NavigationButton, { label: "Previous", action: ACTION_PREV, icon: PreviousIcon, renderIcon: iconPrev, disabled: prevDisabled, onClick: prev }),
    buttonNext ? buttonNext() : React27.createElement(NavigationButton, { label: "Next", action: ACTION_NEXT, icon: NextIcon, renderIcon: iconNext, disabled: nextDisabled, onClick: next })
  );
}
var NavigationModule = createModule(MODULE_NAVIGATION, Navigation);

// node_modules/yet-another-react-lightbox/dist/core/modules/NoScroll.js
import * as React28 from "react";
var noScroll = cssClass(CLASS_NO_SCROLL);
var noScrollPadding = cssClass(CLASS_NO_SCROLL_PADDING);
function isHTMLElement(element) {
  return "style" in element;
}
function padScrollbar(element, padding, rtl) {
  const styles = window.getComputedStyle(element);
  const property = rtl ? "padding-left" : "padding-right";
  const computedValue = rtl ? styles.paddingLeft : styles.paddingRight;
  const originalValue = element.style.getPropertyValue(property);
  element.style.setProperty(property, `${(parseInt(computedValue, 10) || 0) + padding}px`);
  return () => {
    if (originalValue) {
      element.style.setProperty(property, originalValue);
    } else {
      element.style.removeProperty(property);
    }
  };
}
function NoScroll({ children }) {
  const rtl = useRTL();
  useLayoutEffect2(() => {
    const cleanup2 = [];
    const { body, documentElement } = document;
    const scrollbar = Math.round(window.innerWidth - documentElement.clientWidth);
    if (scrollbar > 0) {
      cleanup2.push(padScrollbar(body, scrollbar, rtl));
      const elements = body.getElementsByTagName("*");
      for (let i11 = 0; i11 < elements.length; i11 += 1) {
        const element = elements[i11];
        if (isHTMLElement(element) && window.getComputedStyle(element).getPropertyValue("position") === "fixed" && !element.classList.contains(noScrollPadding)) {
          cleanup2.push(padScrollbar(element, scrollbar, rtl));
        }
      }
    }
    body.classList.add(noScroll);
    return () => {
      body.classList.remove(noScroll);
      cleanup2.forEach((clean) => clean());
    };
  }, [rtl]);
  return React28.createElement(React28.Fragment, null, children);
}
var NoScrollModule = createModule(MODULE_NO_SCROLL, NoScroll);

// node_modules/yet-another-react-lightbox/dist/core/modules/Portal.js
import * as React29 from "react";
import * as ReactDOM from "react-dom";

// node_modules/yet-another-react-lightbox/dist/props.js
var LightboxDefaultProps = {
  open: false,
  close: () => {
  },
  index: 0,
  slides: [],
  render: {},
  plugins: [],
  toolbar: { buttons: [ACTION_CLOSE] },
  labels: {},
  animation: {
    fade: 250,
    swipe: 500,
    easing: {
      fade: "ease",
      swipe: "ease-out",
      navigation: "ease-in-out"
    }
  },
  carousel: {
    finite: false,
    preload: 2,
    padding: "16px",
    spacing: "30%",
    imageFit: IMAGE_FIT_CONTAIN
  },
  controller: {
    ref: null,
    focus: true,
    aria: false,
    touchAction: "none",
    closeOnBackdropClick: false
  },
  portal: {},
  on: {},
  styles: {},
  className: ""
};

// node_modules/yet-another-react-lightbox/dist/core/modules/Portal.js
function cssPrefix3(value) {
  return composePrefix(MODULE_PORTAL, value);
}
function setAttribute(element, attribute, value) {
  const previousValue = element.getAttribute(attribute);
  element.setAttribute(attribute, value);
  return () => {
    if (previousValue) {
      element.setAttribute(attribute, previousValue);
    } else {
      element.removeAttribute(attribute);
    }
  };
}
function Portal({ children, animation, styles, className, on, portal, close }) {
  const [mounted, setMounted] = React29.useState(false);
  const [visible, setVisible] = React29.useState(false);
  const cleanup2 = React29.useRef([]);
  const { setTimeout: setTimeout2 } = useTimeouts();
  const { subscribe } = useEvents();
  const reduceMotion = useMotionPreference();
  const animationDuration = !reduceMotion ? animation.fade : 0;
  React29.useEffect(() => {
    setMounted(true);
    return () => {
      setMounted(false);
      setVisible(false);
    };
  }, []);
  const handleClose = useEventCallback(() => {
    var _a;
    setVisible(false);
    (_a = on.exiting) === null || _a === void 0 ? void 0 : _a.call(on);
    setTimeout2(() => {
      var _a2;
      (_a2 = on.exited) === null || _a2 === void 0 ? void 0 : _a2.call(on);
      close();
    }, animationDuration);
  });
  React29.useEffect(() => subscribe(ACTION_CLOSE, handleClose), [subscribe, handleClose]);
  const handleEnter = useEventCallback((node) => {
    var _a, _b, _c;
    node.scrollTop;
    setVisible(true);
    (_a = on.entering) === null || _a === void 0 ? void 0 : _a.call(on);
    const elements = (_c = (_b = node.parentNode) === null || _b === void 0 ? void 0 : _b.children) !== null && _c !== void 0 ? _c : [];
    for (let i11 = 0; i11 < elements.length; i11 += 1) {
      const element = elements[i11];
      if (["TEMPLATE", "SCRIPT", "STYLE"].indexOf(element.tagName) === -1 && element !== node) {
        cleanup2.current.push(setAttribute(element, "inert", "true"));
        cleanup2.current.push(setAttribute(element, "aria-hidden", "true"));
      }
    }
    setTimeout2(() => {
      var _a2;
      (_a2 = on.entered) === null || _a2 === void 0 ? void 0 : _a2.call(on);
    }, animationDuration);
  });
  const handleExit = useEventCallback(() => {
    cleanup2.current.forEach((clean) => clean());
    cleanup2.current = [];
  });
  const handleRef = React29.useCallback((node) => {
    if (node) {
      handleEnter(node);
    } else {
      handleExit();
    }
  }, [handleEnter, handleExit]);
  return mounted ? ReactDOM.createPortal(React29.createElement("div", { ref: handleRef, className: clsx(className, cssClass("root"), cssClass(cssPrefix3()), cssClass(CLASS_NO_SCROLL_PADDING), visible && cssClass(cssPrefix3("open"))), role: "presentation", "aria-live": "polite", style: {
    ...animation.fade !== LightboxDefaultProps.animation.fade ? { [cssVar("fade_animation_duration")]: `${animationDuration}ms` } : null,
    ...animation.easing.fade !== LightboxDefaultProps.animation.easing.fade ? { [cssVar("fade_animation_timing_function")]: animation.easing.fade } : null,
    ...styles.root
  } }, children), portal.root || document.body) : null;
}
var PortalModule = createModule(MODULE_PORTAL, Portal);

// node_modules/yet-another-react-lightbox/dist/core/modules/Root.js
import * as React30 from "react";
function Root({ children }) {
  return React30.createElement(React30.Fragment, null, children);
}
var RootModule = createModule(MODULE_ROOT, Root);

// node_modules/yet-another-react-lightbox/dist/core/modules/Toolbar.js
import * as React31 from "react";
function cssPrefix4(value) {
  return composePrefix(MODULE_TOOLBAR, value);
}
function Toolbar({ toolbar: { buttons }, render: { buttonClose, iconClose } }) {
  const { close, setToolbarWidth } = useController();
  const { setContainerRef, containerRect } = useContainerRect();
  useLayoutEffect2(() => {
    setToolbarWidth(containerRect === null || containerRect === void 0 ? void 0 : containerRect.width);
  }, [setToolbarWidth, containerRect === null || containerRect === void 0 ? void 0 : containerRect.width]);
  const renderCloseButton = () => {
    if (buttonClose)
      return buttonClose();
    return React31.createElement(IconButton, { key: ACTION_CLOSE, label: "Close", icon: CloseIcon, renderIcon: iconClose, onClick: close });
  };
  return React31.createElement("div", { ref: setContainerRef, className: cssClass(cssPrefix4()) }, buttons === null || buttons === void 0 ? void 0 : buttons.map((button) => button === ACTION_CLOSE ? renderCloseButton() : button));
}
var ToolbarModule = createModule(MODULE_TOOLBAR, Toolbar);

// node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/Fullscreen.js
import * as React34 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/FullscreenButton.js
import * as React33 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/FullscreenContext.js
import * as React32 from "react";
var FullscreenContext = React32.createContext(null);
var useFullscreen = makeUseContext("useFullscreen", "FullscreenContext", FullscreenContext);

// node_modules/yet-another-react-lightbox/dist/plugins/fullscreen/FullscreenButton.js
var EnterFullscreenIcon = createIcon("EnterFullscreen", React33.createElement("path", { d: "M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z" }));
var ExitFullscreenIcon = createIcon("ExitFullscreen", React33.createElement("path", { d: "M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z" }));

// node_modules/yet-another-react-lightbox/dist/plugins/slideshow/Slideshow.js
import * as React37 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/slideshow/SlideshowContext.js
import * as React35 from "react";
var SlideshowContext = React35.createContext(null);
var useSlideshow = makeUseContext("useSlideshow", "SlideshowContext", SlideshowContext);

// node_modules/yet-another-react-lightbox/dist/plugins/slideshow/SlideshowButton.js
import * as React36 from "react";
var PlayIcon = createIcon("Play", React36.createElement("path", { d: "M8 5v14l11-7z" }));
var PauseIcon = createIcon("Pause", React36.createElement("path", { d: "M6 19h4V5H6v14zm8-14v14h4V5h-4z" }));

// node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/Thumbnails.js
import * as React42 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/ThumbnailsContext.js
import * as React40 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/ThumbnailsTrack.js
import * as React39 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/Thumbnail.js
import * as React38 from "react";
var VideoThumbnailIcon = createIcon("VideoThumbnail", React38.createElement("path", { d: "M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z" }));
var UnknownThumbnailIcon = createIcon("UnknownThumbnail", React38.createElement("path", { d: "M23 18V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zM8.5 12.5l2.5 3.01L14.5 11l4.5 6H5l3.5-4.5z" }));
var activePrefix = makeComposePrefix("active");
var fadeInPrefix = makeComposePrefix("fadein");
var fadeOutPrefix = makeComposePrefix("fadeout");
var placeholderPrefix = makeComposePrefix("placeholder");

// node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/ThumbnailsContext.js
var ThumbnailsContext = React40.createContext(null);
var useThumbnails = makeUseContext("useThumbnails", "ThumbnailsContext", ThumbnailsContext);

// node_modules/yet-another-react-lightbox/dist/plugins/thumbnails/ThumbnailsButton.js
import * as React41 from "react";
var thumbnailsIcon = () => React41.createElement(
  React41.Fragment,
  null,
  React41.createElement("path", { strokeWidth: 2, stroke: "currentColor", strokeLinejoin: "round", fill: "none", d: "M3 5l18 0l0 14l-18 0l0-14z" }),
  React41.createElement("path", { d: "M5 14h4v3h-4zM10 14h4v3h-4zM15 14h4v3h-4z" })
);
var ThumbnailsVisible = createIcon("ThumbnailsVisible", thumbnailsIcon());
var ThumbnailsHidden = createIconDisabled("ThumbnailsHidden", thumbnailsIcon());

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/Zoom.js
import * as React53 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ZoomController.js
import * as React47 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/hooks/useZoomAnimation.js
import * as React43 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/hooks/useZoomCallback.js
import * as React44 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/hooks/useZoomSensors.js
import * as React45 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/hooks/useZoomState.js
import * as React46 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ZoomController.js
var ZoomControllerContext = React47.createContext(null);
var useZoom = makeUseContext("useZoom", "ZoomControllerContext", ZoomControllerContext);

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ZoomToolbarControl.js
import * as React50 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ZoomButtonsGroup.js
import * as React49 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ZoomButton.js
import * as React48 from "react";
var ZoomInIcon = createIcon("ZoomIn", React48.createElement(
  React48.Fragment,
  null,
  React48.createElement("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" }),
  React48.createElement("path", { d: "M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z" })
));
var ZoomOutIcon = createIcon("ZoomOut", React48.createElement("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z" }));
var ZoomButton = React48.forwardRef(function ZoomButton2({ zoomIn, onLoseFocus }, ref) {
  const wasEnabled = React48.useRef(false);
  const wasFocused = React48.useRef(false);
  const { zoom, maxZoom, zoomIn: zoomInCallback, zoomOut: zoomOutCallback, disabled: zoomDisabled } = useZoom();
  const { render } = useLightboxProps();
  const disabled = zoomDisabled || (zoomIn ? zoom >= maxZoom : zoom <= 1);
  React48.useEffect(() => {
    if (disabled && wasEnabled.current && wasFocused.current) {
      onLoseFocus();
    }
    if (!disabled) {
      wasEnabled.current = true;
    }
  }, [disabled, onLoseFocus]);
  return React48.createElement(IconButton, { ref, disabled, label: zoomIn ? "Zoom in" : "Zoom out", icon: zoomIn ? ZoomInIcon : ZoomOutIcon, renderIcon: zoomIn ? render.iconZoomIn : render.iconZoomOut, onClick: zoomIn ? zoomInCallback : zoomOutCallback, onFocus: () => {
    wasFocused.current = true;
  }, onBlur: () => {
    wasFocused.current = false;
  } });
});

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ZoomWrapper.js
import * as React52 from "react";

// node_modules/yet-another-react-lightbox/dist/plugins/zoom/ResponsiveImage.js
import * as React51 from "react";

// node_modules/yet-another-react-lightbox/dist/Lightbox.js
import * as React54 from "react";

// components/blocks/gallery.tsx
var galleryBlockSchema = {
  name: "gallery",
  label: "Gallery",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    }
  ]
};
var breakpoints2 = [1080, 640, 384, 256, 128, 96, 64, 48];
var unsplashPhotos = [
  { id: "2022/impressions/oakzyzw4vkgvtsyvldjv", width: 2048, height: 1368 },
  { id: "2022/impressions/dujuqbrg8yxxixdjnqut", width: 2048, height: 1368 },
  { id: "2022/impressions/payahndptxc8yieykfzr", width: 2048, height: 1368 },
  { id: "2022/impressions/fnwr3kvobu6iv7kiyeru", width: 2048, height: 1368 },
  { id: "2022/impressions/usiuvdp102yxswdz83u6", width: 2048, height: 1368 },
  { id: "2022/impressions/i7chwmvls09yj1hami5m", width: 1368, height: 2048 },
  { id: "2022/impressions/sxzuru2owxg6dlxgxtvw", width: 2048, height: 1368 },
  { id: "2022/impressions/idihsc0miofal8vk0np3", width: 2048, height: 1368 },
  { id: "2022/impressions/sp9lm4wnhxyi1kcsx3r4", width: 1368, height: 2048 },
  { id: "2022/impressions/cutnpogcpprcrfolm4lh", width: 2048, height: 1368 },
  { id: "2022/impressions/nyxsp60kwtiys8m8u6sm", width: 1365, height: 2048 },
  { id: "2022/impressions/iffdrcqa8kfxczgiw244", width: 2048, height: 1151 },
  { id: "2022/impressions/lel8nnjzasfzys6oi7ha", width: 2048, height: 1365 },
  { id: "2022/impressions/da6pe89lom938pj53p3w", width: 2048, height: 1365 }
];
var photos = unsplashPhotos.map((photo) => ({
  src: cloudinaryLoader({ width: photo.width, quality: 75, src: photo.id }),
  width: photo.width,
  height: photo.height,
  srcSet: breakpoints2.map((breakpoint) => {
    const height = Math.round(photo.height / photo.width * breakpoint);
    return {
      src: cloudinaryLoader({ width: breakpoint, quality: 75, src: photo.id }),
      width: breakpoint,
      height
    };
  })
}));
function normalizeSrc(src) {
  return src[0] === "/" ? src.slice(1) : src;
}
function cloudinaryLoader({ src, width, quality }) {
  const params = ["f_auto", "c_limit", "w_" + width, "q_" + (quality || "auto")];
  return `https://res.cloudinary.com/dal9ljm0y/image/upload/${params.join(",")}/${normalizeSrc(src)}`;
}

// components/blocks/tito.tsx
var import_outline6 = __toESM(require_outline());
import { useEffect as useEffect22, useState as useState23 } from "react";
import Head from "next/head";
import Link7 from "next/link";
var titoBlockSchema = {
  name: "tito",
  label: "Tito",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "object",
      label: "Note",
      name: "note",
      fields: [
        {
          type: "string",
          label: "Title",
          name: "title"
        },
        {
          type: "string",
          label: "Text",
          name: "text"
        }
      ]
    }
  ]
};

// node_modules/next-seo/lib/next-seo.module.js
import React57 from "react";
import Head2 from "next/head";
var ESCAPE_ENTITIES = Object.freeze({
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&apos;"
});
var ESCAPE_REGEX = new RegExp("[" + Object.keys(ESCAPE_ENTITIES).join("") + "]", "g");
var ESCAPE_REPLACER = function ESCAPE_REPLACER2(t15) {
  return ESCAPE_ENTITIES[t15];
};
var safeJsonLdReplacer = function() {
  return function(_6, value) {
    switch (typeof value) {
      case "object":
        if (value === null) {
          return void 0;
        }
        return value;
      case "number":
      case "boolean":
      case "bigint":
        return value;
      case "string":
        return value.replace(ESCAPE_REGEX, ESCAPE_REPLACER);
      default: {
        return void 0;
      }
    }
  };
}();

// components/blocks/seo.tsx
var seoBlockSchema = {
  name: "seo",
  label: "SEO Configuration",
  fields: [
    {
      type: "string",
      name: "title",
      label: "Title"
    },
    {
      type: "string",
      name: "description",
      label: "Description"
    },
    {
      type: "object",
      name: "openGraph",
      label: "Open Graph Settings",
      fields: [
        {
          type: "string",
          name: "url",
          label: "URL"
        },
        {
          type: "string",
          name: "site_name",
          label: "Sitename"
        },
        {
          type: "object",
          list: true,
          name: "images",
          label: "Images",
          fields: [
            {
              type: "image",
              name: "url",
              label: "Image URL"
            },
            {
              type: "string",
              name: "alt",
              label: "Alt Text"
            }
          ]
        }
      ]
    }
  ]
};

// components/items/testimonial.tsx
import Image7 from "next/image";
var TestimonialBlockSchema = {
  type: "object",
  label: "Testimonial",
  name: "testimonial",
  fields: [
    {
      type: "string",
      label: "Name",
      name: "name"
    },
    {
      type: "string",
      label: "position",
      name: "position"
    },
    {
      type: "string",
      label: "quote",
      name: "quote"
    },
    {
      type: "object",
      label: "Image",
      name: "image",
      fields: [
        {
          name: "src",
          label: "Image Source",
          type: "image"
        },
        {
          name: "alt",
          label: "Alt Text",
          type: "string"
        }
      ]
    }
  ]
};

// components/fields/color.tsx
import { wrapFieldsWithMeta } from "tinacms";
var colorOptions = [
  "black",
  "black_light",
  "black_lightest"
];
var ColorPickerInput = wrapFieldsWithMeta(({ input }) => {
  const inputClasses = {
    black: "bg-sn-black",
    black_light: "bg-sn-black-light",
    black_lightest: "bg-sn-black-lightest"
  };
  return <>
    <input type="text" id={input.name} className="hidden" {...input} />
    <div className="flex gap-2 flex-wrap">{colorOptions.map((color) => {
      return <button
        key={color}
        className={`w-9 h-9 rounded-full shadow border ${inputClasses[color]} ${input.value === inputClasses[color] ? "ring-[3px] ring-offset-2 ring-blue-400" : ""}`}
        onClick={() => {
          input.onChange(inputClasses[color]);
        }}
      />;
    })}</div>
  </>;
});

// components/items/facts.tsx
var import_outline7 = __toESM(require_outline());
var FactsBlockSchema = {
  type: "object",
  label: "Figures",
  name: "figures",
  list: true,
  fields: [
    {
      type: "string",
      label: "Name",
      name: "name"
    },
    {
      type: "string",
      label: "Number",
      name: "number"
    },
    {
      type: "string",
      label: "Icon",
      name: "icon"
    },
    {
      type: "string",
      label: "Row-span",
      name: "rows"
    },
    {
      type: "string",
      label: "Col-span",
      name: "cols"
    }
  ]
};

// components/blocks/content.tsx
var contentBlockSchema = {
  name: "content",
  label: "Content",
  fields: [
    ContentBlockSchema,
    RoundImageBlockschema,
    InfopointsBlockSchema,
    TestimonialBlockSchema,
    FactsBlockSchema,
    FeaturesBlockSchema,
    {
      type: "boolean",
      name: "contentblock_left",
      label: "Contentblock on left side"
    },
    {
      type: "string",
      name: "background_color",
      label: "Background color",
      ui: {
        component: ColorPickerInput
      }
    }
  ]
};

// components/blocks/content_wide.tsx
var contentWideBlockSchema = {
  name: "content_wide",
  label: "Content wide",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "object",
      label: "Content",
      name: "content",
      list: true,
      fields: [
        {
          type: "string",
          label: "Title",
          name: "title"
        },
        {
          type: "string",
          label: "Text",
          list: true,
          name: "text"
        }
      ]
    }
  ]
};

// components/blocks/pricing.tsx
var import_solid5 = __toESM(require_solid());
import Link8 from "next/link";
var pricingBlockSchema = {
  name: "pricing",
  label: "Pricing table",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    },
    {
      type: "object",
      label: "Categories",
      name: "categories",
      list: true,
      fields: [
        {
          type: "number",
          label: "Price",
          name: "price"
        },
        {
          type: "string",
          label: "CSS input selector",
          name: "selector"
        },
        {
          type: "string",
          label: "Name",
          name: "name"
        },
        {
          type: "string",
          label: "Description",
          name: "description",
          list: true
        },
        {
          type: "string",
          label: "Benefits",
          name: "benefits",
          list: true
        },
        {
          type: "string",
          label: "Not included",
          name: "not_included",
          list: true
        }
      ]
    }
  ]
};

// components/blocks/booth.tsx
var import_solid6 = __toESM(require_solid());
import { Fragment as Fragment19, useEffect as useEffect23, useState as useState24 } from "react";
import Link9 from "next/link";
var import_solid7 = __toESM(require_solid());
var import_outline8 = __toESM(require_outline());
var boothBlockSchema = {
  name: "booth_registration",
  label: "Booth registration",
  fields: [
    {
      type: "string",
      label: "Subtitle",
      name: "subtitle"
    },
    {
      type: "string",
      label: "Title",
      name: "title"
    }
  ]
};

// .tina/config.tsx
var config = defineStaticConfig({
  clientId: process.env.NEXT_PUBLIC_TINA_CLIENT_ID,
  cmsCallback: (cms) => {
    cms.flags.set("branch-switcher", true);
    return cms;
  },
  branch: process.env.NEXT_PUBLIC_TINA_BRANCH || process.env.NEXT_PUBLIC_VERCEL_GIT_COMMIT_REF || process.env.HEAD,
  token: process.env.TINA_TOKEN,
  media: {
    loadCustomStore: async () => {
      const pack = await Promise.resolve().then(() => __toESM(require_dist()));
      return pack.TinaCloudDOSMediaStore;
    }
  },
  build: {
    publicFolder: "public",
    outputFolder: "admin"
  },
  schema: {
    collections: [
      {
        label: "Blog Posts",
        name: "post",
        path: "content/posts",
        format: "mdx",
        ui: {
          router: ({ document: document2 }) => {
            return `/posts/${document2._sys.filename}`;
          }
        },
        fields: [
          {
            type: "string",
            label: "Title",
            name: "title",
            isTitle: true,
            required: true
          },
          {
            type: "image",
            name: "heroImg",
            label: "Hero Image"
          },
          {
            type: "rich-text",
            label: "Excerpt",
            name: "excerpt"
          },
          {
            type: "reference",
            label: "Author",
            name: "author",
            collections: ["author"]
          },
          {
            type: "datetime",
            label: "Posted Date",
            name: "date",
            ui: {
              dateFormat: "MMMM DD YYYY",
              timeFormat: "hh:mm A"
            }
          },
          {
            type: "rich-text",
            label: "Body",
            name: "_body",
            templates: [
              {
                name: "DateTime",
                label: "Date & Time",
                inline: true,
                fields: [
                  {
                    name: "format",
                    label: "Format",
                    type: "string",
                    options: ["utc", "iso", "local"]
                  }
                ]
              },
              {
                name: "BlockQuote",
                label: "Block Quote",
                fields: [
                  {
                    name: "children",
                    label: "Quote",
                    type: "rich-text"
                  },
                  {
                    name: "authorName",
                    label: "Author",
                    type: "string"
                  }
                ]
              },
              {
                name: "NewsletterSignup",
                label: "Newsletter Sign Up",
                fields: [
                  {
                    name: "children",
                    label: "CTA",
                    type: "rich-text"
                  },
                  {
                    name: "placeholder",
                    label: "Placeholder",
                    type: "string"
                  },
                  {
                    name: "buttonText",
                    label: "Button Text",
                    type: "string"
                  },
                  {
                    name: "disclaimer",
                    label: "Disclaimer",
                    type: "rich-text"
                  }
                ],
                ui: {
                  defaultItem: {
                    placeholder: "Enter your email",
                    buttonText: "Notify Me"
                  }
                }
              }
            ],
            isBody: true
          }
        ]
      },
      {
        label: "Global",
        name: "global",
        path: "content/global",
        format: "json",
        ui: {
          global: true
        },
        fields: [
          {
            type: "object",
            label: "Header",
            name: "header",
            fields: [
              {
                type: "string",
                label: "Name",
                name: "name"
              },
              {
                type: "string",
                label: "Color",
                name: "color",
                options: [
                  { label: "Default", value: "default" },
                  { label: "Primary", value: "primary" }
                ]
              },
              {
                type: "object",
                label: "Nav Links",
                name: "nav",
                list: true,
                ui: {
                  itemProps: (item) => {
                    return { label: item?.label };
                  },
                  defaultItem: {
                    href: "home",
                    label: "Home"
                  }
                },
                fields: [
                  {
                    type: "string",
                    label: "Link",
                    name: "href"
                  },
                  {
                    type: "string",
                    label: "Label",
                    name: "label"
                  }
                ]
              },
              {
                type: "object",
                label: "Social Links",
                name: "social",
                list: true,
                fields: [
                  {
                    type: "string",
                    label: "Title",
                    name: "title"
                  },
                  {
                    type: "string",
                    label: "Link",
                    name: "link"
                  }
                ]
              }
            ]
          },
          {
            type: "object",
            label: "Footer",
            name: "footer",
            fields: [
              {
                type: "string",
                label: "Copyright",
                name: "copyright"
              },
              {
                type: "object",
                label: "Navigation items",
                name: "navitems",
                list: true,
                fields: [
                  {
                    type: "string",
                    label: "Title",
                    name: "title"
                  },
                  {
                    type: "object",
                    label: "List items",
                    name: "listitems",
                    list: true,
                    fields: [
                      {
                        type: "string",
                        label: "Title",
                        name: "title"
                      },
                      {
                        type: "string",
                        label: "Link",
                        name: "link"
                      }
                    ]
                  }
                ]
              },
              {
                type: "object",
                label: "Social Links",
                name: "social",
                list: true,
                fields: [
                  {
                    type: "string",
                    label: "Title",
                    name: "title"
                  },
                  {
                    type: "string",
                    label: "Link",
                    name: "link"
                  }
                ]
              },
              {
                type: "object",
                label: "Banner",
                name: "banner",
                fields: [
                  {
                    type: "string",
                    label: "Text",
                    name: "text"
                  },
                  {
                    type: "string",
                    label: "Agree button text",
                    name: "agree_button"
                  },
                  {
                    type: "string",
                    label: "Close button text",
                    name: "close_button"
                  },
                  {
                    type: "string",
                    label: "Link",
                    name: "link"
                  },
                  {
                    type: "string",
                    label: "Date",
                    name: "date"
                  }
                ]
              }
            ]
          },
          {
            type: "object",
            label: "Theme",
            name: "theme",
            fields: [
              {
                type: "string",
                name: "font",
                label: "Font Family",
                options: [
                  {
                    label: "System Sans",
                    value: "sans"
                  },
                  {
                    label: "Nunito",
                    value: "nunito"
                  },
                  {
                    label: "Lato",
                    value: "lato"
                  }
                ]
              },
              {
                type: "string",
                name: "darkMode",
                label: "Dark Mode",
                options: [
                  {
                    label: "System",
                    value: "system"
                  },
                  {
                    label: "Light",
                    value: "light"
                  },
                  {
                    label: "Dark",
                    value: "dark"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        label: "Authors",
        name: "author",
        path: "content/authors",
        format: "md",
        fields: [
          {
            type: "string",
            label: "Name",
            name: "name",
            isTitle: true,
            required: true
          },
          {
            type: "string",
            label: "Avatar",
            name: "avatar"
          }
        ]
      },
      {
        label: "Pages",
        name: "page",
        path: "content/pages",
        ui: {
          router: ({ document: document2 }) => {
            if (document2._sys.filename === "home") {
              return `/`;
            }
            if (document2._sys.filename === "about") {
              return `/about`;
            }
            if (document2._sys.filename === "hiring") {
              return `/hiring`;
            }
            if (document2._sys.filename === "tickets") {
              return `/tickets`;
            }
            if (document2._sys.filename === "terms-and-conditions") {
              return `/terms-and-conditions`;
            }
            if (document2._sys.filename === "privacy-policy") {
              return `/privacy-policy`;
            }
            if (document2._sys.filename === "imprint") {
              return `/imprint`;
            }
            if (document2._sys.filename === "booth") {
              return `/booth`;
            }
            if (document2._sys.filename === "contact") {
              return `/contact`;
            }
            if (document2._sys.filename === "impressions") {
              return `/impressions`;
            }
            if (document2._sys.filename === "partner") {
              return `/partner`;
            }
            if (document2._sys.filename === "party") {
              return `/party`;
            }
            return void 0;
          }
        },
        fields: [
          {
            type: "string",
            label: "Title",
            name: "title",
            description: "The title of the page. This is used to display the title in the CMS",
            isTitle: true,
            required: true
          },
          {
            type: "object",
            list: true,
            name: "blocks",
            label: "Sections",
            ui: {
              visualSelector: true
            },
            templates: [
              heroBlockSchema,
              speakersBlockSchema,
              partnersBlockSchema,
              countdownBlockSchema,
              positionsBlockSchema,
              partnerFormSchema,
              teamBlockSchema,
              tabsBlockSchema,
              boothBlockSchema,
              dropdownBlockSchema,
              benefitsBlockSchema,
              galleryBlockSchema,
              titoBlockSchema,
              seoBlockSchema,
              pricingBlockSchema,
              contentBlockSchema,
              contentWideBlockSchema
            ]
          }
        ]
      }
    ]
  }
});
var config_default = config;
export {
  config_default as default
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* @license
Papa Parse
v5.3.2
https://github.com/mholt/PapaParse
License: MIT
*/
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-dom-server.browser.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! moment.js
//! momentjs.com
//! version : 2.29.4
