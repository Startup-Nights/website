# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  post(relativePath: String): Post!
  postConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PostFilter): PostConnection!
  global(relativePath: String): Global!
  globalConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: GlobalFilter): GlobalConnection!
  author(relativePath: String): Author!
  authorConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: AuthorFilter): AuthorConnection!
  page(relativePath: String): Page!
  pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PageFilter): PageConnection!
}

input DocumentFilter {
  post: PostFilter
  global: GlobalFilter
  author: AuthorFilter
  page: PageFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Post | Global | Author | Page | Folder

union PostAuthor = Author

type Post implements Node & Document {
  title: String!
  heroImg: String
  excerpt: JSON
  author: PostAuthor
  date: String
  _body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input PostAuthorFilter {
  author: AuthorFilter
}

input DatetimeFilter {
  after: String
  before: String
  eq: String
  exists: Boolean
  in: [String]
}

input Post_bodyDateTimeFilter {
  format: StringFilter
}

input Post_bodyBlockQuoteFilter {
  children: RichTextFilter
  authorName: StringFilter
}

input Post_bodyNewsletterSignupFilter {
  children: RichTextFilter
  placeholder: StringFilter
  buttonText: StringFilter
  disclaimer: RichTextFilter
}

input Post_bodyFilter {
  DateTime: Post_bodyDateTimeFilter
  BlockQuote: Post_bodyBlockQuoteFilter
  NewsletterSignup: Post_bodyNewsletterSignupFilter
}

input PostFilter {
  title: StringFilter
  heroImg: ImageFilter
  excerpt: RichTextFilter
  author: PostAuthorFilter
  date: DatetimeFilter
  _body: Post_bodyFilter
}

type PostConnectionEdges {
  cursor: String!
  node: Post
}

type PostConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PostConnectionEdges]
}

type GlobalHeaderNavSubitems {
  href: String
  label: String
  description: String
  icon: String
}

type GlobalHeaderNavCallsToAction {
  href: String
  label: String
  icon: String
}

type GlobalHeaderNav {
  href: String
  label: String
  subitems: [GlobalHeaderNavSubitems]
  callsToAction: [GlobalHeaderNavCallsToAction]
}

type GlobalHeaderSocial {
  title: String
  link: String
}

type GlobalHeader {
  name: String
  color: String
  nav: [GlobalHeaderNav]
  social: [GlobalHeaderSocial]
}

type GlobalFooterNavitemsListitems {
  title: String
  link: String
}

type GlobalFooterNavitems {
  title: String
  listitems: [GlobalFooterNavitemsListitems]
}

type GlobalFooterSocial {
  title: String
  link: String
}

type GlobalFooterBanner {
  text: String
  agree_button: String
  close_button: String
  link: String
  date: String
}

type GlobalFooter {
  copyright: String
  navitems: [GlobalFooterNavitems]
  social: [GlobalFooterSocial]
  banner: GlobalFooterBanner
}

type GlobalTheme {
  font: String
  darkMode: String
}

type Global implements Node & Document {
  header: GlobalHeader
  footer: GlobalFooter
  theme: GlobalTheme
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input GlobalHeaderNavSubitemsFilter {
  href: StringFilter
  label: StringFilter
  description: StringFilter
  icon: StringFilter
}

input GlobalHeaderNavCallsToActionFilter {
  href: StringFilter
  label: StringFilter
  icon: StringFilter
}

input GlobalHeaderNavFilter {
  href: StringFilter
  label: StringFilter
  subitems: GlobalHeaderNavSubitemsFilter
  callsToAction: GlobalHeaderNavCallsToActionFilter
}

input GlobalHeaderSocialFilter {
  title: StringFilter
  link: StringFilter
}

input GlobalHeaderFilter {
  name: StringFilter
  color: StringFilter
  nav: GlobalHeaderNavFilter
  social: GlobalHeaderSocialFilter
}

input GlobalFooterNavitemsListitemsFilter {
  title: StringFilter
  link: StringFilter
}

input GlobalFooterNavitemsFilter {
  title: StringFilter
  listitems: GlobalFooterNavitemsListitemsFilter
}

input GlobalFooterSocialFilter {
  title: StringFilter
  link: StringFilter
}

input GlobalFooterBannerFilter {
  text: StringFilter
  agree_button: StringFilter
  close_button: StringFilter
  link: StringFilter
  date: StringFilter
}

input GlobalFooterFilter {
  copyright: StringFilter
  navitems: GlobalFooterNavitemsFilter
  social: GlobalFooterSocialFilter
  banner: GlobalFooterBannerFilter
}

input GlobalThemeFilter {
  font: StringFilter
  darkMode: StringFilter
}

input GlobalFilter {
  header: GlobalHeaderFilter
  footer: GlobalFooterFilter
  theme: GlobalThemeFilter
}

type GlobalConnectionEdges {
  cursor: String!
  node: Global
}

type GlobalConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [GlobalConnectionEdges]
}

type Author implements Node & Document {
  name: String!
  avatar: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input AuthorFilter {
  name: StringFilter
  avatar: StringFilter
}

type AuthorConnectionEdges {
  cursor: String!
  node: Author
}

type AuthorConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [AuthorConnectionEdges]
}

type PageBlocksHeroCta {
  link: String
  text: String
  new_tab: Boolean
}

type PageBlocksHeroCta_secondary {
  link: String
  text: String
  new_tab: Boolean
  without_background: Boolean
}

type PageBlocksHeroImage {
  src: String
  alt: String
}

type PageBlocksHeroVideo {
  src: String
  fallback: String
}

type PageBlocksHero {
  subtitle: String
  title: String
  title_line2: String
  cta: PageBlocksHeroCta
  cta_secondary: PageBlocksHeroCta_secondary
  image: PageBlocksHeroImage
  video: PageBlocksHeroVideo
}

type PageBlocksSpeakersCta {
  link: String
  text: String
}

type PageBlocksSpeakersSpeakersSocial_links {
  linkedin: String
}

type PageBlocksSpeakersSpeakersImage {
  src: String
  alt: String
}

type PageBlocksSpeakersSpeakers {
  name: String
  position: String
  description: JSON
  social_links: PageBlocksSpeakersSpeakersSocial_links
  image: PageBlocksSpeakersSpeakersImage
}

type PageBlocksSpeakers {
  subtitle: String
  title: String
  paragraph: String
  cta: PageBlocksSpeakersCta
  speakers: [PageBlocksSpeakersSpeakers]
  background_color: String
}

type PageBlocksPartner_listCta {
  link: String
  text: String
}

type PageBlocksPartner_listPartnersPartners {
  src: String
  alt: String
  link: String
}

type PageBlocksPartner_listPartners {
  title: String
  grid_cols: Float
  partners: [PageBlocksPartner_listPartnersPartners]
}

type PageBlocksPartner_list {
  subtitle: String
  title: String
  paragraph: String
  cta: PageBlocksPartner_listCta
  partners: [PageBlocksPartner_listPartners]
}

type PageBlocksCountdownCta {
  link: String
  text: String
}

type PageBlocksCountdown {
  title: String
  date: String
  cta: PageBlocksCountdownCta
}

type PageBlocksPositionsOpen_positions {
  title: String
  text: JSON
  note: String
  department: String
  link: String
}

type PageBlocksPositions {
  subtitle: String
  title: String
  open_positions: [PageBlocksPositionsOpen_positions]
}

type PageBlocksPartnerform {
  title: String
  description: String
}

type PageBlocksTeamDivisionsMembers {
  name: String
  position: String
  linkedin: String
  src: String
  alt: String
}

type PageBlocksTeamDivisions {
  subtitle: String!
  title: String!
  members: [PageBlocksTeamDivisionsMembers]
}

type PageBlocksTeam {
  subtitle: String
  title: String
  divisions: [PageBlocksTeamDivisions]
}

type PageBlocksTabsTabitemsContent_blockCta {
  link: String
  text: String
}

type PageBlocksTabsTabitemsContent_blockCta_secondary {
  link: String
  text: String
}

type PageBlocksTabsTabitemsContent_blockList {
  title: String
  list_items: [String]
}

type PageBlocksTabsTabitemsContent_block {
  subtitle: String
  title: String
  content: [String]
  cta: PageBlocksTabsTabitemsContent_blockCta
  cta_secondary: PageBlocksTabsTabitemsContent_blockCta_secondary
  list: PageBlocksTabsTabitemsContent_blockList
}

type PageBlocksTabsTabitemsImage {
  src: String
  alt: String
}

type PageBlocksTabsTabitemsInfopointsNewsletter_cta {
  agree_button: String
  modal_title: String
  modal_text: String
}

type PageBlocksTabsTabitemsInfopoints {
  name: String
  text: String
  link: String
  newsletter_cta: PageBlocksTabsTabitemsInfopointsNewsletter_cta
}

type PageBlocksTabsTabitems {
  content_block: PageBlocksTabsTabitemsContent_block
  image: PageBlocksTabsTabitemsImage
  infopoints: [PageBlocksTabsTabitemsInfopoints]
}

type PageBlocksTabs {
  tabitems: [PageBlocksTabsTabitems]
}

type PageBlocksBooth_registration {
  subtitle: String
  title: String
}

type PageBlocksDropdownItemsContent_blockCta {
  link: String
  text: String
}

type PageBlocksDropdownItemsContent_blockCta_secondary {
  link: String
  text: String
}

type PageBlocksDropdownItemsContent_blockList {
  title: String
  list_items: [String]
}

type PageBlocksDropdownItemsContent_block {
  subtitle: String
  title: String
  content: [String]
  cta: PageBlocksDropdownItemsContent_blockCta
  cta_secondary: PageBlocksDropdownItemsContent_blockCta_secondary
  list: PageBlocksDropdownItemsContent_blockList
}

type PageBlocksDropdownItemsImage {
  src: String
  alt: String
}

type PageBlocksDropdownItemsInfopointsNewsletter_cta {
  agree_button: String
  modal_title: String
  modal_text: String
}

type PageBlocksDropdownItemsInfopoints {
  name: String
  text: String
  link: String
  newsletter_cta: PageBlocksDropdownItemsInfopointsNewsletter_cta
}

type PageBlocksDropdownItemsFeatures {
  title: String
  text: String
  icon: String
}

type PageBlocksDropdownItems {
  content_block: PageBlocksDropdownItemsContent_block
  image: PageBlocksDropdownItemsImage
  infopoints: [PageBlocksDropdownItemsInfopoints]
  features: [PageBlocksDropdownItemsFeatures]
}

type PageBlocksDropdown {
  items: [PageBlocksDropdownItems]
  padding: Boolean
}

type PageBlocksBenefitsBenefit_items {
  title: String
  icon: String
}

type PageBlocksBenefits {
  subtitle: String
  title: String
  benefit_items: [PageBlocksBenefitsBenefit_items]
}

type PageBlocksOverviewBenefit_itemsImage {
  src: String
  alt: String
}

type PageBlocksOverviewBenefit_items {
  icon: String
  title: String
  image: PageBlocksOverviewBenefit_itemsImage
  description: [String]
}

type PageBlocksOverview {
  subtitle: String
  title: String
  benefit_items: [PageBlocksOverviewBenefit_items]
  background_color: String
}

type PageBlocksGallery {
  subtitle: String
  title: String
}

type PageBlocksTitoNote {
  title: String
  text: String
}

type PageBlocksTito {
  subtitle: String
  title: String
  note: PageBlocksTitoNote
}

type PageBlocksSeoOpenGraphImages {
  url: String
  alt: String
}

type PageBlocksSeoOpenGraph {
  url: String
  site_name: String
  images: [PageBlocksSeoOpenGraphImages]
}

type PageBlocksSeo {
  title: String
  description: String
  openGraph: PageBlocksSeoOpenGraph
}

type PageBlocksPricingCta {
  link: String
  text: String
}

type PageBlocksPricingCategories {
  price: Float
  selector: String
  link: String
  name: String
  description: [String]
  benefits: [String]
  not_included: [String]
}

type PageBlocksPricing {
  subtitle: String
  title: String
  cta: PageBlocksPricingCta
  categories: [PageBlocksPricingCategories]
  background_color: String
}

type PageBlocksContentContent_blockCta {
  link: String
  text: String
}

type PageBlocksContentContent_blockCta_secondary {
  link: String
  text: String
}

type PageBlocksContentContent_blockList {
  title: String
  list_items: [String]
}

type PageBlocksContentContent_block {
  subtitle: String
  title: String
  content: [String]
  cta: PageBlocksContentContent_blockCta
  cta_secondary: PageBlocksContentContent_blockCta_secondary
  list: PageBlocksContentContent_blockList
}

type PageBlocksContentImage {
  src: String
  alt: String
}

type PageBlocksContentInfopointsNewsletter_cta {
  agree_button: String
  modal_title: String
  modal_text: String
}

type PageBlocksContentInfopoints {
  name: String
  text: String
  link: String
  newsletter_cta: PageBlocksContentInfopointsNewsletter_cta
}

type PageBlocksContentTestimonialImage {
  src: String
  alt: String
}

type PageBlocksContentTestimonial {
  name: String
  position: String
  quote: String
  image: PageBlocksContentTestimonialImage
}

type PageBlocksContentFigures {
  name: String
  number: String
  icon: String
  rows: String
  cols: String
}

type PageBlocksContentMembers {
  name: String
  position: String
  linkedin: String
  src: String
  alt: String
  stage: String
}

type PageBlocksContentFeatures {
  title: String
  text: String
  icon: String
}

type PageBlocksContent {
  content_block: PageBlocksContentContent_block
  image: PageBlocksContentImage
  infopoints: [PageBlocksContentInfopoints]
  testimonial: PageBlocksContentTestimonial
  figures: [PageBlocksContentFigures]
  members: [PageBlocksContentMembers]
  features: [PageBlocksContentFeatures]
  contentblock_left: Boolean
  background_color: String
}

type PageBlocksContent_wideContent {
  title: String
  text: [String]
}

type PageBlocksContent_wideCta {
  link: String
  text: String
}

type PageBlocksContent_wideCta_secondary {
  link: String
  text: String
}

type PageBlocksContent_wide {
  subtitle: String
  title: String
  content: [PageBlocksContent_wideContent]
  background_color: String
  cta: PageBlocksContent_wideCta
  cta_secondary: PageBlocksContent_wideCta_secondary
}

type PageBlocksImagegridImagesImage {
  src: String
  alt: String
}

type PageBlocksImagegridImages {
  name: String
  position: String
  image: PageBlocksImagegridImagesImage
}

type PageBlocksImagegrid {
  subtitle: String
  title: String
  paragraph: String
  id: String
  images: [PageBlocksImagegridImages]
  background_color: String
}

type PageBlocksPitching_registration {
  subtitle: String
  title: String
}

type PageBlocksCookieTable {
  subtitle: String
  title: String
}

type PageBlocksQuotesVideosVideo {
  src: String
  fallback: String
}

type PageBlocksQuotesVideos {
  video: PageBlocksQuotesVideosVideo
}

type PageBlocksQuotes {
  subtitle: String
  title: String
  videos: [PageBlocksQuotesVideos]
  background_color: String
}

type PageBlocksProgram {
  subtitle: String
  title: String
  background_color: String
}

type PageBlocksCrop {
  title: String
}

type PageBlocksBooth_approved {
  subtitle: String
  title: String
  background_color: String
}

union PageBlocks = PageBlocksHero | PageBlocksSpeakers | PageBlocksPartner_list | PageBlocksCountdown | PageBlocksPositions | PageBlocksPartnerform | PageBlocksTeam | PageBlocksTabs | PageBlocksBooth_registration | PageBlocksDropdown | PageBlocksBenefits | PageBlocksOverview | PageBlocksGallery | PageBlocksTito | PageBlocksSeo | PageBlocksPricing | PageBlocksContent | PageBlocksContent_wide | PageBlocksImagegrid | PageBlocksPitching_registration | PageBlocksCookieTable | PageBlocksQuotes | PageBlocksProgram | PageBlocksCrop | PageBlocksBooth_approved

type Page implements Node & Document {
  title: String!
  blocks: [PageBlocks]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input BooleanFilter {
  eq: Boolean
  exists: Boolean
}

input PageBlocksHeroCtaFilter {
  link: StringFilter
  text: StringFilter
  new_tab: BooleanFilter
}

input PageBlocksHeroCta_secondaryFilter {
  link: StringFilter
  text: StringFilter
  new_tab: BooleanFilter
  without_background: BooleanFilter
}

input PageBlocksHeroImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksHeroVideoFilter {
  src: ImageFilter
  fallback: ImageFilter
}

input PageBlocksHeroFilter {
  subtitle: StringFilter
  title: StringFilter
  title_line2: StringFilter
  cta: PageBlocksHeroCtaFilter
  cta_secondary: PageBlocksHeroCta_secondaryFilter
  image: PageBlocksHeroImageFilter
  video: PageBlocksHeroVideoFilter
}

input PageBlocksSpeakersCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksSpeakersSpeakersSocial_linksFilter {
  linkedin: StringFilter
}

input PageBlocksSpeakersSpeakersImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksSpeakersSpeakersFilter {
  name: StringFilter
  position: StringFilter
  description: RichTextFilter
  social_links: PageBlocksSpeakersSpeakersSocial_linksFilter
  image: PageBlocksSpeakersSpeakersImageFilter
}

input PageBlocksSpeakersFilter {
  subtitle: StringFilter
  title: StringFilter
  paragraph: StringFilter
  cta: PageBlocksSpeakersCtaFilter
  speakers: PageBlocksSpeakersSpeakersFilter
  background_color: StringFilter
}

input PageBlocksPartner_listCtaFilter {
  link: StringFilter
  text: StringFilter
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input PageBlocksPartner_listPartnersPartnersFilter {
  src: ImageFilter
  alt: StringFilter
  link: StringFilter
}

input PageBlocksPartner_listPartnersFilter {
  title: StringFilter
  grid_cols: NumberFilter
  partners: PageBlocksPartner_listPartnersPartnersFilter
}

input PageBlocksPartner_listFilter {
  subtitle: StringFilter
  title: StringFilter
  paragraph: StringFilter
  cta: PageBlocksPartner_listCtaFilter
  partners: PageBlocksPartner_listPartnersFilter
}

input PageBlocksCountdownCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksCountdownFilter {
  title: StringFilter
  date: StringFilter
  cta: PageBlocksCountdownCtaFilter
}

input PageBlocksPositionsOpen_positionsFilter {
  title: StringFilter
  text: RichTextFilter
  note: StringFilter
  department: StringFilter
  link: StringFilter
}

input PageBlocksPositionsFilter {
  subtitle: StringFilter
  title: StringFilter
  open_positions: PageBlocksPositionsOpen_positionsFilter
}

input PageBlocksPartnerformFilter {
  title: StringFilter
  description: StringFilter
}

input PageBlocksTeamDivisionsMembersFilter {
  name: StringFilter
  position: StringFilter
  linkedin: StringFilter
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksTeamDivisionsFilter {
  subtitle: StringFilter
  title: StringFilter
  members: PageBlocksTeamDivisionsMembersFilter
}

input PageBlocksTeamFilter {
  subtitle: StringFilter
  title: StringFilter
  divisions: PageBlocksTeamDivisionsFilter
}

input PageBlocksTabsTabitemsContent_blockCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksTabsTabitemsContent_blockCta_secondaryFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksTabsTabitemsContent_blockListFilter {
  title: StringFilter
  list_items: StringFilter
}

input PageBlocksTabsTabitemsContent_blockFilter {
  subtitle: StringFilter
  title: StringFilter
  content: StringFilter
  cta: PageBlocksTabsTabitemsContent_blockCtaFilter
  cta_secondary: PageBlocksTabsTabitemsContent_blockCta_secondaryFilter
  list: PageBlocksTabsTabitemsContent_blockListFilter
}

input PageBlocksTabsTabitemsImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksTabsTabitemsInfopointsNewsletter_ctaFilter {
  agree_button: StringFilter
  modal_title: StringFilter
  modal_text: StringFilter
}

input PageBlocksTabsTabitemsInfopointsFilter {
  name: StringFilter
  text: StringFilter
  link: StringFilter
  newsletter_cta: PageBlocksTabsTabitemsInfopointsNewsletter_ctaFilter
}

input PageBlocksTabsTabitemsFilter {
  content_block: PageBlocksTabsTabitemsContent_blockFilter
  image: PageBlocksTabsTabitemsImageFilter
  infopoints: PageBlocksTabsTabitemsInfopointsFilter
}

input PageBlocksTabsFilter {
  tabitems: PageBlocksTabsTabitemsFilter
}

input PageBlocksBooth_registrationFilter {
  subtitle: StringFilter
  title: StringFilter
}

input PageBlocksDropdownItemsContent_blockCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksDropdownItemsContent_blockCta_secondaryFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksDropdownItemsContent_blockListFilter {
  title: StringFilter
  list_items: StringFilter
}

input PageBlocksDropdownItemsContent_blockFilter {
  subtitle: StringFilter
  title: StringFilter
  content: StringFilter
  cta: PageBlocksDropdownItemsContent_blockCtaFilter
  cta_secondary: PageBlocksDropdownItemsContent_blockCta_secondaryFilter
  list: PageBlocksDropdownItemsContent_blockListFilter
}

input PageBlocksDropdownItemsImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksDropdownItemsInfopointsNewsletter_ctaFilter {
  agree_button: StringFilter
  modal_title: StringFilter
  modal_text: StringFilter
}

input PageBlocksDropdownItemsInfopointsFilter {
  name: StringFilter
  text: StringFilter
  link: StringFilter
  newsletter_cta: PageBlocksDropdownItemsInfopointsNewsletter_ctaFilter
}

input PageBlocksDropdownItemsFeaturesFilter {
  title: StringFilter
  text: StringFilter
  icon: StringFilter
}

input PageBlocksDropdownItemsFilter {
  content_block: PageBlocksDropdownItemsContent_blockFilter
  image: PageBlocksDropdownItemsImageFilter
  infopoints: PageBlocksDropdownItemsInfopointsFilter
  features: PageBlocksDropdownItemsFeaturesFilter
}

input PageBlocksDropdownFilter {
  items: PageBlocksDropdownItemsFilter
  padding: BooleanFilter
}

input PageBlocksBenefitsBenefit_itemsFilter {
  title: StringFilter
  icon: StringFilter
}

input PageBlocksBenefitsFilter {
  subtitle: StringFilter
  title: StringFilter
  benefit_items: PageBlocksBenefitsBenefit_itemsFilter
}

input PageBlocksOverviewBenefit_itemsImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksOverviewBenefit_itemsFilter {
  icon: StringFilter
  title: StringFilter
  image: PageBlocksOverviewBenefit_itemsImageFilter
  description: StringFilter
}

input PageBlocksOverviewFilter {
  subtitle: StringFilter
  title: StringFilter
  benefit_items: PageBlocksOverviewBenefit_itemsFilter
  background_color: StringFilter
}

input PageBlocksGalleryFilter {
  subtitle: StringFilter
  title: StringFilter
}

input PageBlocksTitoNoteFilter {
  title: StringFilter
  text: StringFilter
}

input PageBlocksTitoFilter {
  subtitle: StringFilter
  title: StringFilter
  note: PageBlocksTitoNoteFilter
}

input PageBlocksSeoOpenGraphImagesFilter {
  url: ImageFilter
  alt: StringFilter
}

input PageBlocksSeoOpenGraphFilter {
  url: StringFilter
  site_name: StringFilter
  images: PageBlocksSeoOpenGraphImagesFilter
}

input PageBlocksSeoFilter {
  title: StringFilter
  description: StringFilter
  openGraph: PageBlocksSeoOpenGraphFilter
}

input PageBlocksPricingCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksPricingCategoriesFilter {
  price: NumberFilter
  selector: StringFilter
  link: StringFilter
  name: StringFilter
  description: StringFilter
  benefits: StringFilter
  not_included: StringFilter
}

input PageBlocksPricingFilter {
  subtitle: StringFilter
  title: StringFilter
  cta: PageBlocksPricingCtaFilter
  categories: PageBlocksPricingCategoriesFilter
  background_color: StringFilter
}

input PageBlocksContentContent_blockCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksContentContent_blockCta_secondaryFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksContentContent_blockListFilter {
  title: StringFilter
  list_items: StringFilter
}

input PageBlocksContentContent_blockFilter {
  subtitle: StringFilter
  title: StringFilter
  content: StringFilter
  cta: PageBlocksContentContent_blockCtaFilter
  cta_secondary: PageBlocksContentContent_blockCta_secondaryFilter
  list: PageBlocksContentContent_blockListFilter
}

input PageBlocksContentImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksContentInfopointsNewsletter_ctaFilter {
  agree_button: StringFilter
  modal_title: StringFilter
  modal_text: StringFilter
}

input PageBlocksContentInfopointsFilter {
  name: StringFilter
  text: StringFilter
  link: StringFilter
  newsletter_cta: PageBlocksContentInfopointsNewsletter_ctaFilter
}

input PageBlocksContentTestimonialImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksContentTestimonialFilter {
  name: StringFilter
  position: StringFilter
  quote: StringFilter
  image: PageBlocksContentTestimonialImageFilter
}

input PageBlocksContentFiguresFilter {
  name: StringFilter
  number: StringFilter
  icon: StringFilter
  rows: StringFilter
  cols: StringFilter
}

input PageBlocksContentMembersFilter {
  name: StringFilter
  position: StringFilter
  linkedin: StringFilter
  src: ImageFilter
  alt: StringFilter
  stage: StringFilter
}

input PageBlocksContentFeaturesFilter {
  title: StringFilter
  text: StringFilter
  icon: StringFilter
}

input PageBlocksContentFilter {
  content_block: PageBlocksContentContent_blockFilter
  image: PageBlocksContentImageFilter
  infopoints: PageBlocksContentInfopointsFilter
  testimonial: PageBlocksContentTestimonialFilter
  figures: PageBlocksContentFiguresFilter
  members: PageBlocksContentMembersFilter
  features: PageBlocksContentFeaturesFilter
  contentblock_left: BooleanFilter
  background_color: StringFilter
}

input PageBlocksContent_wideContentFilter {
  title: StringFilter
  text: StringFilter
}

input PageBlocksContent_wideCtaFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksContent_wideCta_secondaryFilter {
  link: StringFilter
  text: StringFilter
}

input PageBlocksContent_wideFilter {
  subtitle: StringFilter
  title: StringFilter
  content: PageBlocksContent_wideContentFilter
  background_color: StringFilter
  cta: PageBlocksContent_wideCtaFilter
  cta_secondary: PageBlocksContent_wideCta_secondaryFilter
}

input PageBlocksImagegridImagesImageFilter {
  src: ImageFilter
  alt: StringFilter
}

input PageBlocksImagegridImagesFilter {
  name: StringFilter
  position: StringFilter
  image: PageBlocksImagegridImagesImageFilter
}

input PageBlocksImagegridFilter {
  subtitle: StringFilter
  title: StringFilter
  paragraph: StringFilter
  id: StringFilter
  images: PageBlocksImagegridImagesFilter
  background_color: StringFilter
}

input PageBlocksPitching_registrationFilter {
  subtitle: StringFilter
  title: StringFilter
}

input PageBlocksCookieTableFilter {
  subtitle: StringFilter
  title: StringFilter
}

input PageBlocksQuotesVideosVideoFilter {
  src: ImageFilter
  fallback: ImageFilter
}

input PageBlocksQuotesVideosFilter {
  video: PageBlocksQuotesVideosVideoFilter
}

input PageBlocksQuotesFilter {
  subtitle: StringFilter
  title: StringFilter
  videos: PageBlocksQuotesVideosFilter
  background_color: StringFilter
}

input PageBlocksProgramFilter {
  subtitle: StringFilter
  title: StringFilter
  background_color: StringFilter
}

input PageBlocksCropFilter {
  title: StringFilter
}

input PageBlocksBooth_approvedFilter {
  subtitle: StringFilter
  title: StringFilter
  background_color: StringFilter
}

input PageBlocksFilter {
  hero: PageBlocksHeroFilter
  speakers: PageBlocksSpeakersFilter
  partner_list: PageBlocksPartner_listFilter
  countdown: PageBlocksCountdownFilter
  positions: PageBlocksPositionsFilter
  partnerform: PageBlocksPartnerformFilter
  team: PageBlocksTeamFilter
  tabs: PageBlocksTabsFilter
  booth_registration: PageBlocksBooth_registrationFilter
  Dropdown: PageBlocksDropdownFilter
  benefits: PageBlocksBenefitsFilter
  overview: PageBlocksOverviewFilter
  gallery: PageBlocksGalleryFilter
  tito: PageBlocksTitoFilter
  seo: PageBlocksSeoFilter
  pricing: PageBlocksPricingFilter
  content: PageBlocksContentFilter
  content_wide: PageBlocksContent_wideFilter
  imagegrid: PageBlocksImagegridFilter
  pitching_registration: PageBlocksPitching_registrationFilter
  cookieTable: PageBlocksCookieTableFilter
  quotes: PageBlocksQuotesFilter
  program: PageBlocksProgramFilter
  crop: PageBlocksCropFilter
  booth_approved: PageBlocksBooth_approvedFilter
}

input PageFilter {
  title: StringFilter
  blocks: PageBlocksFilter
}

type PageConnectionEdges {
  cursor: String!
  node: Page
}

type PageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PageConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updatePost(relativePath: String!, params: PostMutation!): Post!
  createPost(relativePath: String!, params: PostMutation!): Post!
  updateGlobal(relativePath: String!, params: GlobalMutation!): Global!
  createGlobal(relativePath: String!, params: GlobalMutation!): Global!
  updateAuthor(relativePath: String!, params: AuthorMutation!): Author!
  createAuthor(relativePath: String!, params: AuthorMutation!): Author!
  updatePage(relativePath: String!, params: PageMutation!): Page!
  createPage(relativePath: String!, params: PageMutation!): Page!
}

input DocumentUpdateMutation {
  post: PostMutation
  global: GlobalMutation
  author: AuthorMutation
  page: PageMutation
  relativePath: String
}

input DocumentMutation {
  post: PostMutation
  global: GlobalMutation
  author: AuthorMutation
  page: PageMutation
}

input PostMutation {
  title: String
  heroImg: String
  excerpt: JSON
  author: String
  date: String
  _body: JSON
}

input GlobalHeaderNavSubitemsMutation {
  href: String
  label: String
  description: String
  icon: String
}

input GlobalHeaderNavCallsToActionMutation {
  href: String
  label: String
  icon: String
}

input GlobalHeaderNavMutation {
  href: String
  label: String
  subitems: [GlobalHeaderNavSubitemsMutation]
  callsToAction: [GlobalHeaderNavCallsToActionMutation]
}

input GlobalHeaderSocialMutation {
  title: String
  link: String
}

input GlobalHeaderMutation {
  name: String
  color: String
  nav: [GlobalHeaderNavMutation]
  social: [GlobalHeaderSocialMutation]
}

input GlobalFooterNavitemsListitemsMutation {
  title: String
  link: String
}

input GlobalFooterNavitemsMutation {
  title: String
  listitems: [GlobalFooterNavitemsListitemsMutation]
}

input GlobalFooterSocialMutation {
  title: String
  link: String
}

input GlobalFooterBannerMutation {
  text: String
  agree_button: String
  close_button: String
  link: String
  date: String
}

input GlobalFooterMutation {
  copyright: String
  navitems: [GlobalFooterNavitemsMutation]
  social: [GlobalFooterSocialMutation]
  banner: GlobalFooterBannerMutation
}

input GlobalThemeMutation {
  font: String
  darkMode: String
}

input GlobalMutation {
  header: GlobalHeaderMutation
  footer: GlobalFooterMutation
  theme: GlobalThemeMutation
}

input AuthorMutation {
  name: String
  avatar: String
}

input PageBlocksHeroCtaMutation {
  link: String
  text: String
  new_tab: Boolean
}

input PageBlocksHeroCta_secondaryMutation {
  link: String
  text: String
  new_tab: Boolean
  without_background: Boolean
}

input PageBlocksHeroImageMutation {
  src: String
  alt: String
}

input PageBlocksHeroVideoMutation {
  src: String
  fallback: String
}

input PageBlocksHeroMutation {
  subtitle: String
  title: String
  title_line2: String
  cta: PageBlocksHeroCtaMutation
  cta_secondary: PageBlocksHeroCta_secondaryMutation
  image: PageBlocksHeroImageMutation
  video: PageBlocksHeroVideoMutation
}

input PageBlocksSpeakersCtaMutation {
  link: String
  text: String
}

input PageBlocksSpeakersSpeakersSocial_linksMutation {
  linkedin: String
}

input PageBlocksSpeakersSpeakersImageMutation {
  src: String
  alt: String
}

input PageBlocksSpeakersSpeakersMutation {
  name: String
  position: String
  description: JSON
  social_links: PageBlocksSpeakersSpeakersSocial_linksMutation
  image: PageBlocksSpeakersSpeakersImageMutation
}

input PageBlocksSpeakersMutation {
  subtitle: String
  title: String
  paragraph: String
  cta: PageBlocksSpeakersCtaMutation
  speakers: [PageBlocksSpeakersSpeakersMutation]
  background_color: String
}

input PageBlocksPartner_listCtaMutation {
  link: String
  text: String
}

input PageBlocksPartner_listPartnersPartnersMutation {
  src: String
  alt: String
  link: String
}

input PageBlocksPartner_listPartnersMutation {
  title: String
  grid_cols: Float
  partners: [PageBlocksPartner_listPartnersPartnersMutation]
}

input PageBlocksPartner_listMutation {
  subtitle: String
  title: String
  paragraph: String
  cta: PageBlocksPartner_listCtaMutation
  partners: [PageBlocksPartner_listPartnersMutation]
}

input PageBlocksCountdownCtaMutation {
  link: String
  text: String
}

input PageBlocksCountdownMutation {
  title: String
  date: String
  cta: PageBlocksCountdownCtaMutation
}

input PageBlocksPositionsOpen_positionsMutation {
  title: String
  text: JSON
  note: String
  department: String
  link: String
}

input PageBlocksPositionsMutation {
  subtitle: String
  title: String
  open_positions: [PageBlocksPositionsOpen_positionsMutation]
}

input PageBlocksPartnerformMutation {
  title: String
  description: String
}

input PageBlocksTeamDivisionsMembersMutation {
  name: String
  position: String
  linkedin: String
  src: String
  alt: String
}

input PageBlocksTeamDivisionsMutation {
  subtitle: String
  title: String
  members: [PageBlocksTeamDivisionsMembersMutation]
}

input PageBlocksTeamMutation {
  subtitle: String
  title: String
  divisions: [PageBlocksTeamDivisionsMutation]
}

input PageBlocksTabsTabitemsContent_blockCtaMutation {
  link: String
  text: String
}

input PageBlocksTabsTabitemsContent_blockCta_secondaryMutation {
  link: String
  text: String
}

input PageBlocksTabsTabitemsContent_blockListMutation {
  title: String
  list_items: [String]
}

input PageBlocksTabsTabitemsContent_blockMutation {
  subtitle: String
  title: String
  content: [String]
  cta: PageBlocksTabsTabitemsContent_blockCtaMutation
  cta_secondary: PageBlocksTabsTabitemsContent_blockCta_secondaryMutation
  list: PageBlocksTabsTabitemsContent_blockListMutation
}

input PageBlocksTabsTabitemsImageMutation {
  src: String
  alt: String
}

input PageBlocksTabsTabitemsInfopointsNewsletter_ctaMutation {
  agree_button: String
  modal_title: String
  modal_text: String
}

input PageBlocksTabsTabitemsInfopointsMutation {
  name: String
  text: String
  link: String
  newsletter_cta: PageBlocksTabsTabitemsInfopointsNewsletter_ctaMutation
}

input PageBlocksTabsTabitemsMutation {
  content_block: PageBlocksTabsTabitemsContent_blockMutation
  image: PageBlocksTabsTabitemsImageMutation
  infopoints: [PageBlocksTabsTabitemsInfopointsMutation]
}

input PageBlocksTabsMutation {
  tabitems: [PageBlocksTabsTabitemsMutation]
}

input PageBlocksBooth_registrationMutation {
  subtitle: String
  title: String
}

input PageBlocksDropdownItemsContent_blockCtaMutation {
  link: String
  text: String
}

input PageBlocksDropdownItemsContent_blockCta_secondaryMutation {
  link: String
  text: String
}

input PageBlocksDropdownItemsContent_blockListMutation {
  title: String
  list_items: [String]
}

input PageBlocksDropdownItemsContent_blockMutation {
  subtitle: String
  title: String
  content: [String]
  cta: PageBlocksDropdownItemsContent_blockCtaMutation
  cta_secondary: PageBlocksDropdownItemsContent_blockCta_secondaryMutation
  list: PageBlocksDropdownItemsContent_blockListMutation
}

input PageBlocksDropdownItemsImageMutation {
  src: String
  alt: String
}

input PageBlocksDropdownItemsInfopointsNewsletter_ctaMutation {
  agree_button: String
  modal_title: String
  modal_text: String
}

input PageBlocksDropdownItemsInfopointsMutation {
  name: String
  text: String
  link: String
  newsletter_cta: PageBlocksDropdownItemsInfopointsNewsletter_ctaMutation
}

input PageBlocksDropdownItemsFeaturesMutation {
  title: String
  text: String
  icon: String
}

input PageBlocksDropdownItemsMutation {
  content_block: PageBlocksDropdownItemsContent_blockMutation
  image: PageBlocksDropdownItemsImageMutation
  infopoints: [PageBlocksDropdownItemsInfopointsMutation]
  features: [PageBlocksDropdownItemsFeaturesMutation]
}

input PageBlocksDropdownMutation {
  items: [PageBlocksDropdownItemsMutation]
  padding: Boolean
}

input PageBlocksBenefitsBenefit_itemsMutation {
  title: String
  icon: String
}

input PageBlocksBenefitsMutation {
  subtitle: String
  title: String
  benefit_items: [PageBlocksBenefitsBenefit_itemsMutation]
}

input PageBlocksOverviewBenefit_itemsImageMutation {
  src: String
  alt: String
}

input PageBlocksOverviewBenefit_itemsMutation {
  icon: String
  title: String
  image: PageBlocksOverviewBenefit_itemsImageMutation
  description: [String]
}

input PageBlocksOverviewMutation {
  subtitle: String
  title: String
  benefit_items: [PageBlocksOverviewBenefit_itemsMutation]
  background_color: String
}

input PageBlocksGalleryMutation {
  subtitle: String
  title: String
}

input PageBlocksTitoNoteMutation {
  title: String
  text: String
}

input PageBlocksTitoMutation {
  subtitle: String
  title: String
  note: PageBlocksTitoNoteMutation
}

input PageBlocksSeoOpenGraphImagesMutation {
  url: String
  alt: String
}

input PageBlocksSeoOpenGraphMutation {
  url: String
  site_name: String
  images: [PageBlocksSeoOpenGraphImagesMutation]
}

input PageBlocksSeoMutation {
  title: String
  description: String
  openGraph: PageBlocksSeoOpenGraphMutation
}

input PageBlocksPricingCtaMutation {
  link: String
  text: String
}

input PageBlocksPricingCategoriesMutation {
  price: Float
  selector: String
  link: String
  name: String
  description: [String]
  benefits: [String]
  not_included: [String]
}

input PageBlocksPricingMutation {
  subtitle: String
  title: String
  cta: PageBlocksPricingCtaMutation
  categories: [PageBlocksPricingCategoriesMutation]
  background_color: String
}

input PageBlocksContentContent_blockCtaMutation {
  link: String
  text: String
}

input PageBlocksContentContent_blockCta_secondaryMutation {
  link: String
  text: String
}

input PageBlocksContentContent_blockListMutation {
  title: String
  list_items: [String]
}

input PageBlocksContentContent_blockMutation {
  subtitle: String
  title: String
  content: [String]
  cta: PageBlocksContentContent_blockCtaMutation
  cta_secondary: PageBlocksContentContent_blockCta_secondaryMutation
  list: PageBlocksContentContent_blockListMutation
}

input PageBlocksContentImageMutation {
  src: String
  alt: String
}

input PageBlocksContentInfopointsNewsletter_ctaMutation {
  agree_button: String
  modal_title: String
  modal_text: String
}

input PageBlocksContentInfopointsMutation {
  name: String
  text: String
  link: String
  newsletter_cta: PageBlocksContentInfopointsNewsletter_ctaMutation
}

input PageBlocksContentTestimonialImageMutation {
  src: String
  alt: String
}

input PageBlocksContentTestimonialMutation {
  name: String
  position: String
  quote: String
  image: PageBlocksContentTestimonialImageMutation
}

input PageBlocksContentFiguresMutation {
  name: String
  number: String
  icon: String
  rows: String
  cols: String
}

input PageBlocksContentMembersMutation {
  name: String
  position: String
  linkedin: String
  src: String
  alt: String
  stage: String
}

input PageBlocksContentFeaturesMutation {
  title: String
  text: String
  icon: String
}

input PageBlocksContentMutation {
  content_block: PageBlocksContentContent_blockMutation
  image: PageBlocksContentImageMutation
  infopoints: [PageBlocksContentInfopointsMutation]
  testimonial: PageBlocksContentTestimonialMutation
  figures: [PageBlocksContentFiguresMutation]
  members: [PageBlocksContentMembersMutation]
  features: [PageBlocksContentFeaturesMutation]
  contentblock_left: Boolean
  background_color: String
}

input PageBlocksContent_wideContentMutation {
  title: String
  text: [String]
}

input PageBlocksContent_wideCtaMutation {
  link: String
  text: String
}

input PageBlocksContent_wideCta_secondaryMutation {
  link: String
  text: String
}

input PageBlocksContent_wideMutation {
  subtitle: String
  title: String
  content: [PageBlocksContent_wideContentMutation]
  background_color: String
  cta: PageBlocksContent_wideCtaMutation
  cta_secondary: PageBlocksContent_wideCta_secondaryMutation
}

input PageBlocksImagegridImagesImageMutation {
  src: String
  alt: String
}

input PageBlocksImagegridImagesMutation {
  name: String
  position: String
  image: PageBlocksImagegridImagesImageMutation
}

input PageBlocksImagegridMutation {
  subtitle: String
  title: String
  paragraph: String
  id: String
  images: [PageBlocksImagegridImagesMutation]
  background_color: String
}

input PageBlocksPitching_registrationMutation {
  subtitle: String
  title: String
}

input PageBlocksCookieTableMutation {
  subtitle: String
  title: String
}

input PageBlocksQuotesVideosVideoMutation {
  src: String
  fallback: String
}

input PageBlocksQuotesVideosMutation {
  video: PageBlocksQuotesVideosVideoMutation
}

input PageBlocksQuotesMutation {
  subtitle: String
  title: String
  videos: [PageBlocksQuotesVideosMutation]
  background_color: String
}

input PageBlocksProgramMutation {
  subtitle: String
  title: String
  background_color: String
}

input PageBlocksCropMutation {
  title: String
}

input PageBlocksBooth_approvedMutation {
  subtitle: String
  title: String
  background_color: String
}

input PageBlocksMutation {
  hero: PageBlocksHeroMutation
  speakers: PageBlocksSpeakersMutation
  partner_list: PageBlocksPartner_listMutation
  countdown: PageBlocksCountdownMutation
  positions: PageBlocksPositionsMutation
  partnerform: PageBlocksPartnerformMutation
  team: PageBlocksTeamMutation
  tabs: PageBlocksTabsMutation
  booth_registration: PageBlocksBooth_registrationMutation
  Dropdown: PageBlocksDropdownMutation
  benefits: PageBlocksBenefitsMutation
  overview: PageBlocksOverviewMutation
  gallery: PageBlocksGalleryMutation
  tito: PageBlocksTitoMutation
  seo: PageBlocksSeoMutation
  pricing: PageBlocksPricingMutation
  content: PageBlocksContentMutation
  content_wide: PageBlocksContent_wideMutation
  imagegrid: PageBlocksImagegridMutation
  pitching_registration: PageBlocksPitching_registrationMutation
  cookieTable: PageBlocksCookieTableMutation
  quotes: PageBlocksQuotesMutation
  program: PageBlocksProgramMutation
  crop: PageBlocksCropMutation
  booth_approved: PageBlocksBooth_approvedMutation
}

input PageMutation {
  title: String
  blocks: [PageBlocksMutation]
}

schema {
  query: Query
  mutation: Mutation
}
